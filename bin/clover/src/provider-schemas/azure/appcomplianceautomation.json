{
  "swagger": "2.0",
  "info": {
    "title": "Azure appcomplianceautomation",
    "version": "2024-06-27",
    "description": "Azure appcomplianceautomation service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/providers/Microsoft.AppComplianceAutomation/checkNameAvailability": {
      "post": {
        "operationId": "ProviderActions_CheckNameAvailability",
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Check if the given name is available for a report.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The check availability request body.",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the resource for which availability needs to be checked."
                },
                "type": {
                  "type": "string",
                  "description": "The resource type."
                }
              }
            },
            "x-ms-client-name": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The check availability result.",
              "properties": {
                "nameAvailable": {
                  "type": "boolean",
                  "description": "Indicates if the resource name is available."
                },
                "reason": {
                  "type": "string",
                  "description": "The reason why the given name is not available.",
                  "enum": [
                    "Invalid",
                    "AlreadyExists"
                  ],
                  "x-ms-enum": {
                    "name": "CheckNameAvailabilityReason",
                    "modelAsString": true
                  }
                },
                "message": {
                  "type": "string",
                  "description": "Detailed reason why the given name is available."
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.AppComplianceAutomation/getCollectionCount": {
      "post": {
        "operationId": "ProviderActions_GetCollectionCount",
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Get the count of reports.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Get collection count's request object.",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "The resource type."
                }
              }
            },
            "x-ms-client-name": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The get collection count response.",
              "properties": {
                "count": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The count of the specified resource."
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.AppComplianceAutomation/getOverviewStatus": {
      "post": {
        "operationId": "ProviderActions_GetOverviewStatus",
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Get the resource overview status.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Get overview status request object.",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "The resource type."
                }
              }
            },
            "x-ms-client-name": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The get overview status response.",
              "properties": {
                "statusList": {
                  "type": "array",
                  "description": "List of different status items.",
                  "items": {
                    "type": "object",
                    "description": "Single status.",
                    "properties": {
                      "statusName": {
                        "type": "string",
                        "description": "Status name - e.g. \"Active\", \"Failed\"."
                      },
                      "statusValue": {
                        "type": "string",
                        "description": "Status value. e.g. \"100\", or \"100%\"."
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "statusName"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.AppComplianceAutomation/listInUseStorageAccounts": {
      "post": {
        "operationId": "ProviderActions_ListInUseStorageAccounts",
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "List the storage accounts which are in use by related reports",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Parameters for listing in use storage accounts operation. If subscription list is null, it will check the user's all subscriptions.",
              "properties": {
                "subscriptionIds": {
                  "type": "array",
                  "description": "List of subscription ids to be query. If the list is null or empty, the API will query all the subscriptions of the user.",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "x-ms-client-name": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Parameters for listing in use storage accounts operation. If subscription list is null, it will check the user's all subscriptions.",
              "properties": {
                "storageAccountList": {
                  "type": "array",
                  "description": "The storage account list which in use in related reports.",
                  "items": {
                    "type": "object",
                    "description": "The information of 'bring your own storage' account binding to the report",
                    "properties": {
                      "subscriptionId": {
                        "type": "string",
                        "description": "The subscription id which 'bring your own storage' account belongs to"
                      },
                      "resourceGroup": {
                        "type": "string",
                        "description": "The resourceGroup which 'bring your own storage' account belongs to"
                      },
                      "accountName": {
                        "type": "string",
                        "description": "'bring your own storage' account name"
                      },
                      "location": {
                        "type": "string",
                        "description": "The region of 'bring your own storage' account"
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "accountName"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.AppComplianceAutomation/onboard": {
      "post": {
        "operationId": "ProviderActions_Onboard",
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Onboard given subscriptions to Microsoft.AppComplianceAutomation provider.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Parameters for onboard operation",
              "properties": {
                "subscriptionIds": {
                  "type": "array",
                  "description": "List of subscription ids to be onboarded",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "subscriptionIds"
              ]
            },
            "x-ms-client-name": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Success. The response indicates given subscriptions has been onboarded.",
              "properties": {
                "subscriptionIds": {
                  "type": "array",
                  "description": "List of subscription ids that are onboarded",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.AppComplianceAutomation/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of operations supported by the resource provider",
                  "items": {
                    "type": "object",
                    "title": "REST API Operation",
                    "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
                        "readOnly": true
                      },
                      "isDataAction": {
                        "type": "boolean",
                        "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
                        "readOnly": true
                      },
                      "display": {
                        "type": "object",
                        "description": "Localized display information for this particular operation.",
                        "properties": {
                          "provider": {
                            "type": "string",
                            "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
                            "readOnly": true
                          },
                          "resource": {
                            "type": "string",
                            "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
                            "readOnly": true
                          },
                          "operation": {
                            "type": "string",
                            "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
                            "readOnly": true
                          },
                          "description": {
                            "type": "string",
                            "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
                            "readOnly": true
                          }
                        }
                      },
                      "origin": {
                        "type": "string",
                        "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
                        "enum": [
                          "user",
                          "system",
                          "user,system"
                        ],
                        "x-ms-enum": {
                          "name": "Origin",
                          "modelAsString": true
                        },
                        "readOnly": true
                      },
                      "actionType": {
                        "type": "string",
                        "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
                        "enum": [
                          "Internal"
                        ],
                        "x-ms-enum": {
                          "name": "ActionType",
                          "modelAsString": true
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to get the next set of operation list results (if there are any).",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.AppComplianceAutomation/reports": {
      "get": {
        "operationId": "Report_List",
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Get the AppComplianceAutomation report list for the tenant.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "Skip over when retrieving results.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "skipToken"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of elements to return when retrieving results.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 100,
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "top"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "OData Select statement. Limits the properties on each entry to just those requested, e.g. ?$select=reportName,id.",
            "required": false,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "select"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply on the operation.",
            "required": false,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "filter"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "OData order by query option.",
            "required": false,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "orderby"
          },
          {
            "name": "offerGuid",
            "in": "query",
            "description": "The offerGuid which mapping to the reports.",
            "required": false,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "reportCreatorTenantId",
            "in": "query",
            "description": "The tenant id of the report creator.",
            "required": false,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a ReportResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The ReportResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "A class represent an AppComplianceAutomation report resource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Report property.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "triggerTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Report collection trigger time."
                          },
                          "timeZone": {
                            "type": "string",
                            "description": "Report collection trigger time's time zone, the available list can be obtained by executing \"Get-TimeZone -ListAvailable\" in PowerShell.\nAn example of valid timezone id is \"Pacific Standard Time\"."
                          },
                          "resources": {
                            "type": "array",
                            "description": "List of resource data.",
                            "items": {
                              "type": "object",
                              "description": "Single resource Id's metadata.",
                              "properties": {
                                "resourceId": {
                                  "type": "string",
                                  "description": "Resource Id - e.g. \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1\"."
                                },
                                "resourceType": {
                                  "type": "string",
                                  "description": "Resource type. e.g. \"Microsoft.Compute/virtualMachines\""
                                },
                                "resourceKind": {
                                  "type": "string",
                                  "description": "Resource kind."
                                },
                                "resourceOrigin": {
                                  "description": "Resource Origin.",
                                  "type": "string",
                                  "enum": [
                                    "Azure",
                                    "AWS",
                                    "GCP"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ResourceOrigin",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Azure",
                                        "value": "Azure",
                                        "description": "The resource is from Azure."
                                      },
                                      {
                                        "name": "AWS",
                                        "value": "AWS",
                                        "description": "The resource is from AWS."
                                      },
                                      {
                                        "name": "GCP",
                                        "value": "GCP",
                                        "description": "The resource is from GCP."
                                      }
                                    ]
                                  }
                                },
                                "accountId": {
                                  "type": "string",
                                  "description": "Account Id. For example - the AWS account id."
                                }
                              },
                              "required": [
                                "resourceId"
                              ]
                            },
                            "x-ms-identifiers": [
                              "resourceId"
                            ]
                          },
                          "status": {
                            "description": "Report status.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Active",
                              "Failed",
                              "Reviewing",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "ReportStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Active",
                                  "value": "Active",
                                  "description": "The report is active."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "The report is failed."
                                },
                                {
                                  "name": "Reviewing",
                                  "value": "Reviewing",
                                  "description": "The report is under reviewing."
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "The report is disabled."
                                }
                              ]
                            }
                          },
                          "errors": {
                            "type": "array",
                            "description": "List of report error codes.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "description": "Report's tenant id.",
                            "readOnly": true
                          },
                          "offerGuid": {
                            "type": "string",
                            "description": "A list of comma-separated offerGuids indicates a series of offerGuids that map to the report. For example, \"00000000-0000-0000-0000-000000000001,00000000-0000-0000-0000-000000000002\" and \"00000000-0000-0000-0000-000000000003\"."
                          },
                          "nextTriggerTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Report next collection trigger time.",
                            "readOnly": true
                          },
                          "lastTriggerTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Report last collection trigger time.",
                            "readOnly": true
                          },
                          "subscriptions": {
                            "type": "array",
                            "description": "List of subscription Ids.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "complianceStatus": {
                            "description": "Report compliance status.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "m365": {
                                "description": "The Microsoft 365 certification name.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "passedCount": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The count of all passed control.",
                                    "readOnly": true
                                  },
                                  "failedCount": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The count of all failed control.",
                                    "readOnly": true
                                  },
                                  "manualCount": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The count of all manual control.",
                                    "readOnly": true
                                  },
                                  "notApplicableCount": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The count of all not applicable control.",
                                    "readOnly": true
                                  },
                                  "pendingCount": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The count of all pending for approval control.",
                                    "readOnly": true
                                  }
                                }
                              }
                            }
                          },
                          "storageInfo": {
                            "type": "object",
                            "description": "The information of 'bring your own storage' account binding to the report",
                            "properties": {
                              "subscriptionId": {
                                "type": "string",
                                "description": "The subscription id which 'bring your own storage' account belongs to"
                              },
                              "resourceGroup": {
                                "type": "string",
                                "description": "The resourceGroup which 'bring your own storage' account belongs to"
                              },
                              "accountName": {
                                "type": "string",
                                "description": "'bring your own storage' account name"
                              },
                              "location": {
                                "type": "string",
                                "description": "The region of 'bring your own storage' account"
                              }
                            }
                          },
                          "certRecords": {
                            "type": "array",
                            "description": "List of synchronized certification records.",
                            "items": {
                              "type": "object",
                              "description": "A class represent the certification record synchronized from app compliance.",
                              "properties": {
                                "offerGuid": {
                                  "type": "string",
                                  "description": "The offerGuid which mapping to the reports.",
                                  "minLength": 1
                                },
                                "certificationStatus": {
                                  "type": "string",
                                  "description": "Indicates the status of certification process."
                                },
                                "ingestionStatus": {
                                  "type": "string",
                                  "description": "Indicates the status of compliance process."
                                },
                                "controls": {
                                  "type": "array",
                                  "description": "The control records list to be synchronized.",
                                  "items": {
                                    "type": "object",
                                    "description": "A class represent the control record synchronized from app compliance.",
                                    "properties": {
                                      "controlId": {
                                        "type": "string",
                                        "description": "The Id of the control. e.g. \"Operational_Security_10\""
                                      },
                                      "controlStatus": {
                                        "type": "string",
                                        "description": "Control status synchronized from app compliance."
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": [
                                    "controlId"
                                  ]
                                }
                              }
                            },
                            "readOnly": true,
                            "x-ms-identifiers": [
                              "offerGuid"
                            ]
                          },
                          "provisioningState": {
                            "description": "Azure lifecycle management",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Creating",
                              "Deleting",
                              "Fixing",
                              "Verifying",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The provision is succeeded."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "The provision is failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "The provision is canceled."
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating",
                                  "description": "The creation is in progress."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The deletion is in progress."
                                },
                                {
                                  "name": "Fixing",
                                  "value": "Fixing",
                                  "description": "The fix of the resource in progress."
                                },
                                {
                                  "name": "Verifying",
                                  "value": "Verifying",
                                  "description": "The verification of the resource in progress."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The update of the resource in progress."
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "triggerTime",
                          "timeZone",
                          "resources"
                        ]
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/providers/Microsoft.AppComplianceAutomation/reports/{reportName}": {
      "get": {
        "operationId": "Report_Get",
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Get the AppComplianceAutomation report and its properties.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "reportName",
            "in": "path",
            "description": "Report Name.",
            "required": true,
            "type": "string",
            "pattern": "^[-a-zA-Z0-9_]{1,50}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A class represent an AppComplianceAutomation report resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Report property.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "triggerTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Report collection trigger time."
                    },
                    "timeZone": {
                      "type": "string",
                      "description": "Report collection trigger time's time zone, the available list can be obtained by executing \"Get-TimeZone -ListAvailable\" in PowerShell.\nAn example of valid timezone id is \"Pacific Standard Time\"."
                    },
                    "resources": {
                      "type": "array",
                      "description": "List of resource data.",
                      "items": {
                        "type": "object",
                        "description": "Single resource Id's metadata.",
                        "properties": {
                          "resourceId": {
                            "type": "string",
                            "description": "Resource Id - e.g. \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1\"."
                          },
                          "resourceType": {
                            "type": "string",
                            "description": "Resource type. e.g. \"Microsoft.Compute/virtualMachines\""
                          },
                          "resourceKind": {
                            "type": "string",
                            "description": "Resource kind."
                          },
                          "resourceOrigin": {
                            "description": "Resource Origin.",
                            "type": "string",
                            "enum": [
                              "Azure",
                              "AWS",
                              "GCP"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceOrigin",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Azure",
                                  "value": "Azure",
                                  "description": "The resource is from Azure."
                                },
                                {
                                  "name": "AWS",
                                  "value": "AWS",
                                  "description": "The resource is from AWS."
                                },
                                {
                                  "name": "GCP",
                                  "value": "GCP",
                                  "description": "The resource is from GCP."
                                }
                              ]
                            }
                          },
                          "accountId": {
                            "type": "string",
                            "description": "Account Id. For example - the AWS account id."
                          }
                        },
                        "required": [
                          "resourceId"
                        ]
                      },
                      "x-ms-identifiers": [
                        "resourceId"
                      ]
                    },
                    "status": {
                      "description": "Report status.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Active",
                        "Failed",
                        "Reviewing",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "ReportStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Active",
                            "value": "Active",
                            "description": "The report is active."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The report is failed."
                          },
                          {
                            "name": "Reviewing",
                            "value": "Reviewing",
                            "description": "The report is under reviewing."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "The report is disabled."
                          }
                        ]
                      }
                    },
                    "errors": {
                      "type": "array",
                      "description": "List of report error codes.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "Report's tenant id.",
                      "readOnly": true
                    },
                    "offerGuid": {
                      "type": "string",
                      "description": "A list of comma-separated offerGuids indicates a series of offerGuids that map to the report. For example, \"00000000-0000-0000-0000-000000000001,00000000-0000-0000-0000-000000000002\" and \"00000000-0000-0000-0000-000000000003\"."
                    },
                    "nextTriggerTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Report next collection trigger time.",
                      "readOnly": true
                    },
                    "lastTriggerTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Report last collection trigger time.",
                      "readOnly": true
                    },
                    "subscriptions": {
                      "type": "array",
                      "description": "List of subscription Ids.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "complianceStatus": {
                      "description": "Report compliance status.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "m365": {
                          "description": "The Microsoft 365 certification name.",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "passedCount": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The count of all passed control.",
                              "readOnly": true
                            },
                            "failedCount": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The count of all failed control.",
                              "readOnly": true
                            },
                            "manualCount": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The count of all manual control.",
                              "readOnly": true
                            },
                            "notApplicableCount": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The count of all not applicable control.",
                              "readOnly": true
                            },
                            "pendingCount": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The count of all pending for approval control.",
                              "readOnly": true
                            }
                          }
                        }
                      }
                    },
                    "storageInfo": {
                      "type": "object",
                      "description": "The information of 'bring your own storage' account binding to the report",
                      "properties": {
                        "subscriptionId": {
                          "type": "string",
                          "description": "The subscription id which 'bring your own storage' account belongs to"
                        },
                        "resourceGroup": {
                          "type": "string",
                          "description": "The resourceGroup which 'bring your own storage' account belongs to"
                        },
                        "accountName": {
                          "type": "string",
                          "description": "'bring your own storage' account name"
                        },
                        "location": {
                          "type": "string",
                          "description": "The region of 'bring your own storage' account"
                        }
                      }
                    },
                    "certRecords": {
                      "type": "array",
                      "description": "List of synchronized certification records.",
                      "items": {
                        "type": "object",
                        "description": "A class represent the certification record synchronized from app compliance.",
                        "properties": {
                          "offerGuid": {
                            "type": "string",
                            "description": "The offerGuid which mapping to the reports.",
                            "minLength": 1
                          },
                          "certificationStatus": {
                            "type": "string",
                            "description": "Indicates the status of certification process."
                          },
                          "ingestionStatus": {
                            "type": "string",
                            "description": "Indicates the status of compliance process."
                          },
                          "controls": {
                            "type": "array",
                            "description": "The control records list to be synchronized.",
                            "items": {
                              "type": "object",
                              "description": "A class represent the control record synchronized from app compliance.",
                              "properties": {
                                "controlId": {
                                  "type": "string",
                                  "description": "The Id of the control. e.g. \"Operational_Security_10\""
                                },
                                "controlStatus": {
                                  "type": "string",
                                  "description": "Control status synchronized from app compliance."
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "controlId"
                            ]
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "offerGuid"
                      ]
                    },
                    "provisioningState": {
                      "description": "Azure lifecycle management",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Deleting",
                        "Fixing",
                        "Verifying",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The provision is succeeded."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The provision is failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The provision is canceled."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The creation is in progress."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The deletion is in progress."
                          },
                          {
                            "name": "Fixing",
                            "value": "Fixing",
                            "description": "The fix of the resource in progress."
                          },
                          {
                            "name": "Verifying",
                            "value": "Verifying",
                            "description": "The verification of the resource in progress."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The update of the resource in progress."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "triggerTime",
                    "timeZone",
                    "resources"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "put": {
        "operationId": "Report_CreateOrUpdate",
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Create a new AppComplianceAutomation report or update an exiting AppComplianceAutomation report.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "reportName",
            "in": "path",
            "description": "Report Name.",
            "required": true,
            "type": "string",
            "pattern": "^[-a-zA-Z0-9_]{1,50}$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A class represent an AppComplianceAutomation report resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Report property.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "triggerTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Report collection trigger time."
                    },
                    "timeZone": {
                      "type": "string",
                      "description": "Report collection trigger time's time zone, the available list can be obtained by executing \"Get-TimeZone -ListAvailable\" in PowerShell.\nAn example of valid timezone id is \"Pacific Standard Time\"."
                    },
                    "resources": {
                      "type": "array",
                      "description": "List of resource data.",
                      "items": {
                        "type": "object",
                        "description": "Single resource Id's metadata.",
                        "properties": {
                          "resourceId": {
                            "type": "string",
                            "description": "Resource Id - e.g. \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1\"."
                          },
                          "resourceType": {
                            "type": "string",
                            "description": "Resource type. e.g. \"Microsoft.Compute/virtualMachines\""
                          },
                          "resourceKind": {
                            "type": "string",
                            "description": "Resource kind."
                          },
                          "resourceOrigin": {
                            "description": "Resource Origin.",
                            "type": "string",
                            "enum": [
                              "Azure",
                              "AWS",
                              "GCP"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceOrigin",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Azure",
                                  "value": "Azure",
                                  "description": "The resource is from Azure."
                                },
                                {
                                  "name": "AWS",
                                  "value": "AWS",
                                  "description": "The resource is from AWS."
                                },
                                {
                                  "name": "GCP",
                                  "value": "GCP",
                                  "description": "The resource is from GCP."
                                }
                              ]
                            }
                          },
                          "accountId": {
                            "type": "string",
                            "description": "Account Id. For example - the AWS account id."
                          }
                        },
                        "required": [
                          "resourceId"
                        ]
                      },
                      "x-ms-identifiers": [
                        "resourceId"
                      ]
                    },
                    "status": {
                      "description": "Report status.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Active",
                        "Failed",
                        "Reviewing",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "ReportStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Active",
                            "value": "Active",
                            "description": "The report is active."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The report is failed."
                          },
                          {
                            "name": "Reviewing",
                            "value": "Reviewing",
                            "description": "The report is under reviewing."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "The report is disabled."
                          }
                        ]
                      }
                    },
                    "errors": {
                      "type": "array",
                      "description": "List of report error codes.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "Report's tenant id.",
                      "readOnly": true
                    },
                    "offerGuid": {
                      "type": "string",
                      "description": "A list of comma-separated offerGuids indicates a series of offerGuids that map to the report. For example, \"00000000-0000-0000-0000-000000000001,00000000-0000-0000-0000-000000000002\" and \"00000000-0000-0000-0000-000000000003\"."
                    },
                    "nextTriggerTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Report next collection trigger time.",
                      "readOnly": true
                    },
                    "lastTriggerTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Report last collection trigger time.",
                      "readOnly": true
                    },
                    "subscriptions": {
                      "type": "array",
                      "description": "List of subscription Ids.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "complianceStatus": {
                      "description": "Report compliance status.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "m365": {
                          "description": "The Microsoft 365 certification name.",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "passedCount": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The count of all passed control.",
                              "readOnly": true
                            },
                            "failedCount": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The count of all failed control.",
                              "readOnly": true
                            },
                            "manualCount": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The count of all manual control.",
                              "readOnly": true
                            },
                            "notApplicableCount": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The count of all not applicable control.",
                              "readOnly": true
                            },
                            "pendingCount": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The count of all pending for approval control.",
                              "readOnly": true
                            }
                          }
                        }
                      }
                    },
                    "storageInfo": {
                      "type": "object",
                      "description": "The information of 'bring your own storage' account binding to the report",
                      "properties": {
                        "subscriptionId": {
                          "type": "string",
                          "description": "The subscription id which 'bring your own storage' account belongs to"
                        },
                        "resourceGroup": {
                          "type": "string",
                          "description": "The resourceGroup which 'bring your own storage' account belongs to"
                        },
                        "accountName": {
                          "type": "string",
                          "description": "'bring your own storage' account name"
                        },
                        "location": {
                          "type": "string",
                          "description": "The region of 'bring your own storage' account"
                        }
                      }
                    },
                    "certRecords": {
                      "type": "array",
                      "description": "List of synchronized certification records.",
                      "items": {
                        "type": "object",
                        "description": "A class represent the certification record synchronized from app compliance.",
                        "properties": {
                          "offerGuid": {
                            "type": "string",
                            "description": "The offerGuid which mapping to the reports.",
                            "minLength": 1
                          },
                          "certificationStatus": {
                            "type": "string",
                            "description": "Indicates the status of certification process."
                          },
                          "ingestionStatus": {
                            "type": "string",
                            "description": "Indicates the status of compliance process."
                          },
                          "controls": {
                            "type": "array",
                            "description": "The control records list to be synchronized.",
                            "items": {
                              "type": "object",
                              "description": "A class represent the control record synchronized from app compliance.",
                              "properties": {
                                "controlId": {
                                  "type": "string",
                                  "description": "The Id of the control. e.g. \"Operational_Security_10\""
                                },
                                "controlStatus": {
                                  "type": "string",
                                  "description": "Control status synchronized from app compliance."
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "controlId"
                            ]
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "offerGuid"
                      ]
                    },
                    "provisioningState": {
                      "description": "Azure lifecycle management",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Deleting",
                        "Fixing",
                        "Verifying",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The provision is succeeded."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The provision is failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The provision is canceled."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The creation is in progress."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The deletion is in progress."
                          },
                          {
                            "name": "Fixing",
                            "value": "Fixing",
                            "description": "The fix of the resource in progress."
                          },
                          {
                            "name": "Verifying",
                            "value": "Verifying",
                            "description": "The verification of the resource in progress."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The update of the resource in progress."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "triggerTime",
                    "timeZone",
                    "resources"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            },
            "x-ms-client-name": "properties"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ReportResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A class represent an AppComplianceAutomation report resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Report property.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "triggerTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Report collection trigger time."
                    },
                    "timeZone": {
                      "type": "string",
                      "description": "Report collection trigger time's time zone, the available list can be obtained by executing \"Get-TimeZone -ListAvailable\" in PowerShell.\nAn example of valid timezone id is \"Pacific Standard Time\"."
                    },
                    "resources": {
                      "type": "array",
                      "description": "List of resource data.",
                      "items": {
                        "type": "object",
                        "description": "Single resource Id's metadata.",
                        "properties": {
                          "resourceId": {
                            "type": "string",
                            "description": "Resource Id - e.g. \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1\"."
                          },
                          "resourceType": {
                            "type": "string",
                            "description": "Resource type. e.g. \"Microsoft.Compute/virtualMachines\""
                          },
                          "resourceKind": {
                            "type": "string",
                            "description": "Resource kind."
                          },
                          "resourceOrigin": {
                            "description": "Resource Origin.",
                            "type": "string",
                            "enum": [
                              "Azure",
                              "AWS",
                              "GCP"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceOrigin",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Azure",
                                  "value": "Azure",
                                  "description": "The resource is from Azure."
                                },
                                {
                                  "name": "AWS",
                                  "value": "AWS",
                                  "description": "The resource is from AWS."
                                },
                                {
                                  "name": "GCP",
                                  "value": "GCP",
                                  "description": "The resource is from GCP."
                                }
                              ]
                            }
                          },
                          "accountId": {
                            "type": "string",
                            "description": "Account Id. For example - the AWS account id."
                          }
                        },
                        "required": [
                          "resourceId"
                        ]
                      },
                      "x-ms-identifiers": [
                        "resourceId"
                      ]
                    },
                    "status": {
                      "description": "Report status.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Active",
                        "Failed",
                        "Reviewing",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "ReportStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Active",
                            "value": "Active",
                            "description": "The report is active."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The report is failed."
                          },
                          {
                            "name": "Reviewing",
                            "value": "Reviewing",
                            "description": "The report is under reviewing."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "The report is disabled."
                          }
                        ]
                      }
                    },
                    "errors": {
                      "type": "array",
                      "description": "List of report error codes.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "Report's tenant id.",
                      "readOnly": true
                    },
                    "offerGuid": {
                      "type": "string",
                      "description": "A list of comma-separated offerGuids indicates a series of offerGuids that map to the report. For example, \"00000000-0000-0000-0000-000000000001,00000000-0000-0000-0000-000000000002\" and \"00000000-0000-0000-0000-000000000003\"."
                    },
                    "nextTriggerTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Report next collection trigger time.",
                      "readOnly": true
                    },
                    "lastTriggerTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Report last collection trigger time.",
                      "readOnly": true
                    },
                    "subscriptions": {
                      "type": "array",
                      "description": "List of subscription Ids.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "complianceStatus": {
                      "description": "Report compliance status.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "m365": {
                          "description": "The Microsoft 365 certification name.",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "passedCount": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The count of all passed control.",
                              "readOnly": true
                            },
                            "failedCount": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The count of all failed control.",
                              "readOnly": true
                            },
                            "manualCount": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The count of all manual control.",
                              "readOnly": true
                            },
                            "notApplicableCount": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The count of all not applicable control.",
                              "readOnly": true
                            },
                            "pendingCount": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The count of all pending for approval control.",
                              "readOnly": true
                            }
                          }
                        }
                      }
                    },
                    "storageInfo": {
                      "type": "object",
                      "description": "The information of 'bring your own storage' account binding to the report",
                      "properties": {
                        "subscriptionId": {
                          "type": "string",
                          "description": "The subscription id which 'bring your own storage' account belongs to"
                        },
                        "resourceGroup": {
                          "type": "string",
                          "description": "The resourceGroup which 'bring your own storage' account belongs to"
                        },
                        "accountName": {
                          "type": "string",
                          "description": "'bring your own storage' account name"
                        },
                        "location": {
                          "type": "string",
                          "description": "The region of 'bring your own storage' account"
                        }
                      }
                    },
                    "certRecords": {
                      "type": "array",
                      "description": "List of synchronized certification records.",
                      "items": {
                        "type": "object",
                        "description": "A class represent the certification record synchronized from app compliance.",
                        "properties": {
                          "offerGuid": {
                            "type": "string",
                            "description": "The offerGuid which mapping to the reports.",
                            "minLength": 1
                          },
                          "certificationStatus": {
                            "type": "string",
                            "description": "Indicates the status of certification process."
                          },
                          "ingestionStatus": {
                            "type": "string",
                            "description": "Indicates the status of compliance process."
                          },
                          "controls": {
                            "type": "array",
                            "description": "The control records list to be synchronized.",
                            "items": {
                              "type": "object",
                              "description": "A class represent the control record synchronized from app compliance.",
                              "properties": {
                                "controlId": {
                                  "type": "string",
                                  "description": "The Id of the control. e.g. \"Operational_Security_10\""
                                },
                                "controlStatus": {
                                  "type": "string",
                                  "description": "Control status synchronized from app compliance."
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "controlId"
                            ]
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "offerGuid"
                      ]
                    },
                    "provisioningState": {
                      "description": "Azure lifecycle management",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Deleting",
                        "Fixing",
                        "Verifying",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The provision is succeeded."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The provision is failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The provision is canceled."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The creation is in progress."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The deletion is in progress."
                          },
                          {
                            "name": "Fixing",
                            "value": "Fixing",
                            "description": "The fix of the resource in progress."
                          },
                          {
                            "name": "Verifying",
                            "value": "Verifying",
                            "description": "The verification of the resource in progress."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The update of the resource in progress."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "triggerTime",
                    "timeZone",
                    "resources"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          },
          "201": {
            "description": "Resource 'ReportResource' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A class represent an AppComplianceAutomation report resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Report property.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "triggerTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Report collection trigger time."
                    },
                    "timeZone": {
                      "type": "string",
                      "description": "Report collection trigger time's time zone, the available list can be obtained by executing \"Get-TimeZone -ListAvailable\" in PowerShell.\nAn example of valid timezone id is \"Pacific Standard Time\"."
                    },
                    "resources": {
                      "type": "array",
                      "description": "List of resource data.",
                      "items": {
                        "type": "object",
                        "description": "Single resource Id's metadata.",
                        "properties": {
                          "resourceId": {
                            "type": "string",
                            "description": "Resource Id - e.g. \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1\"."
                          },
                          "resourceType": {
                            "type": "string",
                            "description": "Resource type. e.g. \"Microsoft.Compute/virtualMachines\""
                          },
                          "resourceKind": {
                            "type": "string",
                            "description": "Resource kind."
                          },
                          "resourceOrigin": {
                            "description": "Resource Origin.",
                            "type": "string",
                            "enum": [
                              "Azure",
                              "AWS",
                              "GCP"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceOrigin",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Azure",
                                  "value": "Azure",
                                  "description": "The resource is from Azure."
                                },
                                {
                                  "name": "AWS",
                                  "value": "AWS",
                                  "description": "The resource is from AWS."
                                },
                                {
                                  "name": "GCP",
                                  "value": "GCP",
                                  "description": "The resource is from GCP."
                                }
                              ]
                            }
                          },
                          "accountId": {
                            "type": "string",
                            "description": "Account Id. For example - the AWS account id."
                          }
                        },
                        "required": [
                          "resourceId"
                        ]
                      },
                      "x-ms-identifiers": [
                        "resourceId"
                      ]
                    },
                    "status": {
                      "description": "Report status.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Active",
                        "Failed",
                        "Reviewing",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "ReportStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Active",
                            "value": "Active",
                            "description": "The report is active."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The report is failed."
                          },
                          {
                            "name": "Reviewing",
                            "value": "Reviewing",
                            "description": "The report is under reviewing."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "The report is disabled."
                          }
                        ]
                      }
                    },
                    "errors": {
                      "type": "array",
                      "description": "List of report error codes.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "Report's tenant id.",
                      "readOnly": true
                    },
                    "offerGuid": {
                      "type": "string",
                      "description": "A list of comma-separated offerGuids indicates a series of offerGuids that map to the report. For example, \"00000000-0000-0000-0000-000000000001,00000000-0000-0000-0000-000000000002\" and \"00000000-0000-0000-0000-000000000003\"."
                    },
                    "nextTriggerTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Report next collection trigger time.",
                      "readOnly": true
                    },
                    "lastTriggerTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Report last collection trigger time.",
                      "readOnly": true
                    },
                    "subscriptions": {
                      "type": "array",
                      "description": "List of subscription Ids.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "complianceStatus": {
                      "description": "Report compliance status.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "m365": {
                          "description": "The Microsoft 365 certification name.",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "passedCount": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The count of all passed control.",
                              "readOnly": true
                            },
                            "failedCount": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The count of all failed control.",
                              "readOnly": true
                            },
                            "manualCount": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The count of all manual control.",
                              "readOnly": true
                            },
                            "notApplicableCount": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The count of all not applicable control.",
                              "readOnly": true
                            },
                            "pendingCount": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The count of all pending for approval control.",
                              "readOnly": true
                            }
                          }
                        }
                      }
                    },
                    "storageInfo": {
                      "type": "object",
                      "description": "The information of 'bring your own storage' account binding to the report",
                      "properties": {
                        "subscriptionId": {
                          "type": "string",
                          "description": "The subscription id which 'bring your own storage' account belongs to"
                        },
                        "resourceGroup": {
                          "type": "string",
                          "description": "The resourceGroup which 'bring your own storage' account belongs to"
                        },
                        "accountName": {
                          "type": "string",
                          "description": "'bring your own storage' account name"
                        },
                        "location": {
                          "type": "string",
                          "description": "The region of 'bring your own storage' account"
                        }
                      }
                    },
                    "certRecords": {
                      "type": "array",
                      "description": "List of synchronized certification records.",
                      "items": {
                        "type": "object",
                        "description": "A class represent the certification record synchronized from app compliance.",
                        "properties": {
                          "offerGuid": {
                            "type": "string",
                            "description": "The offerGuid which mapping to the reports.",
                            "minLength": 1
                          },
                          "certificationStatus": {
                            "type": "string",
                            "description": "Indicates the status of certification process."
                          },
                          "ingestionStatus": {
                            "type": "string",
                            "description": "Indicates the status of compliance process."
                          },
                          "controls": {
                            "type": "array",
                            "description": "The control records list to be synchronized.",
                            "items": {
                              "type": "object",
                              "description": "A class represent the control record synchronized from app compliance.",
                              "properties": {
                                "controlId": {
                                  "type": "string",
                                  "description": "The Id of the control. e.g. \"Operational_Security_10\""
                                },
                                "controlStatus": {
                                  "type": "string",
                                  "description": "Control status synchronized from app compliance."
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "controlId"
                            ]
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "offerGuid"
                      ]
                    },
                    "provisioningState": {
                      "description": "Azure lifecycle management",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Deleting",
                        "Fixing",
                        "Verifying",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The provision is succeeded."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The provision is failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The provision is canceled."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The creation is in progress."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The deletion is in progress."
                          },
                          {
                            "name": "Fixing",
                            "value": "Fixing",
                            "description": "The fix of the resource in progress."
                          },
                          {
                            "name": "Verifying",
                            "value": "Verifying",
                            "description": "The verification of the resource in progress."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The update of the resource in progress."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "triggerTime",
                    "timeZone",
                    "resources"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Report_Update",
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Update an exiting AppComplianceAutomation report.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "reportName",
            "in": "path",
            "description": "Report Name.",
            "required": true,
            "type": "string",
            "pattern": "^[-a-zA-Z0-9_]{1,50}$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A class represent a AppComplianceAutomation report resource update properties.",
              "properties": {
                "properties": {
                  "description": "Report property.",
                  "type": "object",
                  "properties": {
                    "triggerTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Report collection trigger time."
                    },
                    "timeZone": {
                      "type": "string",
                      "description": "Report collection trigger time's time zone, the available list can be obtained by executing \"Get-TimeZone -ListAvailable\" in PowerShell.\nAn example of valid timezone id is \"Pacific Standard Time\"."
                    },
                    "resources": {
                      "type": "array",
                      "description": "List of resource data.",
                      "items": {
                        "type": "object",
                        "description": "Single resource Id's metadata.",
                        "properties": {
                          "resourceId": {
                            "type": "string",
                            "description": "Resource Id - e.g. \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1\"."
                          },
                          "resourceType": {
                            "type": "string",
                            "description": "Resource type. e.g. \"Microsoft.Compute/virtualMachines\""
                          },
                          "resourceKind": {
                            "type": "string",
                            "description": "Resource kind."
                          },
                          "resourceOrigin": {
                            "description": "Resource Origin.",
                            "type": "string",
                            "enum": [
                              "Azure",
                              "AWS",
                              "GCP"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceOrigin",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Azure",
                                  "value": "Azure",
                                  "description": "The resource is from Azure."
                                },
                                {
                                  "name": "AWS",
                                  "value": "AWS",
                                  "description": "The resource is from AWS."
                                },
                                {
                                  "name": "GCP",
                                  "value": "GCP",
                                  "description": "The resource is from GCP."
                                }
                              ]
                            }
                          },
                          "accountId": {
                            "type": "string",
                            "description": "Account Id. For example - the AWS account id."
                          }
                        },
                        "required": [
                          "resourceId"
                        ]
                      },
                      "x-ms-identifiers": [
                        "resourceId"
                      ]
                    },
                    "status": {
                      "description": "Report status.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Active",
                        "Failed",
                        "Reviewing",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "ReportStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Active",
                            "value": "Active",
                            "description": "The report is active."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The report is failed."
                          },
                          {
                            "name": "Reviewing",
                            "value": "Reviewing",
                            "description": "The report is under reviewing."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "The report is disabled."
                          }
                        ]
                      }
                    },
                    "errors": {
                      "type": "array",
                      "description": "List of report error codes.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "Report's tenant id.",
                      "readOnly": true
                    },
                    "offerGuid": {
                      "type": "string",
                      "description": "A list of comma-separated offerGuids indicates a series of offerGuids that map to the report. For example, \"00000000-0000-0000-0000-000000000001,00000000-0000-0000-0000-000000000002\" and \"00000000-0000-0000-0000-000000000003\"."
                    },
                    "nextTriggerTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Report next collection trigger time.",
                      "readOnly": true
                    },
                    "lastTriggerTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Report last collection trigger time.",
                      "readOnly": true
                    },
                    "subscriptions": {
                      "type": "array",
                      "description": "List of subscription Ids.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "complianceStatus": {
                      "description": "Report compliance status.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "m365": {
                          "description": "The Microsoft 365 certification name.",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "passedCount": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The count of all passed control.",
                              "readOnly": true
                            },
                            "failedCount": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The count of all failed control.",
                              "readOnly": true
                            },
                            "manualCount": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The count of all manual control.",
                              "readOnly": true
                            },
                            "notApplicableCount": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The count of all not applicable control.",
                              "readOnly": true
                            },
                            "pendingCount": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The count of all pending for approval control.",
                              "readOnly": true
                            }
                          }
                        }
                      }
                    },
                    "storageInfo": {
                      "type": "object",
                      "description": "The information of 'bring your own storage' account binding to the report",
                      "properties": {
                        "subscriptionId": {
                          "type": "string",
                          "description": "The subscription id which 'bring your own storage' account belongs to"
                        },
                        "resourceGroup": {
                          "type": "string",
                          "description": "The resourceGroup which 'bring your own storage' account belongs to"
                        },
                        "accountName": {
                          "type": "string",
                          "description": "'bring your own storage' account name"
                        },
                        "location": {
                          "type": "string",
                          "description": "The region of 'bring your own storage' account"
                        }
                      }
                    },
                    "certRecords": {
                      "type": "array",
                      "description": "List of synchronized certification records.",
                      "items": {
                        "type": "object",
                        "description": "A class represent the certification record synchronized from app compliance.",
                        "properties": {
                          "offerGuid": {
                            "type": "string",
                            "description": "The offerGuid which mapping to the reports.",
                            "minLength": 1
                          },
                          "certificationStatus": {
                            "type": "string",
                            "description": "Indicates the status of certification process."
                          },
                          "ingestionStatus": {
                            "type": "string",
                            "description": "Indicates the status of compliance process."
                          },
                          "controls": {
                            "type": "array",
                            "description": "The control records list to be synchronized.",
                            "items": {
                              "type": "object",
                              "description": "A class represent the control record synchronized from app compliance.",
                              "properties": {
                                "controlId": {
                                  "type": "string",
                                  "description": "The Id of the control. e.g. \"Operational_Security_10\""
                                },
                                "controlStatus": {
                                  "type": "string",
                                  "description": "Control status synchronized from app compliance."
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "controlId"
                            ]
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "offerGuid"
                      ]
                    },
                    "provisioningState": {
                      "description": "Azure lifecycle management",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Deleting",
                        "Fixing",
                        "Verifying",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The provision is succeeded."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The provision is failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The provision is canceled."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The creation is in progress."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The deletion is in progress."
                          },
                          {
                            "name": "Fixing",
                            "value": "Fixing",
                            "description": "The fix of the resource in progress."
                          },
                          {
                            "name": "Verifying",
                            "value": "Verifying",
                            "description": "The verification of the resource in progress."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The update of the resource in progress."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "x-ms-client-name": "properties"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A class represent an AppComplianceAutomation report resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Report property.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "triggerTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Report collection trigger time."
                    },
                    "timeZone": {
                      "type": "string",
                      "description": "Report collection trigger time's time zone, the available list can be obtained by executing \"Get-TimeZone -ListAvailable\" in PowerShell.\nAn example of valid timezone id is \"Pacific Standard Time\"."
                    },
                    "resources": {
                      "type": "array",
                      "description": "List of resource data.",
                      "items": {
                        "type": "object",
                        "description": "Single resource Id's metadata.",
                        "properties": {
                          "resourceId": {
                            "type": "string",
                            "description": "Resource Id - e.g. \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1\"."
                          },
                          "resourceType": {
                            "type": "string",
                            "description": "Resource type. e.g. \"Microsoft.Compute/virtualMachines\""
                          },
                          "resourceKind": {
                            "type": "string",
                            "description": "Resource kind."
                          },
                          "resourceOrigin": {
                            "description": "Resource Origin.",
                            "type": "string",
                            "enum": [
                              "Azure",
                              "AWS",
                              "GCP"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceOrigin",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Azure",
                                  "value": "Azure",
                                  "description": "The resource is from Azure."
                                },
                                {
                                  "name": "AWS",
                                  "value": "AWS",
                                  "description": "The resource is from AWS."
                                },
                                {
                                  "name": "GCP",
                                  "value": "GCP",
                                  "description": "The resource is from GCP."
                                }
                              ]
                            }
                          },
                          "accountId": {
                            "type": "string",
                            "description": "Account Id. For example - the AWS account id."
                          }
                        },
                        "required": [
                          "resourceId"
                        ]
                      },
                      "x-ms-identifiers": [
                        "resourceId"
                      ]
                    },
                    "status": {
                      "description": "Report status.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Active",
                        "Failed",
                        "Reviewing",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "ReportStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Active",
                            "value": "Active",
                            "description": "The report is active."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The report is failed."
                          },
                          {
                            "name": "Reviewing",
                            "value": "Reviewing",
                            "description": "The report is under reviewing."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "The report is disabled."
                          }
                        ]
                      }
                    },
                    "errors": {
                      "type": "array",
                      "description": "List of report error codes.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "Report's tenant id.",
                      "readOnly": true
                    },
                    "offerGuid": {
                      "type": "string",
                      "description": "A list of comma-separated offerGuids indicates a series of offerGuids that map to the report. For example, \"00000000-0000-0000-0000-000000000001,00000000-0000-0000-0000-000000000002\" and \"00000000-0000-0000-0000-000000000003\"."
                    },
                    "nextTriggerTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Report next collection trigger time.",
                      "readOnly": true
                    },
                    "lastTriggerTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Report last collection trigger time.",
                      "readOnly": true
                    },
                    "subscriptions": {
                      "type": "array",
                      "description": "List of subscription Ids.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "complianceStatus": {
                      "description": "Report compliance status.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "m365": {
                          "description": "The Microsoft 365 certification name.",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "passedCount": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The count of all passed control.",
                              "readOnly": true
                            },
                            "failedCount": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The count of all failed control.",
                              "readOnly": true
                            },
                            "manualCount": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The count of all manual control.",
                              "readOnly": true
                            },
                            "notApplicableCount": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The count of all not applicable control.",
                              "readOnly": true
                            },
                            "pendingCount": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The count of all pending for approval control.",
                              "readOnly": true
                            }
                          }
                        }
                      }
                    },
                    "storageInfo": {
                      "type": "object",
                      "description": "The information of 'bring your own storage' account binding to the report",
                      "properties": {
                        "subscriptionId": {
                          "type": "string",
                          "description": "The subscription id which 'bring your own storage' account belongs to"
                        },
                        "resourceGroup": {
                          "type": "string",
                          "description": "The resourceGroup which 'bring your own storage' account belongs to"
                        },
                        "accountName": {
                          "type": "string",
                          "description": "'bring your own storage' account name"
                        },
                        "location": {
                          "type": "string",
                          "description": "The region of 'bring your own storage' account"
                        }
                      }
                    },
                    "certRecords": {
                      "type": "array",
                      "description": "List of synchronized certification records.",
                      "items": {
                        "type": "object",
                        "description": "A class represent the certification record synchronized from app compliance.",
                        "properties": {
                          "offerGuid": {
                            "type": "string",
                            "description": "The offerGuid which mapping to the reports.",
                            "minLength": 1
                          },
                          "certificationStatus": {
                            "type": "string",
                            "description": "Indicates the status of certification process."
                          },
                          "ingestionStatus": {
                            "type": "string",
                            "description": "Indicates the status of compliance process."
                          },
                          "controls": {
                            "type": "array",
                            "description": "The control records list to be synchronized.",
                            "items": {
                              "type": "object",
                              "description": "A class represent the control record synchronized from app compliance.",
                              "properties": {
                                "controlId": {
                                  "type": "string",
                                  "description": "The Id of the control. e.g. \"Operational_Security_10\""
                                },
                                "controlStatus": {
                                  "type": "string",
                                  "description": "Control status synchronized from app compliance."
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "controlId"
                            ]
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "offerGuid"
                      ]
                    },
                    "provisioningState": {
                      "description": "Azure lifecycle management",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Deleting",
                        "Fixing",
                        "Verifying",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The provision is succeeded."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The provision is failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The provision is canceled."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The creation is in progress."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The deletion is in progress."
                          },
                          {
                            "name": "Fixing",
                            "value": "Fixing",
                            "description": "The fix of the resource in progress."
                          },
                          {
                            "name": "Verifying",
                            "value": "Verifying",
                            "description": "The verification of the resource in progress."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The update of the resource in progress."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "triggerTime",
                    "timeZone",
                    "resources"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Report_Delete",
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Delete an AppComplianceAutomation report.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "reportName",
            "in": "path",
            "description": "Report Name.",
            "required": true,
            "type": "string",
            "pattern": "^[-a-zA-Z0-9_]{1,50}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/checkNameAvailability": {
      "post": {
        "operationId": "Report_NestedResourceCheckNameAvailability",
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Checks the report's nested resource name availability, e.g: Webhooks, Evidences, Snapshots.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "reportName",
            "in": "path",
            "description": "Report Name.",
            "required": true,
            "type": "string",
            "pattern": "^[-a-zA-Z0-9_]{1,50}$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "NameAvailabilityRequest object.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The check availability request body.",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the resource for which availability needs to be checked."
                },
                "type": {
                  "type": "string",
                  "description": "The resource type."
                }
              }
            },
            "x-ms-client-name": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The check availability result.",
              "properties": {
                "nameAvailable": {
                  "type": "boolean",
                  "description": "Indicates if the resource name is available."
                },
                "reason": {
                  "type": "string",
                  "description": "The reason why the given name is not available.",
                  "enum": [
                    "Invalid",
                    "AlreadyExists"
                  ],
                  "x-ms-enum": {
                    "name": "CheckNameAvailabilityReason",
                    "modelAsString": true
                  }
                },
                "message": {
                  "type": "string",
                  "description": "Detailed reason why the given name is available."
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/evidences": {
      "get": {
        "operationId": "Evidence_ListByReport",
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Returns a paginated list of evidences for a specified report.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "Skip over when retrieving results.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "skipToken"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of elements to return when retrieving results.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 100,
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "top"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "OData Select statement. Limits the properties on each entry to just those requested, e.g. ?$select=reportName,id.",
            "required": false,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "select"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply on the operation.",
            "required": false,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "filter"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "OData order by query option.",
            "required": false,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "orderby"
          },
          {
            "name": "offerGuid",
            "in": "query",
            "description": "The offerGuid which mapping to the reports.",
            "required": false,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "reportCreatorTenantId",
            "in": "query",
            "description": "The tenant id of the report creator.",
            "required": false,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "reportName",
            "in": "path",
            "description": "Report Name.",
            "required": true,
            "type": "string",
            "pattern": "^[-a-zA-Z0-9_]{1,50}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a EvidenceResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The EvidenceResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "A class represent an AppComplianceAutomation evidence resource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Evidence property.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "evidenceType": {
                            "description": "Evidence type.",
                            "type": "string",
                            "enum": [
                              "File",
                              "AutoCollectedEvidence",
                              "Data"
                            ],
                            "x-ms-enum": {
                              "name": "EvidenceType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "File",
                                  "value": "File",
                                  "description": "The evidence is a file."
                                },
                                {
                                  "name": "AutoCollectedEvidence",
                                  "value": "AutoCollectedEvidence",
                                  "description": "The evidence auto collected by App Compliance Automation."
                                },
                                {
                                  "name": "Data",
                                  "value": "Data",
                                  "description": "The evidence is data."
                                }
                              ]
                            }
                          },
                          "filePath": {
                            "type": "string",
                            "description": "The path of the file in storage."
                          },
                          "extraData": {
                            "type": "string",
                            "description": "Extra data considered as evidence."
                          },
                          "controlId": {
                            "type": "string",
                            "description": "Control id."
                          },
                          "responsibilityId": {
                            "type": "string",
                            "description": "Responsibility id."
                          },
                          "provisioningState": {
                            "description": "Azure lifecycle management",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Creating",
                              "Deleting",
                              "Fixing",
                              "Verifying",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The provision is succeeded."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "The provision is failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "The provision is canceled."
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating",
                                  "description": "The creation is in progress."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The deletion is in progress."
                                },
                                {
                                  "name": "Fixing",
                                  "value": "Fixing",
                                  "description": "The fix of the resource in progress."
                                },
                                {
                                  "name": "Verifying",
                                  "value": "Verifying",
                                  "description": "The verification of the resource in progress."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The update of the resource in progress."
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "filePath"
                        ]
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/evidences/{evidenceName}": {
      "get": {
        "operationId": "Evidence_Get",
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Get the evidence metadata",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "reportName",
            "in": "path",
            "description": "Report Name.",
            "required": true,
            "type": "string",
            "pattern": "^[-a-zA-Z0-9_]{1,50}$"
          },
          {
            "name": "evidenceName",
            "in": "path",
            "description": "The evidence name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-_.]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A class represent an AppComplianceAutomation evidence resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Evidence property.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "evidenceType": {
                      "description": "Evidence type.",
                      "type": "string",
                      "enum": [
                        "File",
                        "AutoCollectedEvidence",
                        "Data"
                      ],
                      "x-ms-enum": {
                        "name": "EvidenceType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "File",
                            "value": "File",
                            "description": "The evidence is a file."
                          },
                          {
                            "name": "AutoCollectedEvidence",
                            "value": "AutoCollectedEvidence",
                            "description": "The evidence auto collected by App Compliance Automation."
                          },
                          {
                            "name": "Data",
                            "value": "Data",
                            "description": "The evidence is data."
                          }
                        ]
                      }
                    },
                    "filePath": {
                      "type": "string",
                      "description": "The path of the file in storage."
                    },
                    "extraData": {
                      "type": "string",
                      "description": "Extra data considered as evidence."
                    },
                    "controlId": {
                      "type": "string",
                      "description": "Control id."
                    },
                    "responsibilityId": {
                      "type": "string",
                      "description": "Responsibility id."
                    },
                    "provisioningState": {
                      "description": "Azure lifecycle management",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Deleting",
                        "Fixing",
                        "Verifying",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The provision is succeeded."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The provision is failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The provision is canceled."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The creation is in progress."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The deletion is in progress."
                          },
                          {
                            "name": "Fixing",
                            "value": "Fixing",
                            "description": "The fix of the resource in progress."
                          },
                          {
                            "name": "Verifying",
                            "value": "Verifying",
                            "description": "The verification of the resource in progress."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The update of the resource in progress."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "filePath"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "put": {
        "operationId": "Evidence_CreateOrUpdate",
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Create or Update an evidence a specified report",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "offerGuid",
            "in": "query",
            "description": "The offerGuid which mapping to the reports.",
            "required": false,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "reportCreatorTenantId",
            "in": "query",
            "description": "The tenant id of the report creator.",
            "required": false,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "reportName",
            "in": "path",
            "description": "Report Name.",
            "required": true,
            "type": "string",
            "pattern": "^[-a-zA-Z0-9_]{1,50}$"
          },
          {
            "name": "evidenceName",
            "in": "path",
            "description": "The evidence name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-_.]+$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A class represent an AppComplianceAutomation evidence resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Evidence property.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "evidenceType": {
                      "description": "Evidence type.",
                      "type": "string",
                      "enum": [
                        "File",
                        "AutoCollectedEvidence",
                        "Data"
                      ],
                      "x-ms-enum": {
                        "name": "EvidenceType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "File",
                            "value": "File",
                            "description": "The evidence is a file."
                          },
                          {
                            "name": "AutoCollectedEvidence",
                            "value": "AutoCollectedEvidence",
                            "description": "The evidence auto collected by App Compliance Automation."
                          },
                          {
                            "name": "Data",
                            "value": "Data",
                            "description": "The evidence is data."
                          }
                        ]
                      }
                    },
                    "filePath": {
                      "type": "string",
                      "description": "The path of the file in storage."
                    },
                    "extraData": {
                      "type": "string",
                      "description": "Extra data considered as evidence."
                    },
                    "controlId": {
                      "type": "string",
                      "description": "Control id."
                    },
                    "responsibilityId": {
                      "type": "string",
                      "description": "Responsibility id."
                    },
                    "provisioningState": {
                      "description": "Azure lifecycle management",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Deleting",
                        "Fixing",
                        "Verifying",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The provision is succeeded."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The provision is failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The provision is canceled."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The creation is in progress."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The deletion is in progress."
                          },
                          {
                            "name": "Fixing",
                            "value": "Fixing",
                            "description": "The fix of the resource in progress."
                          },
                          {
                            "name": "Verifying",
                            "value": "Verifying",
                            "description": "The verification of the resource in progress."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The update of the resource in progress."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "filePath"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            },
            "x-ms-client-name": "properties"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'EvidenceResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A class represent an AppComplianceAutomation evidence resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Evidence property.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "evidenceType": {
                      "description": "Evidence type.",
                      "type": "string",
                      "enum": [
                        "File",
                        "AutoCollectedEvidence",
                        "Data"
                      ],
                      "x-ms-enum": {
                        "name": "EvidenceType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "File",
                            "value": "File",
                            "description": "The evidence is a file."
                          },
                          {
                            "name": "AutoCollectedEvidence",
                            "value": "AutoCollectedEvidence",
                            "description": "The evidence auto collected by App Compliance Automation."
                          },
                          {
                            "name": "Data",
                            "value": "Data",
                            "description": "The evidence is data."
                          }
                        ]
                      }
                    },
                    "filePath": {
                      "type": "string",
                      "description": "The path of the file in storage."
                    },
                    "extraData": {
                      "type": "string",
                      "description": "Extra data considered as evidence."
                    },
                    "controlId": {
                      "type": "string",
                      "description": "Control id."
                    },
                    "responsibilityId": {
                      "type": "string",
                      "description": "Responsibility id."
                    },
                    "provisioningState": {
                      "description": "Azure lifecycle management",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Deleting",
                        "Fixing",
                        "Verifying",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The provision is succeeded."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The provision is failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The provision is canceled."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The creation is in progress."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The deletion is in progress."
                          },
                          {
                            "name": "Fixing",
                            "value": "Fixing",
                            "description": "The fix of the resource in progress."
                          },
                          {
                            "name": "Verifying",
                            "value": "Verifying",
                            "description": "The verification of the resource in progress."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The update of the resource in progress."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "filePath"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          },
          "201": {
            "description": "Resource 'EvidenceResource' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A class represent an AppComplianceAutomation evidence resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Evidence property.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "evidenceType": {
                      "description": "Evidence type.",
                      "type": "string",
                      "enum": [
                        "File",
                        "AutoCollectedEvidence",
                        "Data"
                      ],
                      "x-ms-enum": {
                        "name": "EvidenceType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "File",
                            "value": "File",
                            "description": "The evidence is a file."
                          },
                          {
                            "name": "AutoCollectedEvidence",
                            "value": "AutoCollectedEvidence",
                            "description": "The evidence auto collected by App Compliance Automation."
                          },
                          {
                            "name": "Data",
                            "value": "Data",
                            "description": "The evidence is data."
                          }
                        ]
                      }
                    },
                    "filePath": {
                      "type": "string",
                      "description": "The path of the file in storage."
                    },
                    "extraData": {
                      "type": "string",
                      "description": "Extra data considered as evidence."
                    },
                    "controlId": {
                      "type": "string",
                      "description": "Control id."
                    },
                    "responsibilityId": {
                      "type": "string",
                      "description": "Responsibility id."
                    },
                    "provisioningState": {
                      "description": "Azure lifecycle management",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Deleting",
                        "Fixing",
                        "Verifying",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The provision is succeeded."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The provision is failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The provision is canceled."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The creation is in progress."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The deletion is in progress."
                          },
                          {
                            "name": "Fixing",
                            "value": "Fixing",
                            "description": "The fix of the resource in progress."
                          },
                          {
                            "name": "Verifying",
                            "value": "Verifying",
                            "description": "The verification of the resource in progress."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The update of the resource in progress."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "filePath"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "delete": {
        "operationId": "Evidence_Delete",
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Delete an existent evidence from a specified report",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "reportName",
            "in": "path",
            "description": "Report Name.",
            "required": true,
            "type": "string",
            "pattern": "^[-a-zA-Z0-9_]{1,50}$"
          },
          {
            "name": "evidenceName",
            "in": "path",
            "description": "The evidence name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-_.]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/evidences/{evidenceName}/download": {
      "post": {
        "operationId": "Evidence_Download",
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Download evidence file.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "reportName",
            "in": "path",
            "description": "Report Name.",
            "required": true,
            "type": "string",
            "pattern": "^[-a-zA-Z0-9_]{1,50}$"
          },
          {
            "name": "evidenceName",
            "in": "path",
            "description": "The evidence name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-_.]+$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for the query operation",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Evidence file's download request.",
              "properties": {
                "reportCreatorTenantId": {
                  "type": "string",
                  "description": "Tenant id."
                },
                "offerGuid": {
                  "type": "string",
                  "description": "The offerGuid which mapping to the reports.",
                  "minLength": 1
                }
              }
            },
            "x-ms-client-name": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Object that includes all the possible response for the evidence file download operation.",
              "properties": {
                "evidenceFile": {
                  "description": "The uri of evidence file",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "The url of evidence file",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/fix": {
      "post": {
        "operationId": "Report_Fix",
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Fix the AppComplianceAutomation report error. e.g: App Compliance Automation Tool service unregistered, automation removed.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "reportName",
            "in": "path",
            "description": "Report Name.",
            "required": true,
            "type": "string",
            "pattern": "^[-a-zA-Z0-9_]{1,50}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Report fix result.",
              "properties": {
                "result": {
                  "description": "Indicates whether the fix action is Succeeded or Failed.",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Succeeded",
                    "Failed"
                  ],
                  "x-ms-enum": {
                    "name": "Result",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Succeeded",
                        "value": "Succeeded",
                        "description": "The result is succeeded."
                      },
                      {
                        "name": "Failed",
                        "value": "Failed",
                        "description": "The result is failed."
                      }
                    ]
                  }
                },
                "reason": {
                  "type": "string",
                  "description": "If the report fix action failed, to indicate the detailed failed reason.",
                  "readOnly": true
                }
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/getScopingQuestions": {
      "post": {
        "operationId": "Report_GetScopingQuestions",
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Fix the AppComplianceAutomation report error. e.g: App Compliance Automation Tool service unregistered, automation removed.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "reportName",
            "in": "path",
            "description": "Report Name.",
            "required": true,
            "type": "string",
            "pattern": "^[-a-zA-Z0-9_]{1,50}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Scoping question list.",
              "properties": {
                "questions": {
                  "type": "array",
                  "description": "List of scoping questions.",
                  "items": {
                    "type": "object",
                    "description": "The definition of a scoping question.",
                    "properties": {
                      "questionId": {
                        "type": "string",
                        "description": "Question id.",
                        "readOnly": true
                      },
                      "superiorQuestionId": {
                        "type": "string",
                        "description": "Superior question id.",
                        "readOnly": true
                      },
                      "inputType": {
                        "description": "Input type of the question answer.",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "None",
                          "Text",
                          "Email",
                          "MultilineText",
                          "Url",
                          "Number",
                          "Boolean",
                          "Telephone",
                          "YesNoNa",
                          "Date",
                          "YearPicker",
                          "SingleSelection",
                          "SingleSelectDropdown",
                          "MultiSelectCheckbox",
                          "MultiSelectDropdown",
                          "MultiSelectDropdownCustom",
                          "Group",
                          "Upload"
                        ],
                        "x-ms-enum": {
                          "name": "InputType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "None",
                              "value": "None",
                              "description": "The input type is a text box."
                            },
                            {
                              "name": "Text",
                              "value": "Text",
                              "description": "The input content is text string."
                            },
                            {
                              "name": "Email",
                              "value": "Email",
                              "description": "The input content should be an email address."
                            },
                            {
                              "name": "MultilineText",
                              "value": "MultilineText",
                              "description": "The input content should be multiline text."
                            },
                            {
                              "name": "Url",
                              "value": "Url",
                              "description": "The input content should be a URL."
                            },
                            {
                              "name": "Number",
                              "value": "Number",
                              "description": "The input content should be a number."
                            },
                            {
                              "name": "Boolean",
                              "value": "Boolean",
                              "description": "The input content should be a boolean."
                            },
                            {
                              "name": "Telephone",
                              "value": "Telephone",
                              "description": "The input content should be a telephone number."
                            },
                            {
                              "name": "YesNoNa",
                              "value": "YesNoNa",
                              "description": "The input content should be Yes, No or Na."
                            },
                            {
                              "name": "Date",
                              "value": "Date",
                              "description": "The input content should be a date."
                            },
                            {
                              "name": "YearPicker",
                              "value": "YearPicker",
                              "description": "The input content is a Year, pick from the dropdown list."
                            },
                            {
                              "name": "SingleSelection",
                              "value": "SingleSelection",
                              "description": "The input content is a single result seleted from the options."
                            },
                            {
                              "name": "SingleSelectDropdown",
                              "value": "SingleSelectDropdown",
                              "description": "The input content is a single result seleted from the dropdown options."
                            },
                            {
                              "name": "MultiSelectCheckbox",
                              "value": "MultiSelectCheckbox",
                              "description": "The input content are multiple results seleted from the checkboxes."
                            },
                            {
                              "name": "MultiSelectDropdown",
                              "value": "MultiSelectDropdown",
                              "description": "The input content are multiple results seleted from the dropdown options."
                            },
                            {
                              "name": "MultiSelectDropdownCustom",
                              "value": "MultiSelectDropdownCustom",
                              "description": "The input content are result seleted from the custom dropdown options."
                            },
                            {
                              "name": "Group",
                              "value": "Group",
                              "description": "The input content is a group of answers."
                            },
                            {
                              "name": "Upload",
                              "value": "Upload",
                              "description": "The input content is a uploaded file."
                            }
                          ]
                        }
                      },
                      "optionIds": {
                        "type": "array",
                        "description": "Option id list.",
                        "items": {
                          "type": "string"
                        },
                        "readOnly": true
                      },
                      "rules": {
                        "type": "array",
                        "description": "The rule of the question.",
                        "items": {
                          "type": "string",
                          "description": "Scoping question rule.",
                          "enum": [
                            "Required",
                            "CharLength",
                            "Url",
                            "Urls",
                            "Domains",
                            "USPrivacyShield",
                            "PublicSOX",
                            "CreditCardPCI",
                            "AzureApplication",
                            "ValidGuid",
                            "PublisherVerification",
                            "DynamicDropdown",
                            "PreventNonEnglishChar",
                            "ValidEmail"
                          ],
                          "x-ms-enum": {
                            "name": "Rule",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "The question is required to answer."
                              },
                              {
                                "name": "CharLength",
                                "value": "CharLength",
                                "description": "The question answer length is limited."
                              },
                              {
                                "name": "Url",
                                "value": "Url",
                                "description": "The question answer should be an Url."
                              },
                              {
                                "name": "Urls",
                                "value": "Urls",
                                "description": "The question answer should be Urls."
                              },
                              {
                                "name": "Domains",
                                "value": "Domains",
                                "description": "The question answer should be domains."
                              },
                              {
                                "name": "USPrivacyShield",
                                "value": "USPrivacyShield",
                                "description": "The question answer should be a UsPrivacyShield."
                              },
                              {
                                "name": "PublicSOX",
                                "value": "PublicSOX",
                                "description": "The question answer should be a PublicSOX."
                              },
                              {
                                "name": "CreditCardPCI",
                                "value": "CreditCardPCI",
                                "description": "The question answer should be a CreditCardPCI."
                              },
                              {
                                "name": "AzureApplication",
                                "value": "AzureApplication",
                                "description": "The question answer should be an AzureApplication."
                              },
                              {
                                "name": "ValidGuid",
                                "value": "ValidGuid",
                                "description": "The question answer should be a valid guid."
                              },
                              {
                                "name": "PublisherVerification",
                                "value": "PublisherVerification",
                                "description": "The question answer should be publisher verification."
                              },
                              {
                                "name": "DynamicDropdown",
                                "value": "DynamicDropdown",
                                "description": "The question answer should be dynamic dropdown."
                              },
                              {
                                "name": "PreventNonEnglishChar",
                                "value": "PreventNonEnglishChar",
                                "description": "The question answer should prevent non-english char."
                              },
                              {
                                "name": "ValidEmail",
                                "value": "ValidEmail",
                                "description": "The question answer should be a valid email."
                              }
                            ]
                          }
                        },
                        "readOnly": true
                      },
                      "showSubQuestionsValue": {
                        "type": "string",
                        "description": "The answer value to show the sub questions.",
                        "readOnly": true
                      }
                    },
                    "required": [
                      "questionId",
                      "inputType",
                      "optionIds",
                      "rules"
                    ]
                  },
                  "x-ms-identifiers": [
                    "questionId"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/scopingConfigurations": {
      "get": {
        "operationId": "ScopingConfiguration_List",
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Returns a list format of the singleton scopingConfiguration for a specified report.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "reportName",
            "in": "path",
            "description": "Report Name.",
            "required": true,
            "type": "string",
            "pattern": "^[-a-zA-Z0-9_]{1,50}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a ScopingConfigurationResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The ScopingConfigurationResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "A class represent an AppComplianceAutomation scoping configuration resource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "ScopingConfiguration property.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "answers": {
                            "type": "array",
                            "description": "List of scoping question answers.",
                            "items": {
                              "type": "object",
                              "description": "Scoping answer.",
                              "properties": {
                                "questionId": {
                                  "type": "string",
                                  "description": "Question id.",
                                  "pattern": "^[-a-zA-Z0-9_]{1,50}$"
                                },
                                "answers": {
                                  "type": "array",
                                  "description": "Question answer value list.",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "questionId",
                                "answers"
                              ]
                            },
                            "x-ms-identifiers": [
                              "questionId"
                            ]
                          },
                          "provisioningState": {
                            "description": "Azure lifecycle management",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Creating",
                              "Deleting",
                              "Fixing",
                              "Verifying",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The provision is succeeded."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "The provision is failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "The provision is canceled."
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating",
                                  "description": "The creation is in progress."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The deletion is in progress."
                                },
                                {
                                  "name": "Fixing",
                                  "value": "Fixing",
                                  "description": "The fix of the resource in progress."
                                },
                                {
                                  "name": "Verifying",
                                  "value": "Verifying",
                                  "description": "The verification of the resource in progress."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The update of the resource in progress."
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/scopingConfigurations/{scopingConfigurationName}": {
      "get": {
        "operationId": "ScopingConfiguration_Get",
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Get the AppComplianceAutomation scoping configuration of the specific report.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "reportName",
            "in": "path",
            "description": "Report Name.",
            "required": true,
            "type": "string",
            "pattern": "^[-a-zA-Z0-9_]{1,50}$"
          },
          {
            "name": "scopingConfigurationName",
            "in": "path",
            "description": "The scoping configuration of the specific report.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A class represent an AppComplianceAutomation scoping configuration resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "ScopingConfiguration property.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "answers": {
                      "type": "array",
                      "description": "List of scoping question answers.",
                      "items": {
                        "type": "object",
                        "description": "Scoping answer.",
                        "properties": {
                          "questionId": {
                            "type": "string",
                            "description": "Question id.",
                            "pattern": "^[-a-zA-Z0-9_]{1,50}$"
                          },
                          "answers": {
                            "type": "array",
                            "description": "Question answer value list.",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "questionId",
                          "answers"
                        ]
                      },
                      "x-ms-identifiers": [
                        "questionId"
                      ]
                    },
                    "provisioningState": {
                      "description": "Azure lifecycle management",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Deleting",
                        "Fixing",
                        "Verifying",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The provision is succeeded."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The provision is failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The provision is canceled."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The creation is in progress."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The deletion is in progress."
                          },
                          {
                            "name": "Fixing",
                            "value": "Fixing",
                            "description": "The fix of the resource in progress."
                          },
                          {
                            "name": "Verifying",
                            "value": "Verifying",
                            "description": "The verification of the resource in progress."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The update of the resource in progress."
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "put": {
        "operationId": "ScopingConfiguration_CreateOrUpdate",
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Get the AppComplianceAutomation scoping configuration of the specific report.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "reportName",
            "in": "path",
            "description": "Report Name.",
            "required": true,
            "type": "string",
            "pattern": "^[-a-zA-Z0-9_]{1,50}$"
          },
          {
            "name": "scopingConfigurationName",
            "in": "path",
            "description": "The scoping configuration of the specific report.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]*$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for the create or update operation, this is a singleton resource, so please make sure you're using 'default' as the name.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A class represent an AppComplianceAutomation scoping configuration resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "ScopingConfiguration property.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "answers": {
                      "type": "array",
                      "description": "List of scoping question answers.",
                      "items": {
                        "type": "object",
                        "description": "Scoping answer.",
                        "properties": {
                          "questionId": {
                            "type": "string",
                            "description": "Question id.",
                            "pattern": "^[-a-zA-Z0-9_]{1,50}$"
                          },
                          "answers": {
                            "type": "array",
                            "description": "Question answer value list.",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "questionId",
                          "answers"
                        ]
                      },
                      "x-ms-identifiers": [
                        "questionId"
                      ]
                    },
                    "provisioningState": {
                      "description": "Azure lifecycle management",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Deleting",
                        "Fixing",
                        "Verifying",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The provision is succeeded."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The provision is failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The provision is canceled."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The creation is in progress."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The deletion is in progress."
                          },
                          {
                            "name": "Fixing",
                            "value": "Fixing",
                            "description": "The fix of the resource in progress."
                          },
                          {
                            "name": "Verifying",
                            "value": "Verifying",
                            "description": "The verification of the resource in progress."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The update of the resource in progress."
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "x-ms-client-name": "properties"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ScopingConfigurationResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A class represent an AppComplianceAutomation scoping configuration resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "ScopingConfiguration property.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "answers": {
                      "type": "array",
                      "description": "List of scoping question answers.",
                      "items": {
                        "type": "object",
                        "description": "Scoping answer.",
                        "properties": {
                          "questionId": {
                            "type": "string",
                            "description": "Question id.",
                            "pattern": "^[-a-zA-Z0-9_]{1,50}$"
                          },
                          "answers": {
                            "type": "array",
                            "description": "Question answer value list.",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "questionId",
                          "answers"
                        ]
                      },
                      "x-ms-identifiers": [
                        "questionId"
                      ]
                    },
                    "provisioningState": {
                      "description": "Azure lifecycle management",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Deleting",
                        "Fixing",
                        "Verifying",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The provision is succeeded."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The provision is failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The provision is canceled."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The creation is in progress."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The deletion is in progress."
                          },
                          {
                            "name": "Fixing",
                            "value": "Fixing",
                            "description": "The fix of the resource in progress."
                          },
                          {
                            "name": "Verifying",
                            "value": "Verifying",
                            "description": "The verification of the resource in progress."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The update of the resource in progress."
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          },
          "201": {
            "description": "Resource 'ScopingConfigurationResource' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A class represent an AppComplianceAutomation scoping configuration resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "ScopingConfiguration property.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "answers": {
                      "type": "array",
                      "description": "List of scoping question answers.",
                      "items": {
                        "type": "object",
                        "description": "Scoping answer.",
                        "properties": {
                          "questionId": {
                            "type": "string",
                            "description": "Question id.",
                            "pattern": "^[-a-zA-Z0-9_]{1,50}$"
                          },
                          "answers": {
                            "type": "array",
                            "description": "Question answer value list.",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "questionId",
                          "answers"
                        ]
                      },
                      "x-ms-identifiers": [
                        "questionId"
                      ]
                    },
                    "provisioningState": {
                      "description": "Azure lifecycle management",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Deleting",
                        "Fixing",
                        "Verifying",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The provision is succeeded."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The provision is failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The provision is canceled."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The creation is in progress."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The deletion is in progress."
                          },
                          {
                            "name": "Fixing",
                            "value": "Fixing",
                            "description": "The fix of the resource in progress."
                          },
                          {
                            "name": "Verifying",
                            "value": "Verifying",
                            "description": "The verification of the resource in progress."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The update of the resource in progress."
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "delete": {
        "operationId": "ScopingConfiguration_Delete",
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Clean the AppComplianceAutomation scoping configuration of the specific report.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "reportName",
            "in": "path",
            "description": "Report Name.",
            "required": true,
            "type": "string",
            "pattern": "^[-a-zA-Z0-9_]{1,50}$"
          },
          {
            "name": "scopingConfigurationName",
            "in": "path",
            "description": "The scoping configuration of the specific report.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/snapshots": {
      "get": {
        "operationId": "Snapshot_List",
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Get the AppComplianceAutomation snapshot list.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "Skip over when retrieving results.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "skipToken"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of elements to return when retrieving results.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 100,
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "top"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "OData Select statement. Limits the properties on each entry to just those requested, e.g. ?$select=reportName,id.",
            "required": false,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "select"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply on the operation.",
            "required": false,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "filter"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "OData order by query option.",
            "required": false,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "orderby"
          },
          {
            "name": "offerGuid",
            "in": "query",
            "description": "The offerGuid which mapping to the reports.",
            "required": false,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "reportCreatorTenantId",
            "in": "query",
            "description": "The tenant id of the report creator.",
            "required": false,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "reportName",
            "in": "path",
            "description": "Report Name.",
            "required": true,
            "type": "string",
            "pattern": "^[-a-zA-Z0-9_]{1,50}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a SnapshotResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The SnapshotResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "A class represent a AppComplianceAutomation snapshot resource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Snapshot's property.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "snapshotName": {
                            "type": "string",
                            "description": "Snapshot name.",
                            "readOnly": true
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC).",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Azure lifecycle management",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Creating",
                              "Deleting",
                              "Fixing",
                              "Verifying",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The provision is succeeded."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "The provision is failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "The provision is canceled."
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating",
                                  "description": "The creation is in progress."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The deletion is in progress."
                                },
                                {
                                  "name": "Fixing",
                                  "value": "Fixing",
                                  "description": "The fix of the resource in progress."
                                },
                                {
                                  "name": "Verifying",
                                  "value": "Verifying",
                                  "description": "The verification of the resource in progress."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The update of the resource in progress."
                                }
                              ]
                            }
                          },
                          "reportProperties": {
                            "description": "The report essential info.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "triggerTime": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Report collection trigger time."
                              },
                              "timeZone": {
                                "type": "string",
                                "description": "Report collection trigger time's time zone, the available list can be obtained by executing \"Get-TimeZone -ListAvailable\" in PowerShell.\nAn example of valid timezone id is \"Pacific Standard Time\"."
                              },
                              "resources": {
                                "type": "array",
                                "description": "List of resource data.",
                                "items": {
                                  "type": "object",
                                  "description": "Single resource Id's metadata.",
                                  "properties": {
                                    "resourceId": {
                                      "type": "string",
                                      "description": "Resource Id - e.g. \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1\"."
                                    },
                                    "resourceType": {
                                      "type": "string",
                                      "description": "Resource type. e.g. \"Microsoft.Compute/virtualMachines\""
                                    },
                                    "resourceKind": {
                                      "type": "string",
                                      "description": "Resource kind."
                                    },
                                    "resourceOrigin": {
                                      "description": "Resource Origin.",
                                      "type": "string",
                                      "enum": [
                                        "Azure",
                                        "AWS",
                                        "GCP"
                                      ],
                                      "x-ms-enum": {
                                        "name": "ResourceOrigin",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Azure",
                                            "value": "Azure",
                                            "description": "The resource is from Azure."
                                          },
                                          {
                                            "name": "AWS",
                                            "value": "AWS",
                                            "description": "The resource is from AWS."
                                          },
                                          {
                                            "name": "GCP",
                                            "value": "GCP",
                                            "description": "The resource is from GCP."
                                          }
                                        ]
                                      }
                                    },
                                    "accountId": {
                                      "type": "string",
                                      "description": "Account Id. For example - the AWS account id."
                                    }
                                  },
                                  "required": [
                                    "resourceId"
                                  ]
                                },
                                "x-ms-identifiers": [
                                  "resourceId"
                                ]
                              },
                              "status": {
                                "description": "Report status.",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "Active",
                                  "Failed",
                                  "Reviewing",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "ReportStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Active",
                                      "value": "Active",
                                      "description": "The report is active."
                                    },
                                    {
                                      "name": "Failed",
                                      "value": "Failed",
                                      "description": "The report is failed."
                                    },
                                    {
                                      "name": "Reviewing",
                                      "value": "Reviewing",
                                      "description": "The report is under reviewing."
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled",
                                      "description": "The report is disabled."
                                    }
                                  ]
                                }
                              },
                              "errors": {
                                "type": "array",
                                "description": "List of report error codes.",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "tenantId": {
                                "type": "string",
                                "description": "Report's tenant id.",
                                "readOnly": true
                              },
                              "offerGuid": {
                                "type": "string",
                                "description": "A list of comma-separated offerGuids indicates a series of offerGuids that map to the report. For example, \"00000000-0000-0000-0000-000000000001,00000000-0000-0000-0000-000000000002\" and \"00000000-0000-0000-0000-000000000003\"."
                              },
                              "nextTriggerTime": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Report next collection trigger time.",
                                "readOnly": true
                              },
                              "lastTriggerTime": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Report last collection trigger time.",
                                "readOnly": true
                              },
                              "subscriptions": {
                                "type": "array",
                                "description": "List of subscription Ids.",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "complianceStatus": {
                                "description": "Report compliance status.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "m365": {
                                    "description": "The Microsoft 365 certification name.",
                                    "readOnly": true,
                                    "type": "object",
                                    "properties": {
                                      "passedCount": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "The count of all passed control.",
                                        "readOnly": true
                                      },
                                      "failedCount": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "The count of all failed control.",
                                        "readOnly": true
                                      },
                                      "manualCount": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "The count of all manual control.",
                                        "readOnly": true
                                      },
                                      "notApplicableCount": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "The count of all not applicable control.",
                                        "readOnly": true
                                      },
                                      "pendingCount": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "The count of all pending for approval control.",
                                        "readOnly": true
                                      }
                                    }
                                  }
                                }
                              },
                              "storageInfo": {
                                "type": "object",
                                "description": "The information of 'bring your own storage' account binding to the report",
                                "properties": {
                                  "subscriptionId": {
                                    "type": "string",
                                    "description": "The subscription id which 'bring your own storage' account belongs to"
                                  },
                                  "resourceGroup": {
                                    "type": "string",
                                    "description": "The resourceGroup which 'bring your own storage' account belongs to"
                                  },
                                  "accountName": {
                                    "type": "string",
                                    "description": "'bring your own storage' account name"
                                  },
                                  "location": {
                                    "type": "string",
                                    "description": "The region of 'bring your own storage' account"
                                  }
                                }
                              },
                              "certRecords": {
                                "type": "array",
                                "description": "List of synchronized certification records.",
                                "items": {
                                  "type": "object",
                                  "description": "A class represent the certification record synchronized from app compliance.",
                                  "properties": {
                                    "offerGuid": {
                                      "type": "string",
                                      "description": "The offerGuid which mapping to the reports.",
                                      "minLength": 1
                                    },
                                    "certificationStatus": {
                                      "type": "string",
                                      "description": "Indicates the status of certification process."
                                    },
                                    "ingestionStatus": {
                                      "type": "string",
                                      "description": "Indicates the status of compliance process."
                                    },
                                    "controls": {
                                      "type": "array",
                                      "description": "The control records list to be synchronized.",
                                      "items": {
                                        "type": "object",
                                        "description": "A class represent the control record synchronized from app compliance.",
                                        "properties": {
                                          "controlId": {
                                            "type": "string",
                                            "description": "The Id of the control. e.g. \"Operational_Security_10\""
                                          },
                                          "controlStatus": {
                                            "type": "string",
                                            "description": "Control status synchronized from app compliance."
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "controlId"
                                      ]
                                    }
                                  }
                                },
                                "readOnly": true,
                                "x-ms-identifiers": [
                                  "offerGuid"
                                ]
                              },
                              "provisioningState": {
                                "description": "Azure lifecycle management",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "Succeeded",
                                  "Failed",
                                  "Canceled",
                                  "Creating",
                                  "Deleting",
                                  "Fixing",
                                  "Verifying",
                                  "Updating"
                                ],
                                "x-ms-enum": {
                                  "name": "ProvisioningState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Succeeded",
                                      "value": "Succeeded",
                                      "description": "The provision is succeeded."
                                    },
                                    {
                                      "name": "Failed",
                                      "value": "Failed",
                                      "description": "The provision is failed."
                                    },
                                    {
                                      "name": "Canceled",
                                      "value": "Canceled",
                                      "description": "The provision is canceled."
                                    },
                                    {
                                      "name": "Creating",
                                      "value": "Creating",
                                      "description": "The creation is in progress."
                                    },
                                    {
                                      "name": "Deleting",
                                      "value": "Deleting",
                                      "description": "The deletion is in progress."
                                    },
                                    {
                                      "name": "Fixing",
                                      "value": "Fixing",
                                      "description": "The fix of the resource in progress."
                                    },
                                    {
                                      "name": "Verifying",
                                      "value": "Verifying",
                                      "description": "The verification of the resource in progress."
                                    },
                                    {
                                      "name": "Updating",
                                      "value": "Updating",
                                      "description": "The update of the resource in progress."
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "triggerTime",
                              "timeZone",
                              "resources"
                            ]
                          },
                          "reportSystemData": {
                            "description": "Metadata pertaining to creation and last modification of the resource.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          },
                          "complianceResults": {
                            "type": "array",
                            "description": "List of compliance results.",
                            "items": {
                              "type": "object",
                              "description": "A class represent the compliance result.",
                              "properties": {
                                "complianceName": {
                                  "type": "string",
                                  "description": "The name of the compliance. e.g. \"M365\"",
                                  "readOnly": true
                                },
                                "categories": {
                                  "type": "array",
                                  "description": "List of categories.",
                                  "items": {
                                    "type": "object",
                                    "description": "A class represent the compliance category.",
                                    "properties": {
                                      "categoryName": {
                                        "type": "string",
                                        "description": "The name of the compliance category. e.g. \"Operational Security\"",
                                        "readOnly": true
                                      },
                                      "categoryStatus": {
                                        "description": "Category status.",
                                        "readOnly": true,
                                        "type": "string",
                                        "enum": [
                                          "Passed",
                                          "Failed",
                                          "NotApplicable",
                                          "PendingApproval"
                                        ],
                                        "x-ms-enum": {
                                          "name": "CategoryStatus",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Passed",
                                              "value": "Passed",
                                              "description": "The category is passed."
                                            },
                                            {
                                              "name": "Failed",
                                              "value": "Failed",
                                              "description": "The category is failed."
                                            },
                                            {
                                              "name": "NotApplicable",
                                              "value": "NotApplicable",
                                              "description": "The category is not applicable."
                                            },
                                            {
                                              "name": "PendingApproval",
                                              "value": "PendingApproval",
                                              "description": "The category is pending for approval."
                                            }
                                          ]
                                        }
                                      },
                                      "controlFamilies": {
                                        "type": "array",
                                        "description": "List of control families.",
                                        "items": {
                                          "type": "object",
                                          "description": "A class represent the control family.",
                                          "properties": {
                                            "controlFamilyName": {
                                              "type": "string",
                                              "description": "The name of the control family. e.g. \"Malware Protection - Anti-Virus\"",
                                              "readOnly": true
                                            },
                                            "controlFamilyStatus": {
                                              "description": "The control family status",
                                              "readOnly": true,
                                              "type": "string",
                                              "enum": [
                                                "Passed",
                                                "Failed",
                                                "NotApplicable",
                                                "PendingApproval"
                                              ],
                                              "x-ms-enum": {
                                                "name": "ControlFamilyStatus",
                                                "modelAsString": true,
                                                "values": [
                                                  {
                                                    "name": "Passed",
                                                    "value": "Passed",
                                                    "description": "The control family is passed."
                                                  },
                                                  {
                                                    "name": "Failed",
                                                    "value": "Failed",
                                                    "description": "The control family is failed."
                                                  },
                                                  {
                                                    "name": "NotApplicable",
                                                    "value": "NotApplicable",
                                                    "description": "The control family is not applicable."
                                                  },
                                                  {
                                                    "name": "PendingApproval",
                                                    "value": "PendingApproval",
                                                    "description": "The control family is pending for approval."
                                                  }
                                                ]
                                              }
                                            },
                                            "controls": {
                                              "type": "array",
                                              "description": "List of controls.",
                                              "items": {
                                                "type": "object",
                                                "description": "A class represent the control.",
                                                "properties": {
                                                  "controlId": {
                                                    "type": "string",
                                                    "description": "The Id of the control. e.g. \"Operational_Security_10\"",
                                                    "readOnly": true
                                                  },
                                                  "controlName": {
                                                    "type": "string",
                                                    "description": "The name of the control. e.g. \"Unsupported OS and Software.\"",
                                                    "readOnly": true
                                                  },
                                                  "controlFullName": {
                                                    "type": "string",
                                                    "description": "The full name of the control. e.g. \"Validate that unsupported operating systems and software components are not in use.\"",
                                                    "readOnly": true
                                                  },
                                                  "controlDescription": {
                                                    "type": "string",
                                                    "description": "The control's description",
                                                    "readOnly": true
                                                  },
                                                  "controlDescriptionHyperLink": {
                                                    "type": "string",
                                                    "description": "The hyper link to the control's description'.",
                                                    "readOnly": true
                                                  },
                                                  "controlStatus": {
                                                    "description": "Control status.",
                                                    "readOnly": true,
                                                    "type": "string",
                                                    "enum": [
                                                      "Passed",
                                                      "Failed",
                                                      "NotApplicable",
                                                      "PendingApproval"
                                                    ],
                                                    "x-ms-enum": {
                                                      "name": "ControlStatus",
                                                      "modelAsString": true,
                                                      "values": [
                                                        {
                                                          "name": "Passed",
                                                          "value": "Passed",
                                                          "description": "The control is passed."
                                                        },
                                                        {
                                                          "name": "Failed",
                                                          "value": "Failed",
                                                          "description": "The control is failed."
                                                        },
                                                        {
                                                          "name": "NotApplicable",
                                                          "value": "NotApplicable",
                                                          "description": "The control is not applicable."
                                                        },
                                                        {
                                                          "name": "PendingApproval",
                                                          "value": "PendingApproval",
                                                          "description": "The control is pending for approval."
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "responsibilities": {
                                                    "type": "array",
                                                    "description": "List of customer responsibility.",
                                                    "items": {
                                                      "type": "object",
                                                      "description": "A class represent the customer responsibility.",
                                                      "properties": {
                                                        "responsibilityId": {
                                                          "type": "string",
                                                          "description": "The id of the customer responsibility.",
                                                          "readOnly": true
                                                        },
                                                        "responsibilityTitle": {
                                                          "type": "string",
                                                          "description": "The title of the customer responsibility.",
                                                          "readOnly": true
                                                        },
                                                        "responsibilityDescription": {
                                                          "type": "string",
                                                          "description": "The description of the customer responsibility.",
                                                          "readOnly": true
                                                        },
                                                        "responsibilityType": {
                                                          "description": "The type of customer responsibility.",
                                                          "readOnly": true,
                                                          "type": "string",
                                                          "enum": [
                                                            "Automated",
                                                            "ScopedManual",
                                                            "Manual"
                                                          ],
                                                          "x-ms-enum": {
                                                            "name": "ResponsibilityType",
                                                            "modelAsString": true,
                                                            "values": [
                                                              {
                                                                "name": "Automated",
                                                                "value": "Automated",
                                                                "description": "The responsibility is automated."
                                                              },
                                                              {
                                                                "name": "ScopedManual",
                                                                "value": "ScopedManual",
                                                                "description": "The responsibility is scoped manual."
                                                              },
                                                              {
                                                                "name": "Manual",
                                                                "value": "Manual",
                                                                "description": "The responsibility is manual."
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        "responsibilitySeverity": {
                                                          "description": "The severity level of this customer responsibility.",
                                                          "readOnly": true,
                                                          "type": "string",
                                                          "enum": [
                                                            "High",
                                                            "Medium",
                                                            "Low"
                                                          ],
                                                          "x-ms-enum": {
                                                            "name": "ResponsibilitySeverity",
                                                            "modelAsString": true,
                                                            "values": [
                                                              {
                                                                "name": "High",
                                                                "value": "High",
                                                                "description": "The responsibility is high severity."
                                                              },
                                                              {
                                                                "name": "Medium",
                                                                "value": "Medium",
                                                                "description": "The responsibility is medium severity."
                                                              },
                                                              {
                                                                "name": "Low",
                                                                "value": "Low",
                                                                "description": "The responsibility is low severity."
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        "responsibilityStatus": {
                                                          "description": "The status of this customer responsibility.",
                                                          "readOnly": true,
                                                          "type": "string",
                                                          "enum": [
                                                            "Passed",
                                                            "Failed",
                                                            "NotApplicable",
                                                            "PendingApproval"
                                                          ],
                                                          "x-ms-enum": {
                                                            "name": "ResponsibilityStatus",
                                                            "modelAsString": true,
                                                            "values": [
                                                              {
                                                                "name": "Passed",
                                                                "value": "Passed",
                                                                "description": "The responsibility is passed."
                                                              },
                                                              {
                                                                "name": "Failed",
                                                                "value": "Failed",
                                                                "description": "The responsibility is failed."
                                                              },
                                                              {
                                                                "name": "NotApplicable",
                                                                "value": "NotApplicable",
                                                                "description": "The responsibility is not applicable."
                                                              },
                                                              {
                                                                "name": "PendingApproval",
                                                                "value": "PendingApproval",
                                                                "description": "The responsibility is pending for approval."
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        "responsibilityEnvironment": {
                                                          "description": "The supported cloud environment of this customer responsibility.",
                                                          "readOnly": true,
                                                          "type": "string",
                                                          "enum": [
                                                            "Azure",
                                                            "AWS",
                                                            "GCP",
                                                            "General"
                                                          ],
                                                          "x-ms-enum": {
                                                            "name": "ResponsibilityEnvironment",
                                                            "modelAsString": true,
                                                            "values": [
                                                              {
                                                                "name": "Azure",
                                                                "value": "Azure",
                                                                "description": "The responsibility is supported in Azure."
                                                              },
                                                              {
                                                                "name": "AWS",
                                                                "value": "AWS",
                                                                "description": "The responsibility is supported in AWS."
                                                              },
                                                              {
                                                                "name": "GCP",
                                                                "value": "GCP",
                                                                "description": "The responsibility is supported in GCP."
                                                              },
                                                              {
                                                                "name": "General",
                                                                "value": "General",
                                                                "description": "The responsibility is general requirement of all environment."
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        "failedResourceCount": {
                                                          "type": "integer",
                                                          "format": "int32",
                                                          "description": "The count of all failed resources."
                                                        },
                                                        "totalResourceCount": {
                                                          "type": "integer",
                                                          "format": "int32",
                                                          "description": "The count of all resources."
                                                        },
                                                        "resourceList": {
                                                          "type": "array",
                                                          "description": "List of resource.",
                                                          "items": {
                                                            "type": "object",
                                                            "description": "A class represent the resource.",
                                                            "properties": {
                                                              "resourceId": {
                                                                "type": "string",
                                                                "description": "The Id of the resource.",
                                                                "readOnly": true
                                                              },
                                                              "accountId": {
                                                                "type": "string",
                                                                "description": "Account Id. For example - AWS account Id.",
                                                                "readOnly": true
                                                              },
                                                              "resourceType": {
                                                                "type": "string",
                                                                "description": "The type of the resource. e.g. \"Microsoft.SignalRService/SignalR\"",
                                                                "readOnly": true
                                                              },
                                                              "resourceOrigin": {
                                                                "description": "Resource origin.",
                                                                "readOnly": true,
                                                                "type": "string",
                                                                "enum": [
                                                                  "Azure",
                                                                  "AWS",
                                                                  "GCP"
                                                                ],
                                                                "x-ms-enum": {
                                                                  "name": "ResourceOrigin",
                                                                  "modelAsString": true,
                                                                  "values": [
                                                                    {
                                                                      "name": "Azure",
                                                                      "value": "Azure",
                                                                      "description": "The resource is from Azure."
                                                                    },
                                                                    {
                                                                      "name": "AWS",
                                                                      "value": "AWS",
                                                                      "description": "The resource is from AWS."
                                                                    },
                                                                    {
                                                                      "name": "GCP",
                                                                      "value": "GCP",
                                                                      "description": "The resource is from GCP."
                                                                    }
                                                                  ]
                                                                }
                                                              },
                                                              "resourceStatus": {
                                                                "description": "Resource status.",
                                                                "readOnly": true,
                                                                "type": "string",
                                                                "enum": [
                                                                  "Healthy",
                                                                  "Unhealthy"
                                                                ],
                                                                "x-ms-enum": {
                                                                  "name": "ResourceStatus",
                                                                  "modelAsString": true,
                                                                  "values": [
                                                                    {
                                                                      "name": "Healthy",
                                                                      "value": "Healthy",
                                                                      "description": "The resource is healthy."
                                                                    },
                                                                    {
                                                                      "name": "Unhealthy",
                                                                      "value": "Unhealthy",
                                                                      "description": "The resource is unhealthy."
                                                                    }
                                                                  ]
                                                                }
                                                              },
                                                              "resourceStatusChangeDate": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "description": "The status change date for the resource.",
                                                                "readOnly": true
                                                              },
                                                              "recommendationIds": {
                                                                "type": "array",
                                                                "description": "List of recommendation id.",
                                                                "items": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "readOnly": true,
                                                          "x-ms-identifiers": [
                                                            "resourceId"
                                                          ]
                                                        },
                                                        "recommendationList": {
                                                          "type": "array",
                                                          "description": "List of recommendation.",
                                                          "items": {
                                                            "type": "object",
                                                            "description": "A class represent the recommendation.",
                                                            "properties": {
                                                              "recommendationId": {
                                                                "type": "string",
                                                                "description": "The Id of the recommendation.",
                                                                "readOnly": true
                                                              },
                                                              "recommendationShortName": {
                                                                "type": "string",
                                                                "description": "The short name of the recommendation. e.g. \"Invalid TLS config\"",
                                                                "readOnly": true
                                                              },
                                                              "recommendationSolutions": {
                                                                "type": "array",
                                                                "description": "List of recommendation solutions.",
                                                                "items": {
                                                                  "type": "object",
                                                                  "description": "A class represent the recommendation solution.",
                                                                  "properties": {
                                                                    "recommendationSolutionIndex": {
                                                                      "type": "string",
                                                                      "description": "The index of the recommendation solution.",
                                                                      "readOnly": true
                                                                    },
                                                                    "recommendationSolutionContent": {
                                                                      "type": "string",
                                                                      "description": "The detail steps of the recommendation solution.",
                                                                      "readOnly": true
                                                                    },
                                                                    "isRecommendSolution": {
                                                                      "description": "Indicates whether this solution is the recommended.",
                                                                      "readOnly": true,
                                                                      "type": "string",
                                                                      "enum": [
                                                                        "true",
                                                                        "false"
                                                                      ],
                                                                      "x-ms-enum": {
                                                                        "name": "IsRecommendSolution",
                                                                        "modelAsString": true,
                                                                        "values": [
                                                                          {
                                                                            "name": "True",
                                                                            "value": "true",
                                                                            "description": "This solution is the recommended."
                                                                          },
                                                                          {
                                                                            "name": "False",
                                                                            "value": "false",
                                                                            "description": "This solution is not the recommended."
                                                                          }
                                                                        ]
                                                                      }
                                                                    }
                                                                  }
                                                                },
                                                                "readOnly": true,
                                                                "x-ms-identifiers": [
                                                                  "recommendationSolutionIndex"
                                                                ]
                                                              }
                                                            }
                                                          },
                                                          "readOnly": true,
                                                          "x-ms-identifiers": [
                                                            "recommendationId"
                                                          ]
                                                        },
                                                        "guidance": {
                                                          "type": "string",
                                                          "description": "The evidence upload guidance description.",
                                                          "readOnly": true
                                                        },
                                                        "justification": {
                                                          "type": "string",
                                                          "description": "The justification given by the user to clarify the reason.",
                                                          "readOnly": true
                                                        },
                                                        "evidenceFiles": {
                                                          "type": "array",
                                                          "description": "List of evidence file url.",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "readOnly": true,
                                                    "x-ms-identifiers": [
                                                      "responsibilityId"
                                                    ]
                                                  }
                                                }
                                              },
                                              "readOnly": true,
                                              "x-ms-identifiers": [
                                                "controlId"
                                              ]
                                            }
                                          }
                                        },
                                        "readOnly": true,
                                        "x-ms-identifiers": [
                                          "controlFamilyName"
                                        ]
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "x-ms-identifiers": [
                                    "categoryName"
                                  ]
                                }
                              }
                            },
                            "readOnly": true,
                            "x-ms-identifiers": [
                              "complianceName"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/snapshots/{snapshotName}": {
      "get": {
        "operationId": "Snapshot_Get",
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Get the AppComplianceAutomation snapshot and its properties.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "reportName",
            "in": "path",
            "description": "Report Name.",
            "required": true,
            "type": "string",
            "pattern": "^[-a-zA-Z0-9_]{1,50}$"
          },
          {
            "name": "snapshotName",
            "in": "path",
            "description": "Snapshot Name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-_]{1,64}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A class represent a AppComplianceAutomation snapshot resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Snapshot's property.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "snapshotName": {
                      "type": "string",
                      "description": "Snapshot name.",
                      "readOnly": true
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Azure lifecycle management",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Deleting",
                        "Fixing",
                        "Verifying",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The provision is succeeded."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The provision is failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The provision is canceled."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The creation is in progress."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The deletion is in progress."
                          },
                          {
                            "name": "Fixing",
                            "value": "Fixing",
                            "description": "The fix of the resource in progress."
                          },
                          {
                            "name": "Verifying",
                            "value": "Verifying",
                            "description": "The verification of the resource in progress."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The update of the resource in progress."
                          }
                        ]
                      }
                    },
                    "reportProperties": {
                      "description": "The report essential info.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "triggerTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Report collection trigger time."
                        },
                        "timeZone": {
                          "type": "string",
                          "description": "Report collection trigger time's time zone, the available list can be obtained by executing \"Get-TimeZone -ListAvailable\" in PowerShell.\nAn example of valid timezone id is \"Pacific Standard Time\"."
                        },
                        "resources": {
                          "type": "array",
                          "description": "List of resource data.",
                          "items": {
                            "type": "object",
                            "description": "Single resource Id's metadata.",
                            "properties": {
                              "resourceId": {
                                "type": "string",
                                "description": "Resource Id - e.g. \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1\"."
                              },
                              "resourceType": {
                                "type": "string",
                                "description": "Resource type. e.g. \"Microsoft.Compute/virtualMachines\""
                              },
                              "resourceKind": {
                                "type": "string",
                                "description": "Resource kind."
                              },
                              "resourceOrigin": {
                                "description": "Resource Origin.",
                                "type": "string",
                                "enum": [
                                  "Azure",
                                  "AWS",
                                  "GCP"
                                ],
                                "x-ms-enum": {
                                  "name": "ResourceOrigin",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Azure",
                                      "value": "Azure",
                                      "description": "The resource is from Azure."
                                    },
                                    {
                                      "name": "AWS",
                                      "value": "AWS",
                                      "description": "The resource is from AWS."
                                    },
                                    {
                                      "name": "GCP",
                                      "value": "GCP",
                                      "description": "The resource is from GCP."
                                    }
                                  ]
                                }
                              },
                              "accountId": {
                                "type": "string",
                                "description": "Account Id. For example - the AWS account id."
                              }
                            },
                            "required": [
                              "resourceId"
                            ]
                          },
                          "x-ms-identifiers": [
                            "resourceId"
                          ]
                        },
                        "status": {
                          "description": "Report status.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Active",
                            "Failed",
                            "Reviewing",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "ReportStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Active",
                                "value": "Active",
                                "description": "The report is active."
                              },
                              {
                                "name": "Failed",
                                "value": "Failed",
                                "description": "The report is failed."
                              },
                              {
                                "name": "Reviewing",
                                "value": "Reviewing",
                                "description": "The report is under reviewing."
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "The report is disabled."
                              }
                            ]
                          }
                        },
                        "errors": {
                          "type": "array",
                          "description": "List of report error codes.",
                          "items": {
                            "type": "string"
                          },
                          "readOnly": true
                        },
                        "tenantId": {
                          "type": "string",
                          "description": "Report's tenant id.",
                          "readOnly": true
                        },
                        "offerGuid": {
                          "type": "string",
                          "description": "A list of comma-separated offerGuids indicates a series of offerGuids that map to the report. For example, \"00000000-0000-0000-0000-000000000001,00000000-0000-0000-0000-000000000002\" and \"00000000-0000-0000-0000-000000000003\"."
                        },
                        "nextTriggerTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Report next collection trigger time.",
                          "readOnly": true
                        },
                        "lastTriggerTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Report last collection trigger time.",
                          "readOnly": true
                        },
                        "subscriptions": {
                          "type": "array",
                          "description": "List of subscription Ids.",
                          "items": {
                            "type": "string"
                          },
                          "readOnly": true
                        },
                        "complianceStatus": {
                          "description": "Report compliance status.",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "m365": {
                              "description": "The Microsoft 365 certification name.",
                              "readOnly": true,
                              "type": "object",
                              "properties": {
                                "passedCount": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The count of all passed control.",
                                  "readOnly": true
                                },
                                "failedCount": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The count of all failed control.",
                                  "readOnly": true
                                },
                                "manualCount": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The count of all manual control.",
                                  "readOnly": true
                                },
                                "notApplicableCount": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The count of all not applicable control.",
                                  "readOnly": true
                                },
                                "pendingCount": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The count of all pending for approval control.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "storageInfo": {
                          "type": "object",
                          "description": "The information of 'bring your own storage' account binding to the report",
                          "properties": {
                            "subscriptionId": {
                              "type": "string",
                              "description": "The subscription id which 'bring your own storage' account belongs to"
                            },
                            "resourceGroup": {
                              "type": "string",
                              "description": "The resourceGroup which 'bring your own storage' account belongs to"
                            },
                            "accountName": {
                              "type": "string",
                              "description": "'bring your own storage' account name"
                            },
                            "location": {
                              "type": "string",
                              "description": "The region of 'bring your own storage' account"
                            }
                          }
                        },
                        "certRecords": {
                          "type": "array",
                          "description": "List of synchronized certification records.",
                          "items": {
                            "type": "object",
                            "description": "A class represent the certification record synchronized from app compliance.",
                            "properties": {
                              "offerGuid": {
                                "type": "string",
                                "description": "The offerGuid which mapping to the reports.",
                                "minLength": 1
                              },
                              "certificationStatus": {
                                "type": "string",
                                "description": "Indicates the status of certification process."
                              },
                              "ingestionStatus": {
                                "type": "string",
                                "description": "Indicates the status of compliance process."
                              },
                              "controls": {
                                "type": "array",
                                "description": "The control records list to be synchronized.",
                                "items": {
                                  "type": "object",
                                  "description": "A class represent the control record synchronized from app compliance.",
                                  "properties": {
                                    "controlId": {
                                      "type": "string",
                                      "description": "The Id of the control. e.g. \"Operational_Security_10\""
                                    },
                                    "controlStatus": {
                                      "type": "string",
                                      "description": "Control status synchronized from app compliance."
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "controlId"
                                ]
                              }
                            }
                          },
                          "readOnly": true,
                          "x-ms-identifiers": [
                            "offerGuid"
                          ]
                        },
                        "provisioningState": {
                          "description": "Azure lifecycle management",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Succeeded",
                            "Failed",
                            "Canceled",
                            "Creating",
                            "Deleting",
                            "Fixing",
                            "Verifying",
                            "Updating"
                          ],
                          "x-ms-enum": {
                            "name": "ProvisioningState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Succeeded",
                                "value": "Succeeded",
                                "description": "The provision is succeeded."
                              },
                              {
                                "name": "Failed",
                                "value": "Failed",
                                "description": "The provision is failed."
                              },
                              {
                                "name": "Canceled",
                                "value": "Canceled",
                                "description": "The provision is canceled."
                              },
                              {
                                "name": "Creating",
                                "value": "Creating",
                                "description": "The creation is in progress."
                              },
                              {
                                "name": "Deleting",
                                "value": "Deleting",
                                "description": "The deletion is in progress."
                              },
                              {
                                "name": "Fixing",
                                "value": "Fixing",
                                "description": "The fix of the resource in progress."
                              },
                              {
                                "name": "Verifying",
                                "value": "Verifying",
                                "description": "The verification of the resource in progress."
                              },
                              {
                                "name": "Updating",
                                "value": "Updating",
                                "description": "The update of the resource in progress."
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "triggerTime",
                        "timeZone",
                        "resources"
                      ]
                    },
                    "reportSystemData": {
                      "description": "Metadata pertaining to creation and last modification of the resource.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "createdBy": {
                          "type": "string",
                          "description": "The identity that created the resource."
                        },
                        "createdByType": {
                          "type": "string",
                          "description": "The type of identity that created the resource.",
                          "enum": [
                            "User",
                            "Application",
                            "ManagedIdentity",
                            "Key"
                          ],
                          "x-ms-enum": {
                            "name": "createdByType",
                            "modelAsString": true
                          }
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The timestamp of resource creation (UTC)."
                        },
                        "lastModifiedBy": {
                          "type": "string",
                          "description": "The identity that last modified the resource."
                        },
                        "lastModifiedByType": {
                          "type": "string",
                          "description": "The type of identity that last modified the resource.",
                          "enum": [
                            "User",
                            "Application",
                            "ManagedIdentity",
                            "Key"
                          ],
                          "x-ms-enum": {
                            "name": "createdByType",
                            "modelAsString": true
                          }
                        },
                        "lastModifiedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The timestamp of resource last modification (UTC)"
                        }
                      }
                    },
                    "complianceResults": {
                      "type": "array",
                      "description": "List of compliance results.",
                      "items": {
                        "type": "object",
                        "description": "A class represent the compliance result.",
                        "properties": {
                          "complianceName": {
                            "type": "string",
                            "description": "The name of the compliance. e.g. \"M365\"",
                            "readOnly": true
                          },
                          "categories": {
                            "type": "array",
                            "description": "List of categories.",
                            "items": {
                              "type": "object",
                              "description": "A class represent the compliance category.",
                              "properties": {
                                "categoryName": {
                                  "type": "string",
                                  "description": "The name of the compliance category. e.g. \"Operational Security\"",
                                  "readOnly": true
                                },
                                "categoryStatus": {
                                  "description": "Category status.",
                                  "readOnly": true,
                                  "type": "string",
                                  "enum": [
                                    "Passed",
                                    "Failed",
                                    "NotApplicable",
                                    "PendingApproval"
                                  ],
                                  "x-ms-enum": {
                                    "name": "CategoryStatus",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Passed",
                                        "value": "Passed",
                                        "description": "The category is passed."
                                      },
                                      {
                                        "name": "Failed",
                                        "value": "Failed",
                                        "description": "The category is failed."
                                      },
                                      {
                                        "name": "NotApplicable",
                                        "value": "NotApplicable",
                                        "description": "The category is not applicable."
                                      },
                                      {
                                        "name": "PendingApproval",
                                        "value": "PendingApproval",
                                        "description": "The category is pending for approval."
                                      }
                                    ]
                                  }
                                },
                                "controlFamilies": {
                                  "type": "array",
                                  "description": "List of control families.",
                                  "items": {
                                    "type": "object",
                                    "description": "A class represent the control family.",
                                    "properties": {
                                      "controlFamilyName": {
                                        "type": "string",
                                        "description": "The name of the control family. e.g. \"Malware Protection - Anti-Virus\"",
                                        "readOnly": true
                                      },
                                      "controlFamilyStatus": {
                                        "description": "The control family status",
                                        "readOnly": true,
                                        "type": "string",
                                        "enum": [
                                          "Passed",
                                          "Failed",
                                          "NotApplicable",
                                          "PendingApproval"
                                        ],
                                        "x-ms-enum": {
                                          "name": "ControlFamilyStatus",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Passed",
                                              "value": "Passed",
                                              "description": "The control family is passed."
                                            },
                                            {
                                              "name": "Failed",
                                              "value": "Failed",
                                              "description": "The control family is failed."
                                            },
                                            {
                                              "name": "NotApplicable",
                                              "value": "NotApplicable",
                                              "description": "The control family is not applicable."
                                            },
                                            {
                                              "name": "PendingApproval",
                                              "value": "PendingApproval",
                                              "description": "The control family is pending for approval."
                                            }
                                          ]
                                        }
                                      },
                                      "controls": {
                                        "type": "array",
                                        "description": "List of controls.",
                                        "items": {
                                          "type": "object",
                                          "description": "A class represent the control.",
                                          "properties": {
                                            "controlId": {
                                              "type": "string",
                                              "description": "The Id of the control. e.g. \"Operational_Security_10\"",
                                              "readOnly": true
                                            },
                                            "controlName": {
                                              "type": "string",
                                              "description": "The name of the control. e.g. \"Unsupported OS and Software.\"",
                                              "readOnly": true
                                            },
                                            "controlFullName": {
                                              "type": "string",
                                              "description": "The full name of the control. e.g. \"Validate that unsupported operating systems and software components are not in use.\"",
                                              "readOnly": true
                                            },
                                            "controlDescription": {
                                              "type": "string",
                                              "description": "The control's description",
                                              "readOnly": true
                                            },
                                            "controlDescriptionHyperLink": {
                                              "type": "string",
                                              "description": "The hyper link to the control's description'.",
                                              "readOnly": true
                                            },
                                            "controlStatus": {
                                              "description": "Control status.",
                                              "readOnly": true,
                                              "type": "string",
                                              "enum": [
                                                "Passed",
                                                "Failed",
                                                "NotApplicable",
                                                "PendingApproval"
                                              ],
                                              "x-ms-enum": {
                                                "name": "ControlStatus",
                                                "modelAsString": true,
                                                "values": [
                                                  {
                                                    "name": "Passed",
                                                    "value": "Passed",
                                                    "description": "The control is passed."
                                                  },
                                                  {
                                                    "name": "Failed",
                                                    "value": "Failed",
                                                    "description": "The control is failed."
                                                  },
                                                  {
                                                    "name": "NotApplicable",
                                                    "value": "NotApplicable",
                                                    "description": "The control is not applicable."
                                                  },
                                                  {
                                                    "name": "PendingApproval",
                                                    "value": "PendingApproval",
                                                    "description": "The control is pending for approval."
                                                  }
                                                ]
                                              }
                                            },
                                            "responsibilities": {
                                              "type": "array",
                                              "description": "List of customer responsibility.",
                                              "items": {
                                                "type": "object",
                                                "description": "A class represent the customer responsibility.",
                                                "properties": {
                                                  "responsibilityId": {
                                                    "type": "string",
                                                    "description": "The id of the customer responsibility.",
                                                    "readOnly": true
                                                  },
                                                  "responsibilityTitle": {
                                                    "type": "string",
                                                    "description": "The title of the customer responsibility.",
                                                    "readOnly": true
                                                  },
                                                  "responsibilityDescription": {
                                                    "type": "string",
                                                    "description": "The description of the customer responsibility.",
                                                    "readOnly": true
                                                  },
                                                  "responsibilityType": {
                                                    "description": "The type of customer responsibility.",
                                                    "readOnly": true,
                                                    "type": "string",
                                                    "enum": [
                                                      "Automated",
                                                      "ScopedManual",
                                                      "Manual"
                                                    ],
                                                    "x-ms-enum": {
                                                      "name": "ResponsibilityType",
                                                      "modelAsString": true,
                                                      "values": [
                                                        {
                                                          "name": "Automated",
                                                          "value": "Automated",
                                                          "description": "The responsibility is automated."
                                                        },
                                                        {
                                                          "name": "ScopedManual",
                                                          "value": "ScopedManual",
                                                          "description": "The responsibility is scoped manual."
                                                        },
                                                        {
                                                          "name": "Manual",
                                                          "value": "Manual",
                                                          "description": "The responsibility is manual."
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "responsibilitySeverity": {
                                                    "description": "The severity level of this customer responsibility.",
                                                    "readOnly": true,
                                                    "type": "string",
                                                    "enum": [
                                                      "High",
                                                      "Medium",
                                                      "Low"
                                                    ],
                                                    "x-ms-enum": {
                                                      "name": "ResponsibilitySeverity",
                                                      "modelAsString": true,
                                                      "values": [
                                                        {
                                                          "name": "High",
                                                          "value": "High",
                                                          "description": "The responsibility is high severity."
                                                        },
                                                        {
                                                          "name": "Medium",
                                                          "value": "Medium",
                                                          "description": "The responsibility is medium severity."
                                                        },
                                                        {
                                                          "name": "Low",
                                                          "value": "Low",
                                                          "description": "The responsibility is low severity."
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "responsibilityStatus": {
                                                    "description": "The status of this customer responsibility.",
                                                    "readOnly": true,
                                                    "type": "string",
                                                    "enum": [
                                                      "Passed",
                                                      "Failed",
                                                      "NotApplicable",
                                                      "PendingApproval"
                                                    ],
                                                    "x-ms-enum": {
                                                      "name": "ResponsibilityStatus",
                                                      "modelAsString": true,
                                                      "values": [
                                                        {
                                                          "name": "Passed",
                                                          "value": "Passed",
                                                          "description": "The responsibility is passed."
                                                        },
                                                        {
                                                          "name": "Failed",
                                                          "value": "Failed",
                                                          "description": "The responsibility is failed."
                                                        },
                                                        {
                                                          "name": "NotApplicable",
                                                          "value": "NotApplicable",
                                                          "description": "The responsibility is not applicable."
                                                        },
                                                        {
                                                          "name": "PendingApproval",
                                                          "value": "PendingApproval",
                                                          "description": "The responsibility is pending for approval."
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "responsibilityEnvironment": {
                                                    "description": "The supported cloud environment of this customer responsibility.",
                                                    "readOnly": true,
                                                    "type": "string",
                                                    "enum": [
                                                      "Azure",
                                                      "AWS",
                                                      "GCP",
                                                      "General"
                                                    ],
                                                    "x-ms-enum": {
                                                      "name": "ResponsibilityEnvironment",
                                                      "modelAsString": true,
                                                      "values": [
                                                        {
                                                          "name": "Azure",
                                                          "value": "Azure",
                                                          "description": "The responsibility is supported in Azure."
                                                        },
                                                        {
                                                          "name": "AWS",
                                                          "value": "AWS",
                                                          "description": "The responsibility is supported in AWS."
                                                        },
                                                        {
                                                          "name": "GCP",
                                                          "value": "GCP",
                                                          "description": "The responsibility is supported in GCP."
                                                        },
                                                        {
                                                          "name": "General",
                                                          "value": "General",
                                                          "description": "The responsibility is general requirement of all environment."
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "failedResourceCount": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "description": "The count of all failed resources."
                                                  },
                                                  "totalResourceCount": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "description": "The count of all resources."
                                                  },
                                                  "resourceList": {
                                                    "type": "array",
                                                    "description": "List of resource.",
                                                    "items": {
                                                      "type": "object",
                                                      "description": "A class represent the resource.",
                                                      "properties": {
                                                        "resourceId": {
                                                          "type": "string",
                                                          "description": "The Id of the resource.",
                                                          "readOnly": true
                                                        },
                                                        "accountId": {
                                                          "type": "string",
                                                          "description": "Account Id. For example - AWS account Id.",
                                                          "readOnly": true
                                                        },
                                                        "resourceType": {
                                                          "type": "string",
                                                          "description": "The type of the resource. e.g. \"Microsoft.SignalRService/SignalR\"",
                                                          "readOnly": true
                                                        },
                                                        "resourceOrigin": {
                                                          "description": "Resource origin.",
                                                          "readOnly": true,
                                                          "type": "string",
                                                          "enum": [
                                                            "Azure",
                                                            "AWS",
                                                            "GCP"
                                                          ],
                                                          "x-ms-enum": {
                                                            "name": "ResourceOrigin",
                                                            "modelAsString": true,
                                                            "values": [
                                                              {
                                                                "name": "Azure",
                                                                "value": "Azure",
                                                                "description": "The resource is from Azure."
                                                              },
                                                              {
                                                                "name": "AWS",
                                                                "value": "AWS",
                                                                "description": "The resource is from AWS."
                                                              },
                                                              {
                                                                "name": "GCP",
                                                                "value": "GCP",
                                                                "description": "The resource is from GCP."
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        "resourceStatus": {
                                                          "description": "Resource status.",
                                                          "readOnly": true,
                                                          "type": "string",
                                                          "enum": [
                                                            "Healthy",
                                                            "Unhealthy"
                                                          ],
                                                          "x-ms-enum": {
                                                            "name": "ResourceStatus",
                                                            "modelAsString": true,
                                                            "values": [
                                                              {
                                                                "name": "Healthy",
                                                                "value": "Healthy",
                                                                "description": "The resource is healthy."
                                                              },
                                                              {
                                                                "name": "Unhealthy",
                                                                "value": "Unhealthy",
                                                                "description": "The resource is unhealthy."
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        "resourceStatusChangeDate": {
                                                          "type": "string",
                                                          "format": "date-time",
                                                          "description": "The status change date for the resource.",
                                                          "readOnly": true
                                                        },
                                                        "recommendationIds": {
                                                          "type": "array",
                                                          "description": "List of recommendation id.",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "readOnly": true,
                                                    "x-ms-identifiers": [
                                                      "resourceId"
                                                    ]
                                                  },
                                                  "recommendationList": {
                                                    "type": "array",
                                                    "description": "List of recommendation.",
                                                    "items": {
                                                      "type": "object",
                                                      "description": "A class represent the recommendation.",
                                                      "properties": {
                                                        "recommendationId": {
                                                          "type": "string",
                                                          "description": "The Id of the recommendation.",
                                                          "readOnly": true
                                                        },
                                                        "recommendationShortName": {
                                                          "type": "string",
                                                          "description": "The short name of the recommendation. e.g. \"Invalid TLS config\"",
                                                          "readOnly": true
                                                        },
                                                        "recommendationSolutions": {
                                                          "type": "array",
                                                          "description": "List of recommendation solutions.",
                                                          "items": {
                                                            "type": "object",
                                                            "description": "A class represent the recommendation solution.",
                                                            "properties": {
                                                              "recommendationSolutionIndex": {
                                                                "type": "string",
                                                                "description": "The index of the recommendation solution.",
                                                                "readOnly": true
                                                              },
                                                              "recommendationSolutionContent": {
                                                                "type": "string",
                                                                "description": "The detail steps of the recommendation solution.",
                                                                "readOnly": true
                                                              },
                                                              "isRecommendSolution": {
                                                                "description": "Indicates whether this solution is the recommended.",
                                                                "readOnly": true,
                                                                "type": "string",
                                                                "enum": [
                                                                  "true",
                                                                  "false"
                                                                ],
                                                                "x-ms-enum": {
                                                                  "name": "IsRecommendSolution",
                                                                  "modelAsString": true,
                                                                  "values": [
                                                                    {
                                                                      "name": "True",
                                                                      "value": "true",
                                                                      "description": "This solution is the recommended."
                                                                    },
                                                                    {
                                                                      "name": "False",
                                                                      "value": "false",
                                                                      "description": "This solution is not the recommended."
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "readOnly": true,
                                                          "x-ms-identifiers": [
                                                            "recommendationSolutionIndex"
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    "readOnly": true,
                                                    "x-ms-identifiers": [
                                                      "recommendationId"
                                                    ]
                                                  },
                                                  "guidance": {
                                                    "type": "string",
                                                    "description": "The evidence upload guidance description.",
                                                    "readOnly": true
                                                  },
                                                  "justification": {
                                                    "type": "string",
                                                    "description": "The justification given by the user to clarify the reason.",
                                                    "readOnly": true
                                                  },
                                                  "evidenceFiles": {
                                                    "type": "array",
                                                    "description": "List of evidence file url.",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              },
                                              "readOnly": true,
                                              "x-ms-identifiers": [
                                                "responsibilityId"
                                              ]
                                            }
                                          }
                                        },
                                        "readOnly": true,
                                        "x-ms-identifiers": [
                                          "controlId"
                                        ]
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "x-ms-identifiers": [
                                    "controlFamilyName"
                                  ]
                                }
                              }
                            },
                            "readOnly": true,
                            "x-ms-identifiers": [
                              "categoryName"
                            ]
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "complianceName"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/snapshots/{snapshotName}/download": {
      "post": {
        "operationId": "Snapshot_Download",
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Download compliance needs from snapshot, like: Compliance Report, Resource List.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "reportName",
            "in": "path",
            "description": "Report Name.",
            "required": true,
            "type": "string",
            "pattern": "^[-a-zA-Z0-9_]{1,50}$"
          },
          {
            "name": "snapshotName",
            "in": "path",
            "description": "Snapshot Name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-_]{1,64}$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for the query operation",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Snapshot's download request.",
              "properties": {
                "reportCreatorTenantId": {
                  "type": "string",
                  "description": "Tenant id."
                },
                "downloadType": {
                  "description": "Indicates the download type.",
                  "type": "string",
                  "enum": [
                    "ComplianceReport",
                    "CompliancePdfReport",
                    "ComplianceDetailedPdfReport",
                    "ResourceList"
                  ],
                  "x-ms-enum": {
                    "name": "DownloadType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "ComplianceReport",
                        "value": "ComplianceReport",
                        "description": "Download the compliance report."
                      },
                      {
                        "name": "CompliancePdfReport",
                        "value": "CompliancePdfReport",
                        "description": "Download the compliance pdf report."
                      },
                      {
                        "name": "ComplianceDetailedPdfReport",
                        "value": "ComplianceDetailedPdfReport",
                        "description": "Download the detailed compliance pdf report."
                      },
                      {
                        "name": "ResourceList",
                        "value": "ResourceList",
                        "description": "Download the resource list of the report."
                      }
                    ]
                  }
                },
                "offerGuid": {
                  "type": "string",
                  "description": "The offerGuid which mapping to the reports.",
                  "minLength": 1
                }
              },
              "required": [
                "downloadType"
              ]
            },
            "x-ms-client-name": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Object that includes all the possible response for the download operation.",
              "properties": {
                "resourceList": {
                  "type": "array",
                  "description": "Resource list of the report",
                  "items": {
                    "type": "object",
                    "description": "Resource Id.",
                    "properties": {
                      "subscriptionId": {
                        "type": "string",
                        "description": "The subscription Id of this resource.",
                        "readOnly": true
                      },
                      "resourceGroup": {
                        "type": "string",
                        "description": "The resource group name of this resource.",
                        "readOnly": true
                      },
                      "resourceType": {
                        "type": "string",
                        "description": "The resource type of this resource. e.g. \"Microsoft.SignalRService/SignalR\"",
                        "readOnly": true
                      },
                      "resourceId": {
                        "type": "string",
                        "description": "The resource Id - e.g. \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1\".",
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": [
                    "resourceId"
                  ]
                },
                "complianceReport": {
                  "type": "array",
                  "description": "List of the compliance result",
                  "items": {
                    "type": "object",
                    "description": "Object that includes all the content for single compliance result.",
                    "properties": {
                      "categoryName": {
                        "type": "string",
                        "description": "The category name.",
                        "readOnly": true
                      },
                      "controlFamilyName": {
                        "type": "string",
                        "description": "The control family name.",
                        "readOnly": true
                      },
                      "controlId": {
                        "type": "string",
                        "description": "The control Id - e.g. \"1\".",
                        "readOnly": true
                      },
                      "controlName": {
                        "type": "string",
                        "description": "The control name.",
                        "readOnly": true
                      },
                      "controlStatus": {
                        "description": "Control status.",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "Passed",
                          "Failed",
                          "NotApplicable",
                          "PendingApproval"
                        ],
                        "x-ms-enum": {
                          "name": "ControlStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Passed",
                              "value": "Passed",
                              "description": "The control is passed."
                            },
                            {
                              "name": "Failed",
                              "value": "Failed",
                              "description": "The control is failed."
                            },
                            {
                              "name": "NotApplicable",
                              "value": "NotApplicable",
                              "description": "The control is not applicable."
                            },
                            {
                              "name": "PendingApproval",
                              "value": "PendingApproval",
                              "description": "The control is pending for approval."
                            }
                          ]
                        }
                      },
                      "responsibilityTitle": {
                        "type": "string",
                        "description": "The title of the customer responsibility.",
                        "readOnly": true
                      },
                      "responsibilityDescription": {
                        "type": "string",
                        "description": "The description of the customer responsibility.",
                        "readOnly": true
                      },
                      "resourceId": {
                        "type": "string",
                        "description": "The Id of the resource.",
                        "readOnly": true
                      },
                      "resourceType": {
                        "type": "string",
                        "description": "The type of the resource.  e.g. \"Microsoft.SignalRService/SignalR\"",
                        "readOnly": true
                      },
                      "resourceOrigin": {
                        "description": "Resource origin.",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "Azure",
                          "AWS",
                          "GCP"
                        ],
                        "x-ms-enum": {
                          "name": "ResourceOrigin",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Azure",
                              "value": "Azure",
                              "description": "The resource is from Azure."
                            },
                            {
                              "name": "AWS",
                              "value": "AWS",
                              "description": "The resource is from AWS."
                            },
                            {
                              "name": "GCP",
                              "value": "GCP",
                              "description": "The resource is from GCP."
                            }
                          ]
                        }
                      },
                      "resourceStatus": {
                        "description": "Resource status.",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "Healthy",
                          "Unhealthy"
                        ],
                        "x-ms-enum": {
                          "name": "ResourceStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Healthy",
                              "value": "Healthy",
                              "description": "The resource is healthy."
                            },
                            {
                              "name": "Unhealthy",
                              "value": "Unhealthy",
                              "description": "The resource is unhealthy."
                            }
                          ]
                        }
                      },
                      "resourceStatusChangeDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The status change date for the resource.",
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": [
                    "controlId"
                  ]
                },
                "compliancePdfReport": {
                  "description": "Compliance pdf report",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "sasUri": {
                      "type": "string",
                      "description": "The uri of compliance pdf report",
                      "readOnly": true
                    }
                  }
                },
                "complianceDetailedPdfReport": {
                  "description": "The detailed compliance pdf report",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "sasUri": {
                      "type": "string",
                      "description": "The uri of detailed compliance pdf report",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/syncCertRecord": {
      "post": {
        "operationId": "Report_SyncCertRecord",
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Synchronize attestation record from app compliance.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "reportName",
            "in": "path",
            "description": "Report Name.",
            "required": true,
            "type": "string",
            "pattern": "^[-a-zA-Z0-9_]{1,50}$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for synchronize certification record operation",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Synchronize certification record request.",
              "properties": {
                "certRecord": {
                  "type": "object",
                  "description": "A class represent the certification record synchronized from app compliance.",
                  "properties": {
                    "offerGuid": {
                      "type": "string",
                      "description": "The offerGuid which mapping to the reports.",
                      "minLength": 1
                    },
                    "certificationStatus": {
                      "type": "string",
                      "description": "Indicates the status of certification process."
                    },
                    "ingestionStatus": {
                      "type": "string",
                      "description": "Indicates the status of compliance process."
                    },
                    "controls": {
                      "type": "array",
                      "description": "The control records list to be synchronized.",
                      "items": {
                        "type": "object",
                        "description": "A class represent the control record synchronized from app compliance.",
                        "properties": {
                          "controlId": {
                            "type": "string",
                            "description": "The Id of the control. e.g. \"Operational_Security_10\""
                          },
                          "controlStatus": {
                            "type": "string",
                            "description": "Control status synchronized from app compliance."
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "controlId"
                      ]
                    }
                  }
                }
              },
              "required": [
                "certRecord"
              ]
            },
            "x-ms-client-name": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Synchronize certification record response.",
              "properties": {
                "certRecord": {
                  "type": "object",
                  "description": "A class represent the certification record synchronized from app compliance.",
                  "properties": {
                    "offerGuid": {
                      "type": "string",
                      "description": "The offerGuid which mapping to the reports.",
                      "minLength": 1
                    },
                    "certificationStatus": {
                      "type": "string",
                      "description": "Indicates the status of certification process."
                    },
                    "ingestionStatus": {
                      "type": "string",
                      "description": "Indicates the status of compliance process."
                    },
                    "controls": {
                      "type": "array",
                      "description": "The control records list to be synchronized.",
                      "items": {
                        "type": "object",
                        "description": "A class represent the control record synchronized from app compliance.",
                        "properties": {
                          "controlId": {
                            "type": "string",
                            "description": "The Id of the control. e.g. \"Operational_Security_10\""
                          },
                          "controlStatus": {
                            "type": "string",
                            "description": "Control status synchronized from app compliance."
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "controlId"
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/verify": {
      "post": {
        "operationId": "Report_Verify",
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Verify the AppComplianceAutomation report health status.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "reportName",
            "in": "path",
            "description": "Report Name.",
            "required": true,
            "type": "string",
            "pattern": "^[-a-zA-Z0-9_]{1,50}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Report health status verification result.",
              "properties": {
                "result": {
                  "description": "Indicates whether the report verification action is Succeeded or Failed.",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Succeeded",
                    "Failed"
                  ],
                  "x-ms-enum": {
                    "name": "Result",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Succeeded",
                        "value": "Succeeded",
                        "description": "The result is succeeded."
                      },
                      {
                        "name": "Failed",
                        "value": "Failed",
                        "description": "The result is failed."
                      }
                    ]
                  }
                },
                "reason": {
                  "type": "string",
                  "description": "If the report verification action failed, to indicate the detailed failed reason.",
                  "readOnly": true
                }
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/webhooks": {
      "get": {
        "operationId": "Webhook_List",
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Get the AppComplianceAutomation webhook list.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "Skip over when retrieving results.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "skipToken"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of elements to return when retrieving results.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 100,
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "top"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "OData Select statement. Limits the properties on each entry to just those requested, e.g. ?$select=reportName,id.",
            "required": false,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "select"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply on the operation.",
            "required": false,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "filter"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "OData order by query option.",
            "required": false,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "orderby"
          },
          {
            "name": "offerGuid",
            "in": "query",
            "description": "The offerGuid which mapping to the reports.",
            "required": false,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "reportCreatorTenantId",
            "in": "query",
            "description": "The tenant id of the report creator.",
            "required": false,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "reportName",
            "in": "path",
            "description": "Report Name.",
            "required": true,
            "type": "string",
            "pattern": "^[-a-zA-Z0-9_]{1,50}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a WebhookResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The WebhookResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "A class represent an AppComplianceAutomation webhook resource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Webhook property.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "webhookId": {
                            "type": "string",
                            "description": "Webhook id in database.",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Webhook status.",
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "WebhookStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled",
                                  "description": "The webhook is enabled."
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "The webhook is disabled."
                                }
                              ]
                            }
                          },
                          "tenantId": {
                            "type": "string",
                            "description": "Tenant id.",
                            "readOnly": true
                          },
                          "sendAllEvents": {
                            "description": "whether to send notification under any event.",
                            "type": "string",
                            "enum": [
                              "true",
                              "false"
                            ],
                            "x-ms-enum": {
                              "name": "SendAllEvents",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "True",
                                  "value": "true",
                                  "description": "Need send notification under any event."
                                },
                                {
                                  "name": "False",
                                  "value": "false",
                                  "description": "No need to send notification under any event."
                                }
                              ]
                            }
                          },
                          "events": {
                            "type": "array",
                            "description": "under which event notification should be sent.",
                            "items": {
                              "type": "string",
                              "description": "notification event.",
                              "enum": [
                                "generate_snapshot_success",
                                "generate_snapshot_failed",
                                "assessment_failure",
                                "report_configuration_changes",
                                "report_deletion"
                              ],
                              "x-ms-enum": {
                                "name": "NotificationEvent",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "generate_snapshot_success",
                                    "value": "generate_snapshot_success",
                                    "description": "The subscribed report's snapshot is successfully generated."
                                  },
                                  {
                                    "name": "generate_snapshot_failed",
                                    "value": "generate_snapshot_failed",
                                    "description": "The subscribed report's snapshot is failed to generate."
                                  },
                                  {
                                    "name": "assessment_failure",
                                    "value": "assessment_failure",
                                    "description": "The subscribed report failed while collecting the assessments."
                                  },
                                  {
                                    "name": "report_configuration_changes",
                                    "value": "report_configuration_changes",
                                    "description": "The subscribed report's configuration is changed."
                                  },
                                  {
                                    "name": "report_deletion",
                                    "value": "report_deletion",
                                    "description": "The subscribed report is deleted."
                                  }
                                ]
                              }
                            }
                          },
                          "payloadUrl": {
                            "type": "string",
                            "description": "webhook payload url",
                            "pattern": "^(http(s)?://)[\\S]{0,64994}$"
                          },
                          "contentType": {
                            "description": "content type",
                            "type": "string",
                            "enum": [
                              "application/json"
                            ],
                            "x-ms-enum": {
                              "name": "ContentType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "ApplicationJson",
                                  "value": "application/json",
                                  "description": "The content type is application/json."
                                }
                              ]
                            }
                          },
                          "webhookKey": {
                            "type": "string",
                            "description": "webhook secret token. If not set, this field value is null; otherwise, please set a string value.",
                            "pattern": "^.{0,2048}$"
                          },
                          "updateWebhookKey": {
                            "description": "whether to update webhookKey.",
                            "type": "string",
                            "enum": [
                              "true",
                              "false"
                            ],
                            "x-ms-enum": {
                              "name": "UpdateWebhookKey",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "True",
                                  "value": "true",
                                  "description": "Need update the webhook key."
                                },
                                {
                                  "name": "False",
                                  "value": "false",
                                  "description": "No need to update the webhook key."
                                }
                              ]
                            }
                          },
                          "webhookKeyEnabled": {
                            "description": "whether webhookKey is enabled.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "true",
                              "false"
                            ],
                            "x-ms-enum": {
                              "name": "WebhookKeyEnabled",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "True",
                                  "value": "true",
                                  "description": "The webhookKey is enabled."
                                },
                                {
                                  "name": "False",
                                  "value": "false",
                                  "description": "The webhookKey is not enabled."
                                }
                              ]
                            }
                          },
                          "enableSslVerification": {
                            "description": "whether to enable ssl verification",
                            "type": "string",
                            "enum": [
                              "true",
                              "false"
                            ],
                            "x-ms-enum": {
                              "name": "EnableSslVerification",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "True",
                                  "value": "true",
                                  "description": "The ssl verification is enabled."
                                },
                                {
                                  "name": "False",
                                  "value": "false",
                                  "description": "The ssl verification is not enabled."
                                }
                              ]
                            }
                          },
                          "deliveryStatus": {
                            "description": "webhook deliveryStatus",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "NotStarted"
                            ],
                            "x-ms-enum": {
                              "name": "DeliveryStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The webhook is delivered successfully."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "The webhook is failed to deliver."
                                },
                                {
                                  "name": "NotStarted",
                                  "value": "NotStarted",
                                  "description": "The webhook is not delivered."
                                }
                              ]
                            }
                          },
                          "provisioningState": {
                            "description": "Azure Resource Provisioning State",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Creating",
                              "Deleting",
                              "Fixing",
                              "Verifying",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The provision is succeeded."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "The provision is failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "The provision is canceled."
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating",
                                  "description": "The creation is in progress."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The deletion is in progress."
                                },
                                {
                                  "name": "Fixing",
                                  "value": "Fixing",
                                  "description": "The fix of the resource in progress."
                                },
                                {
                                  "name": "Verifying",
                                  "value": "Verifying",
                                  "description": "The verification of the resource in progress."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The update of the resource in progress."
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/providers/Microsoft.AppComplianceAutomation/reports/{reportName}/webhooks/{webhookName}": {
      "get": {
        "operationId": "Webhook_Get",
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Get the AppComplianceAutomation webhook and its properties.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "reportName",
            "in": "path",
            "description": "Report Name.",
            "required": true,
            "type": "string",
            "pattern": "^[-a-zA-Z0-9_]{1,50}$"
          },
          {
            "name": "webhookName",
            "in": "path",
            "description": "Webhook Name.",
            "required": true,
            "type": "string",
            "pattern": "^[-a-zA-Z0-9_]{1,50}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A class represent an AppComplianceAutomation webhook resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Webhook property.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "webhookId": {
                      "type": "string",
                      "description": "Webhook id in database.",
                      "readOnly": true
                    },
                    "status": {
                      "description": "Webhook status.",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "WebhookStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "The webhook is enabled."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "The webhook is disabled."
                          }
                        ]
                      }
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "Tenant id.",
                      "readOnly": true
                    },
                    "sendAllEvents": {
                      "description": "whether to send notification under any event.",
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "SendAllEvents",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "true",
                            "description": "Need send notification under any event."
                          },
                          {
                            "name": "False",
                            "value": "false",
                            "description": "No need to send notification under any event."
                          }
                        ]
                      }
                    },
                    "events": {
                      "type": "array",
                      "description": "under which event notification should be sent.",
                      "items": {
                        "type": "string",
                        "description": "notification event.",
                        "enum": [
                          "generate_snapshot_success",
                          "generate_snapshot_failed",
                          "assessment_failure",
                          "report_configuration_changes",
                          "report_deletion"
                        ],
                        "x-ms-enum": {
                          "name": "NotificationEvent",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "generate_snapshot_success",
                              "value": "generate_snapshot_success",
                              "description": "The subscribed report's snapshot is successfully generated."
                            },
                            {
                              "name": "generate_snapshot_failed",
                              "value": "generate_snapshot_failed",
                              "description": "The subscribed report's snapshot is failed to generate."
                            },
                            {
                              "name": "assessment_failure",
                              "value": "assessment_failure",
                              "description": "The subscribed report failed while collecting the assessments."
                            },
                            {
                              "name": "report_configuration_changes",
                              "value": "report_configuration_changes",
                              "description": "The subscribed report's configuration is changed."
                            },
                            {
                              "name": "report_deletion",
                              "value": "report_deletion",
                              "description": "The subscribed report is deleted."
                            }
                          ]
                        }
                      }
                    },
                    "payloadUrl": {
                      "type": "string",
                      "description": "webhook payload url",
                      "pattern": "^(http(s)?://)[\\S]{0,64994}$"
                    },
                    "contentType": {
                      "description": "content type",
                      "type": "string",
                      "enum": [
                        "application/json"
                      ],
                      "x-ms-enum": {
                        "name": "ContentType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "ApplicationJson",
                            "value": "application/json",
                            "description": "The content type is application/json."
                          }
                        ]
                      }
                    },
                    "webhookKey": {
                      "type": "string",
                      "description": "webhook secret token. If not set, this field value is null; otherwise, please set a string value.",
                      "pattern": "^.{0,2048}$"
                    },
                    "updateWebhookKey": {
                      "description": "whether to update webhookKey.",
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "UpdateWebhookKey",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "true",
                            "description": "Need update the webhook key."
                          },
                          {
                            "name": "False",
                            "value": "false",
                            "description": "No need to update the webhook key."
                          }
                        ]
                      }
                    },
                    "webhookKeyEnabled": {
                      "description": "whether webhookKey is enabled.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "WebhookKeyEnabled",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "true",
                            "description": "The webhookKey is enabled."
                          },
                          {
                            "name": "False",
                            "value": "false",
                            "description": "The webhookKey is not enabled."
                          }
                        ]
                      }
                    },
                    "enableSslVerification": {
                      "description": "whether to enable ssl verification",
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "EnableSslVerification",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "true",
                            "description": "The ssl verification is enabled."
                          },
                          {
                            "name": "False",
                            "value": "false",
                            "description": "The ssl verification is not enabled."
                          }
                        ]
                      }
                    },
                    "deliveryStatus": {
                      "description": "webhook deliveryStatus",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "NotStarted"
                      ],
                      "x-ms-enum": {
                        "name": "DeliveryStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The webhook is delivered successfully."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The webhook is failed to deliver."
                          },
                          {
                            "name": "NotStarted",
                            "value": "NotStarted",
                            "description": "The webhook is not delivered."
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Azure Resource Provisioning State",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Deleting",
                        "Fixing",
                        "Verifying",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The provision is succeeded."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The provision is failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The provision is canceled."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The creation is in progress."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The deletion is in progress."
                          },
                          {
                            "name": "Fixing",
                            "value": "Fixing",
                            "description": "The fix of the resource in progress."
                          },
                          {
                            "name": "Verifying",
                            "value": "Verifying",
                            "description": "The verification of the resource in progress."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The update of the resource in progress."
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "put": {
        "operationId": "Webhook_CreateOrUpdate",
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Create a new AppComplianceAutomation webhook or update an exiting AppComplianceAutomation webhook.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "reportName",
            "in": "path",
            "description": "Report Name.",
            "required": true,
            "type": "string",
            "pattern": "^[-a-zA-Z0-9_]{1,50}$"
          },
          {
            "name": "webhookName",
            "in": "path",
            "description": "Webhook Name.",
            "required": true,
            "type": "string",
            "pattern": "^[-a-zA-Z0-9_]{1,50}$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A class represent an AppComplianceAutomation webhook resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Webhook property.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "webhookId": {
                      "type": "string",
                      "description": "Webhook id in database.",
                      "readOnly": true
                    },
                    "status": {
                      "description": "Webhook status.",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "WebhookStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "The webhook is enabled."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "The webhook is disabled."
                          }
                        ]
                      }
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "Tenant id.",
                      "readOnly": true
                    },
                    "sendAllEvents": {
                      "description": "whether to send notification under any event.",
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "SendAllEvents",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "true",
                            "description": "Need send notification under any event."
                          },
                          {
                            "name": "False",
                            "value": "false",
                            "description": "No need to send notification under any event."
                          }
                        ]
                      }
                    },
                    "events": {
                      "type": "array",
                      "description": "under which event notification should be sent.",
                      "items": {
                        "type": "string",
                        "description": "notification event.",
                        "enum": [
                          "generate_snapshot_success",
                          "generate_snapshot_failed",
                          "assessment_failure",
                          "report_configuration_changes",
                          "report_deletion"
                        ],
                        "x-ms-enum": {
                          "name": "NotificationEvent",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "generate_snapshot_success",
                              "value": "generate_snapshot_success",
                              "description": "The subscribed report's snapshot is successfully generated."
                            },
                            {
                              "name": "generate_snapshot_failed",
                              "value": "generate_snapshot_failed",
                              "description": "The subscribed report's snapshot is failed to generate."
                            },
                            {
                              "name": "assessment_failure",
                              "value": "assessment_failure",
                              "description": "The subscribed report failed while collecting the assessments."
                            },
                            {
                              "name": "report_configuration_changes",
                              "value": "report_configuration_changes",
                              "description": "The subscribed report's configuration is changed."
                            },
                            {
                              "name": "report_deletion",
                              "value": "report_deletion",
                              "description": "The subscribed report is deleted."
                            }
                          ]
                        }
                      }
                    },
                    "payloadUrl": {
                      "type": "string",
                      "description": "webhook payload url",
                      "pattern": "^(http(s)?://)[\\S]{0,64994}$"
                    },
                    "contentType": {
                      "description": "content type",
                      "type": "string",
                      "enum": [
                        "application/json"
                      ],
                      "x-ms-enum": {
                        "name": "ContentType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "ApplicationJson",
                            "value": "application/json",
                            "description": "The content type is application/json."
                          }
                        ]
                      }
                    },
                    "webhookKey": {
                      "type": "string",
                      "description": "webhook secret token. If not set, this field value is null; otherwise, please set a string value.",
                      "pattern": "^.{0,2048}$"
                    },
                    "updateWebhookKey": {
                      "description": "whether to update webhookKey.",
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "UpdateWebhookKey",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "true",
                            "description": "Need update the webhook key."
                          },
                          {
                            "name": "False",
                            "value": "false",
                            "description": "No need to update the webhook key."
                          }
                        ]
                      }
                    },
                    "webhookKeyEnabled": {
                      "description": "whether webhookKey is enabled.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "WebhookKeyEnabled",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "true",
                            "description": "The webhookKey is enabled."
                          },
                          {
                            "name": "False",
                            "value": "false",
                            "description": "The webhookKey is not enabled."
                          }
                        ]
                      }
                    },
                    "enableSslVerification": {
                      "description": "whether to enable ssl verification",
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "EnableSslVerification",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "true",
                            "description": "The ssl verification is enabled."
                          },
                          {
                            "name": "False",
                            "value": "false",
                            "description": "The ssl verification is not enabled."
                          }
                        ]
                      }
                    },
                    "deliveryStatus": {
                      "description": "webhook deliveryStatus",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "NotStarted"
                      ],
                      "x-ms-enum": {
                        "name": "DeliveryStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The webhook is delivered successfully."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The webhook is failed to deliver."
                          },
                          {
                            "name": "NotStarted",
                            "value": "NotStarted",
                            "description": "The webhook is not delivered."
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Azure Resource Provisioning State",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Deleting",
                        "Fixing",
                        "Verifying",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The provision is succeeded."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The provision is failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The provision is canceled."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The creation is in progress."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The deletion is in progress."
                          },
                          {
                            "name": "Fixing",
                            "value": "Fixing",
                            "description": "The fix of the resource in progress."
                          },
                          {
                            "name": "Verifying",
                            "value": "Verifying",
                            "description": "The verification of the resource in progress."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The update of the resource in progress."
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "x-ms-client-name": "properties"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'WebhookResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A class represent an AppComplianceAutomation webhook resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Webhook property.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "webhookId": {
                      "type": "string",
                      "description": "Webhook id in database.",
                      "readOnly": true
                    },
                    "status": {
                      "description": "Webhook status.",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "WebhookStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "The webhook is enabled."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "The webhook is disabled."
                          }
                        ]
                      }
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "Tenant id.",
                      "readOnly": true
                    },
                    "sendAllEvents": {
                      "description": "whether to send notification under any event.",
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "SendAllEvents",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "true",
                            "description": "Need send notification under any event."
                          },
                          {
                            "name": "False",
                            "value": "false",
                            "description": "No need to send notification under any event."
                          }
                        ]
                      }
                    },
                    "events": {
                      "type": "array",
                      "description": "under which event notification should be sent.",
                      "items": {
                        "type": "string",
                        "description": "notification event.",
                        "enum": [
                          "generate_snapshot_success",
                          "generate_snapshot_failed",
                          "assessment_failure",
                          "report_configuration_changes",
                          "report_deletion"
                        ],
                        "x-ms-enum": {
                          "name": "NotificationEvent",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "generate_snapshot_success",
                              "value": "generate_snapshot_success",
                              "description": "The subscribed report's snapshot is successfully generated."
                            },
                            {
                              "name": "generate_snapshot_failed",
                              "value": "generate_snapshot_failed",
                              "description": "The subscribed report's snapshot is failed to generate."
                            },
                            {
                              "name": "assessment_failure",
                              "value": "assessment_failure",
                              "description": "The subscribed report failed while collecting the assessments."
                            },
                            {
                              "name": "report_configuration_changes",
                              "value": "report_configuration_changes",
                              "description": "The subscribed report's configuration is changed."
                            },
                            {
                              "name": "report_deletion",
                              "value": "report_deletion",
                              "description": "The subscribed report is deleted."
                            }
                          ]
                        }
                      }
                    },
                    "payloadUrl": {
                      "type": "string",
                      "description": "webhook payload url",
                      "pattern": "^(http(s)?://)[\\S]{0,64994}$"
                    },
                    "contentType": {
                      "description": "content type",
                      "type": "string",
                      "enum": [
                        "application/json"
                      ],
                      "x-ms-enum": {
                        "name": "ContentType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "ApplicationJson",
                            "value": "application/json",
                            "description": "The content type is application/json."
                          }
                        ]
                      }
                    },
                    "webhookKey": {
                      "type": "string",
                      "description": "webhook secret token. If not set, this field value is null; otherwise, please set a string value.",
                      "pattern": "^.{0,2048}$"
                    },
                    "updateWebhookKey": {
                      "description": "whether to update webhookKey.",
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "UpdateWebhookKey",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "true",
                            "description": "Need update the webhook key."
                          },
                          {
                            "name": "False",
                            "value": "false",
                            "description": "No need to update the webhook key."
                          }
                        ]
                      }
                    },
                    "webhookKeyEnabled": {
                      "description": "whether webhookKey is enabled.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "WebhookKeyEnabled",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "true",
                            "description": "The webhookKey is enabled."
                          },
                          {
                            "name": "False",
                            "value": "false",
                            "description": "The webhookKey is not enabled."
                          }
                        ]
                      }
                    },
                    "enableSslVerification": {
                      "description": "whether to enable ssl verification",
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "EnableSslVerification",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "true",
                            "description": "The ssl verification is enabled."
                          },
                          {
                            "name": "False",
                            "value": "false",
                            "description": "The ssl verification is not enabled."
                          }
                        ]
                      }
                    },
                    "deliveryStatus": {
                      "description": "webhook deliveryStatus",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "NotStarted"
                      ],
                      "x-ms-enum": {
                        "name": "DeliveryStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The webhook is delivered successfully."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The webhook is failed to deliver."
                          },
                          {
                            "name": "NotStarted",
                            "value": "NotStarted",
                            "description": "The webhook is not delivered."
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Azure Resource Provisioning State",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Deleting",
                        "Fixing",
                        "Verifying",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The provision is succeeded."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The provision is failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The provision is canceled."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The creation is in progress."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The deletion is in progress."
                          },
                          {
                            "name": "Fixing",
                            "value": "Fixing",
                            "description": "The fix of the resource in progress."
                          },
                          {
                            "name": "Verifying",
                            "value": "Verifying",
                            "description": "The verification of the resource in progress."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The update of the resource in progress."
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          },
          "201": {
            "description": "Resource 'WebhookResource' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A class represent an AppComplianceAutomation webhook resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Webhook property.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "webhookId": {
                      "type": "string",
                      "description": "Webhook id in database.",
                      "readOnly": true
                    },
                    "status": {
                      "description": "Webhook status.",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "WebhookStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "The webhook is enabled."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "The webhook is disabled."
                          }
                        ]
                      }
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "Tenant id.",
                      "readOnly": true
                    },
                    "sendAllEvents": {
                      "description": "whether to send notification under any event.",
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "SendAllEvents",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "true",
                            "description": "Need send notification under any event."
                          },
                          {
                            "name": "False",
                            "value": "false",
                            "description": "No need to send notification under any event."
                          }
                        ]
                      }
                    },
                    "events": {
                      "type": "array",
                      "description": "under which event notification should be sent.",
                      "items": {
                        "type": "string",
                        "description": "notification event.",
                        "enum": [
                          "generate_snapshot_success",
                          "generate_snapshot_failed",
                          "assessment_failure",
                          "report_configuration_changes",
                          "report_deletion"
                        ],
                        "x-ms-enum": {
                          "name": "NotificationEvent",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "generate_snapshot_success",
                              "value": "generate_snapshot_success",
                              "description": "The subscribed report's snapshot is successfully generated."
                            },
                            {
                              "name": "generate_snapshot_failed",
                              "value": "generate_snapshot_failed",
                              "description": "The subscribed report's snapshot is failed to generate."
                            },
                            {
                              "name": "assessment_failure",
                              "value": "assessment_failure",
                              "description": "The subscribed report failed while collecting the assessments."
                            },
                            {
                              "name": "report_configuration_changes",
                              "value": "report_configuration_changes",
                              "description": "The subscribed report's configuration is changed."
                            },
                            {
                              "name": "report_deletion",
                              "value": "report_deletion",
                              "description": "The subscribed report is deleted."
                            }
                          ]
                        }
                      }
                    },
                    "payloadUrl": {
                      "type": "string",
                      "description": "webhook payload url",
                      "pattern": "^(http(s)?://)[\\S]{0,64994}$"
                    },
                    "contentType": {
                      "description": "content type",
                      "type": "string",
                      "enum": [
                        "application/json"
                      ],
                      "x-ms-enum": {
                        "name": "ContentType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "ApplicationJson",
                            "value": "application/json",
                            "description": "The content type is application/json."
                          }
                        ]
                      }
                    },
                    "webhookKey": {
                      "type": "string",
                      "description": "webhook secret token. If not set, this field value is null; otherwise, please set a string value.",
                      "pattern": "^.{0,2048}$"
                    },
                    "updateWebhookKey": {
                      "description": "whether to update webhookKey.",
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "UpdateWebhookKey",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "true",
                            "description": "Need update the webhook key."
                          },
                          {
                            "name": "False",
                            "value": "false",
                            "description": "No need to update the webhook key."
                          }
                        ]
                      }
                    },
                    "webhookKeyEnabled": {
                      "description": "whether webhookKey is enabled.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "WebhookKeyEnabled",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "true",
                            "description": "The webhookKey is enabled."
                          },
                          {
                            "name": "False",
                            "value": "false",
                            "description": "The webhookKey is not enabled."
                          }
                        ]
                      }
                    },
                    "enableSslVerification": {
                      "description": "whether to enable ssl verification",
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "EnableSslVerification",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "true",
                            "description": "The ssl verification is enabled."
                          },
                          {
                            "name": "False",
                            "value": "false",
                            "description": "The ssl verification is not enabled."
                          }
                        ]
                      }
                    },
                    "deliveryStatus": {
                      "description": "webhook deliveryStatus",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "NotStarted"
                      ],
                      "x-ms-enum": {
                        "name": "DeliveryStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The webhook is delivered successfully."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The webhook is failed to deliver."
                          },
                          {
                            "name": "NotStarted",
                            "value": "NotStarted",
                            "description": "The webhook is not delivered."
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Azure Resource Provisioning State",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Deleting",
                        "Fixing",
                        "Verifying",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The provision is succeeded."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The provision is failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The provision is canceled."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The creation is in progress."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The deletion is in progress."
                          },
                          {
                            "name": "Fixing",
                            "value": "Fixing",
                            "description": "The fix of the resource in progress."
                          },
                          {
                            "name": "Verifying",
                            "value": "Verifying",
                            "description": "The verification of the resource in progress."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The update of the resource in progress."
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "patch": {
        "operationId": "Webhook_Update",
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Update an exiting AppComplianceAutomation webhook.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "reportName",
            "in": "path",
            "description": "Report Name.",
            "required": true,
            "type": "string",
            "pattern": "^[-a-zA-Z0-9_]{1,50}$"
          },
          {
            "name": "webhookName",
            "in": "path",
            "description": "Webhook Name.",
            "required": true,
            "type": "string",
            "pattern": "^[-a-zA-Z0-9_]{1,50}$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A class represent a AppComplianceAutomation webhook resource update properties.",
              "properties": {
                "properties": {
                  "description": "Webhook property.",
                  "type": "object",
                  "properties": {
                    "webhookId": {
                      "type": "string",
                      "description": "Webhook id in database.",
                      "readOnly": true
                    },
                    "status": {
                      "description": "Webhook status.",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "WebhookStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "The webhook is enabled."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "The webhook is disabled."
                          }
                        ]
                      }
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "Tenant id.",
                      "readOnly": true
                    },
                    "sendAllEvents": {
                      "description": "whether to send notification under any event.",
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "SendAllEvents",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "true",
                            "description": "Need send notification under any event."
                          },
                          {
                            "name": "False",
                            "value": "false",
                            "description": "No need to send notification under any event."
                          }
                        ]
                      }
                    },
                    "events": {
                      "type": "array",
                      "description": "under which event notification should be sent.",
                      "items": {
                        "type": "string",
                        "description": "notification event.",
                        "enum": [
                          "generate_snapshot_success",
                          "generate_snapshot_failed",
                          "assessment_failure",
                          "report_configuration_changes",
                          "report_deletion"
                        ],
                        "x-ms-enum": {
                          "name": "NotificationEvent",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "generate_snapshot_success",
                              "value": "generate_snapshot_success",
                              "description": "The subscribed report's snapshot is successfully generated."
                            },
                            {
                              "name": "generate_snapshot_failed",
                              "value": "generate_snapshot_failed",
                              "description": "The subscribed report's snapshot is failed to generate."
                            },
                            {
                              "name": "assessment_failure",
                              "value": "assessment_failure",
                              "description": "The subscribed report failed while collecting the assessments."
                            },
                            {
                              "name": "report_configuration_changes",
                              "value": "report_configuration_changes",
                              "description": "The subscribed report's configuration is changed."
                            },
                            {
                              "name": "report_deletion",
                              "value": "report_deletion",
                              "description": "The subscribed report is deleted."
                            }
                          ]
                        }
                      }
                    },
                    "payloadUrl": {
                      "type": "string",
                      "description": "webhook payload url",
                      "pattern": "^(http(s)?://)[\\S]{0,64994}$"
                    },
                    "contentType": {
                      "description": "content type",
                      "type": "string",
                      "enum": [
                        "application/json"
                      ],
                      "x-ms-enum": {
                        "name": "ContentType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "ApplicationJson",
                            "value": "application/json",
                            "description": "The content type is application/json."
                          }
                        ]
                      }
                    },
                    "webhookKey": {
                      "type": "string",
                      "description": "webhook secret token. If not set, this field value is null; otherwise, please set a string value.",
                      "pattern": "^.{0,2048}$"
                    },
                    "updateWebhookKey": {
                      "description": "whether to update webhookKey.",
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "UpdateWebhookKey",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "true",
                            "description": "Need update the webhook key."
                          },
                          {
                            "name": "False",
                            "value": "false",
                            "description": "No need to update the webhook key."
                          }
                        ]
                      }
                    },
                    "webhookKeyEnabled": {
                      "description": "whether webhookKey is enabled.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "WebhookKeyEnabled",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "true",
                            "description": "The webhookKey is enabled."
                          },
                          {
                            "name": "False",
                            "value": "false",
                            "description": "The webhookKey is not enabled."
                          }
                        ]
                      }
                    },
                    "enableSslVerification": {
                      "description": "whether to enable ssl verification",
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "EnableSslVerification",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "true",
                            "description": "The ssl verification is enabled."
                          },
                          {
                            "name": "False",
                            "value": "false",
                            "description": "The ssl verification is not enabled."
                          }
                        ]
                      }
                    },
                    "deliveryStatus": {
                      "description": "webhook deliveryStatus",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "NotStarted"
                      ],
                      "x-ms-enum": {
                        "name": "DeliveryStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The webhook is delivered successfully."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The webhook is failed to deliver."
                          },
                          {
                            "name": "NotStarted",
                            "value": "NotStarted",
                            "description": "The webhook is not delivered."
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Azure Resource Provisioning State",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Deleting",
                        "Fixing",
                        "Verifying",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The provision is succeeded."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The provision is failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The provision is canceled."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The creation is in progress."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The deletion is in progress."
                          },
                          {
                            "name": "Fixing",
                            "value": "Fixing",
                            "description": "The fix of the resource in progress."
                          },
                          {
                            "name": "Verifying",
                            "value": "Verifying",
                            "description": "The verification of the resource in progress."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The update of the resource in progress."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "x-ms-client-name": "properties"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A class represent an AppComplianceAutomation webhook resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Webhook property.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "webhookId": {
                      "type": "string",
                      "description": "Webhook id in database.",
                      "readOnly": true
                    },
                    "status": {
                      "description": "Webhook status.",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "WebhookStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "The webhook is enabled."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "The webhook is disabled."
                          }
                        ]
                      }
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "Tenant id.",
                      "readOnly": true
                    },
                    "sendAllEvents": {
                      "description": "whether to send notification under any event.",
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "SendAllEvents",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "true",
                            "description": "Need send notification under any event."
                          },
                          {
                            "name": "False",
                            "value": "false",
                            "description": "No need to send notification under any event."
                          }
                        ]
                      }
                    },
                    "events": {
                      "type": "array",
                      "description": "under which event notification should be sent.",
                      "items": {
                        "type": "string",
                        "description": "notification event.",
                        "enum": [
                          "generate_snapshot_success",
                          "generate_snapshot_failed",
                          "assessment_failure",
                          "report_configuration_changes",
                          "report_deletion"
                        ],
                        "x-ms-enum": {
                          "name": "NotificationEvent",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "generate_snapshot_success",
                              "value": "generate_snapshot_success",
                              "description": "The subscribed report's snapshot is successfully generated."
                            },
                            {
                              "name": "generate_snapshot_failed",
                              "value": "generate_snapshot_failed",
                              "description": "The subscribed report's snapshot is failed to generate."
                            },
                            {
                              "name": "assessment_failure",
                              "value": "assessment_failure",
                              "description": "The subscribed report failed while collecting the assessments."
                            },
                            {
                              "name": "report_configuration_changes",
                              "value": "report_configuration_changes",
                              "description": "The subscribed report's configuration is changed."
                            },
                            {
                              "name": "report_deletion",
                              "value": "report_deletion",
                              "description": "The subscribed report is deleted."
                            }
                          ]
                        }
                      }
                    },
                    "payloadUrl": {
                      "type": "string",
                      "description": "webhook payload url",
                      "pattern": "^(http(s)?://)[\\S]{0,64994}$"
                    },
                    "contentType": {
                      "description": "content type",
                      "type": "string",
                      "enum": [
                        "application/json"
                      ],
                      "x-ms-enum": {
                        "name": "ContentType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "ApplicationJson",
                            "value": "application/json",
                            "description": "The content type is application/json."
                          }
                        ]
                      }
                    },
                    "webhookKey": {
                      "type": "string",
                      "description": "webhook secret token. If not set, this field value is null; otherwise, please set a string value.",
                      "pattern": "^.{0,2048}$"
                    },
                    "updateWebhookKey": {
                      "description": "whether to update webhookKey.",
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "UpdateWebhookKey",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "true",
                            "description": "Need update the webhook key."
                          },
                          {
                            "name": "False",
                            "value": "false",
                            "description": "No need to update the webhook key."
                          }
                        ]
                      }
                    },
                    "webhookKeyEnabled": {
                      "description": "whether webhookKey is enabled.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "WebhookKeyEnabled",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "true",
                            "description": "The webhookKey is enabled."
                          },
                          {
                            "name": "False",
                            "value": "false",
                            "description": "The webhookKey is not enabled."
                          }
                        ]
                      }
                    },
                    "enableSslVerification": {
                      "description": "whether to enable ssl verification",
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "EnableSslVerification",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "true",
                            "description": "The ssl verification is enabled."
                          },
                          {
                            "name": "False",
                            "value": "false",
                            "description": "The ssl verification is not enabled."
                          }
                        ]
                      }
                    },
                    "deliveryStatus": {
                      "description": "webhook deliveryStatus",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "NotStarted"
                      ],
                      "x-ms-enum": {
                        "name": "DeliveryStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The webhook is delivered successfully."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The webhook is failed to deliver."
                          },
                          {
                            "name": "NotStarted",
                            "value": "NotStarted",
                            "description": "The webhook is not delivered."
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Azure Resource Provisioning State",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Creating",
                        "Deleting",
                        "Fixing",
                        "Verifying",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The provision is succeeded."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The provision is failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The provision is canceled."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The creation is in progress."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The deletion is in progress."
                          },
                          {
                            "name": "Fixing",
                            "value": "Fixing",
                            "description": "The fix of the resource in progress."
                          },
                          {
                            "name": "Verifying",
                            "value": "Verifying",
                            "description": "The verification of the resource in progress."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The update of the resource in progress."
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "delete": {
        "operationId": "Webhook_Delete",
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Delete an AppComplianceAutomation webhook.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "reportName",
            "in": "path",
            "description": "Report Name.",
            "required": true,
            "type": "string",
            "pattern": "^[-a-zA-Z0-9_]{1,50}$"
          },
          {
            "name": "webhookName",
            "in": "path",
            "description": "Webhook Name.",
            "required": true,
            "type": "string",
            "pattern": "^[-a-zA-Z0-9_]{1,50}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/providers/Microsoft.AppComplianceAutomation/triggerEvaluation": {
      "post": {
        "operationId": "ProviderActions_TriggerEvaluation",
        "tags": [
          "AppComplianceAutomation"
        ],
        "description": "Trigger quick evaluation for the given subscriptions.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Trigger evaluation request.",
              "properties": {
                "resourceIds": {
                  "type": "array",
                  "description": "List of resource ids to be evaluated",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "resourceIds"
              ]
            },
            "x-ms-client-name": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Trigger evaluation response.",
              "properties": {
                "properties": {
                  "description": "trigger evaluation property.",
                  "type": "object",
                  "properties": {
                    "triggerTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time when the evaluation is triggered.",
                      "readOnly": true
                    },
                    "evaluationEndTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time when the evaluation is end.",
                      "readOnly": true
                    },
                    "resourceIds": {
                      "type": "array",
                      "description": "List of resource ids to be evaluated",
                      "items": {
                        "type": "string"
                      }
                    },
                    "quickAssessments": {
                      "type": "array",
                      "description": "List of quick assessments",
                      "items": {
                        "type": "object",
                        "description": "A class represent the quick assessment.",
                        "properties": {
                          "resourceId": {
                            "type": "string",
                            "description": "Resource id.",
                            "readOnly": true
                          },
                          "responsibilityId": {
                            "type": "string",
                            "description": "Responsibility id.",
                            "readOnly": true
                          },
                          "timestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC).",
                            "readOnly": true
                          },
                          "resourceStatus": {
                            "description": "Quick assessment status.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Healthy",
                              "Unhealthy"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Healthy",
                                  "value": "Healthy",
                                  "description": "The resource is healthy."
                                },
                                {
                                  "name": "Unhealthy",
                                  "value": "Unhealthy",
                                  "description": "The resource is unhealthy."
                                }
                              ]
                            }
                          },
                          "displayName": {
                            "type": "string",
                            "description": "Quick assessment display name.",
                            "readOnly": true
                          },
                          "description": {
                            "type": "string",
                            "description": "Quick assessment display name.",
                            "readOnly": true
                          },
                          "remediationLink": {
                            "type": "string",
                            "description": "Link to remediation steps for this quick assessment.",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "resourceId"
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Category": {
      "type": "object",
      "description": "A class represent the compliance category.",
      "properties": {
        "categoryName": {
          "type": "string",
          "description": "The name of the compliance category. e.g. \"Operational Security\"",
          "readOnly": true
        },
        "categoryStatus": {
          "description": "Category status.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Passed",
            "Failed",
            "NotApplicable",
            "PendingApproval"
          ],
          "x-ms-enum": {
            "name": "CategoryStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Passed",
                "value": "Passed",
                "description": "The category is passed."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "The category is failed."
              },
              {
                "name": "NotApplicable",
                "value": "NotApplicable",
                "description": "The category is not applicable."
              },
              {
                "name": "PendingApproval",
                "value": "PendingApproval",
                "description": "The category is pending for approval."
              }
            ]
          }
        },
        "controlFamilies": {
          "type": "array",
          "description": "List of control families.",
          "items": {
            "type": "object",
            "description": "A class represent the control family.",
            "properties": {
              "controlFamilyName": {
                "type": "string",
                "description": "The name of the control family. e.g. \"Malware Protection - Anti-Virus\"",
                "readOnly": true
              },
              "controlFamilyStatus": {
                "description": "The control family status",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "Passed",
                  "Failed",
                  "NotApplicable",
                  "PendingApproval"
                ],
                "x-ms-enum": {
                  "name": "ControlFamilyStatus",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Passed",
                      "value": "Passed",
                      "description": "The control family is passed."
                    },
                    {
                      "name": "Failed",
                      "value": "Failed",
                      "description": "The control family is failed."
                    },
                    {
                      "name": "NotApplicable",
                      "value": "NotApplicable",
                      "description": "The control family is not applicable."
                    },
                    {
                      "name": "PendingApproval",
                      "value": "PendingApproval",
                      "description": "The control family is pending for approval."
                    }
                  ]
                }
              },
              "controls": {
                "type": "array",
                "description": "List of controls.",
                "items": {
                  "type": "object",
                  "description": "A class represent the control.",
                  "properties": {
                    "controlId": {
                      "type": "string",
                      "description": "The Id of the control. e.g. \"Operational_Security_10\"",
                      "readOnly": true
                    },
                    "controlName": {
                      "type": "string",
                      "description": "The name of the control. e.g. \"Unsupported OS and Software.\"",
                      "readOnly": true
                    },
                    "controlFullName": {
                      "type": "string",
                      "description": "The full name of the control. e.g. \"Validate that unsupported operating systems and software components are not in use.\"",
                      "readOnly": true
                    },
                    "controlDescription": {
                      "type": "string",
                      "description": "The control's description",
                      "readOnly": true
                    },
                    "controlDescriptionHyperLink": {
                      "type": "string",
                      "description": "The hyper link to the control's description'.",
                      "readOnly": true
                    },
                    "controlStatus": {
                      "description": "Control status.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Passed",
                        "Failed",
                        "NotApplicable",
                        "PendingApproval"
                      ],
                      "x-ms-enum": {
                        "name": "ControlStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Passed",
                            "value": "Passed",
                            "description": "The control is passed."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The control is failed."
                          },
                          {
                            "name": "NotApplicable",
                            "value": "NotApplicable",
                            "description": "The control is not applicable."
                          },
                          {
                            "name": "PendingApproval",
                            "value": "PendingApproval",
                            "description": "The control is pending for approval."
                          }
                        ]
                      }
                    },
                    "responsibilities": {
                      "type": "array",
                      "description": "List of customer responsibility.",
                      "items": {
                        "type": "object",
                        "description": "A class represent the customer responsibility.",
                        "properties": {
                          "responsibilityId": {
                            "type": "string",
                            "description": "The id of the customer responsibility.",
                            "readOnly": true
                          },
                          "responsibilityTitle": {
                            "type": "string",
                            "description": "The title of the customer responsibility.",
                            "readOnly": true
                          },
                          "responsibilityDescription": {
                            "type": "string",
                            "description": "The description of the customer responsibility.",
                            "readOnly": true
                          },
                          "responsibilityType": {
                            "description": "The type of customer responsibility.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Automated",
                              "ScopedManual",
                              "Manual"
                            ],
                            "x-ms-enum": {
                              "name": "ResponsibilityType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Automated",
                                  "value": "Automated",
                                  "description": "The responsibility is automated."
                                },
                                {
                                  "name": "ScopedManual",
                                  "value": "ScopedManual",
                                  "description": "The responsibility is scoped manual."
                                },
                                {
                                  "name": "Manual",
                                  "value": "Manual",
                                  "description": "The responsibility is manual."
                                }
                              ]
                            }
                          },
                          "responsibilitySeverity": {
                            "description": "The severity level of this customer responsibility.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "High",
                              "Medium",
                              "Low"
                            ],
                            "x-ms-enum": {
                              "name": "ResponsibilitySeverity",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "High",
                                  "value": "High",
                                  "description": "The responsibility is high severity."
                                },
                                {
                                  "name": "Medium",
                                  "value": "Medium",
                                  "description": "The responsibility is medium severity."
                                },
                                {
                                  "name": "Low",
                                  "value": "Low",
                                  "description": "The responsibility is low severity."
                                }
                              ]
                            }
                          },
                          "responsibilityStatus": {
                            "description": "The status of this customer responsibility.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Passed",
                              "Failed",
                              "NotApplicable",
                              "PendingApproval"
                            ],
                            "x-ms-enum": {
                              "name": "ResponsibilityStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Passed",
                                  "value": "Passed",
                                  "description": "The responsibility is passed."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "The responsibility is failed."
                                },
                                {
                                  "name": "NotApplicable",
                                  "value": "NotApplicable",
                                  "description": "The responsibility is not applicable."
                                },
                                {
                                  "name": "PendingApproval",
                                  "value": "PendingApproval",
                                  "description": "The responsibility is pending for approval."
                                }
                              ]
                            }
                          },
                          "responsibilityEnvironment": {
                            "description": "The supported cloud environment of this customer responsibility.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Azure",
                              "AWS",
                              "GCP",
                              "General"
                            ],
                            "x-ms-enum": {
                              "name": "ResponsibilityEnvironment",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Azure",
                                  "value": "Azure",
                                  "description": "The responsibility is supported in Azure."
                                },
                                {
                                  "name": "AWS",
                                  "value": "AWS",
                                  "description": "The responsibility is supported in AWS."
                                },
                                {
                                  "name": "GCP",
                                  "value": "GCP",
                                  "description": "The responsibility is supported in GCP."
                                },
                                {
                                  "name": "General",
                                  "value": "General",
                                  "description": "The responsibility is general requirement of all environment."
                                }
                              ]
                            }
                          },
                          "failedResourceCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The count of all failed resources."
                          },
                          "totalResourceCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The count of all resources."
                          },
                          "resourceList": {
                            "type": "array",
                            "description": "List of resource.",
                            "items": {
                              "type": "object",
                              "description": "A class represent the resource.",
                              "properties": {
                                "resourceId": {
                                  "type": "string",
                                  "description": "The Id of the resource.",
                                  "readOnly": true
                                },
                                "accountId": {
                                  "type": "string",
                                  "description": "Account Id. For example - AWS account Id.",
                                  "readOnly": true
                                },
                                "resourceType": {
                                  "type": "string",
                                  "description": "The type of the resource. e.g. \"Microsoft.SignalRService/SignalR\"",
                                  "readOnly": true
                                },
                                "resourceOrigin": {
                                  "description": "Resource origin.",
                                  "readOnly": true,
                                  "type": "string",
                                  "enum": [
                                    "Azure",
                                    "AWS",
                                    "GCP"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ResourceOrigin",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Azure",
                                        "value": "Azure",
                                        "description": "The resource is from Azure."
                                      },
                                      {
                                        "name": "AWS",
                                        "value": "AWS",
                                        "description": "The resource is from AWS."
                                      },
                                      {
                                        "name": "GCP",
                                        "value": "GCP",
                                        "description": "The resource is from GCP."
                                      }
                                    ]
                                  }
                                },
                                "resourceStatus": {
                                  "description": "Resource status.",
                                  "readOnly": true,
                                  "type": "string",
                                  "enum": [
                                    "Healthy",
                                    "Unhealthy"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ResourceStatus",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Healthy",
                                        "value": "Healthy",
                                        "description": "The resource is healthy."
                                      },
                                      {
                                        "name": "Unhealthy",
                                        "value": "Unhealthy",
                                        "description": "The resource is unhealthy."
                                      }
                                    ]
                                  }
                                },
                                "resourceStatusChangeDate": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The status change date for the resource.",
                                  "readOnly": true
                                },
                                "recommendationIds": {
                                  "type": "array",
                                  "description": "List of recommendation id.",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "readOnly": true,
                            "x-ms-identifiers": [
                              "resourceId"
                            ]
                          },
                          "recommendationList": {
                            "type": "array",
                            "description": "List of recommendation.",
                            "items": {
                              "type": "object",
                              "description": "A class represent the recommendation.",
                              "properties": {
                                "recommendationId": {
                                  "type": "string",
                                  "description": "The Id of the recommendation.",
                                  "readOnly": true
                                },
                                "recommendationShortName": {
                                  "type": "string",
                                  "description": "The short name of the recommendation. e.g. \"Invalid TLS config\"",
                                  "readOnly": true
                                },
                                "recommendationSolutions": {
                                  "type": "array",
                                  "description": "List of recommendation solutions.",
                                  "items": {
                                    "type": "object",
                                    "description": "A class represent the recommendation solution.",
                                    "properties": {
                                      "recommendationSolutionIndex": {
                                        "type": "string",
                                        "description": "The index of the recommendation solution.",
                                        "readOnly": true
                                      },
                                      "recommendationSolutionContent": {
                                        "type": "string",
                                        "description": "The detail steps of the recommendation solution.",
                                        "readOnly": true
                                      },
                                      "isRecommendSolution": {
                                        "description": "Indicates whether this solution is the recommended.",
                                        "readOnly": true,
                                        "type": "string",
                                        "enum": [
                                          "true",
                                          "false"
                                        ],
                                        "x-ms-enum": {
                                          "name": "IsRecommendSolution",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "True",
                                              "value": "true",
                                              "description": "This solution is the recommended."
                                            },
                                            {
                                              "name": "False",
                                              "value": "false",
                                              "description": "This solution is not the recommended."
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "x-ms-identifiers": [
                                    "recommendationSolutionIndex"
                                  ]
                                }
                              }
                            },
                            "readOnly": true,
                            "x-ms-identifiers": [
                              "recommendationId"
                            ]
                          },
                          "guidance": {
                            "type": "string",
                            "description": "The evidence upload guidance description.",
                            "readOnly": true
                          },
                          "justification": {
                            "type": "string",
                            "description": "The justification given by the user to clarify the reason.",
                            "readOnly": true
                          },
                          "evidenceFiles": {
                            "type": "array",
                            "description": "List of evidence file url.",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "responsibilityId"
                      ]
                    }
                  }
                },
                "readOnly": true,
                "x-ms-identifiers": [
                  "controlId"
                ]
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "controlFamilyName"
          ]
        }
      }
    },
    "CategoryStatus": {
      "type": "string",
      "description": "Indicates the category status.",
      "enum": [
        "Passed",
        "Failed",
        "NotApplicable",
        "PendingApproval"
      ],
      "x-ms-enum": {
        "name": "CategoryStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Passed",
            "value": "Passed",
            "description": "The category is passed."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The category is failed."
          },
          {
            "name": "NotApplicable",
            "value": "NotApplicable",
            "description": "The category is not applicable."
          },
          {
            "name": "PendingApproval",
            "value": "PendingApproval",
            "description": "The category is pending for approval."
          }
        ]
      }
    },
    "CertSyncRecord": {
      "type": "object",
      "description": "A class represent the certification record synchronized from app compliance.",
      "properties": {
        "offerGuid": {
          "type": "string",
          "description": "The offerGuid which mapping to the reports.",
          "minLength": 1
        },
        "certificationStatus": {
          "type": "string",
          "description": "Indicates the status of certification process."
        },
        "ingestionStatus": {
          "type": "string",
          "description": "Indicates the status of compliance process."
        },
        "controls": {
          "type": "array",
          "description": "The control records list to be synchronized.",
          "items": {
            "type": "object",
            "description": "A class represent the control record synchronized from app compliance.",
            "properties": {
              "controlId": {
                "type": "string",
                "description": "The Id of the control. e.g. \"Operational_Security_10\""
              },
              "controlStatus": {
                "type": "string",
                "description": "Control status synchronized from app compliance."
              }
            }
          },
          "x-ms-identifiers": [
            "controlId"
          ]
        }
      }
    },
    "ComplianceReportItem": {
      "type": "object",
      "description": "Object that includes all the content for single compliance result.",
      "properties": {
        "categoryName": {
          "type": "string",
          "description": "The category name.",
          "readOnly": true
        },
        "controlFamilyName": {
          "type": "string",
          "description": "The control family name.",
          "readOnly": true
        },
        "controlId": {
          "type": "string",
          "description": "The control Id - e.g. \"1\".",
          "readOnly": true
        },
        "controlName": {
          "type": "string",
          "description": "The control name.",
          "readOnly": true
        },
        "controlStatus": {
          "description": "Control status.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Passed",
            "Failed",
            "NotApplicable",
            "PendingApproval"
          ],
          "x-ms-enum": {
            "name": "ControlStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Passed",
                "value": "Passed",
                "description": "The control is passed."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "The control is failed."
              },
              {
                "name": "NotApplicable",
                "value": "NotApplicable",
                "description": "The control is not applicable."
              },
              {
                "name": "PendingApproval",
                "value": "PendingApproval",
                "description": "The control is pending for approval."
              }
            ]
          }
        },
        "responsibilityTitle": {
          "type": "string",
          "description": "The title of the customer responsibility.",
          "readOnly": true
        },
        "responsibilityDescription": {
          "type": "string",
          "description": "The description of the customer responsibility.",
          "readOnly": true
        },
        "resourceId": {
          "type": "string",
          "description": "The Id of the resource.",
          "readOnly": true
        },
        "resourceType": {
          "type": "string",
          "description": "The type of the resource.  e.g. \"Microsoft.SignalRService/SignalR\"",
          "readOnly": true
        },
        "resourceOrigin": {
          "description": "Resource origin.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Azure",
            "AWS",
            "GCP"
          ],
          "x-ms-enum": {
            "name": "ResourceOrigin",
            "modelAsString": true,
            "values": [
              {
                "name": "Azure",
                "value": "Azure",
                "description": "The resource is from Azure."
              },
              {
                "name": "AWS",
                "value": "AWS",
                "description": "The resource is from AWS."
              },
              {
                "name": "GCP",
                "value": "GCP",
                "description": "The resource is from GCP."
              }
            ]
          }
        },
        "resourceStatus": {
          "description": "Resource status.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Healthy",
            "Unhealthy"
          ],
          "x-ms-enum": {
            "name": "ResourceStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Healthy",
                "value": "Healthy",
                "description": "The resource is healthy."
              },
              {
                "name": "Unhealthy",
                "value": "Unhealthy",
                "description": "The resource is unhealthy."
              }
            ]
          }
        },
        "resourceStatusChangeDate": {
          "type": "string",
          "format": "date-time",
          "description": "The status change date for the resource.",
          "readOnly": true
        }
      }
    },
    "ComplianceResult": {
      "type": "object",
      "description": "A class represent the compliance result.",
      "properties": {
        "complianceName": {
          "type": "string",
          "description": "The name of the compliance. e.g. \"M365\"",
          "readOnly": true
        },
        "categories": {
          "type": "array",
          "description": "List of categories.",
          "items": {
            "type": "object",
            "description": "A class represent the compliance category.",
            "properties": {
              "categoryName": {
                "type": "string",
                "description": "The name of the compliance category. e.g. \"Operational Security\"",
                "readOnly": true
              },
              "categoryStatus": {
                "description": "Category status.",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "Passed",
                  "Failed",
                  "NotApplicable",
                  "PendingApproval"
                ],
                "x-ms-enum": {
                  "name": "CategoryStatus",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Passed",
                      "value": "Passed",
                      "description": "The category is passed."
                    },
                    {
                      "name": "Failed",
                      "value": "Failed",
                      "description": "The category is failed."
                    },
                    {
                      "name": "NotApplicable",
                      "value": "NotApplicable",
                      "description": "The category is not applicable."
                    },
                    {
                      "name": "PendingApproval",
                      "value": "PendingApproval",
                      "description": "The category is pending for approval."
                    }
                  ]
                }
              },
              "controlFamilies": {
                "type": "array",
                "description": "List of control families.",
                "items": {
                  "type": "object",
                  "description": "A class represent the control family.",
                  "properties": {
                    "controlFamilyName": {
                      "type": "string",
                      "description": "The name of the control family. e.g. \"Malware Protection - Anti-Virus\"",
                      "readOnly": true
                    },
                    "controlFamilyStatus": {
                      "description": "The control family status",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Passed",
                        "Failed",
                        "NotApplicable",
                        "PendingApproval"
                      ],
                      "x-ms-enum": {
                        "name": "ControlFamilyStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Passed",
                            "value": "Passed",
                            "description": "The control family is passed."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The control family is failed."
                          },
                          {
                            "name": "NotApplicable",
                            "value": "NotApplicable",
                            "description": "The control family is not applicable."
                          },
                          {
                            "name": "PendingApproval",
                            "value": "PendingApproval",
                            "description": "The control family is pending for approval."
                          }
                        ]
                      }
                    },
                    "controls": {
                      "type": "array",
                      "description": "List of controls.",
                      "items": {
                        "type": "object",
                        "description": "A class represent the control.",
                        "properties": {
                          "controlId": {
                            "type": "string",
                            "description": "The Id of the control. e.g. \"Operational_Security_10\"",
                            "readOnly": true
                          },
                          "controlName": {
                            "type": "string",
                            "description": "The name of the control. e.g. \"Unsupported OS and Software.\"",
                            "readOnly": true
                          },
                          "controlFullName": {
                            "type": "string",
                            "description": "The full name of the control. e.g. \"Validate that unsupported operating systems and software components are not in use.\"",
                            "readOnly": true
                          },
                          "controlDescription": {
                            "type": "string",
                            "description": "The control's description",
                            "readOnly": true
                          },
                          "controlDescriptionHyperLink": {
                            "type": "string",
                            "description": "The hyper link to the control's description'.",
                            "readOnly": true
                          },
                          "controlStatus": {
                            "description": "Control status.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Passed",
                              "Failed",
                              "NotApplicable",
                              "PendingApproval"
                            ],
                            "x-ms-enum": {
                              "name": "ControlStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Passed",
                                  "value": "Passed",
                                  "description": "The control is passed."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "The control is failed."
                                },
                                {
                                  "name": "NotApplicable",
                                  "value": "NotApplicable",
                                  "description": "The control is not applicable."
                                },
                                {
                                  "name": "PendingApproval",
                                  "value": "PendingApproval",
                                  "description": "The control is pending for approval."
                                }
                              ]
                            }
                          },
                          "responsibilities": {
                            "type": "array",
                            "description": "List of customer responsibility.",
                            "items": {
                              "type": "object",
                              "description": "A class represent the customer responsibility.",
                              "properties": {
                                "responsibilityId": {
                                  "type": "string",
                                  "description": "The id of the customer responsibility.",
                                  "readOnly": true
                                },
                                "responsibilityTitle": {
                                  "type": "string",
                                  "description": "The title of the customer responsibility.",
                                  "readOnly": true
                                },
                                "responsibilityDescription": {
                                  "type": "string",
                                  "description": "The description of the customer responsibility.",
                                  "readOnly": true
                                },
                                "responsibilityType": {
                                  "description": "The type of customer responsibility.",
                                  "readOnly": true,
                                  "type": "string",
                                  "enum": [
                                    "Automated",
                                    "ScopedManual",
                                    "Manual"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ResponsibilityType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Automated",
                                        "value": "Automated",
                                        "description": "The responsibility is automated."
                                      },
                                      {
                                        "name": "ScopedManual",
                                        "value": "ScopedManual",
                                        "description": "The responsibility is scoped manual."
                                      },
                                      {
                                        "name": "Manual",
                                        "value": "Manual",
                                        "description": "The responsibility is manual."
                                      }
                                    ]
                                  }
                                },
                                "responsibilitySeverity": {
                                  "description": "The severity level of this customer responsibility.",
                                  "readOnly": true,
                                  "type": "string",
                                  "enum": [
                                    "High",
                                    "Medium",
                                    "Low"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ResponsibilitySeverity",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "High",
                                        "value": "High",
                                        "description": "The responsibility is high severity."
                                      },
                                      {
                                        "name": "Medium",
                                        "value": "Medium",
                                        "description": "The responsibility is medium severity."
                                      },
                                      {
                                        "name": "Low",
                                        "value": "Low",
                                        "description": "The responsibility is low severity."
                                      }
                                    ]
                                  }
                                },
                                "responsibilityStatus": {
                                  "description": "The status of this customer responsibility.",
                                  "readOnly": true,
                                  "type": "string",
                                  "enum": [
                                    "Passed",
                                    "Failed",
                                    "NotApplicable",
                                    "PendingApproval"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ResponsibilityStatus",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Passed",
                                        "value": "Passed",
                                        "description": "The responsibility is passed."
                                      },
                                      {
                                        "name": "Failed",
                                        "value": "Failed",
                                        "description": "The responsibility is failed."
                                      },
                                      {
                                        "name": "NotApplicable",
                                        "value": "NotApplicable",
                                        "description": "The responsibility is not applicable."
                                      },
                                      {
                                        "name": "PendingApproval",
                                        "value": "PendingApproval",
                                        "description": "The responsibility is pending for approval."
                                      }
                                    ]
                                  }
                                },
                                "responsibilityEnvironment": {
                                  "description": "The supported cloud environment of this customer responsibility.",
                                  "readOnly": true,
                                  "type": "string",
                                  "enum": [
                                    "Azure",
                                    "AWS",
                                    "GCP",
                                    "General"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ResponsibilityEnvironment",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Azure",
                                        "value": "Azure",
                                        "description": "The responsibility is supported in Azure."
                                      },
                                      {
                                        "name": "AWS",
                                        "value": "AWS",
                                        "description": "The responsibility is supported in AWS."
                                      },
                                      {
                                        "name": "GCP",
                                        "value": "GCP",
                                        "description": "The responsibility is supported in GCP."
                                      },
                                      {
                                        "name": "General",
                                        "value": "General",
                                        "description": "The responsibility is general requirement of all environment."
                                      }
                                    ]
                                  }
                                },
                                "failedResourceCount": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The count of all failed resources."
                                },
                                "totalResourceCount": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The count of all resources."
                                },
                                "resourceList": {
                                  "type": "array",
                                  "description": "List of resource.",
                                  "items": {
                                    "type": "object",
                                    "description": "A class represent the resource.",
                                    "properties": {
                                      "resourceId": {
                                        "type": "string",
                                        "description": "The Id of the resource.",
                                        "readOnly": true
                                      },
                                      "accountId": {
                                        "type": "string",
                                        "description": "Account Id. For example - AWS account Id.",
                                        "readOnly": true
                                      },
                                      "resourceType": {
                                        "type": "string",
                                        "description": "The type of the resource. e.g. \"Microsoft.SignalRService/SignalR\"",
                                        "readOnly": true
                                      },
                                      "resourceOrigin": {
                                        "description": "Resource origin.",
                                        "readOnly": true,
                                        "type": "string",
                                        "enum": [
                                          "Azure",
                                          "AWS",
                                          "GCP"
                                        ],
                                        "x-ms-enum": {
                                          "name": "ResourceOrigin",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Azure",
                                              "value": "Azure",
                                              "description": "The resource is from Azure."
                                            },
                                            {
                                              "name": "AWS",
                                              "value": "AWS",
                                              "description": "The resource is from AWS."
                                            },
                                            {
                                              "name": "GCP",
                                              "value": "GCP",
                                              "description": "The resource is from GCP."
                                            }
                                          ]
                                        }
                                      },
                                      "resourceStatus": {
                                        "description": "Resource status.",
                                        "readOnly": true,
                                        "type": "string",
                                        "enum": [
                                          "Healthy",
                                          "Unhealthy"
                                        ],
                                        "x-ms-enum": {
                                          "name": "ResourceStatus",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Healthy",
                                              "value": "Healthy",
                                              "description": "The resource is healthy."
                                            },
                                            {
                                              "name": "Unhealthy",
                                              "value": "Unhealthy",
                                              "description": "The resource is unhealthy."
                                            }
                                          ]
                                        }
                                      },
                                      "resourceStatusChangeDate": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The status change date for the resource.",
                                        "readOnly": true
                                      },
                                      "recommendationIds": {
                                        "type": "array",
                                        "description": "List of recommendation id.",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "x-ms-identifiers": [
                                    "resourceId"
                                  ]
                                },
                                "recommendationList": {
                                  "type": "array",
                                  "description": "List of recommendation.",
                                  "items": {
                                    "type": "object",
                                    "description": "A class represent the recommendation.",
                                    "properties": {
                                      "recommendationId": {
                                        "type": "string",
                                        "description": "The Id of the recommendation.",
                                        "readOnly": true
                                      },
                                      "recommendationShortName": {
                                        "type": "string",
                                        "description": "The short name of the recommendation. e.g. \"Invalid TLS config\"",
                                        "readOnly": true
                                      },
                                      "recommendationSolutions": {
                                        "type": "array",
                                        "description": "List of recommendation solutions.",
                                        "items": {
                                          "type": "object",
                                          "description": "A class represent the recommendation solution.",
                                          "properties": {
                                            "recommendationSolutionIndex": {
                                              "type": "string",
                                              "description": "The index of the recommendation solution.",
                                              "readOnly": true
                                            },
                                            "recommendationSolutionContent": {
                                              "type": "string",
                                              "description": "The detail steps of the recommendation solution.",
                                              "readOnly": true
                                            },
                                            "isRecommendSolution": {
                                              "description": "Indicates whether this solution is the recommended.",
                                              "readOnly": true,
                                              "type": "string",
                                              "enum": [
                                                "true",
                                                "false"
                                              ],
                                              "x-ms-enum": {
                                                "name": "IsRecommendSolution",
                                                "modelAsString": true,
                                                "values": [
                                                  {
                                                    "name": "True",
                                                    "value": "true",
                                                    "description": "This solution is the recommended."
                                                  },
                                                  {
                                                    "name": "False",
                                                    "value": "false",
                                                    "description": "This solution is not the recommended."
                                                  }
                                                ]
                                              }
                                            }
                                          }
                                        },
                                        "readOnly": true,
                                        "x-ms-identifiers": [
                                          "recommendationSolutionIndex"
                                        ]
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "x-ms-identifiers": [
                                    "recommendationId"
                                  ]
                                },
                                "guidance": {
                                  "type": "string",
                                  "description": "The evidence upload guidance description.",
                                  "readOnly": true
                                },
                                "justification": {
                                  "type": "string",
                                  "description": "The justification given by the user to clarify the reason.",
                                  "readOnly": true
                                },
                                "evidenceFiles": {
                                  "type": "array",
                                  "description": "List of evidence file url.",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "readOnly": true,
                            "x-ms-identifiers": [
                              "responsibilityId"
                            ]
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "controlId"
                      ]
                    }
                  }
                },
                "readOnly": true,
                "x-ms-identifiers": [
                  "controlFamilyName"
                ]
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "categoryName"
          ]
        }
      }
    },
    "ContentType": {
      "type": "string",
      "description": "content type",
      "enum": [
        "application/json"
      ],
      "x-ms-enum": {
        "name": "ContentType",
        "modelAsString": true,
        "values": [
          {
            "name": "ApplicationJson",
            "value": "application/json",
            "description": "The content type is application/json."
          }
        ]
      }
    },
    "Control": {
      "type": "object",
      "description": "A class represent the control.",
      "properties": {
        "controlId": {
          "type": "string",
          "description": "The Id of the control. e.g. \"Operational_Security_10\"",
          "readOnly": true
        },
        "controlName": {
          "type": "string",
          "description": "The name of the control. e.g. \"Unsupported OS and Software.\"",
          "readOnly": true
        },
        "controlFullName": {
          "type": "string",
          "description": "The full name of the control. e.g. \"Validate that unsupported operating systems and software components are not in use.\"",
          "readOnly": true
        },
        "controlDescription": {
          "type": "string",
          "description": "The control's description",
          "readOnly": true
        },
        "controlDescriptionHyperLink": {
          "type": "string",
          "description": "The hyper link to the control's description'.",
          "readOnly": true
        },
        "controlStatus": {
          "description": "Control status.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Passed",
            "Failed",
            "NotApplicable",
            "PendingApproval"
          ],
          "x-ms-enum": {
            "name": "ControlStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Passed",
                "value": "Passed",
                "description": "The control is passed."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "The control is failed."
              },
              {
                "name": "NotApplicable",
                "value": "NotApplicable",
                "description": "The control is not applicable."
              },
              {
                "name": "PendingApproval",
                "value": "PendingApproval",
                "description": "The control is pending for approval."
              }
            ]
          }
        },
        "responsibilities": {
          "type": "array",
          "description": "List of customer responsibility.",
          "items": {
            "type": "object",
            "description": "A class represent the customer responsibility.",
            "properties": {
              "responsibilityId": {
                "type": "string",
                "description": "The id of the customer responsibility.",
                "readOnly": true
              },
              "responsibilityTitle": {
                "type": "string",
                "description": "The title of the customer responsibility.",
                "readOnly": true
              },
              "responsibilityDescription": {
                "type": "string",
                "description": "The description of the customer responsibility.",
                "readOnly": true
              },
              "responsibilityType": {
                "description": "The type of customer responsibility.",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "Automated",
                  "ScopedManual",
                  "Manual"
                ],
                "x-ms-enum": {
                  "name": "ResponsibilityType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Automated",
                      "value": "Automated",
                      "description": "The responsibility is automated."
                    },
                    {
                      "name": "ScopedManual",
                      "value": "ScopedManual",
                      "description": "The responsibility is scoped manual."
                    },
                    {
                      "name": "Manual",
                      "value": "Manual",
                      "description": "The responsibility is manual."
                    }
                  ]
                }
              },
              "responsibilitySeverity": {
                "description": "The severity level of this customer responsibility.",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "High",
                  "Medium",
                  "Low"
                ],
                "x-ms-enum": {
                  "name": "ResponsibilitySeverity",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "High",
                      "value": "High",
                      "description": "The responsibility is high severity."
                    },
                    {
                      "name": "Medium",
                      "value": "Medium",
                      "description": "The responsibility is medium severity."
                    },
                    {
                      "name": "Low",
                      "value": "Low",
                      "description": "The responsibility is low severity."
                    }
                  ]
                }
              },
              "responsibilityStatus": {
                "description": "The status of this customer responsibility.",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "Passed",
                  "Failed",
                  "NotApplicable",
                  "PendingApproval"
                ],
                "x-ms-enum": {
                  "name": "ResponsibilityStatus",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Passed",
                      "value": "Passed",
                      "description": "The responsibility is passed."
                    },
                    {
                      "name": "Failed",
                      "value": "Failed",
                      "description": "The responsibility is failed."
                    },
                    {
                      "name": "NotApplicable",
                      "value": "NotApplicable",
                      "description": "The responsibility is not applicable."
                    },
                    {
                      "name": "PendingApproval",
                      "value": "PendingApproval",
                      "description": "The responsibility is pending for approval."
                    }
                  ]
                }
              },
              "responsibilityEnvironment": {
                "description": "The supported cloud environment of this customer responsibility.",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "Azure",
                  "AWS",
                  "GCP",
                  "General"
                ],
                "x-ms-enum": {
                  "name": "ResponsibilityEnvironment",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Azure",
                      "value": "Azure",
                      "description": "The responsibility is supported in Azure."
                    },
                    {
                      "name": "AWS",
                      "value": "AWS",
                      "description": "The responsibility is supported in AWS."
                    },
                    {
                      "name": "GCP",
                      "value": "GCP",
                      "description": "The responsibility is supported in GCP."
                    },
                    {
                      "name": "General",
                      "value": "General",
                      "description": "The responsibility is general requirement of all environment."
                    }
                  ]
                }
              },
              "failedResourceCount": {
                "type": "integer",
                "format": "int32",
                "description": "The count of all failed resources."
              },
              "totalResourceCount": {
                "type": "integer",
                "format": "int32",
                "description": "The count of all resources."
              },
              "resourceList": {
                "type": "array",
                "description": "List of resource.",
                "items": {
                  "type": "object",
                  "description": "A class represent the resource.",
                  "properties": {
                    "resourceId": {
                      "type": "string",
                      "description": "The Id of the resource.",
                      "readOnly": true
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Account Id. For example - AWS account Id.",
                      "readOnly": true
                    },
                    "resourceType": {
                      "type": "string",
                      "description": "The type of the resource. e.g. \"Microsoft.SignalRService/SignalR\"",
                      "readOnly": true
                    },
                    "resourceOrigin": {
                      "description": "Resource origin.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Azure",
                        "AWS",
                        "GCP"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceOrigin",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Azure",
                            "value": "Azure",
                            "description": "The resource is from Azure."
                          },
                          {
                            "name": "AWS",
                            "value": "AWS",
                            "description": "The resource is from AWS."
                          },
                          {
                            "name": "GCP",
                            "value": "GCP",
                            "description": "The resource is from GCP."
                          }
                        ]
                      }
                    },
                    "resourceStatus": {
                      "description": "Resource status.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Healthy",
                        "Unhealthy"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Healthy",
                            "value": "Healthy",
                            "description": "The resource is healthy."
                          },
                          {
                            "name": "Unhealthy",
                            "value": "Unhealthy",
                            "description": "The resource is unhealthy."
                          }
                        ]
                      }
                    },
                    "resourceStatusChangeDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The status change date for the resource.",
                      "readOnly": true
                    },
                    "recommendationIds": {
                      "type": "array",
                      "description": "List of recommendation id.",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "readOnly": true,
                "x-ms-identifiers": [
                  "resourceId"
                ]
              },
              "recommendationList": {
                "type": "array",
                "description": "List of recommendation.",
                "items": {
                  "type": "object",
                  "description": "A class represent the recommendation.",
                  "properties": {
                    "recommendationId": {
                      "type": "string",
                      "description": "The Id of the recommendation.",
                      "readOnly": true
                    },
                    "recommendationShortName": {
                      "type": "string",
                      "description": "The short name of the recommendation. e.g. \"Invalid TLS config\"",
                      "readOnly": true
                    },
                    "recommendationSolutions": {
                      "type": "array",
                      "description": "List of recommendation solutions.",
                      "items": {
                        "type": "object",
                        "description": "A class represent the recommendation solution.",
                        "properties": {
                          "recommendationSolutionIndex": {
                            "type": "string",
                            "description": "The index of the recommendation solution.",
                            "readOnly": true
                          },
                          "recommendationSolutionContent": {
                            "type": "string",
                            "description": "The detail steps of the recommendation solution.",
                            "readOnly": true
                          },
                          "isRecommendSolution": {
                            "description": "Indicates whether this solution is the recommended.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "true",
                              "false"
                            ],
                            "x-ms-enum": {
                              "name": "IsRecommendSolution",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "True",
                                  "value": "true",
                                  "description": "This solution is the recommended."
                                },
                                {
                                  "name": "False",
                                  "value": "false",
                                  "description": "This solution is not the recommended."
                                }
                              ]
                            }
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "recommendationSolutionIndex"
                      ]
                    }
                  }
                },
                "readOnly": true,
                "x-ms-identifiers": [
                  "recommendationId"
                ]
              },
              "guidance": {
                "type": "string",
                "description": "The evidence upload guidance description.",
                "readOnly": true
              },
              "justification": {
                "type": "string",
                "description": "The justification given by the user to clarify the reason.",
                "readOnly": true
              },
              "evidenceFiles": {
                "type": "array",
                "description": "List of evidence file url.",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "responsibilityId"
          ]
        }
      }
    },
    "ControlFamily": {
      "type": "object",
      "description": "A class represent the control family.",
      "properties": {
        "controlFamilyName": {
          "type": "string",
          "description": "The name of the control family. e.g. \"Malware Protection - Anti-Virus\"",
          "readOnly": true
        },
        "controlFamilyStatus": {
          "description": "The control family status",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Passed",
            "Failed",
            "NotApplicable",
            "PendingApproval"
          ],
          "x-ms-enum": {
            "name": "ControlFamilyStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Passed",
                "value": "Passed",
                "description": "The control family is passed."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "The control family is failed."
              },
              {
                "name": "NotApplicable",
                "value": "NotApplicable",
                "description": "The control family is not applicable."
              },
              {
                "name": "PendingApproval",
                "value": "PendingApproval",
                "description": "The control family is pending for approval."
              }
            ]
          }
        },
        "controls": {
          "type": "array",
          "description": "List of controls.",
          "items": {
            "type": "object",
            "description": "A class represent the control.",
            "properties": {
              "controlId": {
                "type": "string",
                "description": "The Id of the control. e.g. \"Operational_Security_10\"",
                "readOnly": true
              },
              "controlName": {
                "type": "string",
                "description": "The name of the control. e.g. \"Unsupported OS and Software.\"",
                "readOnly": true
              },
              "controlFullName": {
                "type": "string",
                "description": "The full name of the control. e.g. \"Validate that unsupported operating systems and software components are not in use.\"",
                "readOnly": true
              },
              "controlDescription": {
                "type": "string",
                "description": "The control's description",
                "readOnly": true
              },
              "controlDescriptionHyperLink": {
                "type": "string",
                "description": "The hyper link to the control's description'.",
                "readOnly": true
              },
              "controlStatus": {
                "description": "Control status.",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "Passed",
                  "Failed",
                  "NotApplicable",
                  "PendingApproval"
                ],
                "x-ms-enum": {
                  "name": "ControlStatus",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Passed",
                      "value": "Passed",
                      "description": "The control is passed."
                    },
                    {
                      "name": "Failed",
                      "value": "Failed",
                      "description": "The control is failed."
                    },
                    {
                      "name": "NotApplicable",
                      "value": "NotApplicable",
                      "description": "The control is not applicable."
                    },
                    {
                      "name": "PendingApproval",
                      "value": "PendingApproval",
                      "description": "The control is pending for approval."
                    }
                  ]
                }
              },
              "responsibilities": {
                "type": "array",
                "description": "List of customer responsibility.",
                "items": {
                  "type": "object",
                  "description": "A class represent the customer responsibility.",
                  "properties": {
                    "responsibilityId": {
                      "type": "string",
                      "description": "The id of the customer responsibility.",
                      "readOnly": true
                    },
                    "responsibilityTitle": {
                      "type": "string",
                      "description": "The title of the customer responsibility.",
                      "readOnly": true
                    },
                    "responsibilityDescription": {
                      "type": "string",
                      "description": "The description of the customer responsibility.",
                      "readOnly": true
                    },
                    "responsibilityType": {
                      "description": "The type of customer responsibility.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Automated",
                        "ScopedManual",
                        "Manual"
                      ],
                      "x-ms-enum": {
                        "name": "ResponsibilityType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Automated",
                            "value": "Automated",
                            "description": "The responsibility is automated."
                          },
                          {
                            "name": "ScopedManual",
                            "value": "ScopedManual",
                            "description": "The responsibility is scoped manual."
                          },
                          {
                            "name": "Manual",
                            "value": "Manual",
                            "description": "The responsibility is manual."
                          }
                        ]
                      }
                    },
                    "responsibilitySeverity": {
                      "description": "The severity level of this customer responsibility.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "High",
                        "Medium",
                        "Low"
                      ],
                      "x-ms-enum": {
                        "name": "ResponsibilitySeverity",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "High",
                            "value": "High",
                            "description": "The responsibility is high severity."
                          },
                          {
                            "name": "Medium",
                            "value": "Medium",
                            "description": "The responsibility is medium severity."
                          },
                          {
                            "name": "Low",
                            "value": "Low",
                            "description": "The responsibility is low severity."
                          }
                        ]
                      }
                    },
                    "responsibilityStatus": {
                      "description": "The status of this customer responsibility.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Passed",
                        "Failed",
                        "NotApplicable",
                        "PendingApproval"
                      ],
                      "x-ms-enum": {
                        "name": "ResponsibilityStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Passed",
                            "value": "Passed",
                            "description": "The responsibility is passed."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The responsibility is failed."
                          },
                          {
                            "name": "NotApplicable",
                            "value": "NotApplicable",
                            "description": "The responsibility is not applicable."
                          },
                          {
                            "name": "PendingApproval",
                            "value": "PendingApproval",
                            "description": "The responsibility is pending for approval."
                          }
                        ]
                      }
                    },
                    "responsibilityEnvironment": {
                      "description": "The supported cloud environment of this customer responsibility.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Azure",
                        "AWS",
                        "GCP",
                        "General"
                      ],
                      "x-ms-enum": {
                        "name": "ResponsibilityEnvironment",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Azure",
                            "value": "Azure",
                            "description": "The responsibility is supported in Azure."
                          },
                          {
                            "name": "AWS",
                            "value": "AWS",
                            "description": "The responsibility is supported in AWS."
                          },
                          {
                            "name": "GCP",
                            "value": "GCP",
                            "description": "The responsibility is supported in GCP."
                          },
                          {
                            "name": "General",
                            "value": "General",
                            "description": "The responsibility is general requirement of all environment."
                          }
                        ]
                      }
                    },
                    "failedResourceCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The count of all failed resources."
                    },
                    "totalResourceCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The count of all resources."
                    },
                    "resourceList": {
                      "type": "array",
                      "description": "List of resource.",
                      "items": {
                        "type": "object",
                        "description": "A class represent the resource.",
                        "properties": {
                          "resourceId": {
                            "type": "string",
                            "description": "The Id of the resource.",
                            "readOnly": true
                          },
                          "accountId": {
                            "type": "string",
                            "description": "Account Id. For example - AWS account Id.",
                            "readOnly": true
                          },
                          "resourceType": {
                            "type": "string",
                            "description": "The type of the resource. e.g. \"Microsoft.SignalRService/SignalR\"",
                            "readOnly": true
                          },
                          "resourceOrigin": {
                            "description": "Resource origin.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Azure",
                              "AWS",
                              "GCP"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceOrigin",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Azure",
                                  "value": "Azure",
                                  "description": "The resource is from Azure."
                                },
                                {
                                  "name": "AWS",
                                  "value": "AWS",
                                  "description": "The resource is from AWS."
                                },
                                {
                                  "name": "GCP",
                                  "value": "GCP",
                                  "description": "The resource is from GCP."
                                }
                              ]
                            }
                          },
                          "resourceStatus": {
                            "description": "Resource status.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Healthy",
                              "Unhealthy"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Healthy",
                                  "value": "Healthy",
                                  "description": "The resource is healthy."
                                },
                                {
                                  "name": "Unhealthy",
                                  "value": "Unhealthy",
                                  "description": "The resource is unhealthy."
                                }
                              ]
                            }
                          },
                          "resourceStatusChangeDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The status change date for the resource.",
                            "readOnly": true
                          },
                          "recommendationIds": {
                            "type": "array",
                            "description": "List of recommendation id.",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "resourceId"
                      ]
                    },
                    "recommendationList": {
                      "type": "array",
                      "description": "List of recommendation.",
                      "items": {
                        "type": "object",
                        "description": "A class represent the recommendation.",
                        "properties": {
                          "recommendationId": {
                            "type": "string",
                            "description": "The Id of the recommendation.",
                            "readOnly": true
                          },
                          "recommendationShortName": {
                            "type": "string",
                            "description": "The short name of the recommendation. e.g. \"Invalid TLS config\"",
                            "readOnly": true
                          },
                          "recommendationSolutions": {
                            "type": "array",
                            "description": "List of recommendation solutions.",
                            "items": {
                              "type": "object",
                              "description": "A class represent the recommendation solution.",
                              "properties": {
                                "recommendationSolutionIndex": {
                                  "type": "string",
                                  "description": "The index of the recommendation solution.",
                                  "readOnly": true
                                },
                                "recommendationSolutionContent": {
                                  "type": "string",
                                  "description": "The detail steps of the recommendation solution.",
                                  "readOnly": true
                                },
                                "isRecommendSolution": {
                                  "description": "Indicates whether this solution is the recommended.",
                                  "readOnly": true,
                                  "type": "string",
                                  "enum": [
                                    "true",
                                    "false"
                                  ],
                                  "x-ms-enum": {
                                    "name": "IsRecommendSolution",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "True",
                                        "value": "true",
                                        "description": "This solution is the recommended."
                                      },
                                      {
                                        "name": "False",
                                        "value": "false",
                                        "description": "This solution is not the recommended."
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "readOnly": true,
                            "x-ms-identifiers": [
                              "recommendationSolutionIndex"
                            ]
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "recommendationId"
                      ]
                    },
                    "guidance": {
                      "type": "string",
                      "description": "The evidence upload guidance description.",
                      "readOnly": true
                    },
                    "justification": {
                      "type": "string",
                      "description": "The justification given by the user to clarify the reason.",
                      "readOnly": true
                    },
                    "evidenceFiles": {
                      "type": "array",
                      "description": "List of evidence file url.",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "readOnly": true,
                "x-ms-identifiers": [
                  "responsibilityId"
                ]
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "controlId"
          ]
        }
      }
    },
    "ControlFamilyStatus": {
      "type": "string",
      "description": "Indicates the control family status.",
      "enum": [
        "Passed",
        "Failed",
        "NotApplicable",
        "PendingApproval"
      ],
      "x-ms-enum": {
        "name": "ControlFamilyStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Passed",
            "value": "Passed",
            "description": "The control family is passed."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The control family is failed."
          },
          {
            "name": "NotApplicable",
            "value": "NotApplicable",
            "description": "The control family is not applicable."
          },
          {
            "name": "PendingApproval",
            "value": "PendingApproval",
            "description": "The control family is pending for approval."
          }
        ]
      }
    },
    "ControlStatus": {
      "type": "string",
      "description": "Indicates the control status.",
      "enum": [
        "Passed",
        "Failed",
        "NotApplicable",
        "PendingApproval"
      ],
      "x-ms-enum": {
        "name": "ControlStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Passed",
            "value": "Passed",
            "description": "The control is passed."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The control is failed."
          },
          {
            "name": "NotApplicable",
            "value": "NotApplicable",
            "description": "The control is not applicable."
          },
          {
            "name": "PendingApproval",
            "value": "PendingApproval",
            "description": "The control is pending for approval."
          }
        ]
      }
    },
    "ControlSyncRecord": {
      "type": "object",
      "description": "A class represent the control record synchronized from app compliance.",
      "properties": {
        "controlId": {
          "type": "string",
          "description": "The Id of the control. e.g. \"Operational_Security_10\""
        },
        "controlStatus": {
          "type": "string",
          "description": "Control status synchronized from app compliance."
        }
      }
    },
    "DeliveryStatus": {
      "type": "string",
      "description": "webhook deliveryStatus",
      "enum": [
        "Succeeded",
        "Failed",
        "NotStarted"
      ],
      "x-ms-enum": {
        "name": "DeliveryStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "The webhook is delivered successfully."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The webhook is failed to deliver."
          },
          {
            "name": "NotStarted",
            "value": "NotStarted",
            "description": "The webhook is not delivered."
          }
        ]
      },
      "readOnly": true
    },
    "DownloadResponse": {
      "type": "object",
      "description": "Object that includes all the possible response for the download operation.",
      "properties": {
        "resourceList": {
          "type": "array",
          "description": "Resource list of the report",
          "items": {
            "type": "object",
            "description": "Resource Id.",
            "properties": {
              "subscriptionId": {
                "type": "string",
                "description": "The subscription Id of this resource.",
                "readOnly": true
              },
              "resourceGroup": {
                "type": "string",
                "description": "The resource group name of this resource.",
                "readOnly": true
              },
              "resourceType": {
                "type": "string",
                "description": "The resource type of this resource. e.g. \"Microsoft.SignalRService/SignalR\"",
                "readOnly": true
              },
              "resourceId": {
                "type": "string",
                "description": "The resource Id - e.g. \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1\".",
                "readOnly": true
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "resourceId"
          ]
        },
        "complianceReport": {
          "type": "array",
          "description": "List of the compliance result",
          "items": {
            "type": "object",
            "description": "Object that includes all the content for single compliance result.",
            "properties": {
              "categoryName": {
                "type": "string",
                "description": "The category name.",
                "readOnly": true
              },
              "controlFamilyName": {
                "type": "string",
                "description": "The control family name.",
                "readOnly": true
              },
              "controlId": {
                "type": "string",
                "description": "The control Id - e.g. \"1\".",
                "readOnly": true
              },
              "controlName": {
                "type": "string",
                "description": "The control name.",
                "readOnly": true
              },
              "controlStatus": {
                "description": "Control status.",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "Passed",
                  "Failed",
                  "NotApplicable",
                  "PendingApproval"
                ],
                "x-ms-enum": {
                  "name": "ControlStatus",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Passed",
                      "value": "Passed",
                      "description": "The control is passed."
                    },
                    {
                      "name": "Failed",
                      "value": "Failed",
                      "description": "The control is failed."
                    },
                    {
                      "name": "NotApplicable",
                      "value": "NotApplicable",
                      "description": "The control is not applicable."
                    },
                    {
                      "name": "PendingApproval",
                      "value": "PendingApproval",
                      "description": "The control is pending for approval."
                    }
                  ]
                }
              },
              "responsibilityTitle": {
                "type": "string",
                "description": "The title of the customer responsibility.",
                "readOnly": true
              },
              "responsibilityDescription": {
                "type": "string",
                "description": "The description of the customer responsibility.",
                "readOnly": true
              },
              "resourceId": {
                "type": "string",
                "description": "The Id of the resource.",
                "readOnly": true
              },
              "resourceType": {
                "type": "string",
                "description": "The type of the resource.  e.g. \"Microsoft.SignalRService/SignalR\"",
                "readOnly": true
              },
              "resourceOrigin": {
                "description": "Resource origin.",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "Azure",
                  "AWS",
                  "GCP"
                ],
                "x-ms-enum": {
                  "name": "ResourceOrigin",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Azure",
                      "value": "Azure",
                      "description": "The resource is from Azure."
                    },
                    {
                      "name": "AWS",
                      "value": "AWS",
                      "description": "The resource is from AWS."
                    },
                    {
                      "name": "GCP",
                      "value": "GCP",
                      "description": "The resource is from GCP."
                    }
                  ]
                }
              },
              "resourceStatus": {
                "description": "Resource status.",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "Healthy",
                  "Unhealthy"
                ],
                "x-ms-enum": {
                  "name": "ResourceStatus",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Healthy",
                      "value": "Healthy",
                      "description": "The resource is healthy."
                    },
                    {
                      "name": "Unhealthy",
                      "value": "Unhealthy",
                      "description": "The resource is unhealthy."
                    }
                  ]
                }
              },
              "resourceStatusChangeDate": {
                "type": "string",
                "format": "date-time",
                "description": "The status change date for the resource.",
                "readOnly": true
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "controlId"
          ]
        },
        "compliancePdfReport": {
          "description": "Compliance pdf report",
          "readOnly": true,
          "type": "object",
          "properties": {
            "sasUri": {
              "type": "string",
              "description": "The uri of compliance pdf report",
              "readOnly": true
            }
          }
        },
        "complianceDetailedPdfReport": {
          "description": "The detailed compliance pdf report",
          "readOnly": true,
          "type": "object",
          "properties": {
            "sasUri": {
              "type": "string",
              "description": "The uri of detailed compliance pdf report",
              "readOnly": true
            }
          }
        }
      }
    },
    "DownloadResponseComplianceDetailedPdfReport": {
      "type": "object",
      "description": "The detailed compliance pdf report",
      "properties": {
        "sasUri": {
          "type": "string",
          "description": "The uri of detailed compliance pdf report",
          "readOnly": true
        }
      }
    },
    "DownloadResponseCompliancePdfReport": {
      "type": "object",
      "description": "Compliance pdf report",
      "properties": {
        "sasUri": {
          "type": "string",
          "description": "The uri of compliance pdf report",
          "readOnly": true
        }
      }
    },
    "DownloadType": {
      "type": "string",
      "description": "Indicates the download type.",
      "enum": [
        "ComplianceReport",
        "CompliancePdfReport",
        "ComplianceDetailedPdfReport",
        "ResourceList"
      ],
      "x-ms-enum": {
        "name": "DownloadType",
        "modelAsString": true,
        "values": [
          {
            "name": "ComplianceReport",
            "value": "ComplianceReport",
            "description": "Download the compliance report."
          },
          {
            "name": "CompliancePdfReport",
            "value": "CompliancePdfReport",
            "description": "Download the compliance pdf report."
          },
          {
            "name": "ComplianceDetailedPdfReport",
            "value": "ComplianceDetailedPdfReport",
            "description": "Download the detailed compliance pdf report."
          },
          {
            "name": "ResourceList",
            "value": "ResourceList",
            "description": "Download the resource list of the report."
          }
        ]
      }
    },
    "EnableSslVerification": {
      "type": "string",
      "description": "whether to enable ssl verification",
      "enum": [
        "true",
        "false"
      ],
      "x-ms-enum": {
        "name": "EnableSslVerification",
        "modelAsString": true,
        "values": [
          {
            "name": "True",
            "value": "true",
            "description": "The ssl verification is enabled."
          },
          {
            "name": "False",
            "value": "false",
            "description": "The ssl verification is not enabled."
          }
        ]
      }
    },
    "EvidenceFileDownloadRequest": {
      "type": "object",
      "description": "Evidence file's download request.",
      "properties": {
        "reportCreatorTenantId": {
          "type": "string",
          "description": "Tenant id."
        },
        "offerGuid": {
          "type": "string",
          "description": "The offerGuid which mapping to the reports.",
          "minLength": 1
        }
      }
    },
    "EvidenceFileDownloadResponse": {
      "type": "object",
      "description": "Object that includes all the possible response for the evidence file download operation.",
      "properties": {
        "evidenceFile": {
          "description": "The uri of evidence file",
          "readOnly": true,
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "The url of evidence file",
              "readOnly": true
            }
          }
        }
      }
    },
    "EvidenceFileDownloadResponseEvidenceFile": {
      "type": "object",
      "description": "The uri of evidence file",
      "properties": {
        "url": {
          "type": "string",
          "description": "The url of evidence file",
          "readOnly": true
        }
      }
    },
    "EvidenceProperties": {
      "type": "object",
      "description": "Evidence's properties.",
      "properties": {
        "evidenceType": {
          "description": "Evidence type.",
          "type": "string",
          "enum": [
            "File",
            "AutoCollectedEvidence",
            "Data"
          ],
          "x-ms-enum": {
            "name": "EvidenceType",
            "modelAsString": true,
            "values": [
              {
                "name": "File",
                "value": "File",
                "description": "The evidence is a file."
              },
              {
                "name": "AutoCollectedEvidence",
                "value": "AutoCollectedEvidence",
                "description": "The evidence auto collected by App Compliance Automation."
              },
              {
                "name": "Data",
                "value": "Data",
                "description": "The evidence is data."
              }
            ]
          }
        },
        "filePath": {
          "type": "string",
          "description": "The path of the file in storage."
        },
        "extraData": {
          "type": "string",
          "description": "Extra data considered as evidence."
        },
        "controlId": {
          "type": "string",
          "description": "Control id."
        },
        "responsibilityId": {
          "type": "string",
          "description": "Responsibility id."
        },
        "provisioningState": {
          "description": "Azure lifecycle management",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Creating",
            "Deleting",
            "Fixing",
            "Verifying",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "The provision is succeeded."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "The provision is failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "The provision is canceled."
              },
              {
                "name": "Creating",
                "value": "Creating",
                "description": "The creation is in progress."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "The deletion is in progress."
              },
              {
                "name": "Fixing",
                "value": "Fixing",
                "description": "The fix of the resource in progress."
              },
              {
                "name": "Verifying",
                "value": "Verifying",
                "description": "The verification of the resource in progress."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "The update of the resource in progress."
              }
            ]
          }
        }
      },
      "required": [
        "filePath"
      ]
    },
    "EvidenceResource": {
      "type": "object",
      "description": "A class represent an AppComplianceAutomation evidence resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "Evidence property.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "evidenceType": {
              "description": "Evidence type.",
              "type": "string",
              "enum": [
                "File",
                "AutoCollectedEvidence",
                "Data"
              ],
              "x-ms-enum": {
                "name": "EvidenceType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "File",
                    "value": "File",
                    "description": "The evidence is a file."
                  },
                  {
                    "name": "AutoCollectedEvidence",
                    "value": "AutoCollectedEvidence",
                    "description": "The evidence auto collected by App Compliance Automation."
                  },
                  {
                    "name": "Data",
                    "value": "Data",
                    "description": "The evidence is data."
                  }
                ]
              }
            },
            "filePath": {
              "type": "string",
              "description": "The path of the file in storage."
            },
            "extraData": {
              "type": "string",
              "description": "Extra data considered as evidence."
            },
            "controlId": {
              "type": "string",
              "description": "Control id."
            },
            "responsibilityId": {
              "type": "string",
              "description": "Responsibility id."
            },
            "provisioningState": {
              "description": "Azure lifecycle management",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Creating",
                "Deleting",
                "Fixing",
                "Verifying",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "The provision is succeeded."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "The provision is failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "The provision is canceled."
                  },
                  {
                    "name": "Creating",
                    "value": "Creating",
                    "description": "The creation is in progress."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "The deletion is in progress."
                  },
                  {
                    "name": "Fixing",
                    "value": "Fixing",
                    "description": "The fix of the resource in progress."
                  },
                  {
                    "name": "Verifying",
                    "value": "Verifying",
                    "description": "The verification of the resource in progress."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "The update of the resource in progress."
                  }
                ]
              }
            }
          },
          "required": [
            "filePath"
          ]
        }
      },
      "required": [
        "properties"
      ]
    },
    "EvidenceResourceListResult": {
      "type": "object",
      "description": "The response of a EvidenceResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EvidenceResource items on this page",
          "items": {
            "type": "object",
            "description": "A class represent an AppComplianceAutomation evidence resource.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Evidence property.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "evidenceType": {
                    "description": "Evidence type.",
                    "type": "string",
                    "enum": [
                      "File",
                      "AutoCollectedEvidence",
                      "Data"
                    ],
                    "x-ms-enum": {
                      "name": "EvidenceType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "File",
                          "value": "File",
                          "description": "The evidence is a file."
                        },
                        {
                          "name": "AutoCollectedEvidence",
                          "value": "AutoCollectedEvidence",
                          "description": "The evidence auto collected by App Compliance Automation."
                        },
                        {
                          "name": "Data",
                          "value": "Data",
                          "description": "The evidence is data."
                        }
                      ]
                    }
                  },
                  "filePath": {
                    "type": "string",
                    "description": "The path of the file in storage."
                  },
                  "extraData": {
                    "type": "string",
                    "description": "Extra data considered as evidence."
                  },
                  "controlId": {
                    "type": "string",
                    "description": "Control id."
                  },
                  "responsibilityId": {
                    "type": "string",
                    "description": "Responsibility id."
                  },
                  "provisioningState": {
                    "description": "Azure lifecycle management",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Creating",
                      "Deleting",
                      "Fixing",
                      "Verifying",
                      "Updating"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "The provision is succeeded."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "The provision is failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "The provision is canceled."
                        },
                        {
                          "name": "Creating",
                          "value": "Creating",
                          "description": "The creation is in progress."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "The deletion is in progress."
                        },
                        {
                          "name": "Fixing",
                          "value": "Fixing",
                          "description": "The fix of the resource in progress."
                        },
                        {
                          "name": "Verifying",
                          "value": "Verifying",
                          "description": "The verification of the resource in progress."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "The update of the resource in progress."
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "filePath"
                ]
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EvidenceType": {
      "type": "string",
      "description": "Evidence type",
      "enum": [
        "File",
        "AutoCollectedEvidence",
        "Data"
      ],
      "x-ms-enum": {
        "name": "EvidenceType",
        "modelAsString": true,
        "values": [
          {
            "name": "File",
            "value": "File",
            "description": "The evidence is a file."
          },
          {
            "name": "AutoCollectedEvidence",
            "value": "AutoCollectedEvidence",
            "description": "The evidence auto collected by App Compliance Automation."
          },
          {
            "name": "Data",
            "value": "Data",
            "description": "The evidence is data."
          }
        ]
      }
    },
    "GetCollectionCountRequest": {
      "type": "object",
      "description": "Get collection count's request object.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "GetCollectionCountResponse": {
      "type": "object",
      "description": "The get collection count response.",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The count of the specified resource."
        }
      }
    },
    "GetOverviewStatusRequest": {
      "type": "object",
      "description": "Get overview status request object.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "GetOverviewStatusResponse": {
      "type": "object",
      "description": "The get overview status response.",
      "properties": {
        "statusList": {
          "type": "array",
          "description": "List of different status items.",
          "items": {
            "type": "object",
            "description": "Single status.",
            "properties": {
              "statusName": {
                "type": "string",
                "description": "Status name - e.g. \"Active\", \"Failed\"."
              },
              "statusValue": {
                "type": "string",
                "description": "Status value. e.g. \"100\", or \"100%\"."
              }
            }
          },
          "x-ms-identifiers": [
            "statusName"
          ]
        }
      }
    },
    "InputType": {
      "type": "string",
      "description": "Question input type.",
      "enum": [
        "None",
        "Text",
        "Email",
        "MultilineText",
        "Url",
        "Number",
        "Boolean",
        "Telephone",
        "YesNoNa",
        "Date",
        "YearPicker",
        "SingleSelection",
        "SingleSelectDropdown",
        "MultiSelectCheckbox",
        "MultiSelectDropdown",
        "MultiSelectDropdownCustom",
        "Group",
        "Upload"
      ],
      "x-ms-enum": {
        "name": "InputType",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "The input type is a text box."
          },
          {
            "name": "Text",
            "value": "Text",
            "description": "The input content is text string."
          },
          {
            "name": "Email",
            "value": "Email",
            "description": "The input content should be an email address."
          },
          {
            "name": "MultilineText",
            "value": "MultilineText",
            "description": "The input content should be multiline text."
          },
          {
            "name": "Url",
            "value": "Url",
            "description": "The input content should be a URL."
          },
          {
            "name": "Number",
            "value": "Number",
            "description": "The input content should be a number."
          },
          {
            "name": "Boolean",
            "value": "Boolean",
            "description": "The input content should be a boolean."
          },
          {
            "name": "Telephone",
            "value": "Telephone",
            "description": "The input content should be a telephone number."
          },
          {
            "name": "YesNoNa",
            "value": "YesNoNa",
            "description": "The input content should be Yes, No or Na."
          },
          {
            "name": "Date",
            "value": "Date",
            "description": "The input content should be a date."
          },
          {
            "name": "YearPicker",
            "value": "YearPicker",
            "description": "The input content is a Year, pick from the dropdown list."
          },
          {
            "name": "SingleSelection",
            "value": "SingleSelection",
            "description": "The input content is a single result seleted from the options."
          },
          {
            "name": "SingleSelectDropdown",
            "value": "SingleSelectDropdown",
            "description": "The input content is a single result seleted from the dropdown options."
          },
          {
            "name": "MultiSelectCheckbox",
            "value": "MultiSelectCheckbox",
            "description": "The input content are multiple results seleted from the checkboxes."
          },
          {
            "name": "MultiSelectDropdown",
            "value": "MultiSelectDropdown",
            "description": "The input content are multiple results seleted from the dropdown options."
          },
          {
            "name": "MultiSelectDropdownCustom",
            "value": "MultiSelectDropdownCustom",
            "description": "The input content are result seleted from the custom dropdown options."
          },
          {
            "name": "Group",
            "value": "Group",
            "description": "The input content is a group of answers."
          },
          {
            "name": "Upload",
            "value": "Upload",
            "description": "The input content is a uploaded file."
          }
        ]
      }
    },
    "IsRecommendSolution": {
      "type": "string",
      "description": "Indicates whether this solution is the recommended.",
      "enum": [
        "true",
        "false"
      ],
      "x-ms-enum": {
        "name": "IsRecommendSolution",
        "modelAsString": true,
        "values": [
          {
            "name": "True",
            "value": "true",
            "description": "This solution is the recommended."
          },
          {
            "name": "False",
            "value": "false",
            "description": "This solution is not the recommended."
          }
        ]
      }
    },
    "ListInUseStorageAccountsRequest": {
      "type": "object",
      "description": "Parameters for listing in use storage accounts operation. If subscription list is null, it will check the user's all subscriptions.",
      "properties": {
        "subscriptionIds": {
          "type": "array",
          "description": "List of subscription ids to be query. If the list is null or empty, the API will query all the subscriptions of the user.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ListInUseStorageAccountsResponse": {
      "type": "object",
      "description": "Parameters for listing in use storage accounts operation. If subscription list is null, it will check the user's all subscriptions.",
      "properties": {
        "storageAccountList": {
          "type": "array",
          "description": "The storage account list which in use in related reports.",
          "items": {
            "type": "object",
            "description": "The information of 'bring your own storage' account binding to the report",
            "properties": {
              "subscriptionId": {
                "type": "string",
                "description": "The subscription id which 'bring your own storage' account belongs to"
              },
              "resourceGroup": {
                "type": "string",
                "description": "The resourceGroup which 'bring your own storage' account belongs to"
              },
              "accountName": {
                "type": "string",
                "description": "'bring your own storage' account name"
              },
              "location": {
                "type": "string",
                "description": "The region of 'bring your own storage' account"
              }
            }
          },
          "x-ms-identifiers": [
            "accountName"
          ]
        }
      }
    },
    "NotificationEvent": {
      "type": "string",
      "description": "notification event.",
      "enum": [
        "generate_snapshot_success",
        "generate_snapshot_failed",
        "assessment_failure",
        "report_configuration_changes",
        "report_deletion"
      ],
      "x-ms-enum": {
        "name": "NotificationEvent",
        "modelAsString": true,
        "values": [
          {
            "name": "generate_snapshot_success",
            "value": "generate_snapshot_success",
            "description": "The subscribed report's snapshot is successfully generated."
          },
          {
            "name": "generate_snapshot_failed",
            "value": "generate_snapshot_failed",
            "description": "The subscribed report's snapshot is failed to generate."
          },
          {
            "name": "assessment_failure",
            "value": "assessment_failure",
            "description": "The subscribed report failed while collecting the assessments."
          },
          {
            "name": "report_configuration_changes",
            "value": "report_configuration_changes",
            "description": "The subscribed report's configuration is changed."
          },
          {
            "name": "report_deletion",
            "value": "report_deletion",
            "description": "The subscribed report is deleted."
          }
        ]
      }
    },
    "OnboardRequest": {
      "type": "object",
      "description": "Parameters for onboard operation",
      "properties": {
        "subscriptionIds": {
          "type": "array",
          "description": "List of subscription ids to be onboarded",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "subscriptionIds"
      ]
    },
    "OnboardResponse": {
      "type": "object",
      "description": "Success. The response indicates given subscriptions has been onboarded.",
      "properties": {
        "subscriptionIds": {
          "type": "array",
          "description": "List of subscription ids that are onboarded",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OverviewStatus": {
      "type": "object",
      "description": "The overview of the compliance result for one report.",
      "properties": {
        "passedCount": {
          "type": "integer",
          "format": "int32",
          "description": "The count of all passed control.",
          "readOnly": true
        },
        "failedCount": {
          "type": "integer",
          "format": "int32",
          "description": "The count of all failed control.",
          "readOnly": true
        },
        "manualCount": {
          "type": "integer",
          "format": "int32",
          "description": "The count of all manual control.",
          "readOnly": true
        },
        "notApplicableCount": {
          "type": "integer",
          "format": "int32",
          "description": "The count of all not applicable control.",
          "readOnly": true
        },
        "pendingCount": {
          "type": "integer",
          "format": "int32",
          "description": "The count of all pending for approval control.",
          "readOnly": true
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "Resource provisioning states.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Creating",
        "Deleting",
        "Fixing",
        "Verifying",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "The provision is succeeded."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The provision is failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "The provision is canceled."
          },
          {
            "name": "Creating",
            "value": "Creating",
            "description": "The creation is in progress."
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "The deletion is in progress."
          },
          {
            "name": "Fixing",
            "value": "Fixing",
            "description": "The fix of the resource in progress."
          },
          {
            "name": "Verifying",
            "value": "Verifying",
            "description": "The verification of the resource in progress."
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "The update of the resource in progress."
          }
        ]
      },
      "readOnly": true
    },
    "QuickAssessment": {
      "type": "object",
      "description": "A class represent the quick assessment.",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "Resource id.",
          "readOnly": true
        },
        "responsibilityId": {
          "type": "string",
          "description": "Responsibility id.",
          "readOnly": true
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC).",
          "readOnly": true
        },
        "resourceStatus": {
          "description": "Quick assessment status.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Healthy",
            "Unhealthy"
          ],
          "x-ms-enum": {
            "name": "ResourceStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Healthy",
                "value": "Healthy",
                "description": "The resource is healthy."
              },
              {
                "name": "Unhealthy",
                "value": "Unhealthy",
                "description": "The resource is unhealthy."
              }
            ]
          }
        },
        "displayName": {
          "type": "string",
          "description": "Quick assessment display name.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Quick assessment display name.",
          "readOnly": true
        },
        "remediationLink": {
          "type": "string",
          "description": "Link to remediation steps for this quick assessment.",
          "readOnly": true
        }
      }
    },
    "Recommendation": {
      "type": "object",
      "description": "A class represent the recommendation.",
      "properties": {
        "recommendationId": {
          "type": "string",
          "description": "The Id of the recommendation.",
          "readOnly": true
        },
        "recommendationShortName": {
          "type": "string",
          "description": "The short name of the recommendation. e.g. \"Invalid TLS config\"",
          "readOnly": true
        },
        "recommendationSolutions": {
          "type": "array",
          "description": "List of recommendation solutions.",
          "items": {
            "type": "object",
            "description": "A class represent the recommendation solution.",
            "properties": {
              "recommendationSolutionIndex": {
                "type": "string",
                "description": "The index of the recommendation solution.",
                "readOnly": true
              },
              "recommendationSolutionContent": {
                "type": "string",
                "description": "The detail steps of the recommendation solution.",
                "readOnly": true
              },
              "isRecommendSolution": {
                "description": "Indicates whether this solution is the recommended.",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "true",
                  "false"
                ],
                "x-ms-enum": {
                  "name": "IsRecommendSolution",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "True",
                      "value": "true",
                      "description": "This solution is the recommended."
                    },
                    {
                      "name": "False",
                      "value": "false",
                      "description": "This solution is not the recommended."
                    }
                  ]
                }
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "recommendationSolutionIndex"
          ]
        }
      }
    },
    "RecommendationSolution": {
      "type": "object",
      "description": "A class represent the recommendation solution.",
      "properties": {
        "recommendationSolutionIndex": {
          "type": "string",
          "description": "The index of the recommendation solution.",
          "readOnly": true
        },
        "recommendationSolutionContent": {
          "type": "string",
          "description": "The detail steps of the recommendation solution.",
          "readOnly": true
        },
        "isRecommendSolution": {
          "description": "Indicates whether this solution is the recommended.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "true",
            "false"
          ],
          "x-ms-enum": {
            "name": "IsRecommendSolution",
            "modelAsString": true,
            "values": [
              {
                "name": "True",
                "value": "true",
                "description": "This solution is the recommended."
              },
              {
                "name": "False",
                "value": "false",
                "description": "This solution is not the recommended."
              }
            ]
          }
        }
      }
    },
    "ReportComplianceStatus": {
      "type": "object",
      "description": "A list which includes all the compliance result for one report.",
      "properties": {
        "m365": {
          "description": "The Microsoft 365 certification name.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "passedCount": {
              "type": "integer",
              "format": "int32",
              "description": "The count of all passed control.",
              "readOnly": true
            },
            "failedCount": {
              "type": "integer",
              "format": "int32",
              "description": "The count of all failed control.",
              "readOnly": true
            },
            "manualCount": {
              "type": "integer",
              "format": "int32",
              "description": "The count of all manual control.",
              "readOnly": true
            },
            "notApplicableCount": {
              "type": "integer",
              "format": "int32",
              "description": "The count of all not applicable control.",
              "readOnly": true
            },
            "pendingCount": {
              "type": "integer",
              "format": "int32",
              "description": "The count of all pending for approval control.",
              "readOnly": true
            }
          }
        }
      }
    },
    "ReportFixResult": {
      "type": "object",
      "description": "Report fix result.",
      "properties": {
        "result": {
          "description": "Indicates whether the fix action is Succeeded or Failed.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "Result",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "The result is succeeded."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "The result is failed."
              }
            ]
          }
        },
        "reason": {
          "type": "string",
          "description": "If the report fix action failed, to indicate the detailed failed reason.",
          "readOnly": true
        }
      }
    },
    "ReportPatchProperties": {
      "type": "object",
      "description": "Patch Report's properties.",
      "properties": {
        "triggerTime": {
          "type": "string",
          "format": "date-time",
          "description": "Report collection trigger time."
        },
        "timeZone": {
          "type": "string",
          "description": "Report collection trigger time's time zone, the available list can be obtained by executing \"Get-TimeZone -ListAvailable\" in PowerShell.\nAn example of valid timezone id is \"Pacific Standard Time\"."
        },
        "resources": {
          "type": "array",
          "description": "List of resource data.",
          "items": {
            "type": "object",
            "description": "Single resource Id's metadata.",
            "properties": {
              "resourceId": {
                "type": "string",
                "description": "Resource Id - e.g. \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1\"."
              },
              "resourceType": {
                "type": "string",
                "description": "Resource type. e.g. \"Microsoft.Compute/virtualMachines\""
              },
              "resourceKind": {
                "type": "string",
                "description": "Resource kind."
              },
              "resourceOrigin": {
                "description": "Resource Origin.",
                "type": "string",
                "enum": [
                  "Azure",
                  "AWS",
                  "GCP"
                ],
                "x-ms-enum": {
                  "name": "ResourceOrigin",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Azure",
                      "value": "Azure",
                      "description": "The resource is from Azure."
                    },
                    {
                      "name": "AWS",
                      "value": "AWS",
                      "description": "The resource is from AWS."
                    },
                    {
                      "name": "GCP",
                      "value": "GCP",
                      "description": "The resource is from GCP."
                    }
                  ]
                }
              },
              "accountId": {
                "type": "string",
                "description": "Account Id. For example - the AWS account id."
              }
            },
            "required": [
              "resourceId"
            ]
          },
          "x-ms-identifiers": [
            "resourceId"
          ]
        },
        "status": {
          "description": "Report status.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Active",
            "Failed",
            "Reviewing",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "ReportStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Active",
                "value": "Active",
                "description": "The report is active."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "The report is failed."
              },
              {
                "name": "Reviewing",
                "value": "Reviewing",
                "description": "The report is under reviewing."
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "The report is disabled."
              }
            ]
          }
        },
        "errors": {
          "type": "array",
          "description": "List of report error codes.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "Report's tenant id.",
          "readOnly": true
        },
        "offerGuid": {
          "type": "string",
          "description": "A list of comma-separated offerGuids indicates a series of offerGuids that map to the report. For example, \"00000000-0000-0000-0000-000000000001,00000000-0000-0000-0000-000000000002\" and \"00000000-0000-0000-0000-000000000003\"."
        },
        "nextTriggerTime": {
          "type": "string",
          "format": "date-time",
          "description": "Report next collection trigger time.",
          "readOnly": true
        },
        "lastTriggerTime": {
          "type": "string",
          "format": "date-time",
          "description": "Report last collection trigger time.",
          "readOnly": true
        },
        "subscriptions": {
          "type": "array",
          "description": "List of subscription Ids.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "complianceStatus": {
          "description": "Report compliance status.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "m365": {
              "description": "The Microsoft 365 certification name.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "passedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The count of all passed control.",
                  "readOnly": true
                },
                "failedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The count of all failed control.",
                  "readOnly": true
                },
                "manualCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The count of all manual control.",
                  "readOnly": true
                },
                "notApplicableCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The count of all not applicable control.",
                  "readOnly": true
                },
                "pendingCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The count of all pending for approval control.",
                  "readOnly": true
                }
              }
            }
          }
        },
        "storageInfo": {
          "type": "object",
          "description": "The information of 'bring your own storage' account binding to the report",
          "properties": {
            "subscriptionId": {
              "type": "string",
              "description": "The subscription id which 'bring your own storage' account belongs to"
            },
            "resourceGroup": {
              "type": "string",
              "description": "The resourceGroup which 'bring your own storage' account belongs to"
            },
            "accountName": {
              "type": "string",
              "description": "'bring your own storage' account name"
            },
            "location": {
              "type": "string",
              "description": "The region of 'bring your own storage' account"
            }
          }
        },
        "certRecords": {
          "type": "array",
          "description": "List of synchronized certification records.",
          "items": {
            "type": "object",
            "description": "A class represent the certification record synchronized from app compliance.",
            "properties": {
              "offerGuid": {
                "type": "string",
                "description": "The offerGuid which mapping to the reports.",
                "minLength": 1
              },
              "certificationStatus": {
                "type": "string",
                "description": "Indicates the status of certification process."
              },
              "ingestionStatus": {
                "type": "string",
                "description": "Indicates the status of compliance process."
              },
              "controls": {
                "type": "array",
                "description": "The control records list to be synchronized.",
                "items": {
                  "type": "object",
                  "description": "A class represent the control record synchronized from app compliance.",
                  "properties": {
                    "controlId": {
                      "type": "string",
                      "description": "The Id of the control. e.g. \"Operational_Security_10\""
                    },
                    "controlStatus": {
                      "type": "string",
                      "description": "Control status synchronized from app compliance."
                    }
                  }
                },
                "x-ms-identifiers": [
                  "controlId"
                ]
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "offerGuid"
          ]
        },
        "provisioningState": {
          "description": "Azure lifecycle management",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Creating",
            "Deleting",
            "Fixing",
            "Verifying",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "The provision is succeeded."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "The provision is failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "The provision is canceled."
              },
              {
                "name": "Creating",
                "value": "Creating",
                "description": "The creation is in progress."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "The deletion is in progress."
              },
              {
                "name": "Fixing",
                "value": "Fixing",
                "description": "The fix of the resource in progress."
              },
              {
                "name": "Verifying",
                "value": "Verifying",
                "description": "The verification of the resource in progress."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "The update of the resource in progress."
              }
            ]
          }
        }
      }
    },
    "ReportProperties": {
      "type": "object",
      "description": "Create Report's properties.",
      "properties": {
        "triggerTime": {
          "type": "string",
          "format": "date-time",
          "description": "Report collection trigger time."
        },
        "timeZone": {
          "type": "string",
          "description": "Report collection trigger time's time zone, the available list can be obtained by executing \"Get-TimeZone -ListAvailable\" in PowerShell.\nAn example of valid timezone id is \"Pacific Standard Time\"."
        },
        "resources": {
          "type": "array",
          "description": "List of resource data.",
          "items": {
            "type": "object",
            "description": "Single resource Id's metadata.",
            "properties": {
              "resourceId": {
                "type": "string",
                "description": "Resource Id - e.g. \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1\"."
              },
              "resourceType": {
                "type": "string",
                "description": "Resource type. e.g. \"Microsoft.Compute/virtualMachines\""
              },
              "resourceKind": {
                "type": "string",
                "description": "Resource kind."
              },
              "resourceOrigin": {
                "description": "Resource Origin.",
                "type": "string",
                "enum": [
                  "Azure",
                  "AWS",
                  "GCP"
                ],
                "x-ms-enum": {
                  "name": "ResourceOrigin",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Azure",
                      "value": "Azure",
                      "description": "The resource is from Azure."
                    },
                    {
                      "name": "AWS",
                      "value": "AWS",
                      "description": "The resource is from AWS."
                    },
                    {
                      "name": "GCP",
                      "value": "GCP",
                      "description": "The resource is from GCP."
                    }
                  ]
                }
              },
              "accountId": {
                "type": "string",
                "description": "Account Id. For example - the AWS account id."
              }
            },
            "required": [
              "resourceId"
            ]
          },
          "x-ms-identifiers": [
            "resourceId"
          ]
        },
        "status": {
          "description": "Report status.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Active",
            "Failed",
            "Reviewing",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "ReportStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Active",
                "value": "Active",
                "description": "The report is active."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "The report is failed."
              },
              {
                "name": "Reviewing",
                "value": "Reviewing",
                "description": "The report is under reviewing."
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "The report is disabled."
              }
            ]
          }
        },
        "errors": {
          "type": "array",
          "description": "List of report error codes.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "Report's tenant id.",
          "readOnly": true
        },
        "offerGuid": {
          "type": "string",
          "description": "A list of comma-separated offerGuids indicates a series of offerGuids that map to the report. For example, \"00000000-0000-0000-0000-000000000001,00000000-0000-0000-0000-000000000002\" and \"00000000-0000-0000-0000-000000000003\"."
        },
        "nextTriggerTime": {
          "type": "string",
          "format": "date-time",
          "description": "Report next collection trigger time.",
          "readOnly": true
        },
        "lastTriggerTime": {
          "type": "string",
          "format": "date-time",
          "description": "Report last collection trigger time.",
          "readOnly": true
        },
        "subscriptions": {
          "type": "array",
          "description": "List of subscription Ids.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "complianceStatus": {
          "description": "Report compliance status.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "m365": {
              "description": "The Microsoft 365 certification name.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "passedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The count of all passed control.",
                  "readOnly": true
                },
                "failedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The count of all failed control.",
                  "readOnly": true
                },
                "manualCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The count of all manual control.",
                  "readOnly": true
                },
                "notApplicableCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The count of all not applicable control.",
                  "readOnly": true
                },
                "pendingCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The count of all pending for approval control.",
                  "readOnly": true
                }
              }
            }
          }
        },
        "storageInfo": {
          "type": "object",
          "description": "The information of 'bring your own storage' account binding to the report",
          "properties": {
            "subscriptionId": {
              "type": "string",
              "description": "The subscription id which 'bring your own storage' account belongs to"
            },
            "resourceGroup": {
              "type": "string",
              "description": "The resourceGroup which 'bring your own storage' account belongs to"
            },
            "accountName": {
              "type": "string",
              "description": "'bring your own storage' account name"
            },
            "location": {
              "type": "string",
              "description": "The region of 'bring your own storage' account"
            }
          }
        },
        "certRecords": {
          "type": "array",
          "description": "List of synchronized certification records.",
          "items": {
            "type": "object",
            "description": "A class represent the certification record synchronized from app compliance.",
            "properties": {
              "offerGuid": {
                "type": "string",
                "description": "The offerGuid which mapping to the reports.",
                "minLength": 1
              },
              "certificationStatus": {
                "type": "string",
                "description": "Indicates the status of certification process."
              },
              "ingestionStatus": {
                "type": "string",
                "description": "Indicates the status of compliance process."
              },
              "controls": {
                "type": "array",
                "description": "The control records list to be synchronized.",
                "items": {
                  "type": "object",
                  "description": "A class represent the control record synchronized from app compliance.",
                  "properties": {
                    "controlId": {
                      "type": "string",
                      "description": "The Id of the control. e.g. \"Operational_Security_10\""
                    },
                    "controlStatus": {
                      "type": "string",
                      "description": "Control status synchronized from app compliance."
                    }
                  }
                },
                "x-ms-identifiers": [
                  "controlId"
                ]
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "offerGuid"
          ]
        },
        "provisioningState": {
          "description": "Azure lifecycle management",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Creating",
            "Deleting",
            "Fixing",
            "Verifying",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "The provision is succeeded."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "The provision is failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "The provision is canceled."
              },
              {
                "name": "Creating",
                "value": "Creating",
                "description": "The creation is in progress."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "The deletion is in progress."
              },
              {
                "name": "Fixing",
                "value": "Fixing",
                "description": "The fix of the resource in progress."
              },
              {
                "name": "Verifying",
                "value": "Verifying",
                "description": "The verification of the resource in progress."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "The update of the resource in progress."
              }
            ]
          }
        }
      },
      "required": [
        "triggerTime",
        "timeZone",
        "resources"
      ]
    },
    "ReportResource": {
      "type": "object",
      "description": "A class represent an AppComplianceAutomation report resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "Report property.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "triggerTime": {
              "type": "string",
              "format": "date-time",
              "description": "Report collection trigger time."
            },
            "timeZone": {
              "type": "string",
              "description": "Report collection trigger time's time zone, the available list can be obtained by executing \"Get-TimeZone -ListAvailable\" in PowerShell.\nAn example of valid timezone id is \"Pacific Standard Time\"."
            },
            "resources": {
              "type": "array",
              "description": "List of resource data.",
              "items": {
                "type": "object",
                "description": "Single resource Id's metadata.",
                "properties": {
                  "resourceId": {
                    "type": "string",
                    "description": "Resource Id - e.g. \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1\"."
                  },
                  "resourceType": {
                    "type": "string",
                    "description": "Resource type. e.g. \"Microsoft.Compute/virtualMachines\""
                  },
                  "resourceKind": {
                    "type": "string",
                    "description": "Resource kind."
                  },
                  "resourceOrigin": {
                    "description": "Resource Origin.",
                    "type": "string",
                    "enum": [
                      "Azure",
                      "AWS",
                      "GCP"
                    ],
                    "x-ms-enum": {
                      "name": "ResourceOrigin",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Azure",
                          "value": "Azure",
                          "description": "The resource is from Azure."
                        },
                        {
                          "name": "AWS",
                          "value": "AWS",
                          "description": "The resource is from AWS."
                        },
                        {
                          "name": "GCP",
                          "value": "GCP",
                          "description": "The resource is from GCP."
                        }
                      ]
                    }
                  },
                  "accountId": {
                    "type": "string",
                    "description": "Account Id. For example - the AWS account id."
                  }
                },
                "required": [
                  "resourceId"
                ]
              },
              "x-ms-identifiers": [
                "resourceId"
              ]
            },
            "status": {
              "description": "Report status.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Active",
                "Failed",
                "Reviewing",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "ReportStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Active",
                    "value": "Active",
                    "description": "The report is active."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "The report is failed."
                  },
                  {
                    "name": "Reviewing",
                    "value": "Reviewing",
                    "description": "The report is under reviewing."
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "The report is disabled."
                  }
                ]
              }
            },
            "errors": {
              "type": "array",
              "description": "List of report error codes.",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "description": "Report's tenant id.",
              "readOnly": true
            },
            "offerGuid": {
              "type": "string",
              "description": "A list of comma-separated offerGuids indicates a series of offerGuids that map to the report. For example, \"00000000-0000-0000-0000-000000000001,00000000-0000-0000-0000-000000000002\" and \"00000000-0000-0000-0000-000000000003\"."
            },
            "nextTriggerTime": {
              "type": "string",
              "format": "date-time",
              "description": "Report next collection trigger time.",
              "readOnly": true
            },
            "lastTriggerTime": {
              "type": "string",
              "format": "date-time",
              "description": "Report last collection trigger time.",
              "readOnly": true
            },
            "subscriptions": {
              "type": "array",
              "description": "List of subscription Ids.",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "complianceStatus": {
              "description": "Report compliance status.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "m365": {
                  "description": "The Microsoft 365 certification name.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "passedCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The count of all passed control.",
                      "readOnly": true
                    },
                    "failedCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The count of all failed control.",
                      "readOnly": true
                    },
                    "manualCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The count of all manual control.",
                      "readOnly": true
                    },
                    "notApplicableCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The count of all not applicable control.",
                      "readOnly": true
                    },
                    "pendingCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The count of all pending for approval control.",
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "storageInfo": {
              "type": "object",
              "description": "The information of 'bring your own storage' account binding to the report",
              "properties": {
                "subscriptionId": {
                  "type": "string",
                  "description": "The subscription id which 'bring your own storage' account belongs to"
                },
                "resourceGroup": {
                  "type": "string",
                  "description": "The resourceGroup which 'bring your own storage' account belongs to"
                },
                "accountName": {
                  "type": "string",
                  "description": "'bring your own storage' account name"
                },
                "location": {
                  "type": "string",
                  "description": "The region of 'bring your own storage' account"
                }
              }
            },
            "certRecords": {
              "type": "array",
              "description": "List of synchronized certification records.",
              "items": {
                "type": "object",
                "description": "A class represent the certification record synchronized from app compliance.",
                "properties": {
                  "offerGuid": {
                    "type": "string",
                    "description": "The offerGuid which mapping to the reports.",
                    "minLength": 1
                  },
                  "certificationStatus": {
                    "type": "string",
                    "description": "Indicates the status of certification process."
                  },
                  "ingestionStatus": {
                    "type": "string",
                    "description": "Indicates the status of compliance process."
                  },
                  "controls": {
                    "type": "array",
                    "description": "The control records list to be synchronized.",
                    "items": {
                      "type": "object",
                      "description": "A class represent the control record synchronized from app compliance.",
                      "properties": {
                        "controlId": {
                          "type": "string",
                          "description": "The Id of the control. e.g. \"Operational_Security_10\""
                        },
                        "controlStatus": {
                          "type": "string",
                          "description": "Control status synchronized from app compliance."
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "controlId"
                    ]
                  }
                }
              },
              "readOnly": true,
              "x-ms-identifiers": [
                "offerGuid"
              ]
            },
            "provisioningState": {
              "description": "Azure lifecycle management",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Creating",
                "Deleting",
                "Fixing",
                "Verifying",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "The provision is succeeded."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "The provision is failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "The provision is canceled."
                  },
                  {
                    "name": "Creating",
                    "value": "Creating",
                    "description": "The creation is in progress."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "The deletion is in progress."
                  },
                  {
                    "name": "Fixing",
                    "value": "Fixing",
                    "description": "The fix of the resource in progress."
                  },
                  {
                    "name": "Verifying",
                    "value": "Verifying",
                    "description": "The verification of the resource in progress."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "The update of the resource in progress."
                  }
                ]
              }
            }
          },
          "required": [
            "triggerTime",
            "timeZone",
            "resources"
          ]
        }
      },
      "required": [
        "properties"
      ]
    },
    "ReportResourceListResult": {
      "type": "object",
      "description": "The response of a ReportResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ReportResource items on this page",
          "items": {
            "type": "object",
            "description": "A class represent an AppComplianceAutomation report resource.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Report property.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "triggerTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Report collection trigger time."
                  },
                  "timeZone": {
                    "type": "string",
                    "description": "Report collection trigger time's time zone, the available list can be obtained by executing \"Get-TimeZone -ListAvailable\" in PowerShell.\nAn example of valid timezone id is \"Pacific Standard Time\"."
                  },
                  "resources": {
                    "type": "array",
                    "description": "List of resource data.",
                    "items": {
                      "type": "object",
                      "description": "Single resource Id's metadata.",
                      "properties": {
                        "resourceId": {
                          "type": "string",
                          "description": "Resource Id - e.g. \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1\"."
                        },
                        "resourceType": {
                          "type": "string",
                          "description": "Resource type. e.g. \"Microsoft.Compute/virtualMachines\""
                        },
                        "resourceKind": {
                          "type": "string",
                          "description": "Resource kind."
                        },
                        "resourceOrigin": {
                          "description": "Resource Origin.",
                          "type": "string",
                          "enum": [
                            "Azure",
                            "AWS",
                            "GCP"
                          ],
                          "x-ms-enum": {
                            "name": "ResourceOrigin",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Azure",
                                "value": "Azure",
                                "description": "The resource is from Azure."
                              },
                              {
                                "name": "AWS",
                                "value": "AWS",
                                "description": "The resource is from AWS."
                              },
                              {
                                "name": "GCP",
                                "value": "GCP",
                                "description": "The resource is from GCP."
                              }
                            ]
                          }
                        },
                        "accountId": {
                          "type": "string",
                          "description": "Account Id. For example - the AWS account id."
                        }
                      },
                      "required": [
                        "resourceId"
                      ]
                    },
                    "x-ms-identifiers": [
                      "resourceId"
                    ]
                  },
                  "status": {
                    "description": "Report status.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Active",
                      "Failed",
                      "Reviewing",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "ReportStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Active",
                          "value": "Active",
                          "description": "The report is active."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "The report is failed."
                        },
                        {
                          "name": "Reviewing",
                          "value": "Reviewing",
                          "description": "The report is under reviewing."
                        },
                        {
                          "name": "Disabled",
                          "value": "Disabled",
                          "description": "The report is disabled."
                        }
                      ]
                    }
                  },
                  "errors": {
                    "type": "array",
                    "description": "List of report error codes.",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "tenantId": {
                    "type": "string",
                    "description": "Report's tenant id.",
                    "readOnly": true
                  },
                  "offerGuid": {
                    "type": "string",
                    "description": "A list of comma-separated offerGuids indicates a series of offerGuids that map to the report. For example, \"00000000-0000-0000-0000-000000000001,00000000-0000-0000-0000-000000000002\" and \"00000000-0000-0000-0000-000000000003\"."
                  },
                  "nextTriggerTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Report next collection trigger time.",
                    "readOnly": true
                  },
                  "lastTriggerTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Report last collection trigger time.",
                    "readOnly": true
                  },
                  "subscriptions": {
                    "type": "array",
                    "description": "List of subscription Ids.",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "complianceStatus": {
                    "description": "Report compliance status.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "m365": {
                        "description": "The Microsoft 365 certification name.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "passedCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The count of all passed control.",
                            "readOnly": true
                          },
                          "failedCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The count of all failed control.",
                            "readOnly": true
                          },
                          "manualCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The count of all manual control.",
                            "readOnly": true
                          },
                          "notApplicableCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The count of all not applicable control.",
                            "readOnly": true
                          },
                          "pendingCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The count of all pending for approval control.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "storageInfo": {
                    "type": "object",
                    "description": "The information of 'bring your own storage' account binding to the report",
                    "properties": {
                      "subscriptionId": {
                        "type": "string",
                        "description": "The subscription id which 'bring your own storage' account belongs to"
                      },
                      "resourceGroup": {
                        "type": "string",
                        "description": "The resourceGroup which 'bring your own storage' account belongs to"
                      },
                      "accountName": {
                        "type": "string",
                        "description": "'bring your own storage' account name"
                      },
                      "location": {
                        "type": "string",
                        "description": "The region of 'bring your own storage' account"
                      }
                    }
                  },
                  "certRecords": {
                    "type": "array",
                    "description": "List of synchronized certification records.",
                    "items": {
                      "type": "object",
                      "description": "A class represent the certification record synchronized from app compliance.",
                      "properties": {
                        "offerGuid": {
                          "type": "string",
                          "description": "The offerGuid which mapping to the reports.",
                          "minLength": 1
                        },
                        "certificationStatus": {
                          "type": "string",
                          "description": "Indicates the status of certification process."
                        },
                        "ingestionStatus": {
                          "type": "string",
                          "description": "Indicates the status of compliance process."
                        },
                        "controls": {
                          "type": "array",
                          "description": "The control records list to be synchronized.",
                          "items": {
                            "type": "object",
                            "description": "A class represent the control record synchronized from app compliance.",
                            "properties": {
                              "controlId": {
                                "type": "string",
                                "description": "The Id of the control. e.g. \"Operational_Security_10\""
                              },
                              "controlStatus": {
                                "type": "string",
                                "description": "Control status synchronized from app compliance."
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "controlId"
                          ]
                        }
                      }
                    },
                    "readOnly": true,
                    "x-ms-identifiers": [
                      "offerGuid"
                    ]
                  },
                  "provisioningState": {
                    "description": "Azure lifecycle management",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Creating",
                      "Deleting",
                      "Fixing",
                      "Verifying",
                      "Updating"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "The provision is succeeded."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "The provision is failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "The provision is canceled."
                        },
                        {
                          "name": "Creating",
                          "value": "Creating",
                          "description": "The creation is in progress."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "The deletion is in progress."
                        },
                        {
                          "name": "Fixing",
                          "value": "Fixing",
                          "description": "The fix of the resource in progress."
                        },
                        {
                          "name": "Verifying",
                          "value": "Verifying",
                          "description": "The verification of the resource in progress."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "The update of the resource in progress."
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "triggerTime",
                  "timeZone",
                  "resources"
                ]
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ReportResourcePatch": {
      "type": "object",
      "description": "A class represent a AppComplianceAutomation report resource update properties.",
      "properties": {
        "properties": {
          "description": "Report property.",
          "type": "object",
          "properties": {
            "triggerTime": {
              "type": "string",
              "format": "date-time",
              "description": "Report collection trigger time."
            },
            "timeZone": {
              "type": "string",
              "description": "Report collection trigger time's time zone, the available list can be obtained by executing \"Get-TimeZone -ListAvailable\" in PowerShell.\nAn example of valid timezone id is \"Pacific Standard Time\"."
            },
            "resources": {
              "type": "array",
              "description": "List of resource data.",
              "items": {
                "type": "object",
                "description": "Single resource Id's metadata.",
                "properties": {
                  "resourceId": {
                    "type": "string",
                    "description": "Resource Id - e.g. \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1\"."
                  },
                  "resourceType": {
                    "type": "string",
                    "description": "Resource type. e.g. \"Microsoft.Compute/virtualMachines\""
                  },
                  "resourceKind": {
                    "type": "string",
                    "description": "Resource kind."
                  },
                  "resourceOrigin": {
                    "description": "Resource Origin.",
                    "type": "string",
                    "enum": [
                      "Azure",
                      "AWS",
                      "GCP"
                    ],
                    "x-ms-enum": {
                      "name": "ResourceOrigin",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Azure",
                          "value": "Azure",
                          "description": "The resource is from Azure."
                        },
                        {
                          "name": "AWS",
                          "value": "AWS",
                          "description": "The resource is from AWS."
                        },
                        {
                          "name": "GCP",
                          "value": "GCP",
                          "description": "The resource is from GCP."
                        }
                      ]
                    }
                  },
                  "accountId": {
                    "type": "string",
                    "description": "Account Id. For example - the AWS account id."
                  }
                },
                "required": [
                  "resourceId"
                ]
              },
              "x-ms-identifiers": [
                "resourceId"
              ]
            },
            "status": {
              "description": "Report status.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Active",
                "Failed",
                "Reviewing",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "ReportStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Active",
                    "value": "Active",
                    "description": "The report is active."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "The report is failed."
                  },
                  {
                    "name": "Reviewing",
                    "value": "Reviewing",
                    "description": "The report is under reviewing."
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "The report is disabled."
                  }
                ]
              }
            },
            "errors": {
              "type": "array",
              "description": "List of report error codes.",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "description": "Report's tenant id.",
              "readOnly": true
            },
            "offerGuid": {
              "type": "string",
              "description": "A list of comma-separated offerGuids indicates a series of offerGuids that map to the report. For example, \"00000000-0000-0000-0000-000000000001,00000000-0000-0000-0000-000000000002\" and \"00000000-0000-0000-0000-000000000003\"."
            },
            "nextTriggerTime": {
              "type": "string",
              "format": "date-time",
              "description": "Report next collection trigger time.",
              "readOnly": true
            },
            "lastTriggerTime": {
              "type": "string",
              "format": "date-time",
              "description": "Report last collection trigger time.",
              "readOnly": true
            },
            "subscriptions": {
              "type": "array",
              "description": "List of subscription Ids.",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "complianceStatus": {
              "description": "Report compliance status.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "m365": {
                  "description": "The Microsoft 365 certification name.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "passedCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The count of all passed control.",
                      "readOnly": true
                    },
                    "failedCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The count of all failed control.",
                      "readOnly": true
                    },
                    "manualCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The count of all manual control.",
                      "readOnly": true
                    },
                    "notApplicableCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The count of all not applicable control.",
                      "readOnly": true
                    },
                    "pendingCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The count of all pending for approval control.",
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "storageInfo": {
              "type": "object",
              "description": "The information of 'bring your own storage' account binding to the report",
              "properties": {
                "subscriptionId": {
                  "type": "string",
                  "description": "The subscription id which 'bring your own storage' account belongs to"
                },
                "resourceGroup": {
                  "type": "string",
                  "description": "The resourceGroup which 'bring your own storage' account belongs to"
                },
                "accountName": {
                  "type": "string",
                  "description": "'bring your own storage' account name"
                },
                "location": {
                  "type": "string",
                  "description": "The region of 'bring your own storage' account"
                }
              }
            },
            "certRecords": {
              "type": "array",
              "description": "List of synchronized certification records.",
              "items": {
                "type": "object",
                "description": "A class represent the certification record synchronized from app compliance.",
                "properties": {
                  "offerGuid": {
                    "type": "string",
                    "description": "The offerGuid which mapping to the reports.",
                    "minLength": 1
                  },
                  "certificationStatus": {
                    "type": "string",
                    "description": "Indicates the status of certification process."
                  },
                  "ingestionStatus": {
                    "type": "string",
                    "description": "Indicates the status of compliance process."
                  },
                  "controls": {
                    "type": "array",
                    "description": "The control records list to be synchronized.",
                    "items": {
                      "type": "object",
                      "description": "A class represent the control record synchronized from app compliance.",
                      "properties": {
                        "controlId": {
                          "type": "string",
                          "description": "The Id of the control. e.g. \"Operational_Security_10\""
                        },
                        "controlStatus": {
                          "type": "string",
                          "description": "Control status synchronized from app compliance."
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "controlId"
                    ]
                  }
                }
              },
              "readOnly": true,
              "x-ms-identifiers": [
                "offerGuid"
              ]
            },
            "provisioningState": {
              "description": "Azure lifecycle management",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Creating",
                "Deleting",
                "Fixing",
                "Verifying",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "The provision is succeeded."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "The provision is failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "The provision is canceled."
                  },
                  {
                    "name": "Creating",
                    "value": "Creating",
                    "description": "The creation is in progress."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "The deletion is in progress."
                  },
                  {
                    "name": "Fixing",
                    "value": "Fixing",
                    "description": "The fix of the resource in progress."
                  },
                  {
                    "name": "Verifying",
                    "value": "Verifying",
                    "description": "The verification of the resource in progress."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "The update of the resource in progress."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "ReportStatus": {
      "type": "string",
      "description": "Report status.",
      "enum": [
        "Active",
        "Failed",
        "Reviewing",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "ReportStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Active",
            "value": "Active",
            "description": "The report is active."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The report is failed."
          },
          {
            "name": "Reviewing",
            "value": "Reviewing",
            "description": "The report is under reviewing."
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "The report is disabled."
          }
        ]
      }
    },
    "ReportVerificationResult": {
      "type": "object",
      "description": "Report health status verification result.",
      "properties": {
        "result": {
          "description": "Indicates whether the report verification action is Succeeded or Failed.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "Result",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "The result is succeeded."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "The result is failed."
              }
            ]
          }
        },
        "reason": {
          "type": "string",
          "description": "If the report verification action failed, to indicate the detailed failed reason.",
          "readOnly": true
        }
      }
    },
    "ResourceItem": {
      "type": "object",
      "description": "Resource Id.",
      "properties": {
        "subscriptionId": {
          "type": "string",
          "description": "The subscription Id of this resource.",
          "readOnly": true
        },
        "resourceGroup": {
          "type": "string",
          "description": "The resource group name of this resource.",
          "readOnly": true
        },
        "resourceType": {
          "type": "string",
          "description": "The resource type of this resource. e.g. \"Microsoft.SignalRService/SignalR\"",
          "readOnly": true
        },
        "resourceId": {
          "type": "string",
          "description": "The resource Id - e.g. \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1\".",
          "readOnly": true
        }
      }
    },
    "ResourceMetadata": {
      "type": "object",
      "description": "Single resource Id's metadata.",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "Resource Id - e.g. \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1\"."
        },
        "resourceType": {
          "type": "string",
          "description": "Resource type. e.g. \"Microsoft.Compute/virtualMachines\""
        },
        "resourceKind": {
          "type": "string",
          "description": "Resource kind."
        },
        "resourceOrigin": {
          "description": "Resource Origin.",
          "type": "string",
          "enum": [
            "Azure",
            "AWS",
            "GCP"
          ],
          "x-ms-enum": {
            "name": "ResourceOrigin",
            "modelAsString": true,
            "values": [
              {
                "name": "Azure",
                "value": "Azure",
                "description": "The resource is from Azure."
              },
              {
                "name": "AWS",
                "value": "AWS",
                "description": "The resource is from AWS."
              },
              {
                "name": "GCP",
                "value": "GCP",
                "description": "The resource is from GCP."
              }
            ]
          }
        },
        "accountId": {
          "type": "string",
          "description": "Account Id. For example - the AWS account id."
        }
      },
      "required": [
        "resourceId"
      ]
    },
    "ResourceOrigin": {
      "type": "string",
      "description": "Resource Origin.",
      "enum": [
        "Azure",
        "AWS",
        "GCP"
      ],
      "x-ms-enum": {
        "name": "ResourceOrigin",
        "modelAsString": true,
        "values": [
          {
            "name": "Azure",
            "value": "Azure",
            "description": "The resource is from Azure."
          },
          {
            "name": "AWS",
            "value": "AWS",
            "description": "The resource is from AWS."
          },
          {
            "name": "GCP",
            "value": "GCP",
            "description": "The resource is from GCP."
          }
        ]
      }
    },
    "ResourceStatus": {
      "type": "string",
      "description": "Indicates the resource status.",
      "enum": [
        "Healthy",
        "Unhealthy"
      ],
      "x-ms-enum": {
        "name": "ResourceStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Healthy",
            "value": "Healthy",
            "description": "The resource is healthy."
          },
          {
            "name": "Unhealthy",
            "value": "Unhealthy",
            "description": "The resource is unhealthy."
          }
        ]
      }
    },
    "Responsibility": {
      "type": "object",
      "description": "A class represent the customer responsibility.",
      "properties": {
        "responsibilityId": {
          "type": "string",
          "description": "The id of the customer responsibility.",
          "readOnly": true
        },
        "responsibilityTitle": {
          "type": "string",
          "description": "The title of the customer responsibility.",
          "readOnly": true
        },
        "responsibilityDescription": {
          "type": "string",
          "description": "The description of the customer responsibility.",
          "readOnly": true
        },
        "responsibilityType": {
          "description": "The type of customer responsibility.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Automated",
            "ScopedManual",
            "Manual"
          ],
          "x-ms-enum": {
            "name": "ResponsibilityType",
            "modelAsString": true,
            "values": [
              {
                "name": "Automated",
                "value": "Automated",
                "description": "The responsibility is automated."
              },
              {
                "name": "ScopedManual",
                "value": "ScopedManual",
                "description": "The responsibility is scoped manual."
              },
              {
                "name": "Manual",
                "value": "Manual",
                "description": "The responsibility is manual."
              }
            ]
          }
        },
        "responsibilitySeverity": {
          "description": "The severity level of this customer responsibility.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "High",
            "Medium",
            "Low"
          ],
          "x-ms-enum": {
            "name": "ResponsibilitySeverity",
            "modelAsString": true,
            "values": [
              {
                "name": "High",
                "value": "High",
                "description": "The responsibility is high severity."
              },
              {
                "name": "Medium",
                "value": "Medium",
                "description": "The responsibility is medium severity."
              },
              {
                "name": "Low",
                "value": "Low",
                "description": "The responsibility is low severity."
              }
            ]
          }
        },
        "responsibilityStatus": {
          "description": "The status of this customer responsibility.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Passed",
            "Failed",
            "NotApplicable",
            "PendingApproval"
          ],
          "x-ms-enum": {
            "name": "ResponsibilityStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Passed",
                "value": "Passed",
                "description": "The responsibility is passed."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "The responsibility is failed."
              },
              {
                "name": "NotApplicable",
                "value": "NotApplicable",
                "description": "The responsibility is not applicable."
              },
              {
                "name": "PendingApproval",
                "value": "PendingApproval",
                "description": "The responsibility is pending for approval."
              }
            ]
          }
        },
        "responsibilityEnvironment": {
          "description": "The supported cloud environment of this customer responsibility.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Azure",
            "AWS",
            "GCP",
            "General"
          ],
          "x-ms-enum": {
            "name": "ResponsibilityEnvironment",
            "modelAsString": true,
            "values": [
              {
                "name": "Azure",
                "value": "Azure",
                "description": "The responsibility is supported in Azure."
              },
              {
                "name": "AWS",
                "value": "AWS",
                "description": "The responsibility is supported in AWS."
              },
              {
                "name": "GCP",
                "value": "GCP",
                "description": "The responsibility is supported in GCP."
              },
              {
                "name": "General",
                "value": "General",
                "description": "The responsibility is general requirement of all environment."
              }
            ]
          }
        },
        "failedResourceCount": {
          "type": "integer",
          "format": "int32",
          "description": "The count of all failed resources."
        },
        "totalResourceCount": {
          "type": "integer",
          "format": "int32",
          "description": "The count of all resources."
        },
        "resourceList": {
          "type": "array",
          "description": "List of resource.",
          "items": {
            "type": "object",
            "description": "A class represent the resource.",
            "properties": {
              "resourceId": {
                "type": "string",
                "description": "The Id of the resource.",
                "readOnly": true
              },
              "accountId": {
                "type": "string",
                "description": "Account Id. For example - AWS account Id.",
                "readOnly": true
              },
              "resourceType": {
                "type": "string",
                "description": "The type of the resource. e.g. \"Microsoft.SignalRService/SignalR\"",
                "readOnly": true
              },
              "resourceOrigin": {
                "description": "Resource origin.",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "Azure",
                  "AWS",
                  "GCP"
                ],
                "x-ms-enum": {
                  "name": "ResourceOrigin",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Azure",
                      "value": "Azure",
                      "description": "The resource is from Azure."
                    },
                    {
                      "name": "AWS",
                      "value": "AWS",
                      "description": "The resource is from AWS."
                    },
                    {
                      "name": "GCP",
                      "value": "GCP",
                      "description": "The resource is from GCP."
                    }
                  ]
                }
              },
              "resourceStatus": {
                "description": "Resource status.",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "Healthy",
                  "Unhealthy"
                ],
                "x-ms-enum": {
                  "name": "ResourceStatus",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Healthy",
                      "value": "Healthy",
                      "description": "The resource is healthy."
                    },
                    {
                      "name": "Unhealthy",
                      "value": "Unhealthy",
                      "description": "The resource is unhealthy."
                    }
                  ]
                }
              },
              "resourceStatusChangeDate": {
                "type": "string",
                "format": "date-time",
                "description": "The status change date for the resource.",
                "readOnly": true
              },
              "recommendationIds": {
                "type": "array",
                "description": "List of recommendation id.",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "resourceId"
          ]
        },
        "recommendationList": {
          "type": "array",
          "description": "List of recommendation.",
          "items": {
            "type": "object",
            "description": "A class represent the recommendation.",
            "properties": {
              "recommendationId": {
                "type": "string",
                "description": "The Id of the recommendation.",
                "readOnly": true
              },
              "recommendationShortName": {
                "type": "string",
                "description": "The short name of the recommendation. e.g. \"Invalid TLS config\"",
                "readOnly": true
              },
              "recommendationSolutions": {
                "type": "array",
                "description": "List of recommendation solutions.",
                "items": {
                  "type": "object",
                  "description": "A class represent the recommendation solution.",
                  "properties": {
                    "recommendationSolutionIndex": {
                      "type": "string",
                      "description": "The index of the recommendation solution.",
                      "readOnly": true
                    },
                    "recommendationSolutionContent": {
                      "type": "string",
                      "description": "The detail steps of the recommendation solution.",
                      "readOnly": true
                    },
                    "isRecommendSolution": {
                      "description": "Indicates whether this solution is the recommended.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "IsRecommendSolution",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "True",
                            "value": "true",
                            "description": "This solution is the recommended."
                          },
                          {
                            "name": "False",
                            "value": "false",
                            "description": "This solution is not the recommended."
                          }
                        ]
                      }
                    }
                  }
                },
                "readOnly": true,
                "x-ms-identifiers": [
                  "recommendationSolutionIndex"
                ]
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "recommendationId"
          ]
        },
        "guidance": {
          "type": "string",
          "description": "The evidence upload guidance description.",
          "readOnly": true
        },
        "justification": {
          "type": "string",
          "description": "The justification given by the user to clarify the reason.",
          "readOnly": true
        },
        "evidenceFiles": {
          "type": "array",
          "description": "List of evidence file url.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ResponsibilityEnvironment": {
      "type": "string",
      "description": "Indicates the customer responsibility supported cloud environment.",
      "enum": [
        "Azure",
        "AWS",
        "GCP",
        "General"
      ],
      "x-ms-enum": {
        "name": "ResponsibilityEnvironment",
        "modelAsString": true,
        "values": [
          {
            "name": "Azure",
            "value": "Azure",
            "description": "The responsibility is supported in Azure."
          },
          {
            "name": "AWS",
            "value": "AWS",
            "description": "The responsibility is supported in AWS."
          },
          {
            "name": "GCP",
            "value": "GCP",
            "description": "The responsibility is supported in GCP."
          },
          {
            "name": "General",
            "value": "General",
            "description": "The responsibility is general requirement of all environment."
          }
        ]
      }
    },
    "ResponsibilityResource": {
      "type": "object",
      "description": "A class represent the resource.",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The Id of the resource.",
          "readOnly": true
        },
        "accountId": {
          "type": "string",
          "description": "Account Id. For example - AWS account Id.",
          "readOnly": true
        },
        "resourceType": {
          "type": "string",
          "description": "The type of the resource. e.g. \"Microsoft.SignalRService/SignalR\"",
          "readOnly": true
        },
        "resourceOrigin": {
          "description": "Resource origin.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Azure",
            "AWS",
            "GCP"
          ],
          "x-ms-enum": {
            "name": "ResourceOrigin",
            "modelAsString": true,
            "values": [
              {
                "name": "Azure",
                "value": "Azure",
                "description": "The resource is from Azure."
              },
              {
                "name": "AWS",
                "value": "AWS",
                "description": "The resource is from AWS."
              },
              {
                "name": "GCP",
                "value": "GCP",
                "description": "The resource is from GCP."
              }
            ]
          }
        },
        "resourceStatus": {
          "description": "Resource status.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Healthy",
            "Unhealthy"
          ],
          "x-ms-enum": {
            "name": "ResourceStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Healthy",
                "value": "Healthy",
                "description": "The resource is healthy."
              },
              {
                "name": "Unhealthy",
                "value": "Unhealthy",
                "description": "The resource is unhealthy."
              }
            ]
          }
        },
        "resourceStatusChangeDate": {
          "type": "string",
          "format": "date-time",
          "description": "The status change date for the resource.",
          "readOnly": true
        },
        "recommendationIds": {
          "type": "array",
          "description": "List of recommendation id.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ResponsibilitySeverity": {
      "type": "string",
      "description": "Indicates the customer responsibility severity.",
      "enum": [
        "High",
        "Medium",
        "Low"
      ],
      "x-ms-enum": {
        "name": "ResponsibilitySeverity",
        "modelAsString": true,
        "values": [
          {
            "name": "High",
            "value": "High",
            "description": "The responsibility is high severity."
          },
          {
            "name": "Medium",
            "value": "Medium",
            "description": "The responsibility is medium severity."
          },
          {
            "name": "Low",
            "value": "Low",
            "description": "The responsibility is low severity."
          }
        ]
      }
    },
    "ResponsibilityStatus": {
      "type": "string",
      "description": "Indicates the customer responsibility status.",
      "enum": [
        "Passed",
        "Failed",
        "NotApplicable",
        "PendingApproval"
      ],
      "x-ms-enum": {
        "name": "ResponsibilityStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Passed",
            "value": "Passed",
            "description": "The responsibility is passed."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The responsibility is failed."
          },
          {
            "name": "NotApplicable",
            "value": "NotApplicable",
            "description": "The responsibility is not applicable."
          },
          {
            "name": "PendingApproval",
            "value": "PendingApproval",
            "description": "The responsibility is pending for approval."
          }
        ]
      }
    },
    "ResponsibilityType": {
      "type": "string",
      "description": "Indicates the customer responsibility type.",
      "enum": [
        "Automated",
        "ScopedManual",
        "Manual"
      ],
      "x-ms-enum": {
        "name": "ResponsibilityType",
        "modelAsString": true,
        "values": [
          {
            "name": "Automated",
            "value": "Automated",
            "description": "The responsibility is automated."
          },
          {
            "name": "ScopedManual",
            "value": "ScopedManual",
            "description": "The responsibility is scoped manual."
          },
          {
            "name": "Manual",
            "value": "Manual",
            "description": "The responsibility is manual."
          }
        ]
      }
    },
    "Result": {
      "type": "string",
      "description": "Indicates whether the fix action is Succeeded or Failed.",
      "enum": [
        "Succeeded",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "Result",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "The result is succeeded."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The result is failed."
          }
        ]
      },
      "readOnly": true
    },
    "Rule": {
      "type": "string",
      "description": "Scoping question rule.",
      "enum": [
        "Required",
        "CharLength",
        "Url",
        "Urls",
        "Domains",
        "USPrivacyShield",
        "PublicSOX",
        "CreditCardPCI",
        "AzureApplication",
        "ValidGuid",
        "PublisherVerification",
        "DynamicDropdown",
        "PreventNonEnglishChar",
        "ValidEmail"
      ],
      "x-ms-enum": {
        "name": "Rule",
        "modelAsString": true,
        "values": [
          {
            "name": "Required",
            "value": "Required",
            "description": "The question is required to answer."
          },
          {
            "name": "CharLength",
            "value": "CharLength",
            "description": "The question answer length is limited."
          },
          {
            "name": "Url",
            "value": "Url",
            "description": "The question answer should be an Url."
          },
          {
            "name": "Urls",
            "value": "Urls",
            "description": "The question answer should be Urls."
          },
          {
            "name": "Domains",
            "value": "Domains",
            "description": "The question answer should be domains."
          },
          {
            "name": "USPrivacyShield",
            "value": "USPrivacyShield",
            "description": "The question answer should be a UsPrivacyShield."
          },
          {
            "name": "PublicSOX",
            "value": "PublicSOX",
            "description": "The question answer should be a PublicSOX."
          },
          {
            "name": "CreditCardPCI",
            "value": "CreditCardPCI",
            "description": "The question answer should be a CreditCardPCI."
          },
          {
            "name": "AzureApplication",
            "value": "AzureApplication",
            "description": "The question answer should be an AzureApplication."
          },
          {
            "name": "ValidGuid",
            "value": "ValidGuid",
            "description": "The question answer should be a valid guid."
          },
          {
            "name": "PublisherVerification",
            "value": "PublisherVerification",
            "description": "The question answer should be publisher verification."
          },
          {
            "name": "DynamicDropdown",
            "value": "DynamicDropdown",
            "description": "The question answer should be dynamic dropdown."
          },
          {
            "name": "PreventNonEnglishChar",
            "value": "PreventNonEnglishChar",
            "description": "The question answer should prevent non-english char."
          },
          {
            "name": "ValidEmail",
            "value": "ValidEmail",
            "description": "The question answer should be a valid email."
          }
        ]
      }
    },
    "ScopingAnswer": {
      "type": "object",
      "description": "Scoping answer.",
      "properties": {
        "questionId": {
          "type": "string",
          "description": "Question id.",
          "pattern": "^[-a-zA-Z0-9_]{1,50}$"
        },
        "answers": {
          "type": "array",
          "description": "Question answer value list.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "questionId",
        "answers"
      ]
    },
    "ScopingConfigurationProperties": {
      "type": "object",
      "description": "ScopingConfiguration's properties.",
      "properties": {
        "answers": {
          "type": "array",
          "description": "List of scoping question answers.",
          "items": {
            "type": "object",
            "description": "Scoping answer.",
            "properties": {
              "questionId": {
                "type": "string",
                "description": "Question id.",
                "pattern": "^[-a-zA-Z0-9_]{1,50}$"
              },
              "answers": {
                "type": "array",
                "description": "Question answer value list.",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "questionId",
              "answers"
            ]
          },
          "x-ms-identifiers": [
            "questionId"
          ]
        },
        "provisioningState": {
          "description": "Azure lifecycle management",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Creating",
            "Deleting",
            "Fixing",
            "Verifying",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "The provision is succeeded."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "The provision is failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "The provision is canceled."
              },
              {
                "name": "Creating",
                "value": "Creating",
                "description": "The creation is in progress."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "The deletion is in progress."
              },
              {
                "name": "Fixing",
                "value": "Fixing",
                "description": "The fix of the resource in progress."
              },
              {
                "name": "Verifying",
                "value": "Verifying",
                "description": "The verification of the resource in progress."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "The update of the resource in progress."
              }
            ]
          }
        }
      }
    },
    "ScopingConfigurationResource": {
      "type": "object",
      "description": "A class represent an AppComplianceAutomation scoping configuration resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "ScopingConfiguration property.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "answers": {
              "type": "array",
              "description": "List of scoping question answers.",
              "items": {
                "type": "object",
                "description": "Scoping answer.",
                "properties": {
                  "questionId": {
                    "type": "string",
                    "description": "Question id.",
                    "pattern": "^[-a-zA-Z0-9_]{1,50}$"
                  },
                  "answers": {
                    "type": "array",
                    "description": "Question answer value list.",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "questionId",
                  "answers"
                ]
              },
              "x-ms-identifiers": [
                "questionId"
              ]
            },
            "provisioningState": {
              "description": "Azure lifecycle management",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Creating",
                "Deleting",
                "Fixing",
                "Verifying",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "The provision is succeeded."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "The provision is failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "The provision is canceled."
                  },
                  {
                    "name": "Creating",
                    "value": "Creating",
                    "description": "The creation is in progress."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "The deletion is in progress."
                  },
                  {
                    "name": "Fixing",
                    "value": "Fixing",
                    "description": "The fix of the resource in progress."
                  },
                  {
                    "name": "Verifying",
                    "value": "Verifying",
                    "description": "The verification of the resource in progress."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "The update of the resource in progress."
                  }
                ]
              }
            }
          }
        }
      },
      "required": [
        "properties"
      ]
    },
    "ScopingConfigurationResourceListResult": {
      "type": "object",
      "description": "The response of a ScopingConfigurationResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ScopingConfigurationResource items on this page",
          "items": {
            "type": "object",
            "description": "A class represent an AppComplianceAutomation scoping configuration resource.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "ScopingConfiguration property.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "answers": {
                    "type": "array",
                    "description": "List of scoping question answers.",
                    "items": {
                      "type": "object",
                      "description": "Scoping answer.",
                      "properties": {
                        "questionId": {
                          "type": "string",
                          "description": "Question id.",
                          "pattern": "^[-a-zA-Z0-9_]{1,50}$"
                        },
                        "answers": {
                          "type": "array",
                          "description": "Question answer value list.",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "questionId",
                        "answers"
                      ]
                    },
                    "x-ms-identifiers": [
                      "questionId"
                    ]
                  },
                  "provisioningState": {
                    "description": "Azure lifecycle management",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Creating",
                      "Deleting",
                      "Fixing",
                      "Verifying",
                      "Updating"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "The provision is succeeded."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "The provision is failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "The provision is canceled."
                        },
                        {
                          "name": "Creating",
                          "value": "Creating",
                          "description": "The creation is in progress."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "The deletion is in progress."
                        },
                        {
                          "name": "Fixing",
                          "value": "Fixing",
                          "description": "The fix of the resource in progress."
                        },
                        {
                          "name": "Verifying",
                          "value": "Verifying",
                          "description": "The verification of the resource in progress."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "The update of the resource in progress."
                        }
                      ]
                    }
                  }
                }
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ScopingQuestion": {
      "type": "object",
      "description": "The definition of a scoping question.",
      "properties": {
        "questionId": {
          "type": "string",
          "description": "Question id.",
          "readOnly": true
        },
        "superiorQuestionId": {
          "type": "string",
          "description": "Superior question id.",
          "readOnly": true
        },
        "inputType": {
          "description": "Input type of the question answer.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "None",
            "Text",
            "Email",
            "MultilineText",
            "Url",
            "Number",
            "Boolean",
            "Telephone",
            "YesNoNa",
            "Date",
            "YearPicker",
            "SingleSelection",
            "SingleSelectDropdown",
            "MultiSelectCheckbox",
            "MultiSelectDropdown",
            "MultiSelectDropdownCustom",
            "Group",
            "Upload"
          ],
          "x-ms-enum": {
            "name": "InputType",
            "modelAsString": true,
            "values": [
              {
                "name": "None",
                "value": "None",
                "description": "The input type is a text box."
              },
              {
                "name": "Text",
                "value": "Text",
                "description": "The input content is text string."
              },
              {
                "name": "Email",
                "value": "Email",
                "description": "The input content should be an email address."
              },
              {
                "name": "MultilineText",
                "value": "MultilineText",
                "description": "The input content should be multiline text."
              },
              {
                "name": "Url",
                "value": "Url",
                "description": "The input content should be a URL."
              },
              {
                "name": "Number",
                "value": "Number",
                "description": "The input content should be a number."
              },
              {
                "name": "Boolean",
                "value": "Boolean",
                "description": "The input content should be a boolean."
              },
              {
                "name": "Telephone",
                "value": "Telephone",
                "description": "The input content should be a telephone number."
              },
              {
                "name": "YesNoNa",
                "value": "YesNoNa",
                "description": "The input content should be Yes, No or Na."
              },
              {
                "name": "Date",
                "value": "Date",
                "description": "The input content should be a date."
              },
              {
                "name": "YearPicker",
                "value": "YearPicker",
                "description": "The input content is a Year, pick from the dropdown list."
              },
              {
                "name": "SingleSelection",
                "value": "SingleSelection",
                "description": "The input content is a single result seleted from the options."
              },
              {
                "name": "SingleSelectDropdown",
                "value": "SingleSelectDropdown",
                "description": "The input content is a single result seleted from the dropdown options."
              },
              {
                "name": "MultiSelectCheckbox",
                "value": "MultiSelectCheckbox",
                "description": "The input content are multiple results seleted from the checkboxes."
              },
              {
                "name": "MultiSelectDropdown",
                "value": "MultiSelectDropdown",
                "description": "The input content are multiple results seleted from the dropdown options."
              },
              {
                "name": "MultiSelectDropdownCustom",
                "value": "MultiSelectDropdownCustom",
                "description": "The input content are result seleted from the custom dropdown options."
              },
              {
                "name": "Group",
                "value": "Group",
                "description": "The input content is a group of answers."
              },
              {
                "name": "Upload",
                "value": "Upload",
                "description": "The input content is a uploaded file."
              }
            ]
          }
        },
        "optionIds": {
          "type": "array",
          "description": "Option id list.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "rules": {
          "type": "array",
          "description": "The rule of the question.",
          "items": {
            "type": "string",
            "description": "Scoping question rule.",
            "enum": [
              "Required",
              "CharLength",
              "Url",
              "Urls",
              "Domains",
              "USPrivacyShield",
              "PublicSOX",
              "CreditCardPCI",
              "AzureApplication",
              "ValidGuid",
              "PublisherVerification",
              "DynamicDropdown",
              "PreventNonEnglishChar",
              "ValidEmail"
            ],
            "x-ms-enum": {
              "name": "Rule",
              "modelAsString": true,
              "values": [
                {
                  "name": "Required",
                  "value": "Required",
                  "description": "The question is required to answer."
                },
                {
                  "name": "CharLength",
                  "value": "CharLength",
                  "description": "The question answer length is limited."
                },
                {
                  "name": "Url",
                  "value": "Url",
                  "description": "The question answer should be an Url."
                },
                {
                  "name": "Urls",
                  "value": "Urls",
                  "description": "The question answer should be Urls."
                },
                {
                  "name": "Domains",
                  "value": "Domains",
                  "description": "The question answer should be domains."
                },
                {
                  "name": "USPrivacyShield",
                  "value": "USPrivacyShield",
                  "description": "The question answer should be a UsPrivacyShield."
                },
                {
                  "name": "PublicSOX",
                  "value": "PublicSOX",
                  "description": "The question answer should be a PublicSOX."
                },
                {
                  "name": "CreditCardPCI",
                  "value": "CreditCardPCI",
                  "description": "The question answer should be a CreditCardPCI."
                },
                {
                  "name": "AzureApplication",
                  "value": "AzureApplication",
                  "description": "The question answer should be an AzureApplication."
                },
                {
                  "name": "ValidGuid",
                  "value": "ValidGuid",
                  "description": "The question answer should be a valid guid."
                },
                {
                  "name": "PublisherVerification",
                  "value": "PublisherVerification",
                  "description": "The question answer should be publisher verification."
                },
                {
                  "name": "DynamicDropdown",
                  "value": "DynamicDropdown",
                  "description": "The question answer should be dynamic dropdown."
                },
                {
                  "name": "PreventNonEnglishChar",
                  "value": "PreventNonEnglishChar",
                  "description": "The question answer should prevent non-english char."
                },
                {
                  "name": "ValidEmail",
                  "value": "ValidEmail",
                  "description": "The question answer should be a valid email."
                }
              ]
            }
          },
          "readOnly": true
        },
        "showSubQuestionsValue": {
          "type": "string",
          "description": "The answer value to show the sub questions.",
          "readOnly": true
        }
      },
      "required": [
        "questionId",
        "inputType",
        "optionIds",
        "rules"
      ]
    },
    "ScopingQuestions": {
      "type": "object",
      "description": "Scoping question list.",
      "properties": {
        "questions": {
          "type": "array",
          "description": "List of scoping questions.",
          "items": {
            "type": "object",
            "description": "The definition of a scoping question.",
            "properties": {
              "questionId": {
                "type": "string",
                "description": "Question id.",
                "readOnly": true
              },
              "superiorQuestionId": {
                "type": "string",
                "description": "Superior question id.",
                "readOnly": true
              },
              "inputType": {
                "description": "Input type of the question answer.",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "None",
                  "Text",
                  "Email",
                  "MultilineText",
                  "Url",
                  "Number",
                  "Boolean",
                  "Telephone",
                  "YesNoNa",
                  "Date",
                  "YearPicker",
                  "SingleSelection",
                  "SingleSelectDropdown",
                  "MultiSelectCheckbox",
                  "MultiSelectDropdown",
                  "MultiSelectDropdownCustom",
                  "Group",
                  "Upload"
                ],
                "x-ms-enum": {
                  "name": "InputType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "None",
                      "value": "None",
                      "description": "The input type is a text box."
                    },
                    {
                      "name": "Text",
                      "value": "Text",
                      "description": "The input content is text string."
                    },
                    {
                      "name": "Email",
                      "value": "Email",
                      "description": "The input content should be an email address."
                    },
                    {
                      "name": "MultilineText",
                      "value": "MultilineText",
                      "description": "The input content should be multiline text."
                    },
                    {
                      "name": "Url",
                      "value": "Url",
                      "description": "The input content should be a URL."
                    },
                    {
                      "name": "Number",
                      "value": "Number",
                      "description": "The input content should be a number."
                    },
                    {
                      "name": "Boolean",
                      "value": "Boolean",
                      "description": "The input content should be a boolean."
                    },
                    {
                      "name": "Telephone",
                      "value": "Telephone",
                      "description": "The input content should be a telephone number."
                    },
                    {
                      "name": "YesNoNa",
                      "value": "YesNoNa",
                      "description": "The input content should be Yes, No or Na."
                    },
                    {
                      "name": "Date",
                      "value": "Date",
                      "description": "The input content should be a date."
                    },
                    {
                      "name": "YearPicker",
                      "value": "YearPicker",
                      "description": "The input content is a Year, pick from the dropdown list."
                    },
                    {
                      "name": "SingleSelection",
                      "value": "SingleSelection",
                      "description": "The input content is a single result seleted from the options."
                    },
                    {
                      "name": "SingleSelectDropdown",
                      "value": "SingleSelectDropdown",
                      "description": "The input content is a single result seleted from the dropdown options."
                    },
                    {
                      "name": "MultiSelectCheckbox",
                      "value": "MultiSelectCheckbox",
                      "description": "The input content are multiple results seleted from the checkboxes."
                    },
                    {
                      "name": "MultiSelectDropdown",
                      "value": "MultiSelectDropdown",
                      "description": "The input content are multiple results seleted from the dropdown options."
                    },
                    {
                      "name": "MultiSelectDropdownCustom",
                      "value": "MultiSelectDropdownCustom",
                      "description": "The input content are result seleted from the custom dropdown options."
                    },
                    {
                      "name": "Group",
                      "value": "Group",
                      "description": "The input content is a group of answers."
                    },
                    {
                      "name": "Upload",
                      "value": "Upload",
                      "description": "The input content is a uploaded file."
                    }
                  ]
                }
              },
              "optionIds": {
                "type": "array",
                "description": "Option id list.",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              },
              "rules": {
                "type": "array",
                "description": "The rule of the question.",
                "items": {
                  "type": "string",
                  "description": "Scoping question rule.",
                  "enum": [
                    "Required",
                    "CharLength",
                    "Url",
                    "Urls",
                    "Domains",
                    "USPrivacyShield",
                    "PublicSOX",
                    "CreditCardPCI",
                    "AzureApplication",
                    "ValidGuid",
                    "PublisherVerification",
                    "DynamicDropdown",
                    "PreventNonEnglishChar",
                    "ValidEmail"
                  ],
                  "x-ms-enum": {
                    "name": "Rule",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Required",
                        "value": "Required",
                        "description": "The question is required to answer."
                      },
                      {
                        "name": "CharLength",
                        "value": "CharLength",
                        "description": "The question answer length is limited."
                      },
                      {
                        "name": "Url",
                        "value": "Url",
                        "description": "The question answer should be an Url."
                      },
                      {
                        "name": "Urls",
                        "value": "Urls",
                        "description": "The question answer should be Urls."
                      },
                      {
                        "name": "Domains",
                        "value": "Domains",
                        "description": "The question answer should be domains."
                      },
                      {
                        "name": "USPrivacyShield",
                        "value": "USPrivacyShield",
                        "description": "The question answer should be a UsPrivacyShield."
                      },
                      {
                        "name": "PublicSOX",
                        "value": "PublicSOX",
                        "description": "The question answer should be a PublicSOX."
                      },
                      {
                        "name": "CreditCardPCI",
                        "value": "CreditCardPCI",
                        "description": "The question answer should be a CreditCardPCI."
                      },
                      {
                        "name": "AzureApplication",
                        "value": "AzureApplication",
                        "description": "The question answer should be an AzureApplication."
                      },
                      {
                        "name": "ValidGuid",
                        "value": "ValidGuid",
                        "description": "The question answer should be a valid guid."
                      },
                      {
                        "name": "PublisherVerification",
                        "value": "PublisherVerification",
                        "description": "The question answer should be publisher verification."
                      },
                      {
                        "name": "DynamicDropdown",
                        "value": "DynamicDropdown",
                        "description": "The question answer should be dynamic dropdown."
                      },
                      {
                        "name": "PreventNonEnglishChar",
                        "value": "PreventNonEnglishChar",
                        "description": "The question answer should prevent non-english char."
                      },
                      {
                        "name": "ValidEmail",
                        "value": "ValidEmail",
                        "description": "The question answer should be a valid email."
                      }
                    ]
                  }
                },
                "readOnly": true
              },
              "showSubQuestionsValue": {
                "type": "string",
                "description": "The answer value to show the sub questions.",
                "readOnly": true
              }
            },
            "required": [
              "questionId",
              "inputType",
              "optionIds",
              "rules"
            ]
          },
          "x-ms-identifiers": [
            "questionId"
          ]
        }
      }
    },
    "SendAllEvents": {
      "type": "string",
      "description": "whether to send notification under any event.",
      "enum": [
        "true",
        "false"
      ],
      "x-ms-enum": {
        "name": "SendAllEvents",
        "modelAsString": true,
        "values": [
          {
            "name": "True",
            "value": "true",
            "description": "Need send notification under any event."
          },
          {
            "name": "False",
            "value": "false",
            "description": "No need to send notification under any event."
          }
        ]
      }
    },
    "SnapshotDownloadRequest": {
      "type": "object",
      "description": "Snapshot's download request.",
      "properties": {
        "reportCreatorTenantId": {
          "type": "string",
          "description": "Tenant id."
        },
        "downloadType": {
          "description": "Indicates the download type.",
          "type": "string",
          "enum": [
            "ComplianceReport",
            "CompliancePdfReport",
            "ComplianceDetailedPdfReport",
            "ResourceList"
          ],
          "x-ms-enum": {
            "name": "DownloadType",
            "modelAsString": true,
            "values": [
              {
                "name": "ComplianceReport",
                "value": "ComplianceReport",
                "description": "Download the compliance report."
              },
              {
                "name": "CompliancePdfReport",
                "value": "CompliancePdfReport",
                "description": "Download the compliance pdf report."
              },
              {
                "name": "ComplianceDetailedPdfReport",
                "value": "ComplianceDetailedPdfReport",
                "description": "Download the detailed compliance pdf report."
              },
              {
                "name": "ResourceList",
                "value": "ResourceList",
                "description": "Download the resource list of the report."
              }
            ]
          }
        },
        "offerGuid": {
          "type": "string",
          "description": "The offerGuid which mapping to the reports.",
          "minLength": 1
        }
      },
      "required": [
        "downloadType"
      ]
    },
    "SnapshotProperties": {
      "type": "object",
      "description": "Snapshot's properties.",
      "properties": {
        "snapshotName": {
          "type": "string",
          "description": "Snapshot name.",
          "readOnly": true
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC).",
          "readOnly": true
        },
        "provisioningState": {
          "description": "Azure lifecycle management",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Creating",
            "Deleting",
            "Fixing",
            "Verifying",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "The provision is succeeded."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "The provision is failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "The provision is canceled."
              },
              {
                "name": "Creating",
                "value": "Creating",
                "description": "The creation is in progress."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "The deletion is in progress."
              },
              {
                "name": "Fixing",
                "value": "Fixing",
                "description": "The fix of the resource in progress."
              },
              {
                "name": "Verifying",
                "value": "Verifying",
                "description": "The verification of the resource in progress."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "The update of the resource in progress."
              }
            ]
          }
        },
        "reportProperties": {
          "description": "The report essential info.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "triggerTime": {
              "type": "string",
              "format": "date-time",
              "description": "Report collection trigger time."
            },
            "timeZone": {
              "type": "string",
              "description": "Report collection trigger time's time zone, the available list can be obtained by executing \"Get-TimeZone -ListAvailable\" in PowerShell.\nAn example of valid timezone id is \"Pacific Standard Time\"."
            },
            "resources": {
              "type": "array",
              "description": "List of resource data.",
              "items": {
                "type": "object",
                "description": "Single resource Id's metadata.",
                "properties": {
                  "resourceId": {
                    "type": "string",
                    "description": "Resource Id - e.g. \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1\"."
                  },
                  "resourceType": {
                    "type": "string",
                    "description": "Resource type. e.g. \"Microsoft.Compute/virtualMachines\""
                  },
                  "resourceKind": {
                    "type": "string",
                    "description": "Resource kind."
                  },
                  "resourceOrigin": {
                    "description": "Resource Origin.",
                    "type": "string",
                    "enum": [
                      "Azure",
                      "AWS",
                      "GCP"
                    ],
                    "x-ms-enum": {
                      "name": "ResourceOrigin",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Azure",
                          "value": "Azure",
                          "description": "The resource is from Azure."
                        },
                        {
                          "name": "AWS",
                          "value": "AWS",
                          "description": "The resource is from AWS."
                        },
                        {
                          "name": "GCP",
                          "value": "GCP",
                          "description": "The resource is from GCP."
                        }
                      ]
                    }
                  },
                  "accountId": {
                    "type": "string",
                    "description": "Account Id. For example - the AWS account id."
                  }
                },
                "required": [
                  "resourceId"
                ]
              },
              "x-ms-identifiers": [
                "resourceId"
              ]
            },
            "status": {
              "description": "Report status.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Active",
                "Failed",
                "Reviewing",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "ReportStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Active",
                    "value": "Active",
                    "description": "The report is active."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "The report is failed."
                  },
                  {
                    "name": "Reviewing",
                    "value": "Reviewing",
                    "description": "The report is under reviewing."
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "The report is disabled."
                  }
                ]
              }
            },
            "errors": {
              "type": "array",
              "description": "List of report error codes.",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "description": "Report's tenant id.",
              "readOnly": true
            },
            "offerGuid": {
              "type": "string",
              "description": "A list of comma-separated offerGuids indicates a series of offerGuids that map to the report. For example, \"00000000-0000-0000-0000-000000000001,00000000-0000-0000-0000-000000000002\" and \"00000000-0000-0000-0000-000000000003\"."
            },
            "nextTriggerTime": {
              "type": "string",
              "format": "date-time",
              "description": "Report next collection trigger time.",
              "readOnly": true
            },
            "lastTriggerTime": {
              "type": "string",
              "format": "date-time",
              "description": "Report last collection trigger time.",
              "readOnly": true
            },
            "subscriptions": {
              "type": "array",
              "description": "List of subscription Ids.",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "complianceStatus": {
              "description": "Report compliance status.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "m365": {
                  "description": "The Microsoft 365 certification name.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "passedCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The count of all passed control.",
                      "readOnly": true
                    },
                    "failedCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The count of all failed control.",
                      "readOnly": true
                    },
                    "manualCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The count of all manual control.",
                      "readOnly": true
                    },
                    "notApplicableCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The count of all not applicable control.",
                      "readOnly": true
                    },
                    "pendingCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The count of all pending for approval control.",
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "storageInfo": {
              "type": "object",
              "description": "The information of 'bring your own storage' account binding to the report",
              "properties": {
                "subscriptionId": {
                  "type": "string",
                  "description": "The subscription id which 'bring your own storage' account belongs to"
                },
                "resourceGroup": {
                  "type": "string",
                  "description": "The resourceGroup which 'bring your own storage' account belongs to"
                },
                "accountName": {
                  "type": "string",
                  "description": "'bring your own storage' account name"
                },
                "location": {
                  "type": "string",
                  "description": "The region of 'bring your own storage' account"
                }
              }
            },
            "certRecords": {
              "type": "array",
              "description": "List of synchronized certification records.",
              "items": {
                "type": "object",
                "description": "A class represent the certification record synchronized from app compliance.",
                "properties": {
                  "offerGuid": {
                    "type": "string",
                    "description": "The offerGuid which mapping to the reports.",
                    "minLength": 1
                  },
                  "certificationStatus": {
                    "type": "string",
                    "description": "Indicates the status of certification process."
                  },
                  "ingestionStatus": {
                    "type": "string",
                    "description": "Indicates the status of compliance process."
                  },
                  "controls": {
                    "type": "array",
                    "description": "The control records list to be synchronized.",
                    "items": {
                      "type": "object",
                      "description": "A class represent the control record synchronized from app compliance.",
                      "properties": {
                        "controlId": {
                          "type": "string",
                          "description": "The Id of the control. e.g. \"Operational_Security_10\""
                        },
                        "controlStatus": {
                          "type": "string",
                          "description": "Control status synchronized from app compliance."
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "controlId"
                    ]
                  }
                }
              },
              "readOnly": true,
              "x-ms-identifiers": [
                "offerGuid"
              ]
            },
            "provisioningState": {
              "description": "Azure lifecycle management",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Creating",
                "Deleting",
                "Fixing",
                "Verifying",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "The provision is succeeded."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "The provision is failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "The provision is canceled."
                  },
                  {
                    "name": "Creating",
                    "value": "Creating",
                    "description": "The creation is in progress."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "The deletion is in progress."
                  },
                  {
                    "name": "Fixing",
                    "value": "Fixing",
                    "description": "The fix of the resource in progress."
                  },
                  {
                    "name": "Verifying",
                    "value": "Verifying",
                    "description": "The verification of the resource in progress."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "The update of the resource in progress."
                  }
                ]
              }
            }
          },
          "required": [
            "triggerTime",
            "timeZone",
            "resources"
          ]
        },
        "reportSystemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "complianceResults": {
          "type": "array",
          "description": "List of compliance results.",
          "items": {
            "type": "object",
            "description": "A class represent the compliance result.",
            "properties": {
              "complianceName": {
                "type": "string",
                "description": "The name of the compliance. e.g. \"M365\"",
                "readOnly": true
              },
              "categories": {
                "type": "array",
                "description": "List of categories.",
                "items": {
                  "type": "object",
                  "description": "A class represent the compliance category.",
                  "properties": {
                    "categoryName": {
                      "type": "string",
                      "description": "The name of the compliance category. e.g. \"Operational Security\"",
                      "readOnly": true
                    },
                    "categoryStatus": {
                      "description": "Category status.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Passed",
                        "Failed",
                        "NotApplicable",
                        "PendingApproval"
                      ],
                      "x-ms-enum": {
                        "name": "CategoryStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Passed",
                            "value": "Passed",
                            "description": "The category is passed."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The category is failed."
                          },
                          {
                            "name": "NotApplicable",
                            "value": "NotApplicable",
                            "description": "The category is not applicable."
                          },
                          {
                            "name": "PendingApproval",
                            "value": "PendingApproval",
                            "description": "The category is pending for approval."
                          }
                        ]
                      }
                    },
                    "controlFamilies": {
                      "type": "array",
                      "description": "List of control families.",
                      "items": {
                        "type": "object",
                        "description": "A class represent the control family.",
                        "properties": {
                          "controlFamilyName": {
                            "type": "string",
                            "description": "The name of the control family. e.g. \"Malware Protection - Anti-Virus\"",
                            "readOnly": true
                          },
                          "controlFamilyStatus": {
                            "description": "The control family status",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Passed",
                              "Failed",
                              "NotApplicable",
                              "PendingApproval"
                            ],
                            "x-ms-enum": {
                              "name": "ControlFamilyStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Passed",
                                  "value": "Passed",
                                  "description": "The control family is passed."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "The control family is failed."
                                },
                                {
                                  "name": "NotApplicable",
                                  "value": "NotApplicable",
                                  "description": "The control family is not applicable."
                                },
                                {
                                  "name": "PendingApproval",
                                  "value": "PendingApproval",
                                  "description": "The control family is pending for approval."
                                }
                              ]
                            }
                          },
                          "controls": {
                            "type": "array",
                            "description": "List of controls.",
                            "items": {
                              "type": "object",
                              "description": "A class represent the control.",
                              "properties": {
                                "controlId": {
                                  "type": "string",
                                  "description": "The Id of the control. e.g. \"Operational_Security_10\"",
                                  "readOnly": true
                                },
                                "controlName": {
                                  "type": "string",
                                  "description": "The name of the control. e.g. \"Unsupported OS and Software.\"",
                                  "readOnly": true
                                },
                                "controlFullName": {
                                  "type": "string",
                                  "description": "The full name of the control. e.g. \"Validate that unsupported operating systems and software components are not in use.\"",
                                  "readOnly": true
                                },
                                "controlDescription": {
                                  "type": "string",
                                  "description": "The control's description",
                                  "readOnly": true
                                },
                                "controlDescriptionHyperLink": {
                                  "type": "string",
                                  "description": "The hyper link to the control's description'.",
                                  "readOnly": true
                                },
                                "controlStatus": {
                                  "description": "Control status.",
                                  "readOnly": true,
                                  "type": "string",
                                  "enum": [
                                    "Passed",
                                    "Failed",
                                    "NotApplicable",
                                    "PendingApproval"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ControlStatus",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Passed",
                                        "value": "Passed",
                                        "description": "The control is passed."
                                      },
                                      {
                                        "name": "Failed",
                                        "value": "Failed",
                                        "description": "The control is failed."
                                      },
                                      {
                                        "name": "NotApplicable",
                                        "value": "NotApplicable",
                                        "description": "The control is not applicable."
                                      },
                                      {
                                        "name": "PendingApproval",
                                        "value": "PendingApproval",
                                        "description": "The control is pending for approval."
                                      }
                                    ]
                                  }
                                },
                                "responsibilities": {
                                  "type": "array",
                                  "description": "List of customer responsibility.",
                                  "items": {
                                    "type": "object",
                                    "description": "A class represent the customer responsibility.",
                                    "properties": {
                                      "responsibilityId": {
                                        "type": "string",
                                        "description": "The id of the customer responsibility.",
                                        "readOnly": true
                                      },
                                      "responsibilityTitle": {
                                        "type": "string",
                                        "description": "The title of the customer responsibility.",
                                        "readOnly": true
                                      },
                                      "responsibilityDescription": {
                                        "type": "string",
                                        "description": "The description of the customer responsibility.",
                                        "readOnly": true
                                      },
                                      "responsibilityType": {
                                        "description": "The type of customer responsibility.",
                                        "readOnly": true,
                                        "type": "string",
                                        "enum": [
                                          "Automated",
                                          "ScopedManual",
                                          "Manual"
                                        ],
                                        "x-ms-enum": {
                                          "name": "ResponsibilityType",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Automated",
                                              "value": "Automated",
                                              "description": "The responsibility is automated."
                                            },
                                            {
                                              "name": "ScopedManual",
                                              "value": "ScopedManual",
                                              "description": "The responsibility is scoped manual."
                                            },
                                            {
                                              "name": "Manual",
                                              "value": "Manual",
                                              "description": "The responsibility is manual."
                                            }
                                          ]
                                        }
                                      },
                                      "responsibilitySeverity": {
                                        "description": "The severity level of this customer responsibility.",
                                        "readOnly": true,
                                        "type": "string",
                                        "enum": [
                                          "High",
                                          "Medium",
                                          "Low"
                                        ],
                                        "x-ms-enum": {
                                          "name": "ResponsibilitySeverity",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "High",
                                              "value": "High",
                                              "description": "The responsibility is high severity."
                                            },
                                            {
                                              "name": "Medium",
                                              "value": "Medium",
                                              "description": "The responsibility is medium severity."
                                            },
                                            {
                                              "name": "Low",
                                              "value": "Low",
                                              "description": "The responsibility is low severity."
                                            }
                                          ]
                                        }
                                      },
                                      "responsibilityStatus": {
                                        "description": "The status of this customer responsibility.",
                                        "readOnly": true,
                                        "type": "string",
                                        "enum": [
                                          "Passed",
                                          "Failed",
                                          "NotApplicable",
                                          "PendingApproval"
                                        ],
                                        "x-ms-enum": {
                                          "name": "ResponsibilityStatus",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Passed",
                                              "value": "Passed",
                                              "description": "The responsibility is passed."
                                            },
                                            {
                                              "name": "Failed",
                                              "value": "Failed",
                                              "description": "The responsibility is failed."
                                            },
                                            {
                                              "name": "NotApplicable",
                                              "value": "NotApplicable",
                                              "description": "The responsibility is not applicable."
                                            },
                                            {
                                              "name": "PendingApproval",
                                              "value": "PendingApproval",
                                              "description": "The responsibility is pending for approval."
                                            }
                                          ]
                                        }
                                      },
                                      "responsibilityEnvironment": {
                                        "description": "The supported cloud environment of this customer responsibility.",
                                        "readOnly": true,
                                        "type": "string",
                                        "enum": [
                                          "Azure",
                                          "AWS",
                                          "GCP",
                                          "General"
                                        ],
                                        "x-ms-enum": {
                                          "name": "ResponsibilityEnvironment",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Azure",
                                              "value": "Azure",
                                              "description": "The responsibility is supported in Azure."
                                            },
                                            {
                                              "name": "AWS",
                                              "value": "AWS",
                                              "description": "The responsibility is supported in AWS."
                                            },
                                            {
                                              "name": "GCP",
                                              "value": "GCP",
                                              "description": "The responsibility is supported in GCP."
                                            },
                                            {
                                              "name": "General",
                                              "value": "General",
                                              "description": "The responsibility is general requirement of all environment."
                                            }
                                          ]
                                        }
                                      },
                                      "failedResourceCount": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "The count of all failed resources."
                                      },
                                      "totalResourceCount": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "The count of all resources."
                                      },
                                      "resourceList": {
                                        "type": "array",
                                        "description": "List of resource.",
                                        "items": {
                                          "type": "object",
                                          "description": "A class represent the resource.",
                                          "properties": {
                                            "resourceId": {
                                              "type": "string",
                                              "description": "The Id of the resource.",
                                              "readOnly": true
                                            },
                                            "accountId": {
                                              "type": "string",
                                              "description": "Account Id. For example - AWS account Id.",
                                              "readOnly": true
                                            },
                                            "resourceType": {
                                              "type": "string",
                                              "description": "The type of the resource. e.g. \"Microsoft.SignalRService/SignalR\"",
                                              "readOnly": true
                                            },
                                            "resourceOrigin": {
                                              "description": "Resource origin.",
                                              "readOnly": true,
                                              "type": "string",
                                              "enum": [
                                                "Azure",
                                                "AWS",
                                                "GCP"
                                              ],
                                              "x-ms-enum": {
                                                "name": "ResourceOrigin",
                                                "modelAsString": true,
                                                "values": [
                                                  {
                                                    "name": "Azure",
                                                    "value": "Azure",
                                                    "description": "The resource is from Azure."
                                                  },
                                                  {
                                                    "name": "AWS",
                                                    "value": "AWS",
                                                    "description": "The resource is from AWS."
                                                  },
                                                  {
                                                    "name": "GCP",
                                                    "value": "GCP",
                                                    "description": "The resource is from GCP."
                                                  }
                                                ]
                                              }
                                            },
                                            "resourceStatus": {
                                              "description": "Resource status.",
                                              "readOnly": true,
                                              "type": "string",
                                              "enum": [
                                                "Healthy",
                                                "Unhealthy"
                                              ],
                                              "x-ms-enum": {
                                                "name": "ResourceStatus",
                                                "modelAsString": true,
                                                "values": [
                                                  {
                                                    "name": "Healthy",
                                                    "value": "Healthy",
                                                    "description": "The resource is healthy."
                                                  },
                                                  {
                                                    "name": "Unhealthy",
                                                    "value": "Unhealthy",
                                                    "description": "The resource is unhealthy."
                                                  }
                                                ]
                                              }
                                            },
                                            "resourceStatusChangeDate": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "The status change date for the resource.",
                                              "readOnly": true
                                            },
                                            "recommendationIds": {
                                              "type": "array",
                                              "description": "List of recommendation id.",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "readOnly": true,
                                        "x-ms-identifiers": [
                                          "resourceId"
                                        ]
                                      },
                                      "recommendationList": {
                                        "type": "array",
                                        "description": "List of recommendation.",
                                        "items": {
                                          "type": "object",
                                          "description": "A class represent the recommendation.",
                                          "properties": {
                                            "recommendationId": {
                                              "type": "string",
                                              "description": "The Id of the recommendation.",
                                              "readOnly": true
                                            },
                                            "recommendationShortName": {
                                              "type": "string",
                                              "description": "The short name of the recommendation. e.g. \"Invalid TLS config\"",
                                              "readOnly": true
                                            },
                                            "recommendationSolutions": {
                                              "type": "array",
                                              "description": "List of recommendation solutions.",
                                              "items": {
                                                "type": "object",
                                                "description": "A class represent the recommendation solution.",
                                                "properties": {
                                                  "recommendationSolutionIndex": {
                                                    "type": "string",
                                                    "description": "The index of the recommendation solution.",
                                                    "readOnly": true
                                                  },
                                                  "recommendationSolutionContent": {
                                                    "type": "string",
                                                    "description": "The detail steps of the recommendation solution.",
                                                    "readOnly": true
                                                  },
                                                  "isRecommendSolution": {
                                                    "description": "Indicates whether this solution is the recommended.",
                                                    "readOnly": true,
                                                    "type": "string",
                                                    "enum": [
                                                      "true",
                                                      "false"
                                                    ],
                                                    "x-ms-enum": {
                                                      "name": "IsRecommendSolution",
                                                      "modelAsString": true,
                                                      "values": [
                                                        {
                                                          "name": "True",
                                                          "value": "true",
                                                          "description": "This solution is the recommended."
                                                        },
                                                        {
                                                          "name": "False",
                                                          "value": "false",
                                                          "description": "This solution is not the recommended."
                                                        }
                                                      ]
                                                    }
                                                  }
                                                }
                                              },
                                              "readOnly": true,
                                              "x-ms-identifiers": [
                                                "recommendationSolutionIndex"
                                              ]
                                            }
                                          }
                                        },
                                        "readOnly": true,
                                        "x-ms-identifiers": [
                                          "recommendationId"
                                        ]
                                      },
                                      "guidance": {
                                        "type": "string",
                                        "description": "The evidence upload guidance description.",
                                        "readOnly": true
                                      },
                                      "justification": {
                                        "type": "string",
                                        "description": "The justification given by the user to clarify the reason.",
                                        "readOnly": true
                                      },
                                      "evidenceFiles": {
                                        "type": "array",
                                        "description": "List of evidence file url.",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "x-ms-identifiers": [
                                    "responsibilityId"
                                  ]
                                }
                              }
                            },
                            "readOnly": true,
                            "x-ms-identifiers": [
                              "controlId"
                            ]
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "controlFamilyName"
                      ]
                    }
                  }
                },
                "readOnly": true,
                "x-ms-identifiers": [
                  "categoryName"
                ]
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "complianceName"
          ]
        }
      }
    },
    "SnapshotResource": {
      "type": "object",
      "description": "A class represent a AppComplianceAutomation snapshot resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "Snapshot's property.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "snapshotName": {
              "type": "string",
              "description": "Snapshot name.",
              "readOnly": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC).",
              "readOnly": true
            },
            "provisioningState": {
              "description": "Azure lifecycle management",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Creating",
                "Deleting",
                "Fixing",
                "Verifying",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "The provision is succeeded."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "The provision is failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "The provision is canceled."
                  },
                  {
                    "name": "Creating",
                    "value": "Creating",
                    "description": "The creation is in progress."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "The deletion is in progress."
                  },
                  {
                    "name": "Fixing",
                    "value": "Fixing",
                    "description": "The fix of the resource in progress."
                  },
                  {
                    "name": "Verifying",
                    "value": "Verifying",
                    "description": "The verification of the resource in progress."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "The update of the resource in progress."
                  }
                ]
              }
            },
            "reportProperties": {
              "description": "The report essential info.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "triggerTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Report collection trigger time."
                },
                "timeZone": {
                  "type": "string",
                  "description": "Report collection trigger time's time zone, the available list can be obtained by executing \"Get-TimeZone -ListAvailable\" in PowerShell.\nAn example of valid timezone id is \"Pacific Standard Time\"."
                },
                "resources": {
                  "type": "array",
                  "description": "List of resource data.",
                  "items": {
                    "type": "object",
                    "description": "Single resource Id's metadata.",
                    "properties": {
                      "resourceId": {
                        "type": "string",
                        "description": "Resource Id - e.g. \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1\"."
                      },
                      "resourceType": {
                        "type": "string",
                        "description": "Resource type. e.g. \"Microsoft.Compute/virtualMachines\""
                      },
                      "resourceKind": {
                        "type": "string",
                        "description": "Resource kind."
                      },
                      "resourceOrigin": {
                        "description": "Resource Origin.",
                        "type": "string",
                        "enum": [
                          "Azure",
                          "AWS",
                          "GCP"
                        ],
                        "x-ms-enum": {
                          "name": "ResourceOrigin",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Azure",
                              "value": "Azure",
                              "description": "The resource is from Azure."
                            },
                            {
                              "name": "AWS",
                              "value": "AWS",
                              "description": "The resource is from AWS."
                            },
                            {
                              "name": "GCP",
                              "value": "GCP",
                              "description": "The resource is from GCP."
                            }
                          ]
                        }
                      },
                      "accountId": {
                        "type": "string",
                        "description": "Account Id. For example - the AWS account id."
                      }
                    },
                    "required": [
                      "resourceId"
                    ]
                  },
                  "x-ms-identifiers": [
                    "resourceId"
                  ]
                },
                "status": {
                  "description": "Report status.",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Active",
                    "Failed",
                    "Reviewing",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "ReportStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Active",
                        "value": "Active",
                        "description": "The report is active."
                      },
                      {
                        "name": "Failed",
                        "value": "Failed",
                        "description": "The report is failed."
                      },
                      {
                        "name": "Reviewing",
                        "value": "Reviewing",
                        "description": "The report is under reviewing."
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "The report is disabled."
                      }
                    ]
                  }
                },
                "errors": {
                  "type": "array",
                  "description": "List of report error codes.",
                  "items": {
                    "type": "string"
                  },
                  "readOnly": true
                },
                "tenantId": {
                  "type": "string",
                  "description": "Report's tenant id.",
                  "readOnly": true
                },
                "offerGuid": {
                  "type": "string",
                  "description": "A list of comma-separated offerGuids indicates a series of offerGuids that map to the report. For example, \"00000000-0000-0000-0000-000000000001,00000000-0000-0000-0000-000000000002\" and \"00000000-0000-0000-0000-000000000003\"."
                },
                "nextTriggerTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Report next collection trigger time.",
                  "readOnly": true
                },
                "lastTriggerTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Report last collection trigger time.",
                  "readOnly": true
                },
                "subscriptions": {
                  "type": "array",
                  "description": "List of subscription Ids.",
                  "items": {
                    "type": "string"
                  },
                  "readOnly": true
                },
                "complianceStatus": {
                  "description": "Report compliance status.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "m365": {
                      "description": "The Microsoft 365 certification name.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "passedCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The count of all passed control.",
                          "readOnly": true
                        },
                        "failedCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The count of all failed control.",
                          "readOnly": true
                        },
                        "manualCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The count of all manual control.",
                          "readOnly": true
                        },
                        "notApplicableCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The count of all not applicable control.",
                          "readOnly": true
                        },
                        "pendingCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The count of all pending for approval control.",
                          "readOnly": true
                        }
                      }
                    }
                  }
                },
                "storageInfo": {
                  "type": "object",
                  "description": "The information of 'bring your own storage' account binding to the report",
                  "properties": {
                    "subscriptionId": {
                      "type": "string",
                      "description": "The subscription id which 'bring your own storage' account belongs to"
                    },
                    "resourceGroup": {
                      "type": "string",
                      "description": "The resourceGroup which 'bring your own storage' account belongs to"
                    },
                    "accountName": {
                      "type": "string",
                      "description": "'bring your own storage' account name"
                    },
                    "location": {
                      "type": "string",
                      "description": "The region of 'bring your own storage' account"
                    }
                  }
                },
                "certRecords": {
                  "type": "array",
                  "description": "List of synchronized certification records.",
                  "items": {
                    "type": "object",
                    "description": "A class represent the certification record synchronized from app compliance.",
                    "properties": {
                      "offerGuid": {
                        "type": "string",
                        "description": "The offerGuid which mapping to the reports.",
                        "minLength": 1
                      },
                      "certificationStatus": {
                        "type": "string",
                        "description": "Indicates the status of certification process."
                      },
                      "ingestionStatus": {
                        "type": "string",
                        "description": "Indicates the status of compliance process."
                      },
                      "controls": {
                        "type": "array",
                        "description": "The control records list to be synchronized.",
                        "items": {
                          "type": "object",
                          "description": "A class represent the control record synchronized from app compliance.",
                          "properties": {
                            "controlId": {
                              "type": "string",
                              "description": "The Id of the control. e.g. \"Operational_Security_10\""
                            },
                            "controlStatus": {
                              "type": "string",
                              "description": "Control status synchronized from app compliance."
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "controlId"
                        ]
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": [
                    "offerGuid"
                  ]
                },
                "provisioningState": {
                  "description": "Azure lifecycle management",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Succeeded",
                    "Failed",
                    "Canceled",
                    "Creating",
                    "Deleting",
                    "Fixing",
                    "Verifying",
                    "Updating"
                  ],
                  "x-ms-enum": {
                    "name": "ProvisioningState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Succeeded",
                        "value": "Succeeded",
                        "description": "The provision is succeeded."
                      },
                      {
                        "name": "Failed",
                        "value": "Failed",
                        "description": "The provision is failed."
                      },
                      {
                        "name": "Canceled",
                        "value": "Canceled",
                        "description": "The provision is canceled."
                      },
                      {
                        "name": "Creating",
                        "value": "Creating",
                        "description": "The creation is in progress."
                      },
                      {
                        "name": "Deleting",
                        "value": "Deleting",
                        "description": "The deletion is in progress."
                      },
                      {
                        "name": "Fixing",
                        "value": "Fixing",
                        "description": "The fix of the resource in progress."
                      },
                      {
                        "name": "Verifying",
                        "value": "Verifying",
                        "description": "The verification of the resource in progress."
                      },
                      {
                        "name": "Updating",
                        "value": "Updating",
                        "description": "The update of the resource in progress."
                      }
                    ]
                  }
                }
              },
              "required": [
                "triggerTime",
                "timeZone",
                "resources"
              ]
            },
            "reportSystemData": {
              "description": "Metadata pertaining to creation and last modification of the resource.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "createdBy": {
                  "type": "string",
                  "description": "The identity that created the resource."
                },
                "createdByType": {
                  "type": "string",
                  "description": "The type of identity that created the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource creation (UTC)."
                },
                "lastModifiedBy": {
                  "type": "string",
                  "description": "The identity that last modified the resource."
                },
                "lastModifiedByType": {
                  "type": "string",
                  "description": "The type of identity that last modified the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "lastModifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource last modification (UTC)"
                }
              }
            },
            "complianceResults": {
              "type": "array",
              "description": "List of compliance results.",
              "items": {
                "type": "object",
                "description": "A class represent the compliance result.",
                "properties": {
                  "complianceName": {
                    "type": "string",
                    "description": "The name of the compliance. e.g. \"M365\"",
                    "readOnly": true
                  },
                  "categories": {
                    "type": "array",
                    "description": "List of categories.",
                    "items": {
                      "type": "object",
                      "description": "A class represent the compliance category.",
                      "properties": {
                        "categoryName": {
                          "type": "string",
                          "description": "The name of the compliance category. e.g. \"Operational Security\"",
                          "readOnly": true
                        },
                        "categoryStatus": {
                          "description": "Category status.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Passed",
                            "Failed",
                            "NotApplicable",
                            "PendingApproval"
                          ],
                          "x-ms-enum": {
                            "name": "CategoryStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Passed",
                                "value": "Passed",
                                "description": "The category is passed."
                              },
                              {
                                "name": "Failed",
                                "value": "Failed",
                                "description": "The category is failed."
                              },
                              {
                                "name": "NotApplicable",
                                "value": "NotApplicable",
                                "description": "The category is not applicable."
                              },
                              {
                                "name": "PendingApproval",
                                "value": "PendingApproval",
                                "description": "The category is pending for approval."
                              }
                            ]
                          }
                        },
                        "controlFamilies": {
                          "type": "array",
                          "description": "List of control families.",
                          "items": {
                            "type": "object",
                            "description": "A class represent the control family.",
                            "properties": {
                              "controlFamilyName": {
                                "type": "string",
                                "description": "The name of the control family. e.g. \"Malware Protection - Anti-Virus\"",
                                "readOnly": true
                              },
                              "controlFamilyStatus": {
                                "description": "The control family status",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "Passed",
                                  "Failed",
                                  "NotApplicable",
                                  "PendingApproval"
                                ],
                                "x-ms-enum": {
                                  "name": "ControlFamilyStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Passed",
                                      "value": "Passed",
                                      "description": "The control family is passed."
                                    },
                                    {
                                      "name": "Failed",
                                      "value": "Failed",
                                      "description": "The control family is failed."
                                    },
                                    {
                                      "name": "NotApplicable",
                                      "value": "NotApplicable",
                                      "description": "The control family is not applicable."
                                    },
                                    {
                                      "name": "PendingApproval",
                                      "value": "PendingApproval",
                                      "description": "The control family is pending for approval."
                                    }
                                  ]
                                }
                              },
                              "controls": {
                                "type": "array",
                                "description": "List of controls.",
                                "items": {
                                  "type": "object",
                                  "description": "A class represent the control.",
                                  "properties": {
                                    "controlId": {
                                      "type": "string",
                                      "description": "The Id of the control. e.g. \"Operational_Security_10\"",
                                      "readOnly": true
                                    },
                                    "controlName": {
                                      "type": "string",
                                      "description": "The name of the control. e.g. \"Unsupported OS and Software.\"",
                                      "readOnly": true
                                    },
                                    "controlFullName": {
                                      "type": "string",
                                      "description": "The full name of the control. e.g. \"Validate that unsupported operating systems and software components are not in use.\"",
                                      "readOnly": true
                                    },
                                    "controlDescription": {
                                      "type": "string",
                                      "description": "The control's description",
                                      "readOnly": true
                                    },
                                    "controlDescriptionHyperLink": {
                                      "type": "string",
                                      "description": "The hyper link to the control's description'.",
                                      "readOnly": true
                                    },
                                    "controlStatus": {
                                      "description": "Control status.",
                                      "readOnly": true,
                                      "type": "string",
                                      "enum": [
                                        "Passed",
                                        "Failed",
                                        "NotApplicable",
                                        "PendingApproval"
                                      ],
                                      "x-ms-enum": {
                                        "name": "ControlStatus",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Passed",
                                            "value": "Passed",
                                            "description": "The control is passed."
                                          },
                                          {
                                            "name": "Failed",
                                            "value": "Failed",
                                            "description": "The control is failed."
                                          },
                                          {
                                            "name": "NotApplicable",
                                            "value": "NotApplicable",
                                            "description": "The control is not applicable."
                                          },
                                          {
                                            "name": "PendingApproval",
                                            "value": "PendingApproval",
                                            "description": "The control is pending for approval."
                                          }
                                        ]
                                      }
                                    },
                                    "responsibilities": {
                                      "type": "array",
                                      "description": "List of customer responsibility.",
                                      "items": {
                                        "type": "object",
                                        "description": "A class represent the customer responsibility.",
                                        "properties": {
                                          "responsibilityId": {
                                            "type": "string",
                                            "description": "The id of the customer responsibility.",
                                            "readOnly": true
                                          },
                                          "responsibilityTitle": {
                                            "type": "string",
                                            "description": "The title of the customer responsibility.",
                                            "readOnly": true
                                          },
                                          "responsibilityDescription": {
                                            "type": "string",
                                            "description": "The description of the customer responsibility.",
                                            "readOnly": true
                                          },
                                          "responsibilityType": {
                                            "description": "The type of customer responsibility.",
                                            "readOnly": true,
                                            "type": "string",
                                            "enum": [
                                              "Automated",
                                              "ScopedManual",
                                              "Manual"
                                            ],
                                            "x-ms-enum": {
                                              "name": "ResponsibilityType",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "name": "Automated",
                                                  "value": "Automated",
                                                  "description": "The responsibility is automated."
                                                },
                                                {
                                                  "name": "ScopedManual",
                                                  "value": "ScopedManual",
                                                  "description": "The responsibility is scoped manual."
                                                },
                                                {
                                                  "name": "Manual",
                                                  "value": "Manual",
                                                  "description": "The responsibility is manual."
                                                }
                                              ]
                                            }
                                          },
                                          "responsibilitySeverity": {
                                            "description": "The severity level of this customer responsibility.",
                                            "readOnly": true,
                                            "type": "string",
                                            "enum": [
                                              "High",
                                              "Medium",
                                              "Low"
                                            ],
                                            "x-ms-enum": {
                                              "name": "ResponsibilitySeverity",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "name": "High",
                                                  "value": "High",
                                                  "description": "The responsibility is high severity."
                                                },
                                                {
                                                  "name": "Medium",
                                                  "value": "Medium",
                                                  "description": "The responsibility is medium severity."
                                                },
                                                {
                                                  "name": "Low",
                                                  "value": "Low",
                                                  "description": "The responsibility is low severity."
                                                }
                                              ]
                                            }
                                          },
                                          "responsibilityStatus": {
                                            "description": "The status of this customer responsibility.",
                                            "readOnly": true,
                                            "type": "string",
                                            "enum": [
                                              "Passed",
                                              "Failed",
                                              "NotApplicable",
                                              "PendingApproval"
                                            ],
                                            "x-ms-enum": {
                                              "name": "ResponsibilityStatus",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "name": "Passed",
                                                  "value": "Passed",
                                                  "description": "The responsibility is passed."
                                                },
                                                {
                                                  "name": "Failed",
                                                  "value": "Failed",
                                                  "description": "The responsibility is failed."
                                                },
                                                {
                                                  "name": "NotApplicable",
                                                  "value": "NotApplicable",
                                                  "description": "The responsibility is not applicable."
                                                },
                                                {
                                                  "name": "PendingApproval",
                                                  "value": "PendingApproval",
                                                  "description": "The responsibility is pending for approval."
                                                }
                                              ]
                                            }
                                          },
                                          "responsibilityEnvironment": {
                                            "description": "The supported cloud environment of this customer responsibility.",
                                            "readOnly": true,
                                            "type": "string",
                                            "enum": [
                                              "Azure",
                                              "AWS",
                                              "GCP",
                                              "General"
                                            ],
                                            "x-ms-enum": {
                                              "name": "ResponsibilityEnvironment",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "name": "Azure",
                                                  "value": "Azure",
                                                  "description": "The responsibility is supported in Azure."
                                                },
                                                {
                                                  "name": "AWS",
                                                  "value": "AWS",
                                                  "description": "The responsibility is supported in AWS."
                                                },
                                                {
                                                  "name": "GCP",
                                                  "value": "GCP",
                                                  "description": "The responsibility is supported in GCP."
                                                },
                                                {
                                                  "name": "General",
                                                  "value": "General",
                                                  "description": "The responsibility is general requirement of all environment."
                                                }
                                              ]
                                            }
                                          },
                                          "failedResourceCount": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "The count of all failed resources."
                                          },
                                          "totalResourceCount": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "The count of all resources."
                                          },
                                          "resourceList": {
                                            "type": "array",
                                            "description": "List of resource.",
                                            "items": {
                                              "type": "object",
                                              "description": "A class represent the resource.",
                                              "properties": {
                                                "resourceId": {
                                                  "type": "string",
                                                  "description": "The Id of the resource.",
                                                  "readOnly": true
                                                },
                                                "accountId": {
                                                  "type": "string",
                                                  "description": "Account Id. For example - AWS account Id.",
                                                  "readOnly": true
                                                },
                                                "resourceType": {
                                                  "type": "string",
                                                  "description": "The type of the resource. e.g. \"Microsoft.SignalRService/SignalR\"",
                                                  "readOnly": true
                                                },
                                                "resourceOrigin": {
                                                  "description": "Resource origin.",
                                                  "readOnly": true,
                                                  "type": "string",
                                                  "enum": [
                                                    "Azure",
                                                    "AWS",
                                                    "GCP"
                                                  ],
                                                  "x-ms-enum": {
                                                    "name": "ResourceOrigin",
                                                    "modelAsString": true,
                                                    "values": [
                                                      {
                                                        "name": "Azure",
                                                        "value": "Azure",
                                                        "description": "The resource is from Azure."
                                                      },
                                                      {
                                                        "name": "AWS",
                                                        "value": "AWS",
                                                        "description": "The resource is from AWS."
                                                      },
                                                      {
                                                        "name": "GCP",
                                                        "value": "GCP",
                                                        "description": "The resource is from GCP."
                                                      }
                                                    ]
                                                  }
                                                },
                                                "resourceStatus": {
                                                  "description": "Resource status.",
                                                  "readOnly": true,
                                                  "type": "string",
                                                  "enum": [
                                                    "Healthy",
                                                    "Unhealthy"
                                                  ],
                                                  "x-ms-enum": {
                                                    "name": "ResourceStatus",
                                                    "modelAsString": true,
                                                    "values": [
                                                      {
                                                        "name": "Healthy",
                                                        "value": "Healthy",
                                                        "description": "The resource is healthy."
                                                      },
                                                      {
                                                        "name": "Unhealthy",
                                                        "value": "Unhealthy",
                                                        "description": "The resource is unhealthy."
                                                      }
                                                    ]
                                                  }
                                                },
                                                "resourceStatusChangeDate": {
                                                  "type": "string",
                                                  "format": "date-time",
                                                  "description": "The status change date for the resource.",
                                                  "readOnly": true
                                                },
                                                "recommendationIds": {
                                                  "type": "array",
                                                  "description": "List of recommendation id.",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            },
                                            "readOnly": true,
                                            "x-ms-identifiers": [
                                              "resourceId"
                                            ]
                                          },
                                          "recommendationList": {
                                            "type": "array",
                                            "description": "List of recommendation.",
                                            "items": {
                                              "type": "object",
                                              "description": "A class represent the recommendation.",
                                              "properties": {
                                                "recommendationId": {
                                                  "type": "string",
                                                  "description": "The Id of the recommendation.",
                                                  "readOnly": true
                                                },
                                                "recommendationShortName": {
                                                  "type": "string",
                                                  "description": "The short name of the recommendation. e.g. \"Invalid TLS config\"",
                                                  "readOnly": true
                                                },
                                                "recommendationSolutions": {
                                                  "type": "array",
                                                  "description": "List of recommendation solutions.",
                                                  "items": {
                                                    "type": "object",
                                                    "description": "A class represent the recommendation solution.",
                                                    "properties": {
                                                      "recommendationSolutionIndex": {
                                                        "type": "string",
                                                        "description": "The index of the recommendation solution.",
                                                        "readOnly": true
                                                      },
                                                      "recommendationSolutionContent": {
                                                        "type": "string",
                                                        "description": "The detail steps of the recommendation solution.",
                                                        "readOnly": true
                                                      },
                                                      "isRecommendSolution": {
                                                        "description": "Indicates whether this solution is the recommended.",
                                                        "readOnly": true,
                                                        "type": "string",
                                                        "enum": [
                                                          "true",
                                                          "false"
                                                        ],
                                                        "x-ms-enum": {
                                                          "name": "IsRecommendSolution",
                                                          "modelAsString": true,
                                                          "values": [
                                                            {
                                                              "name": "True",
                                                              "value": "true",
                                                              "description": "This solution is the recommended."
                                                            },
                                                            {
                                                              "name": "False",
                                                              "value": "false",
                                                              "description": "This solution is not the recommended."
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "readOnly": true,
                                                  "x-ms-identifiers": [
                                                    "recommendationSolutionIndex"
                                                  ]
                                                }
                                              }
                                            },
                                            "readOnly": true,
                                            "x-ms-identifiers": [
                                              "recommendationId"
                                            ]
                                          },
                                          "guidance": {
                                            "type": "string",
                                            "description": "The evidence upload guidance description.",
                                            "readOnly": true
                                          },
                                          "justification": {
                                            "type": "string",
                                            "description": "The justification given by the user to clarify the reason.",
                                            "readOnly": true
                                          },
                                          "evidenceFiles": {
                                            "type": "array",
                                            "description": "List of evidence file url.",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "readOnly": true,
                                      "x-ms-identifiers": [
                                        "responsibilityId"
                                      ]
                                    }
                                  }
                                },
                                "readOnly": true,
                                "x-ms-identifiers": [
                                  "controlId"
                                ]
                              }
                            }
                          },
                          "readOnly": true,
                          "x-ms-identifiers": [
                            "controlFamilyName"
                          ]
                        }
                      }
                    },
                    "readOnly": true,
                    "x-ms-identifiers": [
                      "categoryName"
                    ]
                  }
                }
              },
              "readOnly": true,
              "x-ms-identifiers": [
                "complianceName"
              ]
            }
          }
        }
      }
    },
    "SnapshotResourceListResult": {
      "type": "object",
      "description": "The response of a SnapshotResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SnapshotResource items on this page",
          "items": {
            "type": "object",
            "description": "A class represent a AppComplianceAutomation snapshot resource.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Snapshot's property.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "snapshotName": {
                    "type": "string",
                    "description": "Snapshot name.",
                    "readOnly": true
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC).",
                    "readOnly": true
                  },
                  "provisioningState": {
                    "description": "Azure lifecycle management",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Creating",
                      "Deleting",
                      "Fixing",
                      "Verifying",
                      "Updating"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "The provision is succeeded."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "The provision is failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "The provision is canceled."
                        },
                        {
                          "name": "Creating",
                          "value": "Creating",
                          "description": "The creation is in progress."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "The deletion is in progress."
                        },
                        {
                          "name": "Fixing",
                          "value": "Fixing",
                          "description": "The fix of the resource in progress."
                        },
                        {
                          "name": "Verifying",
                          "value": "Verifying",
                          "description": "The verification of the resource in progress."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "The update of the resource in progress."
                        }
                      ]
                    }
                  },
                  "reportProperties": {
                    "description": "The report essential info.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "triggerTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Report collection trigger time."
                      },
                      "timeZone": {
                        "type": "string",
                        "description": "Report collection trigger time's time zone, the available list can be obtained by executing \"Get-TimeZone -ListAvailable\" in PowerShell.\nAn example of valid timezone id is \"Pacific Standard Time\"."
                      },
                      "resources": {
                        "type": "array",
                        "description": "List of resource data.",
                        "items": {
                          "type": "object",
                          "description": "Single resource Id's metadata.",
                          "properties": {
                            "resourceId": {
                              "type": "string",
                              "description": "Resource Id - e.g. \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1\"."
                            },
                            "resourceType": {
                              "type": "string",
                              "description": "Resource type. e.g. \"Microsoft.Compute/virtualMachines\""
                            },
                            "resourceKind": {
                              "type": "string",
                              "description": "Resource kind."
                            },
                            "resourceOrigin": {
                              "description": "Resource Origin.",
                              "type": "string",
                              "enum": [
                                "Azure",
                                "AWS",
                                "GCP"
                              ],
                              "x-ms-enum": {
                                "name": "ResourceOrigin",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Azure",
                                    "value": "Azure",
                                    "description": "The resource is from Azure."
                                  },
                                  {
                                    "name": "AWS",
                                    "value": "AWS",
                                    "description": "The resource is from AWS."
                                  },
                                  {
                                    "name": "GCP",
                                    "value": "GCP",
                                    "description": "The resource is from GCP."
                                  }
                                ]
                              }
                            },
                            "accountId": {
                              "type": "string",
                              "description": "Account Id. For example - the AWS account id."
                            }
                          },
                          "required": [
                            "resourceId"
                          ]
                        },
                        "x-ms-identifiers": [
                          "resourceId"
                        ]
                      },
                      "status": {
                        "description": "Report status.",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "Active",
                          "Failed",
                          "Reviewing",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "ReportStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Active",
                              "value": "Active",
                              "description": "The report is active."
                            },
                            {
                              "name": "Failed",
                              "value": "Failed",
                              "description": "The report is failed."
                            },
                            {
                              "name": "Reviewing",
                              "value": "Reviewing",
                              "description": "The report is under reviewing."
                            },
                            {
                              "name": "Disabled",
                              "value": "Disabled",
                              "description": "The report is disabled."
                            }
                          ]
                        }
                      },
                      "errors": {
                        "type": "array",
                        "description": "List of report error codes.",
                        "items": {
                          "type": "string"
                        },
                        "readOnly": true
                      },
                      "tenantId": {
                        "type": "string",
                        "description": "Report's tenant id.",
                        "readOnly": true
                      },
                      "offerGuid": {
                        "type": "string",
                        "description": "A list of comma-separated offerGuids indicates a series of offerGuids that map to the report. For example, \"00000000-0000-0000-0000-000000000001,00000000-0000-0000-0000-000000000002\" and \"00000000-0000-0000-0000-000000000003\"."
                      },
                      "nextTriggerTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Report next collection trigger time.",
                        "readOnly": true
                      },
                      "lastTriggerTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Report last collection trigger time.",
                        "readOnly": true
                      },
                      "subscriptions": {
                        "type": "array",
                        "description": "List of subscription Ids.",
                        "items": {
                          "type": "string"
                        },
                        "readOnly": true
                      },
                      "complianceStatus": {
                        "description": "Report compliance status.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "m365": {
                            "description": "The Microsoft 365 certification name.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "passedCount": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The count of all passed control.",
                                "readOnly": true
                              },
                              "failedCount": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The count of all failed control.",
                                "readOnly": true
                              },
                              "manualCount": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The count of all manual control.",
                                "readOnly": true
                              },
                              "notApplicableCount": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The count of all not applicable control.",
                                "readOnly": true
                              },
                              "pendingCount": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The count of all pending for approval control.",
                                "readOnly": true
                              }
                            }
                          }
                        }
                      },
                      "storageInfo": {
                        "type": "object",
                        "description": "The information of 'bring your own storage' account binding to the report",
                        "properties": {
                          "subscriptionId": {
                            "type": "string",
                            "description": "The subscription id which 'bring your own storage' account belongs to"
                          },
                          "resourceGroup": {
                            "type": "string",
                            "description": "The resourceGroup which 'bring your own storage' account belongs to"
                          },
                          "accountName": {
                            "type": "string",
                            "description": "'bring your own storage' account name"
                          },
                          "location": {
                            "type": "string",
                            "description": "The region of 'bring your own storage' account"
                          }
                        }
                      },
                      "certRecords": {
                        "type": "array",
                        "description": "List of synchronized certification records.",
                        "items": {
                          "type": "object",
                          "description": "A class represent the certification record synchronized from app compliance.",
                          "properties": {
                            "offerGuid": {
                              "type": "string",
                              "description": "The offerGuid which mapping to the reports.",
                              "minLength": 1
                            },
                            "certificationStatus": {
                              "type": "string",
                              "description": "Indicates the status of certification process."
                            },
                            "ingestionStatus": {
                              "type": "string",
                              "description": "Indicates the status of compliance process."
                            },
                            "controls": {
                              "type": "array",
                              "description": "The control records list to be synchronized.",
                              "items": {
                                "type": "object",
                                "description": "A class represent the control record synchronized from app compliance.",
                                "properties": {
                                  "controlId": {
                                    "type": "string",
                                    "description": "The Id of the control. e.g. \"Operational_Security_10\""
                                  },
                                  "controlStatus": {
                                    "type": "string",
                                    "description": "Control status synchronized from app compliance."
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "controlId"
                              ]
                            }
                          }
                        },
                        "readOnly": true,
                        "x-ms-identifiers": [
                          "offerGuid"
                        ]
                      },
                      "provisioningState": {
                        "description": "Azure lifecycle management",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "Succeeded",
                          "Failed",
                          "Canceled",
                          "Creating",
                          "Deleting",
                          "Fixing",
                          "Verifying",
                          "Updating"
                        ],
                        "x-ms-enum": {
                          "name": "ProvisioningState",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Succeeded",
                              "value": "Succeeded",
                              "description": "The provision is succeeded."
                            },
                            {
                              "name": "Failed",
                              "value": "Failed",
                              "description": "The provision is failed."
                            },
                            {
                              "name": "Canceled",
                              "value": "Canceled",
                              "description": "The provision is canceled."
                            },
                            {
                              "name": "Creating",
                              "value": "Creating",
                              "description": "The creation is in progress."
                            },
                            {
                              "name": "Deleting",
                              "value": "Deleting",
                              "description": "The deletion is in progress."
                            },
                            {
                              "name": "Fixing",
                              "value": "Fixing",
                              "description": "The fix of the resource in progress."
                            },
                            {
                              "name": "Verifying",
                              "value": "Verifying",
                              "description": "The verification of the resource in progress."
                            },
                            {
                              "name": "Updating",
                              "value": "Updating",
                              "description": "The update of the resource in progress."
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "triggerTime",
                      "timeZone",
                      "resources"
                    ]
                  },
                  "reportSystemData": {
                    "description": "Metadata pertaining to creation and last modification of the resource.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "createdBy": {
                        "type": "string",
                        "description": "The identity that created the resource."
                      },
                      "createdByType": {
                        "type": "string",
                        "description": "The type of identity that created the resource.",
                        "enum": [
                          "User",
                          "Application",
                          "ManagedIdentity",
                          "Key"
                        ],
                        "x-ms-enum": {
                          "name": "createdByType",
                          "modelAsString": true
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of resource creation (UTC)."
                      },
                      "lastModifiedBy": {
                        "type": "string",
                        "description": "The identity that last modified the resource."
                      },
                      "lastModifiedByType": {
                        "type": "string",
                        "description": "The type of identity that last modified the resource.",
                        "enum": [
                          "User",
                          "Application",
                          "ManagedIdentity",
                          "Key"
                        ],
                        "x-ms-enum": {
                          "name": "createdByType",
                          "modelAsString": true
                        }
                      },
                      "lastModifiedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of resource last modification (UTC)"
                      }
                    }
                  },
                  "complianceResults": {
                    "type": "array",
                    "description": "List of compliance results.",
                    "items": {
                      "type": "object",
                      "description": "A class represent the compliance result.",
                      "properties": {
                        "complianceName": {
                          "type": "string",
                          "description": "The name of the compliance. e.g. \"M365\"",
                          "readOnly": true
                        },
                        "categories": {
                          "type": "array",
                          "description": "List of categories.",
                          "items": {
                            "type": "object",
                            "description": "A class represent the compliance category.",
                            "properties": {
                              "categoryName": {
                                "type": "string",
                                "description": "The name of the compliance category. e.g. \"Operational Security\"",
                                "readOnly": true
                              },
                              "categoryStatus": {
                                "description": "Category status.",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "Passed",
                                  "Failed",
                                  "NotApplicable",
                                  "PendingApproval"
                                ],
                                "x-ms-enum": {
                                  "name": "CategoryStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Passed",
                                      "value": "Passed",
                                      "description": "The category is passed."
                                    },
                                    {
                                      "name": "Failed",
                                      "value": "Failed",
                                      "description": "The category is failed."
                                    },
                                    {
                                      "name": "NotApplicable",
                                      "value": "NotApplicable",
                                      "description": "The category is not applicable."
                                    },
                                    {
                                      "name": "PendingApproval",
                                      "value": "PendingApproval",
                                      "description": "The category is pending for approval."
                                    }
                                  ]
                                }
                              },
                              "controlFamilies": {
                                "type": "array",
                                "description": "List of control families.",
                                "items": {
                                  "type": "object",
                                  "description": "A class represent the control family.",
                                  "properties": {
                                    "controlFamilyName": {
                                      "type": "string",
                                      "description": "The name of the control family. e.g. \"Malware Protection - Anti-Virus\"",
                                      "readOnly": true
                                    },
                                    "controlFamilyStatus": {
                                      "description": "The control family status",
                                      "readOnly": true,
                                      "type": "string",
                                      "enum": [
                                        "Passed",
                                        "Failed",
                                        "NotApplicable",
                                        "PendingApproval"
                                      ],
                                      "x-ms-enum": {
                                        "name": "ControlFamilyStatus",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Passed",
                                            "value": "Passed",
                                            "description": "The control family is passed."
                                          },
                                          {
                                            "name": "Failed",
                                            "value": "Failed",
                                            "description": "The control family is failed."
                                          },
                                          {
                                            "name": "NotApplicable",
                                            "value": "NotApplicable",
                                            "description": "The control family is not applicable."
                                          },
                                          {
                                            "name": "PendingApproval",
                                            "value": "PendingApproval",
                                            "description": "The control family is pending for approval."
                                          }
                                        ]
                                      }
                                    },
                                    "controls": {
                                      "type": "array",
                                      "description": "List of controls.",
                                      "items": {
                                        "type": "object",
                                        "description": "A class represent the control.",
                                        "properties": {
                                          "controlId": {
                                            "type": "string",
                                            "description": "The Id of the control. e.g. \"Operational_Security_10\"",
                                            "readOnly": true
                                          },
                                          "controlName": {
                                            "type": "string",
                                            "description": "The name of the control. e.g. \"Unsupported OS and Software.\"",
                                            "readOnly": true
                                          },
                                          "controlFullName": {
                                            "type": "string",
                                            "description": "The full name of the control. e.g. \"Validate that unsupported operating systems and software components are not in use.\"",
                                            "readOnly": true
                                          },
                                          "controlDescription": {
                                            "type": "string",
                                            "description": "The control's description",
                                            "readOnly": true
                                          },
                                          "controlDescriptionHyperLink": {
                                            "type": "string",
                                            "description": "The hyper link to the control's description'.",
                                            "readOnly": true
                                          },
                                          "controlStatus": {
                                            "description": "Control status.",
                                            "readOnly": true,
                                            "type": "string",
                                            "enum": [
                                              "Passed",
                                              "Failed",
                                              "NotApplicable",
                                              "PendingApproval"
                                            ],
                                            "x-ms-enum": {
                                              "name": "ControlStatus",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "name": "Passed",
                                                  "value": "Passed",
                                                  "description": "The control is passed."
                                                },
                                                {
                                                  "name": "Failed",
                                                  "value": "Failed",
                                                  "description": "The control is failed."
                                                },
                                                {
                                                  "name": "NotApplicable",
                                                  "value": "NotApplicable",
                                                  "description": "The control is not applicable."
                                                },
                                                {
                                                  "name": "PendingApproval",
                                                  "value": "PendingApproval",
                                                  "description": "The control is pending for approval."
                                                }
                                              ]
                                            }
                                          },
                                          "responsibilities": {
                                            "type": "array",
                                            "description": "List of customer responsibility.",
                                            "items": {
                                              "type": "object",
                                              "description": "A class represent the customer responsibility.",
                                              "properties": {
                                                "responsibilityId": {
                                                  "type": "string",
                                                  "description": "The id of the customer responsibility.",
                                                  "readOnly": true
                                                },
                                                "responsibilityTitle": {
                                                  "type": "string",
                                                  "description": "The title of the customer responsibility.",
                                                  "readOnly": true
                                                },
                                                "responsibilityDescription": {
                                                  "type": "string",
                                                  "description": "The description of the customer responsibility.",
                                                  "readOnly": true
                                                },
                                                "responsibilityType": {
                                                  "description": "The type of customer responsibility.",
                                                  "readOnly": true,
                                                  "type": "string",
                                                  "enum": [
                                                    "Automated",
                                                    "ScopedManual",
                                                    "Manual"
                                                  ],
                                                  "x-ms-enum": {
                                                    "name": "ResponsibilityType",
                                                    "modelAsString": true,
                                                    "values": [
                                                      {
                                                        "name": "Automated",
                                                        "value": "Automated",
                                                        "description": "The responsibility is automated."
                                                      },
                                                      {
                                                        "name": "ScopedManual",
                                                        "value": "ScopedManual",
                                                        "description": "The responsibility is scoped manual."
                                                      },
                                                      {
                                                        "name": "Manual",
                                                        "value": "Manual",
                                                        "description": "The responsibility is manual."
                                                      }
                                                    ]
                                                  }
                                                },
                                                "responsibilitySeverity": {
                                                  "description": "The severity level of this customer responsibility.",
                                                  "readOnly": true,
                                                  "type": "string",
                                                  "enum": [
                                                    "High",
                                                    "Medium",
                                                    "Low"
                                                  ],
                                                  "x-ms-enum": {
                                                    "name": "ResponsibilitySeverity",
                                                    "modelAsString": true,
                                                    "values": [
                                                      {
                                                        "name": "High",
                                                        "value": "High",
                                                        "description": "The responsibility is high severity."
                                                      },
                                                      {
                                                        "name": "Medium",
                                                        "value": "Medium",
                                                        "description": "The responsibility is medium severity."
                                                      },
                                                      {
                                                        "name": "Low",
                                                        "value": "Low",
                                                        "description": "The responsibility is low severity."
                                                      }
                                                    ]
                                                  }
                                                },
                                                "responsibilityStatus": {
                                                  "description": "The status of this customer responsibility.",
                                                  "readOnly": true,
                                                  "type": "string",
                                                  "enum": [
                                                    "Passed",
                                                    "Failed",
                                                    "NotApplicable",
                                                    "PendingApproval"
                                                  ],
                                                  "x-ms-enum": {
                                                    "name": "ResponsibilityStatus",
                                                    "modelAsString": true,
                                                    "values": [
                                                      {
                                                        "name": "Passed",
                                                        "value": "Passed",
                                                        "description": "The responsibility is passed."
                                                      },
                                                      {
                                                        "name": "Failed",
                                                        "value": "Failed",
                                                        "description": "The responsibility is failed."
                                                      },
                                                      {
                                                        "name": "NotApplicable",
                                                        "value": "NotApplicable",
                                                        "description": "The responsibility is not applicable."
                                                      },
                                                      {
                                                        "name": "PendingApproval",
                                                        "value": "PendingApproval",
                                                        "description": "The responsibility is pending for approval."
                                                      }
                                                    ]
                                                  }
                                                },
                                                "responsibilityEnvironment": {
                                                  "description": "The supported cloud environment of this customer responsibility.",
                                                  "readOnly": true,
                                                  "type": "string",
                                                  "enum": [
                                                    "Azure",
                                                    "AWS",
                                                    "GCP",
                                                    "General"
                                                  ],
                                                  "x-ms-enum": {
                                                    "name": "ResponsibilityEnvironment",
                                                    "modelAsString": true,
                                                    "values": [
                                                      {
                                                        "name": "Azure",
                                                        "value": "Azure",
                                                        "description": "The responsibility is supported in Azure."
                                                      },
                                                      {
                                                        "name": "AWS",
                                                        "value": "AWS",
                                                        "description": "The responsibility is supported in AWS."
                                                      },
                                                      {
                                                        "name": "GCP",
                                                        "value": "GCP",
                                                        "description": "The responsibility is supported in GCP."
                                                      },
                                                      {
                                                        "name": "General",
                                                        "value": "General",
                                                        "description": "The responsibility is general requirement of all environment."
                                                      }
                                                    ]
                                                  }
                                                },
                                                "failedResourceCount": {
                                                  "type": "integer",
                                                  "format": "int32",
                                                  "description": "The count of all failed resources."
                                                },
                                                "totalResourceCount": {
                                                  "type": "integer",
                                                  "format": "int32",
                                                  "description": "The count of all resources."
                                                },
                                                "resourceList": {
                                                  "type": "array",
                                                  "description": "List of resource.",
                                                  "items": {
                                                    "type": "object",
                                                    "description": "A class represent the resource.",
                                                    "properties": {
                                                      "resourceId": {
                                                        "type": "string",
                                                        "description": "The Id of the resource.",
                                                        "readOnly": true
                                                      },
                                                      "accountId": {
                                                        "type": "string",
                                                        "description": "Account Id. For example - AWS account Id.",
                                                        "readOnly": true
                                                      },
                                                      "resourceType": {
                                                        "type": "string",
                                                        "description": "The type of the resource. e.g. \"Microsoft.SignalRService/SignalR\"",
                                                        "readOnly": true
                                                      },
                                                      "resourceOrigin": {
                                                        "description": "Resource origin.",
                                                        "readOnly": true,
                                                        "type": "string",
                                                        "enum": [
                                                          "Azure",
                                                          "AWS",
                                                          "GCP"
                                                        ],
                                                        "x-ms-enum": {
                                                          "name": "ResourceOrigin",
                                                          "modelAsString": true,
                                                          "values": [
                                                            {
                                                              "name": "Azure",
                                                              "value": "Azure",
                                                              "description": "The resource is from Azure."
                                                            },
                                                            {
                                                              "name": "AWS",
                                                              "value": "AWS",
                                                              "description": "The resource is from AWS."
                                                            },
                                                            {
                                                              "name": "GCP",
                                                              "value": "GCP",
                                                              "description": "The resource is from GCP."
                                                            }
                                                          ]
                                                        }
                                                      },
                                                      "resourceStatus": {
                                                        "description": "Resource status.",
                                                        "readOnly": true,
                                                        "type": "string",
                                                        "enum": [
                                                          "Healthy",
                                                          "Unhealthy"
                                                        ],
                                                        "x-ms-enum": {
                                                          "name": "ResourceStatus",
                                                          "modelAsString": true,
                                                          "values": [
                                                            {
                                                              "name": "Healthy",
                                                              "value": "Healthy",
                                                              "description": "The resource is healthy."
                                                            },
                                                            {
                                                              "name": "Unhealthy",
                                                              "value": "Unhealthy",
                                                              "description": "The resource is unhealthy."
                                                            }
                                                          ]
                                                        }
                                                      },
                                                      "resourceStatusChangeDate": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "description": "The status change date for the resource.",
                                                        "readOnly": true
                                                      },
                                                      "recommendationIds": {
                                                        "type": "array",
                                                        "description": "List of recommendation id.",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "readOnly": true,
                                                  "x-ms-identifiers": [
                                                    "resourceId"
                                                  ]
                                                },
                                                "recommendationList": {
                                                  "type": "array",
                                                  "description": "List of recommendation.",
                                                  "items": {
                                                    "type": "object",
                                                    "description": "A class represent the recommendation.",
                                                    "properties": {
                                                      "recommendationId": {
                                                        "type": "string",
                                                        "description": "The Id of the recommendation.",
                                                        "readOnly": true
                                                      },
                                                      "recommendationShortName": {
                                                        "type": "string",
                                                        "description": "The short name of the recommendation. e.g. \"Invalid TLS config\"",
                                                        "readOnly": true
                                                      },
                                                      "recommendationSolutions": {
                                                        "type": "array",
                                                        "description": "List of recommendation solutions.",
                                                        "items": {
                                                          "type": "object",
                                                          "description": "A class represent the recommendation solution.",
                                                          "properties": {
                                                            "recommendationSolutionIndex": {
                                                              "type": "string",
                                                              "description": "The index of the recommendation solution.",
                                                              "readOnly": true
                                                            },
                                                            "recommendationSolutionContent": {
                                                              "type": "string",
                                                              "description": "The detail steps of the recommendation solution.",
                                                              "readOnly": true
                                                            },
                                                            "isRecommendSolution": {
                                                              "description": "Indicates whether this solution is the recommended.",
                                                              "readOnly": true,
                                                              "type": "string",
                                                              "enum": [
                                                                "true",
                                                                "false"
                                                              ],
                                                              "x-ms-enum": {
                                                                "name": "IsRecommendSolution",
                                                                "modelAsString": true,
                                                                "values": [
                                                                  {
                                                                    "name": "True",
                                                                    "value": "true",
                                                                    "description": "This solution is the recommended."
                                                                  },
                                                                  {
                                                                    "name": "False",
                                                                    "value": "false",
                                                                    "description": "This solution is not the recommended."
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "readOnly": true,
                                                        "x-ms-identifiers": [
                                                          "recommendationSolutionIndex"
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  "readOnly": true,
                                                  "x-ms-identifiers": [
                                                    "recommendationId"
                                                  ]
                                                },
                                                "guidance": {
                                                  "type": "string",
                                                  "description": "The evidence upload guidance description.",
                                                  "readOnly": true
                                                },
                                                "justification": {
                                                  "type": "string",
                                                  "description": "The justification given by the user to clarify the reason.",
                                                  "readOnly": true
                                                },
                                                "evidenceFiles": {
                                                  "type": "array",
                                                  "description": "List of evidence file url.",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            },
                                            "readOnly": true,
                                            "x-ms-identifiers": [
                                              "responsibilityId"
                                            ]
                                          }
                                        }
                                      },
                                      "readOnly": true,
                                      "x-ms-identifiers": [
                                        "controlId"
                                      ]
                                    }
                                  }
                                },
                                "readOnly": true,
                                "x-ms-identifiers": [
                                  "controlFamilyName"
                                ]
                              }
                            }
                          },
                          "readOnly": true,
                          "x-ms-identifiers": [
                            "categoryName"
                          ]
                        }
                      }
                    },
                    "readOnly": true,
                    "x-ms-identifiers": [
                      "complianceName"
                    ]
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "StatusItem": {
      "type": "object",
      "description": "Single status.",
      "properties": {
        "statusName": {
          "type": "string",
          "description": "Status name - e.g. \"Active\", \"Failed\"."
        },
        "statusValue": {
          "type": "string",
          "description": "Status value. e.g. \"100\", or \"100%\"."
        }
      }
    },
    "StorageInfo": {
      "type": "object",
      "description": "The information of 'bring your own storage' account binding to the report",
      "properties": {
        "subscriptionId": {
          "type": "string",
          "description": "The subscription id which 'bring your own storage' account belongs to"
        },
        "resourceGroup": {
          "type": "string",
          "description": "The resourceGroup which 'bring your own storage' account belongs to"
        },
        "accountName": {
          "type": "string",
          "description": "'bring your own storage' account name"
        },
        "location": {
          "type": "string",
          "description": "The region of 'bring your own storage' account"
        }
      }
    },
    "SyncCertRecordRequest": {
      "type": "object",
      "description": "Synchronize certification record request.",
      "properties": {
        "certRecord": {
          "type": "object",
          "description": "A class represent the certification record synchronized from app compliance.",
          "properties": {
            "offerGuid": {
              "type": "string",
              "description": "The offerGuid which mapping to the reports.",
              "minLength": 1
            },
            "certificationStatus": {
              "type": "string",
              "description": "Indicates the status of certification process."
            },
            "ingestionStatus": {
              "type": "string",
              "description": "Indicates the status of compliance process."
            },
            "controls": {
              "type": "array",
              "description": "The control records list to be synchronized.",
              "items": {
                "type": "object",
                "description": "A class represent the control record synchronized from app compliance.",
                "properties": {
                  "controlId": {
                    "type": "string",
                    "description": "The Id of the control. e.g. \"Operational_Security_10\""
                  },
                  "controlStatus": {
                    "type": "string",
                    "description": "Control status synchronized from app compliance."
                  }
                }
              },
              "x-ms-identifiers": [
                "controlId"
              ]
            }
          }
        }
      },
      "required": [
        "certRecord"
      ]
    },
    "SyncCertRecordResponse": {
      "type": "object",
      "description": "Synchronize certification record response.",
      "properties": {
        "certRecord": {
          "type": "object",
          "description": "A class represent the certification record synchronized from app compliance.",
          "properties": {
            "offerGuid": {
              "type": "string",
              "description": "The offerGuid which mapping to the reports.",
              "minLength": 1
            },
            "certificationStatus": {
              "type": "string",
              "description": "Indicates the status of certification process."
            },
            "ingestionStatus": {
              "type": "string",
              "description": "Indicates the status of compliance process."
            },
            "controls": {
              "type": "array",
              "description": "The control records list to be synchronized.",
              "items": {
                "type": "object",
                "description": "A class represent the control record synchronized from app compliance.",
                "properties": {
                  "controlId": {
                    "type": "string",
                    "description": "The Id of the control. e.g. \"Operational_Security_10\""
                  },
                  "controlStatus": {
                    "type": "string",
                    "description": "Control status synchronized from app compliance."
                  }
                }
              },
              "x-ms-identifiers": [
                "controlId"
              ]
            }
          }
        }
      }
    },
    "TriggerEvaluationProperty": {
      "type": "object",
      "description": "Trigger evaluation response.",
      "properties": {
        "triggerTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time when the evaluation is triggered.",
          "readOnly": true
        },
        "evaluationEndTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time when the evaluation is end.",
          "readOnly": true
        },
        "resourceIds": {
          "type": "array",
          "description": "List of resource ids to be evaluated",
          "items": {
            "type": "string"
          }
        },
        "quickAssessments": {
          "type": "array",
          "description": "List of quick assessments",
          "items": {
            "type": "object",
            "description": "A class represent the quick assessment.",
            "properties": {
              "resourceId": {
                "type": "string",
                "description": "Resource id.",
                "readOnly": true
              },
              "responsibilityId": {
                "type": "string",
                "description": "Responsibility id.",
                "readOnly": true
              },
              "timestamp": {
                "type": "string",
                "format": "date-time",
                "description": "The timestamp of resource creation (UTC).",
                "readOnly": true
              },
              "resourceStatus": {
                "description": "Quick assessment status.",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "Healthy",
                  "Unhealthy"
                ],
                "x-ms-enum": {
                  "name": "ResourceStatus",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Healthy",
                      "value": "Healthy",
                      "description": "The resource is healthy."
                    },
                    {
                      "name": "Unhealthy",
                      "value": "Unhealthy",
                      "description": "The resource is unhealthy."
                    }
                  ]
                }
              },
              "displayName": {
                "type": "string",
                "description": "Quick assessment display name.",
                "readOnly": true
              },
              "description": {
                "type": "string",
                "description": "Quick assessment display name.",
                "readOnly": true
              },
              "remediationLink": {
                "type": "string",
                "description": "Link to remediation steps for this quick assessment.",
                "readOnly": true
              }
            }
          },
          "x-ms-identifiers": [
            "resourceId"
          ]
        }
      }
    },
    "TriggerEvaluationRequest": {
      "type": "object",
      "description": "Trigger evaluation request.",
      "properties": {
        "resourceIds": {
          "type": "array",
          "description": "List of resource ids to be evaluated",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "resourceIds"
      ]
    },
    "TriggerEvaluationResponse": {
      "type": "object",
      "description": "Trigger evaluation response.",
      "properties": {
        "properties": {
          "description": "trigger evaluation property.",
          "type": "object",
          "properties": {
            "triggerTime": {
              "type": "string",
              "format": "date-time",
              "description": "The time when the evaluation is triggered.",
              "readOnly": true
            },
            "evaluationEndTime": {
              "type": "string",
              "format": "date-time",
              "description": "The time when the evaluation is end.",
              "readOnly": true
            },
            "resourceIds": {
              "type": "array",
              "description": "List of resource ids to be evaluated",
              "items": {
                "type": "string"
              }
            },
            "quickAssessments": {
              "type": "array",
              "description": "List of quick assessments",
              "items": {
                "type": "object",
                "description": "A class represent the quick assessment.",
                "properties": {
                  "resourceId": {
                    "type": "string",
                    "description": "Resource id.",
                    "readOnly": true
                  },
                  "responsibilityId": {
                    "type": "string",
                    "description": "Responsibility id.",
                    "readOnly": true
                  },
                  "timestamp": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC).",
                    "readOnly": true
                  },
                  "resourceStatus": {
                    "description": "Quick assessment status.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Healthy",
                      "Unhealthy"
                    ],
                    "x-ms-enum": {
                      "name": "ResourceStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Healthy",
                          "value": "Healthy",
                          "description": "The resource is healthy."
                        },
                        {
                          "name": "Unhealthy",
                          "value": "Unhealthy",
                          "description": "The resource is unhealthy."
                        }
                      ]
                    }
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Quick assessment display name.",
                    "readOnly": true
                  },
                  "description": {
                    "type": "string",
                    "description": "Quick assessment display name.",
                    "readOnly": true
                  },
                  "remediationLink": {
                    "type": "string",
                    "description": "Link to remediation steps for this quick assessment.",
                    "readOnly": true
                  }
                }
              },
              "x-ms-identifiers": [
                "resourceId"
              ]
            }
          }
        }
      }
    },
    "UpdateWebhookKey": {
      "type": "string",
      "description": "whether to update webhookKey.",
      "enum": [
        "true",
        "false"
      ],
      "x-ms-enum": {
        "name": "UpdateWebhookKey",
        "modelAsString": true,
        "values": [
          {
            "name": "True",
            "value": "true",
            "description": "Need update the webhook key."
          },
          {
            "name": "False",
            "value": "false",
            "description": "No need to update the webhook key."
          }
        ]
      }
    },
    "WebhookKeyEnabled": {
      "type": "string",
      "description": "whether webhookKey is enabled.",
      "enum": [
        "true",
        "false"
      ],
      "x-ms-enum": {
        "name": "WebhookKeyEnabled",
        "modelAsString": true,
        "values": [
          {
            "name": "True",
            "value": "true",
            "description": "The webhookKey is enabled."
          },
          {
            "name": "False",
            "value": "false",
            "description": "The webhookKey is not enabled."
          }
        ]
      }
    },
    "WebhookProperties": {
      "type": "object",
      "description": "Webhook properties.",
      "properties": {
        "webhookId": {
          "type": "string",
          "description": "Webhook id in database.",
          "readOnly": true
        },
        "status": {
          "description": "Webhook status.",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "WebhookStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "The webhook is enabled."
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "The webhook is disabled."
              }
            ]
          }
        },
        "tenantId": {
          "type": "string",
          "description": "Tenant id.",
          "readOnly": true
        },
        "sendAllEvents": {
          "description": "whether to send notification under any event.",
          "type": "string",
          "enum": [
            "true",
            "false"
          ],
          "x-ms-enum": {
            "name": "SendAllEvents",
            "modelAsString": true,
            "values": [
              {
                "name": "True",
                "value": "true",
                "description": "Need send notification under any event."
              },
              {
                "name": "False",
                "value": "false",
                "description": "No need to send notification under any event."
              }
            ]
          }
        },
        "events": {
          "type": "array",
          "description": "under which event notification should be sent.",
          "items": {
            "type": "string",
            "description": "notification event.",
            "enum": [
              "generate_snapshot_success",
              "generate_snapshot_failed",
              "assessment_failure",
              "report_configuration_changes",
              "report_deletion"
            ],
            "x-ms-enum": {
              "name": "NotificationEvent",
              "modelAsString": true,
              "values": [
                {
                  "name": "generate_snapshot_success",
                  "value": "generate_snapshot_success",
                  "description": "The subscribed report's snapshot is successfully generated."
                },
                {
                  "name": "generate_snapshot_failed",
                  "value": "generate_snapshot_failed",
                  "description": "The subscribed report's snapshot is failed to generate."
                },
                {
                  "name": "assessment_failure",
                  "value": "assessment_failure",
                  "description": "The subscribed report failed while collecting the assessments."
                },
                {
                  "name": "report_configuration_changes",
                  "value": "report_configuration_changes",
                  "description": "The subscribed report's configuration is changed."
                },
                {
                  "name": "report_deletion",
                  "value": "report_deletion",
                  "description": "The subscribed report is deleted."
                }
              ]
            }
          }
        },
        "payloadUrl": {
          "type": "string",
          "description": "webhook payload url",
          "pattern": "^(http(s)?://)[\\S]{0,64994}$"
        },
        "contentType": {
          "description": "content type",
          "type": "string",
          "enum": [
            "application/json"
          ],
          "x-ms-enum": {
            "name": "ContentType",
            "modelAsString": true,
            "values": [
              {
                "name": "ApplicationJson",
                "value": "application/json",
                "description": "The content type is application/json."
              }
            ]
          }
        },
        "webhookKey": {
          "type": "string",
          "description": "webhook secret token. If not set, this field value is null; otherwise, please set a string value.",
          "pattern": "^.{0,2048}$"
        },
        "updateWebhookKey": {
          "description": "whether to update webhookKey.",
          "type": "string",
          "enum": [
            "true",
            "false"
          ],
          "x-ms-enum": {
            "name": "UpdateWebhookKey",
            "modelAsString": true,
            "values": [
              {
                "name": "True",
                "value": "true",
                "description": "Need update the webhook key."
              },
              {
                "name": "False",
                "value": "false",
                "description": "No need to update the webhook key."
              }
            ]
          }
        },
        "webhookKeyEnabled": {
          "description": "whether webhookKey is enabled.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "true",
            "false"
          ],
          "x-ms-enum": {
            "name": "WebhookKeyEnabled",
            "modelAsString": true,
            "values": [
              {
                "name": "True",
                "value": "true",
                "description": "The webhookKey is enabled."
              },
              {
                "name": "False",
                "value": "false",
                "description": "The webhookKey is not enabled."
              }
            ]
          }
        },
        "enableSslVerification": {
          "description": "whether to enable ssl verification",
          "type": "string",
          "enum": [
            "true",
            "false"
          ],
          "x-ms-enum": {
            "name": "EnableSslVerification",
            "modelAsString": true,
            "values": [
              {
                "name": "True",
                "value": "true",
                "description": "The ssl verification is enabled."
              },
              {
                "name": "False",
                "value": "false",
                "description": "The ssl verification is not enabled."
              }
            ]
          }
        },
        "deliveryStatus": {
          "description": "webhook deliveryStatus",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "NotStarted"
          ],
          "x-ms-enum": {
            "name": "DeliveryStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "The webhook is delivered successfully."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "The webhook is failed to deliver."
              },
              {
                "name": "NotStarted",
                "value": "NotStarted",
                "description": "The webhook is not delivered."
              }
            ]
          }
        },
        "provisioningState": {
          "description": "Azure Resource Provisioning State",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Creating",
            "Deleting",
            "Fixing",
            "Verifying",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "The provision is succeeded."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "The provision is failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "The provision is canceled."
              },
              {
                "name": "Creating",
                "value": "Creating",
                "description": "The creation is in progress."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "The deletion is in progress."
              },
              {
                "name": "Fixing",
                "value": "Fixing",
                "description": "The fix of the resource in progress."
              },
              {
                "name": "Verifying",
                "value": "Verifying",
                "description": "The verification of the resource in progress."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "The update of the resource in progress."
              }
            ]
          }
        }
      }
    },
    "WebhookResource": {
      "type": "object",
      "description": "A class represent an AppComplianceAutomation webhook resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "Webhook property.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "webhookId": {
              "type": "string",
              "description": "Webhook id in database.",
              "readOnly": true
            },
            "status": {
              "description": "Webhook status.",
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "WebhookStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "The webhook is enabled."
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "The webhook is disabled."
                  }
                ]
              }
            },
            "tenantId": {
              "type": "string",
              "description": "Tenant id.",
              "readOnly": true
            },
            "sendAllEvents": {
              "description": "whether to send notification under any event.",
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "x-ms-enum": {
                "name": "SendAllEvents",
                "modelAsString": true,
                "values": [
                  {
                    "name": "True",
                    "value": "true",
                    "description": "Need send notification under any event."
                  },
                  {
                    "name": "False",
                    "value": "false",
                    "description": "No need to send notification under any event."
                  }
                ]
              }
            },
            "events": {
              "type": "array",
              "description": "under which event notification should be sent.",
              "items": {
                "type": "string",
                "description": "notification event.",
                "enum": [
                  "generate_snapshot_success",
                  "generate_snapshot_failed",
                  "assessment_failure",
                  "report_configuration_changes",
                  "report_deletion"
                ],
                "x-ms-enum": {
                  "name": "NotificationEvent",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "generate_snapshot_success",
                      "value": "generate_snapshot_success",
                      "description": "The subscribed report's snapshot is successfully generated."
                    },
                    {
                      "name": "generate_snapshot_failed",
                      "value": "generate_snapshot_failed",
                      "description": "The subscribed report's snapshot is failed to generate."
                    },
                    {
                      "name": "assessment_failure",
                      "value": "assessment_failure",
                      "description": "The subscribed report failed while collecting the assessments."
                    },
                    {
                      "name": "report_configuration_changes",
                      "value": "report_configuration_changes",
                      "description": "The subscribed report's configuration is changed."
                    },
                    {
                      "name": "report_deletion",
                      "value": "report_deletion",
                      "description": "The subscribed report is deleted."
                    }
                  ]
                }
              }
            },
            "payloadUrl": {
              "type": "string",
              "description": "webhook payload url",
              "pattern": "^(http(s)?://)[\\S]{0,64994}$"
            },
            "contentType": {
              "description": "content type",
              "type": "string",
              "enum": [
                "application/json"
              ],
              "x-ms-enum": {
                "name": "ContentType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "ApplicationJson",
                    "value": "application/json",
                    "description": "The content type is application/json."
                  }
                ]
              }
            },
            "webhookKey": {
              "type": "string",
              "description": "webhook secret token. If not set, this field value is null; otherwise, please set a string value.",
              "pattern": "^.{0,2048}$"
            },
            "updateWebhookKey": {
              "description": "whether to update webhookKey.",
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "x-ms-enum": {
                "name": "UpdateWebhookKey",
                "modelAsString": true,
                "values": [
                  {
                    "name": "True",
                    "value": "true",
                    "description": "Need update the webhook key."
                  },
                  {
                    "name": "False",
                    "value": "false",
                    "description": "No need to update the webhook key."
                  }
                ]
              }
            },
            "webhookKeyEnabled": {
              "description": "whether webhookKey is enabled.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "x-ms-enum": {
                "name": "WebhookKeyEnabled",
                "modelAsString": true,
                "values": [
                  {
                    "name": "True",
                    "value": "true",
                    "description": "The webhookKey is enabled."
                  },
                  {
                    "name": "False",
                    "value": "false",
                    "description": "The webhookKey is not enabled."
                  }
                ]
              }
            },
            "enableSslVerification": {
              "description": "whether to enable ssl verification",
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "x-ms-enum": {
                "name": "EnableSslVerification",
                "modelAsString": true,
                "values": [
                  {
                    "name": "True",
                    "value": "true",
                    "description": "The ssl verification is enabled."
                  },
                  {
                    "name": "False",
                    "value": "false",
                    "description": "The ssl verification is not enabled."
                  }
                ]
              }
            },
            "deliveryStatus": {
              "description": "webhook deliveryStatus",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "NotStarted"
              ],
              "x-ms-enum": {
                "name": "DeliveryStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "The webhook is delivered successfully."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "The webhook is failed to deliver."
                  },
                  {
                    "name": "NotStarted",
                    "value": "NotStarted",
                    "description": "The webhook is not delivered."
                  }
                ]
              }
            },
            "provisioningState": {
              "description": "Azure Resource Provisioning State",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Creating",
                "Deleting",
                "Fixing",
                "Verifying",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "The provision is succeeded."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "The provision is failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "The provision is canceled."
                  },
                  {
                    "name": "Creating",
                    "value": "Creating",
                    "description": "The creation is in progress."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "The deletion is in progress."
                  },
                  {
                    "name": "Fixing",
                    "value": "Fixing",
                    "description": "The fix of the resource in progress."
                  },
                  {
                    "name": "Verifying",
                    "value": "Verifying",
                    "description": "The verification of the resource in progress."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "The update of the resource in progress."
                  }
                ]
              }
            }
          }
        }
      },
      "required": [
        "properties"
      ]
    },
    "WebhookResourceListResult": {
      "type": "object",
      "description": "The response of a WebhookResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WebhookResource items on this page",
          "items": {
            "type": "object",
            "description": "A class represent an AppComplianceAutomation webhook resource.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Webhook property.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "webhookId": {
                    "type": "string",
                    "description": "Webhook id in database.",
                    "readOnly": true
                  },
                  "status": {
                    "description": "Webhook status.",
                    "type": "string",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "WebhookStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Enabled",
                          "value": "Enabled",
                          "description": "The webhook is enabled."
                        },
                        {
                          "name": "Disabled",
                          "value": "Disabled",
                          "description": "The webhook is disabled."
                        }
                      ]
                    }
                  },
                  "tenantId": {
                    "type": "string",
                    "description": "Tenant id.",
                    "readOnly": true
                  },
                  "sendAllEvents": {
                    "description": "whether to send notification under any event.",
                    "type": "string",
                    "enum": [
                      "true",
                      "false"
                    ],
                    "x-ms-enum": {
                      "name": "SendAllEvents",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "True",
                          "value": "true",
                          "description": "Need send notification under any event."
                        },
                        {
                          "name": "False",
                          "value": "false",
                          "description": "No need to send notification under any event."
                        }
                      ]
                    }
                  },
                  "events": {
                    "type": "array",
                    "description": "under which event notification should be sent.",
                    "items": {
                      "type": "string",
                      "description": "notification event.",
                      "enum": [
                        "generate_snapshot_success",
                        "generate_snapshot_failed",
                        "assessment_failure",
                        "report_configuration_changes",
                        "report_deletion"
                      ],
                      "x-ms-enum": {
                        "name": "NotificationEvent",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "generate_snapshot_success",
                            "value": "generate_snapshot_success",
                            "description": "The subscribed report's snapshot is successfully generated."
                          },
                          {
                            "name": "generate_snapshot_failed",
                            "value": "generate_snapshot_failed",
                            "description": "The subscribed report's snapshot is failed to generate."
                          },
                          {
                            "name": "assessment_failure",
                            "value": "assessment_failure",
                            "description": "The subscribed report failed while collecting the assessments."
                          },
                          {
                            "name": "report_configuration_changes",
                            "value": "report_configuration_changes",
                            "description": "The subscribed report's configuration is changed."
                          },
                          {
                            "name": "report_deletion",
                            "value": "report_deletion",
                            "description": "The subscribed report is deleted."
                          }
                        ]
                      }
                    }
                  },
                  "payloadUrl": {
                    "type": "string",
                    "description": "webhook payload url",
                    "pattern": "^(http(s)?://)[\\S]{0,64994}$"
                  },
                  "contentType": {
                    "description": "content type",
                    "type": "string",
                    "enum": [
                      "application/json"
                    ],
                    "x-ms-enum": {
                      "name": "ContentType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "ApplicationJson",
                          "value": "application/json",
                          "description": "The content type is application/json."
                        }
                      ]
                    }
                  },
                  "webhookKey": {
                    "type": "string",
                    "description": "webhook secret token. If not set, this field value is null; otherwise, please set a string value.",
                    "pattern": "^.{0,2048}$"
                  },
                  "updateWebhookKey": {
                    "description": "whether to update webhookKey.",
                    "type": "string",
                    "enum": [
                      "true",
                      "false"
                    ],
                    "x-ms-enum": {
                      "name": "UpdateWebhookKey",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "True",
                          "value": "true",
                          "description": "Need update the webhook key."
                        },
                        {
                          "name": "False",
                          "value": "false",
                          "description": "No need to update the webhook key."
                        }
                      ]
                    }
                  },
                  "webhookKeyEnabled": {
                    "description": "whether webhookKey is enabled.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "true",
                      "false"
                    ],
                    "x-ms-enum": {
                      "name": "WebhookKeyEnabled",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "True",
                          "value": "true",
                          "description": "The webhookKey is enabled."
                        },
                        {
                          "name": "False",
                          "value": "false",
                          "description": "The webhookKey is not enabled."
                        }
                      ]
                    }
                  },
                  "enableSslVerification": {
                    "description": "whether to enable ssl verification",
                    "type": "string",
                    "enum": [
                      "true",
                      "false"
                    ],
                    "x-ms-enum": {
                      "name": "EnableSslVerification",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "True",
                          "value": "true",
                          "description": "The ssl verification is enabled."
                        },
                        {
                          "name": "False",
                          "value": "false",
                          "description": "The ssl verification is not enabled."
                        }
                      ]
                    }
                  },
                  "deliveryStatus": {
                    "description": "webhook deliveryStatus",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "NotStarted"
                    ],
                    "x-ms-enum": {
                      "name": "DeliveryStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "The webhook is delivered successfully."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "The webhook is failed to deliver."
                        },
                        {
                          "name": "NotStarted",
                          "value": "NotStarted",
                          "description": "The webhook is not delivered."
                        }
                      ]
                    }
                  },
                  "provisioningState": {
                    "description": "Azure Resource Provisioning State",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Creating",
                      "Deleting",
                      "Fixing",
                      "Verifying",
                      "Updating"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "The provision is succeeded."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "The provision is failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "The provision is canceled."
                        },
                        {
                          "name": "Creating",
                          "value": "Creating",
                          "description": "The creation is in progress."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "The deletion is in progress."
                        },
                        {
                          "name": "Fixing",
                          "value": "Fixing",
                          "description": "The fix of the resource in progress."
                        },
                        {
                          "name": "Verifying",
                          "value": "Verifying",
                          "description": "The verification of the resource in progress."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "The update of the resource in progress."
                        }
                      ]
                    }
                  }
                }
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WebhookResourcePatch": {
      "type": "object",
      "description": "A class represent a AppComplianceAutomation webhook resource update properties.",
      "properties": {
        "properties": {
          "description": "Webhook property.",
          "type": "object",
          "properties": {
            "webhookId": {
              "type": "string",
              "description": "Webhook id in database.",
              "readOnly": true
            },
            "status": {
              "description": "Webhook status.",
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "WebhookStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "The webhook is enabled."
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "The webhook is disabled."
                  }
                ]
              }
            },
            "tenantId": {
              "type": "string",
              "description": "Tenant id.",
              "readOnly": true
            },
            "sendAllEvents": {
              "description": "whether to send notification under any event.",
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "x-ms-enum": {
                "name": "SendAllEvents",
                "modelAsString": true,
                "values": [
                  {
                    "name": "True",
                    "value": "true",
                    "description": "Need send notification under any event."
                  },
                  {
                    "name": "False",
                    "value": "false",
                    "description": "No need to send notification under any event."
                  }
                ]
              }
            },
            "events": {
              "type": "array",
              "description": "under which event notification should be sent.",
              "items": {
                "type": "string",
                "description": "notification event.",
                "enum": [
                  "generate_snapshot_success",
                  "generate_snapshot_failed",
                  "assessment_failure",
                  "report_configuration_changes",
                  "report_deletion"
                ],
                "x-ms-enum": {
                  "name": "NotificationEvent",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "generate_snapshot_success",
                      "value": "generate_snapshot_success",
                      "description": "The subscribed report's snapshot is successfully generated."
                    },
                    {
                      "name": "generate_snapshot_failed",
                      "value": "generate_snapshot_failed",
                      "description": "The subscribed report's snapshot is failed to generate."
                    },
                    {
                      "name": "assessment_failure",
                      "value": "assessment_failure",
                      "description": "The subscribed report failed while collecting the assessments."
                    },
                    {
                      "name": "report_configuration_changes",
                      "value": "report_configuration_changes",
                      "description": "The subscribed report's configuration is changed."
                    },
                    {
                      "name": "report_deletion",
                      "value": "report_deletion",
                      "description": "The subscribed report is deleted."
                    }
                  ]
                }
              }
            },
            "payloadUrl": {
              "type": "string",
              "description": "webhook payload url",
              "pattern": "^(http(s)?://)[\\S]{0,64994}$"
            },
            "contentType": {
              "description": "content type",
              "type": "string",
              "enum": [
                "application/json"
              ],
              "x-ms-enum": {
                "name": "ContentType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "ApplicationJson",
                    "value": "application/json",
                    "description": "The content type is application/json."
                  }
                ]
              }
            },
            "webhookKey": {
              "type": "string",
              "description": "webhook secret token. If not set, this field value is null; otherwise, please set a string value.",
              "pattern": "^.{0,2048}$"
            },
            "updateWebhookKey": {
              "description": "whether to update webhookKey.",
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "x-ms-enum": {
                "name": "UpdateWebhookKey",
                "modelAsString": true,
                "values": [
                  {
                    "name": "True",
                    "value": "true",
                    "description": "Need update the webhook key."
                  },
                  {
                    "name": "False",
                    "value": "false",
                    "description": "No need to update the webhook key."
                  }
                ]
              }
            },
            "webhookKeyEnabled": {
              "description": "whether webhookKey is enabled.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "x-ms-enum": {
                "name": "WebhookKeyEnabled",
                "modelAsString": true,
                "values": [
                  {
                    "name": "True",
                    "value": "true",
                    "description": "The webhookKey is enabled."
                  },
                  {
                    "name": "False",
                    "value": "false",
                    "description": "The webhookKey is not enabled."
                  }
                ]
              }
            },
            "enableSslVerification": {
              "description": "whether to enable ssl verification",
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "x-ms-enum": {
                "name": "EnableSslVerification",
                "modelAsString": true,
                "values": [
                  {
                    "name": "True",
                    "value": "true",
                    "description": "The ssl verification is enabled."
                  },
                  {
                    "name": "False",
                    "value": "false",
                    "description": "The ssl verification is not enabled."
                  }
                ]
              }
            },
            "deliveryStatus": {
              "description": "webhook deliveryStatus",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "NotStarted"
              ],
              "x-ms-enum": {
                "name": "DeliveryStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "The webhook is delivered successfully."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "The webhook is failed to deliver."
                  },
                  {
                    "name": "NotStarted",
                    "value": "NotStarted",
                    "description": "The webhook is not delivered."
                  }
                ]
              }
            },
            "provisioningState": {
              "description": "Azure Resource Provisioning State",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Creating",
                "Deleting",
                "Fixing",
                "Verifying",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "The provision is succeeded."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "The provision is failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "The provision is canceled."
                  },
                  {
                    "name": "Creating",
                    "value": "Creating",
                    "description": "The creation is in progress."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "The deletion is in progress."
                  },
                  {
                    "name": "Fixing",
                    "value": "Fixing",
                    "description": "The fix of the resource in progress."
                  },
                  {
                    "name": "Verifying",
                    "value": "Verifying",
                    "description": "The verification of the resource in progress."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "The update of the resource in progress."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "WebhookStatus": {
      "type": "string",
      "description": "Webhook status.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "WebhookStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "The webhook is enabled."
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "The webhook is disabled."
          }
        ]
      }
    }
  },
  "parameters": {
    "ExtraParameter.offerGuid": {
      "name": "offerGuid",
      "in": "query",
      "description": "The offerGuid which mapping to the reports.",
      "required": false,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ExtraParameter.reportCreatorTenantId": {
      "name": "reportCreatorTenantId",
      "in": "query",
      "description": "The tenant id of the report creator.",
      "required": false,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "QueryParameters.filter": {
      "name": "$filter",
      "in": "query",
      "description": "The filter to apply on the operation.",
      "required": false,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "filter"
    },
    "QueryParameters.offerGuid": {
      "name": "offerGuid",
      "in": "query",
      "description": "The offerGuid which mapping to the reports.",
      "required": false,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "QueryParameters.orderby": {
      "name": "$orderby",
      "in": "query",
      "description": "OData order by query option.",
      "required": false,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "orderby"
    },
    "QueryParameters.reportCreatorTenantId": {
      "name": "reportCreatorTenantId",
      "in": "query",
      "description": "The tenant id of the report creator.",
      "required": false,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "QueryParameters.select": {
      "name": "$select",
      "in": "query",
      "description": "OData Select statement. Limits the properties on each entry to just those requested, e.g. ?$select=reportName,id.",
      "required": false,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "select"
    },
    "QueryParameters.skipToken": {
      "name": "$skipToken",
      "in": "query",
      "description": "Skip over when retrieving results.",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "skipToken"
    },
    "QueryParameters.top": {
      "name": "$top",
      "in": "query",
      "description": "Number of elements to return when retrieving results.",
      "required": false,
      "type": "integer",
      "format": "int32",
      "minimum": 1,
      "maximum": 100,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "top"
    }
  }
}