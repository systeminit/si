{
  "swagger": "2.0",
  "info": {
    "title": "Azure azuredatatransfer",
    "version": "2025-05-21",
    "description": "Azure azuredatatransfer service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/providers/Microsoft.AzureDataTransfer/listApprovedSchemas": {
      "post": {
        "operationId": "AzureDataTransfer_listApprovedSchemas",
        "description": "Retrieves the list of approved schemas available for Azure Data Transfer. This operation has reached end of life support starting version 2025-05-30-preview. For schema support please create and use a FlowProfile resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "pipeline",
            "in": "body",
            "description": "The request payload for listing approved schemas.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The request used to list approved schemas within the resource provider. ListApprovedSchemaRequest has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
              "properties": {
                "pipeline": {
                  "type": "string",
                  "description": "The name of the pipeline to filter approved schemas."
                },
                "direction": {
                  "description": "The direction pipeline to filter approved schemas.",
                  "type": "string",
                  "enum": [
                    "Send",
                    "Receive"
                  ],
                  "x-ms-enum": {
                    "name": "Direction",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Send",
                        "value": "Send",
                        "description": "The direction is on the sending side of a pipeline, connection, or flow."
                      },
                      {
                        "name": "Receive",
                        "value": "Receive",
                        "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                      }
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "The schemas list result. SchemaListResults has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "Schemas array.",
                  "items": {
                    "type": "object",
                    "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "ID associated with this schema"
                      },
                      "connectionId": {
                        "type": "string",
                        "description": "Connection ID associated with this schema"
                      },
                      "status": {
                        "description": "Status of the schema",
                        "type": "string",
                        "enum": [
                          "New",
                          "Approved"
                        ],
                        "x-ms-enum": {
                          "name": "SchemaStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "New",
                              "value": "New",
                              "description": "A schema that has not been approved and is awaiting review."
                            },
                            {
                              "name": "Approved",
                              "value": "Approved",
                              "description": "A schema that has been approved and is ready for use."
                            }
                          ]
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the schema"
                      },
                      "content": {
                        "type": "string",
                        "description": "Content of the schema"
                      },
                      "direction": {
                        "description": "The direction of the schema.",
                        "type": "string",
                        "enum": [
                          "Send",
                          "Receive"
                        ],
                        "x-ms-enum": {
                          "name": "Direction",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Send",
                              "value": "Send",
                              "description": "The direction is on the sending side of a pipeline, connection, or flow."
                            },
                            {
                              "name": "Receive",
                              "value": "Receive",
                              "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                            }
                          ]
                        }
                      },
                      "schemaUri": {
                        "type": "string",
                        "format": "uri",
                        "description": "Uri containing SAS token for the zipped schema"
                      },
                      "schemaType": {
                        "description": "The Schema Type",
                        "type": "string",
                        "enum": [
                          "Xsd",
                          "Zip"
                        ],
                        "x-ms-enum": {
                          "name": "SchemaType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Xsd",
                              "value": "Xsd",
                              "description": "The schema represents a single XML schema definition file."
                            },
                            {
                              "name": "Zip",
                              "value": "Zip",
                              "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.AzureDataTransfer/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of operations supported by the resource provider",
                  "items": {
                    "type": "object",
                    "title": "REST API Operation",
                    "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
                        "readOnly": true
                      },
                      "isDataAction": {
                        "type": "boolean",
                        "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
                        "readOnly": true
                      },
                      "display": {
                        "type": "object",
                        "description": "Localized display information for this particular operation.",
                        "properties": {
                          "provider": {
                            "type": "string",
                            "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
                            "readOnly": true
                          },
                          "resource": {
                            "type": "string",
                            "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
                            "readOnly": true
                          },
                          "operation": {
                            "type": "string",
                            "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
                            "readOnly": true
                          },
                          "description": {
                            "type": "string",
                            "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
                            "readOnly": true
                          }
                        }
                      },
                      "origin": {
                        "type": "string",
                        "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
                        "enum": [
                          "user",
                          "system",
                          "user,system"
                        ],
                        "x-ms-enum": {
                          "name": "Origin",
                          "modelAsString": true
                        },
                        "readOnly": true
                      },
                      "actionType": {
                        "type": "string",
                        "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
                        "enum": [
                          "Internal"
                        ],
                        "x-ms-enum": {
                          "name": "ActionType",
                          "modelAsString": true
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "URL to get the next set of operation list results (if there are any).",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.AzureDataTransfer/validateSchema": {
      "post": {
        "operationId": "AzureDataTransfer_validateSchema",
        "description": "Validates the structure and content of a schema for use in Azure Data Transfer. This operation has reached end of life support starting version 2025-05-30-preview. For schema support please create and use a FlowProfile resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "schema",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "ID associated with this schema"
                },
                "connectionId": {
                  "type": "string",
                  "description": "Connection ID associated with this schema"
                },
                "status": {
                  "description": "Status of the schema",
                  "type": "string",
                  "enum": [
                    "New",
                    "Approved"
                  ],
                  "x-ms-enum": {
                    "name": "SchemaStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "New",
                        "value": "New",
                        "description": "A schema that has not been approved and is awaiting review."
                      },
                      {
                        "name": "Approved",
                        "value": "Approved",
                        "description": "A schema that has been approved and is ready for use."
                      }
                    ]
                  }
                },
                "name": {
                  "type": "string",
                  "description": "Name of the schema"
                },
                "content": {
                  "type": "string",
                  "description": "Content of the schema"
                },
                "direction": {
                  "description": "The direction of the schema.",
                  "type": "string",
                  "enum": [
                    "Send",
                    "Receive"
                  ],
                  "x-ms-enum": {
                    "name": "Direction",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Send",
                        "value": "Send",
                        "description": "The direction is on the sending side of a pipeline, connection, or flow."
                      },
                      {
                        "name": "Receive",
                        "value": "Receive",
                        "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                      }
                    ]
                  }
                },
                "schemaUri": {
                  "type": "string",
                  "format": "uri",
                  "description": "Uri containing SAS token for the zipped schema"
                },
                "schemaType": {
                  "description": "The Schema Type",
                  "type": "string",
                  "enum": [
                    "Xsd",
                    "Zip"
                  ],
                  "x-ms-enum": {
                    "name": "SchemaType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Xsd",
                        "value": "Xsd",
                        "description": "The schema represents a single XML schema definition file."
                      },
                      {
                        "name": "Zip",
                        "value": "Zip",
                        "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                      }
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Result of the schema validation. ValidateSchemaResult has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
              "properties": {
                "status": {
                  "description": "Validation status of the schema",
                  "type": "string",
                  "enum": [
                    "Succeeded",
                    "Failed"
                  ],
                  "x-ms-enum": {
                    "name": "ValidateSchemaStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Succeeded",
                        "value": "Succeeded",
                        "description": "Validation of the schema was successful."
                      },
                      {
                        "name": "Failed",
                        "value": "Failed",
                        "description": "The schema failed validation, whether due to error or an invalid schema."
                      }
                    ]
                  },
                  "readOnly": true
                },
                "message": {
                  "type": "string",
                  "description": "Message describing the schema validation"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureDataTransfer/connections": {
      "get": {
        "operationId": "Connections_ListBySubscription",
        "tags": [
          "Connections"
        ],
        "description": "Gets connections in a subscription.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Connection list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Connection items on this page",
                  "items": {
                    "type": "object",
                    "description": "The connection resource definition.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "Properties of connection",
                        "type": "object",
                        "properties": {
                          "pipeline": {
                            "type": "string",
                            "description": "Pipeline to use to transfer data"
                          },
                          "direction": {
                            "description": "Direction of data movement",
                            "type": "string",
                            "enum": [
                              "Send",
                              "Receive"
                            ],
                            "x-ms-enum": {
                              "name": "Direction",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Send",
                                  "value": "Send",
                                  "description": "The direction is on the sending side of a pipeline, connection, or flow."
                                },
                                {
                                  "name": "Receive",
                                  "value": "Receive",
                                  "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                                }
                              ]
                            }
                          },
                          "justification": {
                            "type": "string",
                            "description": "Justification for the connection request"
                          },
                          "status": {
                            "description": "Status of the connection",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "InReview",
                              "Approved",
                              "Rejected",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "name": "ConnectionStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "InReview",
                                  "value": "InReview",
                                  "description": "This connection has been created but is under review by the pipeline owner."
                                },
                                {
                                  "name": "Approved",
                                  "value": "Approved",
                                  "description": "This connection has been approved by the pipeline owner and is ready for use."
                                },
                                {
                                  "name": "Rejected",
                                  "value": "Rejected",
                                  "description": "This connection has been rejected by the pipeline owner and cannot be used."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Creation of the connection has been accepted."
                                }
                              ]
                            }
                          },
                          "forceDisabledStatus": {
                            "type": "array",
                            "description": "Force disablement status of the current connection",
                            "items": {
                              "type": "string",
                              "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                              "enum": [
                                "ConnectionForceDisabled",
                                "FlowTypeForceDisabled"
                              ],
                              "x-ms-enum": {
                                "name": "ForceDisabledStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "ConnectionForceDisabled",
                                    "value": "ConnectionForceDisabled",
                                    "description": "Defines disablement of a Flow due to the parent connection being disabled."
                                  },
                                  {
                                    "name": "FlowTypeForceDisabled",
                                    "value": "FlowTypeForceDisabled",
                                    "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                                  }
                                ]
                              }
                            },
                            "readOnly": true
                          },
                          "statusReason": {
                            "type": "string",
                            "description": "Reason for status",
                            "readOnly": true
                          },
                          "linkStatus": {
                            "description": "Link status of the current connection",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Linked",
                              "Unlinked"
                            ],
                            "x-ms-enum": {
                              "name": "LinkStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Linked",
                                  "value": "Linked",
                                  "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                                },
                                {
                                  "name": "Unlinked",
                                  "value": "Unlinked",
                                  "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                                }
                              ]
                            }
                          },
                          "linkedConnectionId": {
                            "type": "string",
                            "description": "Resource ID of the linked connection",
                            "readOnly": true
                          },
                          "flowTypes": {
                            "type": "array",
                            "description": "The flow types being requested for this connection. This FlowType property has reached end of life support starting version 2025-05-30-preview. Please create a FlowProfile resource instead.",
                            "items": {
                              "type": "string",
                              "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                              "enum": [
                                "Unknown",
                                "Complex",
                                "DevSecOps",
                                "Messaging",
                                "Mission",
                                "MicrosoftInternal",
                                "BasicFiles",
                                "Data",
                                "Standard",
                                "StreamingVideo",
                                "Opaque",
                                "MissionOpaqueXML",
                                "DiskImages",
                                "API"
                              ],
                              "x-ms-enum": {
                                "name": "FlowType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Unknown",
                                    "value": "Unknown",
                                    "description": "This type of flow is not set."
                                  },
                                  {
                                    "name": "Complex",
                                    "value": "Complex",
                                    "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                                  },
                                  {
                                    "name": "DevSecOps",
                                    "value": "DevSecOps",
                                    "description": "This flow sends source code files and artifacts."
                                  },
                                  {
                                    "name": "Messaging",
                                    "value": "Messaging",
                                    "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                                  },
                                  {
                                    "name": "Mission",
                                    "value": "Mission",
                                    "description": "This flow sends standard data but is subject to strict cloud owner approval."
                                  },
                                  {
                                    "name": "MicrosoftInternal",
                                    "value": "MicrosoftInternal",
                                    "description": "This flow is assigned to internal Microsoft use cases."
                                  },
                                  {
                                    "name": "BasicFiles",
                                    "value": "BasicFiles",
                                    "description": "This flow sends blobs that can be used for multiple use cases."
                                  },
                                  {
                                    "name": "Data",
                                    "value": "Data",
                                    "description": "This flow sends blobs that can be used for multiple use cases."
                                  },
                                  {
                                    "name": "Standard",
                                    "value": "Standard",
                                    "description": "This flow sends blobs that can be used for multiple use cases."
                                  },
                                  {
                                    "name": "StreamingVideo",
                                    "value": "StreamingVideo",
                                    "description": "This flow sends video streams."
                                  },
                                  {
                                    "name": "Opaque",
                                    "value": "Opaque",
                                    "description": "This flow sends blobs but is subject to cloud owner approval."
                                  },
                                  {
                                    "name": "MissionOpaqueXML",
                                    "value": "MissionOpaqueXML",
                                    "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                                  },
                                  {
                                    "name": "DiskImages",
                                    "value": "DiskImages",
                                    "description": "This flow sends blobs that can be used for Virtual Machines."
                                  },
                                  {
                                    "name": "API",
                                    "value": "API",
                                    "description": "This flow sends data via an Application Programmer Interface."
                                  }
                                ]
                              }
                            }
                          },
                          "requirementId": {
                            "type": "string",
                            "description": "Requirement ID of the connection"
                          },
                          "remoteSubscriptionId": {
                            "type": "string",
                            "description": "Subscription ID to link cloud subscriptions together"
                          },
                          "approver": {
                            "type": "string",
                            "description": "Approver of this connection request",
                            "readOnly": true
                          },
                          "pin": {
                            "type": "string",
                            "description": "PIN to link requests together"
                          },
                          "dateSubmitted": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp that this connection request was submitted at",
                            "readOnly": true
                          },
                          "primaryContact": {
                            "type": "string",
                            "description": "The primary contact for this connection request"
                          },
                          "secondaryContacts": {
                            "type": "array",
                            "description": "The secondary contacts for this connection request",
                            "items": {
                              "type": "string"
                            }
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the connection",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Resource has been accepted for creation."
                                }
                              ]
                            }
                          },
                          "policies": {
                            "type": "array",
                            "description": "The policies for this connection. The policies property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "schemas": {
                            "type": "array",
                            "description": "The schemas for this connection. The schemas property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                            "items": {
                              "type": "object",
                              "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "ID associated with this schema"
                                },
                                "connectionId": {
                                  "type": "string",
                                  "description": "Connection ID associated with this schema"
                                },
                                "status": {
                                  "description": "Status of the schema",
                                  "type": "string",
                                  "enum": [
                                    "New",
                                    "Approved"
                                  ],
                                  "x-ms-enum": {
                                    "name": "SchemaStatus",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "New",
                                        "value": "New",
                                        "description": "A schema that has not been approved and is awaiting review."
                                      },
                                      {
                                        "name": "Approved",
                                        "value": "Approved",
                                        "description": "A schema that has been approved and is ready for use."
                                      }
                                    ]
                                  }
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name of the schema"
                                },
                                "content": {
                                  "type": "string",
                                  "description": "Content of the schema"
                                },
                                "direction": {
                                  "description": "The direction of the schema.",
                                  "type": "string",
                                  "enum": [
                                    "Send",
                                    "Receive"
                                  ],
                                  "x-ms-enum": {
                                    "name": "Direction",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Send",
                                        "value": "Send",
                                        "description": "The direction is on the sending side of a pipeline, connection, or flow."
                                      },
                                      {
                                        "name": "Receive",
                                        "value": "Receive",
                                        "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                                      }
                                    ]
                                  }
                                },
                                "schemaUri": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "Uri containing SAS token for the zipped schema"
                                },
                                "schemaType": {
                                  "description": "The Schema Type",
                                  "type": "string",
                                  "enum": [
                                    "Xsd",
                                    "Zip"
                                  ],
                                  "x-ms-enum": {
                                    "name": "SchemaType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Xsd",
                                        "value": "Xsd",
                                        "description": "The schema represents a single XML schema definition file."
                                      },
                                      {
                                        "name": "Zip",
                                        "value": "Zip",
                                        "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "schemaUris": {
                            "type": "array",
                            "description": "The schema URIs for this connection. The schemaUris property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                            "items": {
                              "type": "string",
                              "format": "uri"
                            }
                          }
                        },
                        "required": [
                          "pipeline"
                        ]
                      },
                      "identity": {
                        "description": "The managed service identities assigned to this resource.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "title": "User-Assigned Identities",
                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                            "additionalProperties": {
                              "x-nullable": true,
                              "type": "object",
                              "description": "User assigned identity properties",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID of the assigned identity.",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID of the assigned identity.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureDataTransfer/pipelines": {
      "get": {
        "operationId": "Pipelines_ListBySubscription",
        "tags": [
          "Pipelines"
        ],
        "description": "Lists all Pipeline resources within the current subscription.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Pipeline list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Pipeline items on this page",
                  "items": {
                    "type": "object",
                    "description": "The pipeline resource definition. A Pipeline defines the scope and identity under which data replication scenarios are managed.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The set of configurable properties for the Pipeline resource.",
                        "type": "object",
                        "properties": {
                          "remoteCloud": {
                            "type": "string",
                            "description": "Remote cloud of the data to be transferred or received"
                          },
                          "displayName": {
                            "type": "string",
                            "description": "Display name of this pipeline"
                          },
                          "connections": {
                            "type": "array",
                            "description": "Connections associated with pipeline",
                            "items": {
                              "type": "object",
                              "description": "The ReadPipelineconnection.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Connection id inside pipeline"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Connection name inside pipeline"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Connection type inside pipeline"
                                },
                                "location": {
                                  "type": "string",
                                  "description": "Connection location inside pipeline"
                                },
                                "etag": {
                                  "type": "string",
                                  "description": "Connection etag inside pipeline"
                                },
                                "systemData": {
                                  "description": "Metadata pertaining to creation and last modification of the resource.",
                                  "type": "object",
                                  "properties": {
                                    "createdBy": {
                                      "type": "string",
                                      "description": "The identity that created the resource."
                                    },
                                    "createdByType": {
                                      "type": "string",
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "createdAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource creation (UTC)."
                                    },
                                    "lastModifiedBy": {
                                      "type": "string",
                                      "description": "The identity that last modified the resource."
                                    },
                                    "lastModifiedByType": {
                                      "type": "string",
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource last modification (UTC)"
                                    }
                                  },
                                  "readOnly": true
                                },
                                "properties": {
                                  "description": "Connection properties inside pipeline",
                                  "type": "object",
                                  "properties": {
                                    "internalMetadata": {
                                      "description": "Internal metadata of the connection inside pipeline.",
                                      "readOnly": true,
                                      "type": "object",
                                      "properties": {
                                        "operationStatus": {
                                          "description": "Operation status associated with the last patch request",
                                          "readOnly": true,
                                          "type": "object",
                                          "properties": {
                                            "status": {
                                              "description": "Operation status for the last patch request for this connection.",
                                              "readOnly": true,
                                              "type": "string",
                                              "enum": [
                                                "Failed",
                                                "Succeeded"
                                              ],
                                              "x-ms-enum": {
                                                "name": "OperationStatusEnum",
                                                "modelAsString": true,
                                                "values": [
                                                  {
                                                    "name": "Failed",
                                                    "value": "Failed",
                                                    "description": "The last patch request for this connection completed with an error."
                                                  },
                                                  {
                                                    "name": "Succeeded",
                                                    "value": "Succeeded",
                                                    "description": "The last patch request for this connection completed."
                                                  }
                                                ]
                                              }
                                            },
                                            "id": {
                                              "type": "string",
                                              "description": "Operation status ID of the last patch request for this connection.",
                                              "readOnly": true
                                            },
                                            "message": {
                                              "type": "string",
                                              "description": "Message for the operation for the last patch request for this connection.",
                                              "readOnly": true
                                            }
                                          }
                                        },
                                        "statusSetBy": {
                                          "type": "string",
                                          "description": "User that last set the approved status for this connection",
                                          "readOnly": true
                                        }
                                      },
                                      "additionalProperties": {}
                                    }
                                  },
                                  "additionalProperties": {}
                                }
                              },
                              "required": [
                                "id"
                              ],
                              "additionalProperties": {}
                            },
                            "readOnly": true,
                            "x-ms-identifiers": [
                              "id"
                            ]
                          },
                          "subscribers": {
                            "type": "array",
                            "description": "Subscribers of this resource",
                            "items": {
                              "type": "object",
                              "description": "An individual that would like to subscribe to events that occur on a pipeline.",
                              "properties": {
                                "email": {
                                  "type": "string",
                                  "description": "Email of the subscriber"
                                },
                                "notifications": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "Number specifying what notifications to receive"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the pipeline",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Resource has been accepted for creation."
                                }
                              ]
                            }
                          },
                          "policies": {
                            "type": "array",
                            "description": "The policies for this pipeline. The policies property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "flowTypes": {
                            "type": "array",
                            "description": "The flow type for this flow. The flowTypes property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                            "items": {
                              "type": "string",
                              "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                              "enum": [
                                "Unknown",
                                "Complex",
                                "DevSecOps",
                                "Messaging",
                                "Mission",
                                "MicrosoftInternal",
                                "BasicFiles",
                                "Data",
                                "Standard",
                                "StreamingVideo",
                                "Opaque",
                                "MissionOpaqueXML",
                                "DiskImages",
                                "API"
                              ],
                              "x-ms-enum": {
                                "name": "FlowType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Unknown",
                                    "value": "Unknown",
                                    "description": "This type of flow is not set."
                                  },
                                  {
                                    "name": "Complex",
                                    "value": "Complex",
                                    "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                                  },
                                  {
                                    "name": "DevSecOps",
                                    "value": "DevSecOps",
                                    "description": "This flow sends source code files and artifacts."
                                  },
                                  {
                                    "name": "Messaging",
                                    "value": "Messaging",
                                    "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                                  },
                                  {
                                    "name": "Mission",
                                    "value": "Mission",
                                    "description": "This flow sends standard data but is subject to strict cloud owner approval."
                                  },
                                  {
                                    "name": "MicrosoftInternal",
                                    "value": "MicrosoftInternal",
                                    "description": "This flow is assigned to internal Microsoft use cases."
                                  },
                                  {
                                    "name": "BasicFiles",
                                    "value": "BasicFiles",
                                    "description": "This flow sends blobs that can be used for multiple use cases."
                                  },
                                  {
                                    "name": "Data",
                                    "value": "Data",
                                    "description": "This flow sends blobs that can be used for multiple use cases."
                                  },
                                  {
                                    "name": "Standard",
                                    "value": "Standard",
                                    "description": "This flow sends blobs that can be used for multiple use cases."
                                  },
                                  {
                                    "name": "StreamingVideo",
                                    "value": "StreamingVideo",
                                    "description": "This flow sends video streams."
                                  },
                                  {
                                    "name": "Opaque",
                                    "value": "Opaque",
                                    "description": "This flow sends blobs but is subject to cloud owner approval."
                                  },
                                  {
                                    "name": "MissionOpaqueXML",
                                    "value": "MissionOpaqueXML",
                                    "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                                  },
                                  {
                                    "name": "DiskImages",
                                    "value": "DiskImages",
                                    "description": "This flow sends blobs that can be used for Virtual Machines."
                                  },
                                  {
                                    "name": "API",
                                    "value": "API",
                                    "description": "This flow sends data via an Application Programmer Interface."
                                  }
                                ]
                              }
                            }
                          },
                          "disabledFlowTypes": {
                            "type": "array",
                            "description": "The flow types that are disabled for this pipeline",
                            "items": {
                              "type": "string",
                              "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                              "enum": [
                                "Unknown",
                                "Complex",
                                "DevSecOps",
                                "Messaging",
                                "Mission",
                                "MicrosoftInternal",
                                "BasicFiles",
                                "Data",
                                "Standard",
                                "StreamingVideo",
                                "Opaque",
                                "MissionOpaqueXML",
                                "DiskImages",
                                "API"
                              ],
                              "x-ms-enum": {
                                "name": "FlowType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Unknown",
                                    "value": "Unknown",
                                    "description": "This type of flow is not set."
                                  },
                                  {
                                    "name": "Complex",
                                    "value": "Complex",
                                    "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                                  },
                                  {
                                    "name": "DevSecOps",
                                    "value": "DevSecOps",
                                    "description": "This flow sends source code files and artifacts."
                                  },
                                  {
                                    "name": "Messaging",
                                    "value": "Messaging",
                                    "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                                  },
                                  {
                                    "name": "Mission",
                                    "value": "Mission",
                                    "description": "This flow sends standard data but is subject to strict cloud owner approval."
                                  },
                                  {
                                    "name": "MicrosoftInternal",
                                    "value": "MicrosoftInternal",
                                    "description": "This flow is assigned to internal Microsoft use cases."
                                  },
                                  {
                                    "name": "BasicFiles",
                                    "value": "BasicFiles",
                                    "description": "This flow sends blobs that can be used for multiple use cases."
                                  },
                                  {
                                    "name": "Data",
                                    "value": "Data",
                                    "description": "This flow sends blobs that can be used for multiple use cases."
                                  },
                                  {
                                    "name": "Standard",
                                    "value": "Standard",
                                    "description": "This flow sends blobs that can be used for multiple use cases."
                                  },
                                  {
                                    "name": "StreamingVideo",
                                    "value": "StreamingVideo",
                                    "description": "This flow sends video streams."
                                  },
                                  {
                                    "name": "Opaque",
                                    "value": "Opaque",
                                    "description": "This flow sends blobs but is subject to cloud owner approval."
                                  },
                                  {
                                    "name": "MissionOpaqueXML",
                                    "value": "MissionOpaqueXML",
                                    "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                                  },
                                  {
                                    "name": "DiskImages",
                                    "value": "DiskImages",
                                    "description": "This flow sends blobs that can be used for Virtual Machines."
                                  },
                                  {
                                    "name": "API",
                                    "value": "API",
                                    "description": "This flow sends data via an Application Programmer Interface."
                                  }
                                ]
                              }
                            }
                          },
                          "quarantineDownloadStorageAccount": {
                            "type": "string",
                            "description": "Quarantine Download Storage Account"
                          },
                          "quarantineDownloadStorageContainer": {
                            "type": "string",
                            "description": "Quarantine Download Storage Container"
                          },
                          "status": {
                            "description": "Status of the current pipeline",
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "PipelineStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled",
                                  "description": "The pipeline is currently enabled and all child connection and flow resources below able to send or receive data."
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "The pipeline is currently disabled and all child connection and flow resources below are unable to send or receive data."
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "remoteCloud"
                        ]
                      },
                      "identity": {
                        "description": "The managed service identities assigned to this resource.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "title": "User-Assigned Identities",
                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                            "additionalProperties": {
                              "x-nullable": true,
                              "type": "object",
                              "description": "User assigned identity properties",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID of the assigned identity.",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID of the assigned identity.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/connections": {
      "get": {
        "operationId": "Connections_ListByResourceGroup",
        "tags": [
          "Connections"
        ],
        "description": "Gets connections in a resource group.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Connection list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Connection items on this page",
                  "items": {
                    "type": "object",
                    "description": "The connection resource definition.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "Properties of connection",
                        "type": "object",
                        "properties": {
                          "pipeline": {
                            "type": "string",
                            "description": "Pipeline to use to transfer data"
                          },
                          "direction": {
                            "description": "Direction of data movement",
                            "type": "string",
                            "enum": [
                              "Send",
                              "Receive"
                            ],
                            "x-ms-enum": {
                              "name": "Direction",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Send",
                                  "value": "Send",
                                  "description": "The direction is on the sending side of a pipeline, connection, or flow."
                                },
                                {
                                  "name": "Receive",
                                  "value": "Receive",
                                  "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                                }
                              ]
                            }
                          },
                          "justification": {
                            "type": "string",
                            "description": "Justification for the connection request"
                          },
                          "status": {
                            "description": "Status of the connection",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "InReview",
                              "Approved",
                              "Rejected",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "name": "ConnectionStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "InReview",
                                  "value": "InReview",
                                  "description": "This connection has been created but is under review by the pipeline owner."
                                },
                                {
                                  "name": "Approved",
                                  "value": "Approved",
                                  "description": "This connection has been approved by the pipeline owner and is ready for use."
                                },
                                {
                                  "name": "Rejected",
                                  "value": "Rejected",
                                  "description": "This connection has been rejected by the pipeline owner and cannot be used."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Creation of the connection has been accepted."
                                }
                              ]
                            }
                          },
                          "forceDisabledStatus": {
                            "type": "array",
                            "description": "Force disablement status of the current connection",
                            "items": {
                              "type": "string",
                              "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                              "enum": [
                                "ConnectionForceDisabled",
                                "FlowTypeForceDisabled"
                              ],
                              "x-ms-enum": {
                                "name": "ForceDisabledStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "ConnectionForceDisabled",
                                    "value": "ConnectionForceDisabled",
                                    "description": "Defines disablement of a Flow due to the parent connection being disabled."
                                  },
                                  {
                                    "name": "FlowTypeForceDisabled",
                                    "value": "FlowTypeForceDisabled",
                                    "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                                  }
                                ]
                              }
                            },
                            "readOnly": true
                          },
                          "statusReason": {
                            "type": "string",
                            "description": "Reason for status",
                            "readOnly": true
                          },
                          "linkStatus": {
                            "description": "Link status of the current connection",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Linked",
                              "Unlinked"
                            ],
                            "x-ms-enum": {
                              "name": "LinkStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Linked",
                                  "value": "Linked",
                                  "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                                },
                                {
                                  "name": "Unlinked",
                                  "value": "Unlinked",
                                  "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                                }
                              ]
                            }
                          },
                          "linkedConnectionId": {
                            "type": "string",
                            "description": "Resource ID of the linked connection",
                            "readOnly": true
                          },
                          "flowTypes": {
                            "type": "array",
                            "description": "The flow types being requested for this connection. This FlowType property has reached end of life support starting version 2025-05-30-preview. Please create a FlowProfile resource instead.",
                            "items": {
                              "type": "string",
                              "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                              "enum": [
                                "Unknown",
                                "Complex",
                                "DevSecOps",
                                "Messaging",
                                "Mission",
                                "MicrosoftInternal",
                                "BasicFiles",
                                "Data",
                                "Standard",
                                "StreamingVideo",
                                "Opaque",
                                "MissionOpaqueXML",
                                "DiskImages",
                                "API"
                              ],
                              "x-ms-enum": {
                                "name": "FlowType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Unknown",
                                    "value": "Unknown",
                                    "description": "This type of flow is not set."
                                  },
                                  {
                                    "name": "Complex",
                                    "value": "Complex",
                                    "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                                  },
                                  {
                                    "name": "DevSecOps",
                                    "value": "DevSecOps",
                                    "description": "This flow sends source code files and artifacts."
                                  },
                                  {
                                    "name": "Messaging",
                                    "value": "Messaging",
                                    "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                                  },
                                  {
                                    "name": "Mission",
                                    "value": "Mission",
                                    "description": "This flow sends standard data but is subject to strict cloud owner approval."
                                  },
                                  {
                                    "name": "MicrosoftInternal",
                                    "value": "MicrosoftInternal",
                                    "description": "This flow is assigned to internal Microsoft use cases."
                                  },
                                  {
                                    "name": "BasicFiles",
                                    "value": "BasicFiles",
                                    "description": "This flow sends blobs that can be used for multiple use cases."
                                  },
                                  {
                                    "name": "Data",
                                    "value": "Data",
                                    "description": "This flow sends blobs that can be used for multiple use cases."
                                  },
                                  {
                                    "name": "Standard",
                                    "value": "Standard",
                                    "description": "This flow sends blobs that can be used for multiple use cases."
                                  },
                                  {
                                    "name": "StreamingVideo",
                                    "value": "StreamingVideo",
                                    "description": "This flow sends video streams."
                                  },
                                  {
                                    "name": "Opaque",
                                    "value": "Opaque",
                                    "description": "This flow sends blobs but is subject to cloud owner approval."
                                  },
                                  {
                                    "name": "MissionOpaqueXML",
                                    "value": "MissionOpaqueXML",
                                    "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                                  },
                                  {
                                    "name": "DiskImages",
                                    "value": "DiskImages",
                                    "description": "This flow sends blobs that can be used for Virtual Machines."
                                  },
                                  {
                                    "name": "API",
                                    "value": "API",
                                    "description": "This flow sends data via an Application Programmer Interface."
                                  }
                                ]
                              }
                            }
                          },
                          "requirementId": {
                            "type": "string",
                            "description": "Requirement ID of the connection"
                          },
                          "remoteSubscriptionId": {
                            "type": "string",
                            "description": "Subscription ID to link cloud subscriptions together"
                          },
                          "approver": {
                            "type": "string",
                            "description": "Approver of this connection request",
                            "readOnly": true
                          },
                          "pin": {
                            "type": "string",
                            "description": "PIN to link requests together"
                          },
                          "dateSubmitted": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp that this connection request was submitted at",
                            "readOnly": true
                          },
                          "primaryContact": {
                            "type": "string",
                            "description": "The primary contact for this connection request"
                          },
                          "secondaryContacts": {
                            "type": "array",
                            "description": "The secondary contacts for this connection request",
                            "items": {
                              "type": "string"
                            }
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the connection",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Resource has been accepted for creation."
                                }
                              ]
                            }
                          },
                          "policies": {
                            "type": "array",
                            "description": "The policies for this connection. The policies property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "schemas": {
                            "type": "array",
                            "description": "The schemas for this connection. The schemas property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                            "items": {
                              "type": "object",
                              "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "ID associated with this schema"
                                },
                                "connectionId": {
                                  "type": "string",
                                  "description": "Connection ID associated with this schema"
                                },
                                "status": {
                                  "description": "Status of the schema",
                                  "type": "string",
                                  "enum": [
                                    "New",
                                    "Approved"
                                  ],
                                  "x-ms-enum": {
                                    "name": "SchemaStatus",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "New",
                                        "value": "New",
                                        "description": "A schema that has not been approved and is awaiting review."
                                      },
                                      {
                                        "name": "Approved",
                                        "value": "Approved",
                                        "description": "A schema that has been approved and is ready for use."
                                      }
                                    ]
                                  }
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name of the schema"
                                },
                                "content": {
                                  "type": "string",
                                  "description": "Content of the schema"
                                },
                                "direction": {
                                  "description": "The direction of the schema.",
                                  "type": "string",
                                  "enum": [
                                    "Send",
                                    "Receive"
                                  ],
                                  "x-ms-enum": {
                                    "name": "Direction",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Send",
                                        "value": "Send",
                                        "description": "The direction is on the sending side of a pipeline, connection, or flow."
                                      },
                                      {
                                        "name": "Receive",
                                        "value": "Receive",
                                        "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                                      }
                                    ]
                                  }
                                },
                                "schemaUri": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "Uri containing SAS token for the zipped schema"
                                },
                                "schemaType": {
                                  "description": "The Schema Type",
                                  "type": "string",
                                  "enum": [
                                    "Xsd",
                                    "Zip"
                                  ],
                                  "x-ms-enum": {
                                    "name": "SchemaType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Xsd",
                                        "value": "Xsd",
                                        "description": "The schema represents a single XML schema definition file."
                                      },
                                      {
                                        "name": "Zip",
                                        "value": "Zip",
                                        "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "schemaUris": {
                            "type": "array",
                            "description": "The schema URIs for this connection. The schemaUris property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                            "items": {
                              "type": "string",
                              "format": "uri"
                            }
                          }
                        },
                        "required": [
                          "pipeline"
                        ]
                      },
                      "identity": {
                        "description": "The managed service identities assigned to this resource.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "title": "User-Assigned Identities",
                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                            "additionalProperties": {
                              "x-nullable": true,
                              "type": "object",
                              "description": "User assigned identity properties",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID of the assigned identity.",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID of the assigned identity.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/connections/{connectionName}": {
      "get": {
        "operationId": "Connections_Get",
        "tags": [
          "Connections"
        ],
        "description": "Gets connection resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectionName",
            "in": "path",
            "description": "The name for the connection to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The connection resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of connection",
                  "type": "object",
                  "properties": {
                    "pipeline": {
                      "type": "string",
                      "description": "Pipeline to use to transfer data"
                    },
                    "direction": {
                      "description": "Direction of data movement",
                      "type": "string",
                      "enum": [
                        "Send",
                        "Receive"
                      ],
                      "x-ms-enum": {
                        "name": "Direction",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Send",
                            "value": "Send",
                            "description": "The direction is on the sending side of a pipeline, connection, or flow."
                          },
                          {
                            "name": "Receive",
                            "value": "Receive",
                            "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                          }
                        ]
                      }
                    },
                    "justification": {
                      "type": "string",
                      "description": "Justification for the connection request"
                    },
                    "status": {
                      "description": "Status of the connection",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "InReview",
                        "Approved",
                        "Rejected",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ConnectionStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "InReview",
                            "value": "InReview",
                            "description": "This connection has been created but is under review by the pipeline owner."
                          },
                          {
                            "name": "Approved",
                            "value": "Approved",
                            "description": "This connection has been approved by the pipeline owner and is ready for use."
                          },
                          {
                            "name": "Rejected",
                            "value": "Rejected",
                            "description": "This connection has been rejected by the pipeline owner and cannot be used."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Creation of the connection has been accepted."
                          }
                        ]
                      }
                    },
                    "forceDisabledStatus": {
                      "type": "array",
                      "description": "Force disablement status of the current connection",
                      "items": {
                        "type": "string",
                        "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                        "enum": [
                          "ConnectionForceDisabled",
                          "FlowTypeForceDisabled"
                        ],
                        "x-ms-enum": {
                          "name": "ForceDisabledStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "ConnectionForceDisabled",
                              "value": "ConnectionForceDisabled",
                              "description": "Defines disablement of a Flow due to the parent connection being disabled."
                            },
                            {
                              "name": "FlowTypeForceDisabled",
                              "value": "FlowTypeForceDisabled",
                              "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                            }
                          ]
                        }
                      },
                      "readOnly": true
                    },
                    "statusReason": {
                      "type": "string",
                      "description": "Reason for status",
                      "readOnly": true
                    },
                    "linkStatus": {
                      "description": "Link status of the current connection",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Linked",
                        "Unlinked"
                      ],
                      "x-ms-enum": {
                        "name": "LinkStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Linked",
                            "value": "Linked",
                            "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                          },
                          {
                            "name": "Unlinked",
                            "value": "Unlinked",
                            "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                          }
                        ]
                      }
                    },
                    "linkedConnectionId": {
                      "type": "string",
                      "description": "Resource ID of the linked connection",
                      "readOnly": true
                    },
                    "flowTypes": {
                      "type": "array",
                      "description": "The flow types being requested for this connection. This FlowType property has reached end of life support starting version 2025-05-30-preview. Please create a FlowProfile resource instead.",
                      "items": {
                        "type": "string",
                        "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                        "enum": [
                          "Unknown",
                          "Complex",
                          "DevSecOps",
                          "Messaging",
                          "Mission",
                          "MicrosoftInternal",
                          "BasicFiles",
                          "Data",
                          "Standard",
                          "StreamingVideo",
                          "Opaque",
                          "MissionOpaqueXML",
                          "DiskImages",
                          "API"
                        ],
                        "x-ms-enum": {
                          "name": "FlowType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Unknown",
                              "value": "Unknown",
                              "description": "This type of flow is not set."
                            },
                            {
                              "name": "Complex",
                              "value": "Complex",
                              "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                            },
                            {
                              "name": "DevSecOps",
                              "value": "DevSecOps",
                              "description": "This flow sends source code files and artifacts."
                            },
                            {
                              "name": "Messaging",
                              "value": "Messaging",
                              "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                            },
                            {
                              "name": "Mission",
                              "value": "Mission",
                              "description": "This flow sends standard data but is subject to strict cloud owner approval."
                            },
                            {
                              "name": "MicrosoftInternal",
                              "value": "MicrosoftInternal",
                              "description": "This flow is assigned to internal Microsoft use cases."
                            },
                            {
                              "name": "BasicFiles",
                              "value": "BasicFiles",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Data",
                              "value": "Data",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Standard",
                              "value": "Standard",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "StreamingVideo",
                              "value": "StreamingVideo",
                              "description": "This flow sends video streams."
                            },
                            {
                              "name": "Opaque",
                              "value": "Opaque",
                              "description": "This flow sends blobs but is subject to cloud owner approval."
                            },
                            {
                              "name": "MissionOpaqueXML",
                              "value": "MissionOpaqueXML",
                              "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                            },
                            {
                              "name": "DiskImages",
                              "value": "DiskImages",
                              "description": "This flow sends blobs that can be used for Virtual Machines."
                            },
                            {
                              "name": "API",
                              "value": "API",
                              "description": "This flow sends data via an Application Programmer Interface."
                            }
                          ]
                        }
                      }
                    },
                    "requirementId": {
                      "type": "string",
                      "description": "Requirement ID of the connection"
                    },
                    "remoteSubscriptionId": {
                      "type": "string",
                      "description": "Subscription ID to link cloud subscriptions together"
                    },
                    "approver": {
                      "type": "string",
                      "description": "Approver of this connection request",
                      "readOnly": true
                    },
                    "pin": {
                      "type": "string",
                      "description": "PIN to link requests together"
                    },
                    "dateSubmitted": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp that this connection request was submitted at",
                      "readOnly": true
                    },
                    "primaryContact": {
                      "type": "string",
                      "description": "The primary contact for this connection request"
                    },
                    "secondaryContacts": {
                      "type": "array",
                      "description": "The secondary contacts for this connection request",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the connection",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been accepted for creation."
                          }
                        ]
                      }
                    },
                    "policies": {
                      "type": "array",
                      "description": "The policies for this connection. The policies property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "schemas": {
                      "type": "array",
                      "description": "The schemas for this connection. The schemas property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "object",
                        "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "ID associated with this schema"
                          },
                          "connectionId": {
                            "type": "string",
                            "description": "Connection ID associated with this schema"
                          },
                          "status": {
                            "description": "Status of the schema",
                            "type": "string",
                            "enum": [
                              "New",
                              "Approved"
                            ],
                            "x-ms-enum": {
                              "name": "SchemaStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "New",
                                  "value": "New",
                                  "description": "A schema that has not been approved and is awaiting review."
                                },
                                {
                                  "name": "Approved",
                                  "value": "Approved",
                                  "description": "A schema that has been approved and is ready for use."
                                }
                              ]
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the schema"
                          },
                          "content": {
                            "type": "string",
                            "description": "Content of the schema"
                          },
                          "direction": {
                            "description": "The direction of the schema.",
                            "type": "string",
                            "enum": [
                              "Send",
                              "Receive"
                            ],
                            "x-ms-enum": {
                              "name": "Direction",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Send",
                                  "value": "Send",
                                  "description": "The direction is on the sending side of a pipeline, connection, or flow."
                                },
                                {
                                  "name": "Receive",
                                  "value": "Receive",
                                  "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                                }
                              ]
                            }
                          },
                          "schemaUri": {
                            "type": "string",
                            "format": "uri",
                            "description": "Uri containing SAS token for the zipped schema"
                          },
                          "schemaType": {
                            "description": "The Schema Type",
                            "type": "string",
                            "enum": [
                              "Xsd",
                              "Zip"
                            ],
                            "x-ms-enum": {
                              "name": "SchemaType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Xsd",
                                  "value": "Xsd",
                                  "description": "The schema represents a single XML schema definition file."
                                },
                                {
                                  "name": "Zip",
                                  "value": "Zip",
                                  "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "schemaUris": {
                      "type": "array",
                      "description": "The schema URIs for this connection. The schemaUris property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  },
                  "required": [
                    "pipeline"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Connections_CreateOrUpdate",
        "tags": [
          "Connections"
        ],
        "description": "Creates or updates the connection resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectionName",
            "in": "path",
            "description": "The name for the connection to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          },
          {
            "name": "connection",
            "in": "body",
            "description": "Connection body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The connection resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of connection",
                  "type": "object",
                  "properties": {
                    "pipeline": {
                      "type": "string",
                      "description": "Pipeline to use to transfer data"
                    },
                    "direction": {
                      "description": "Direction of data movement",
                      "type": "string",
                      "enum": [
                        "Send",
                        "Receive"
                      ],
                      "x-ms-enum": {
                        "name": "Direction",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Send",
                            "value": "Send",
                            "description": "The direction is on the sending side of a pipeline, connection, or flow."
                          },
                          {
                            "name": "Receive",
                            "value": "Receive",
                            "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                          }
                        ]
                      }
                    },
                    "justification": {
                      "type": "string",
                      "description": "Justification for the connection request"
                    },
                    "status": {
                      "description": "Status of the connection",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "InReview",
                        "Approved",
                        "Rejected",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ConnectionStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "InReview",
                            "value": "InReview",
                            "description": "This connection has been created but is under review by the pipeline owner."
                          },
                          {
                            "name": "Approved",
                            "value": "Approved",
                            "description": "This connection has been approved by the pipeline owner and is ready for use."
                          },
                          {
                            "name": "Rejected",
                            "value": "Rejected",
                            "description": "This connection has been rejected by the pipeline owner and cannot be used."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Creation of the connection has been accepted."
                          }
                        ]
                      }
                    },
                    "forceDisabledStatus": {
                      "type": "array",
                      "description": "Force disablement status of the current connection",
                      "items": {
                        "type": "string",
                        "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                        "enum": [
                          "ConnectionForceDisabled",
                          "FlowTypeForceDisabled"
                        ],
                        "x-ms-enum": {
                          "name": "ForceDisabledStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "ConnectionForceDisabled",
                              "value": "ConnectionForceDisabled",
                              "description": "Defines disablement of a Flow due to the parent connection being disabled."
                            },
                            {
                              "name": "FlowTypeForceDisabled",
                              "value": "FlowTypeForceDisabled",
                              "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                            }
                          ]
                        }
                      },
                      "readOnly": true
                    },
                    "statusReason": {
                      "type": "string",
                      "description": "Reason for status",
                      "readOnly": true
                    },
                    "linkStatus": {
                      "description": "Link status of the current connection",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Linked",
                        "Unlinked"
                      ],
                      "x-ms-enum": {
                        "name": "LinkStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Linked",
                            "value": "Linked",
                            "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                          },
                          {
                            "name": "Unlinked",
                            "value": "Unlinked",
                            "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                          }
                        ]
                      }
                    },
                    "linkedConnectionId": {
                      "type": "string",
                      "description": "Resource ID of the linked connection",
                      "readOnly": true
                    },
                    "flowTypes": {
                      "type": "array",
                      "description": "The flow types being requested for this connection. This FlowType property has reached end of life support starting version 2025-05-30-preview. Please create a FlowProfile resource instead.",
                      "items": {
                        "type": "string",
                        "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                        "enum": [
                          "Unknown",
                          "Complex",
                          "DevSecOps",
                          "Messaging",
                          "Mission",
                          "MicrosoftInternal",
                          "BasicFiles",
                          "Data",
                          "Standard",
                          "StreamingVideo",
                          "Opaque",
                          "MissionOpaqueXML",
                          "DiskImages",
                          "API"
                        ],
                        "x-ms-enum": {
                          "name": "FlowType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Unknown",
                              "value": "Unknown",
                              "description": "This type of flow is not set."
                            },
                            {
                              "name": "Complex",
                              "value": "Complex",
                              "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                            },
                            {
                              "name": "DevSecOps",
                              "value": "DevSecOps",
                              "description": "This flow sends source code files and artifacts."
                            },
                            {
                              "name": "Messaging",
                              "value": "Messaging",
                              "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                            },
                            {
                              "name": "Mission",
                              "value": "Mission",
                              "description": "This flow sends standard data but is subject to strict cloud owner approval."
                            },
                            {
                              "name": "MicrosoftInternal",
                              "value": "MicrosoftInternal",
                              "description": "This flow is assigned to internal Microsoft use cases."
                            },
                            {
                              "name": "BasicFiles",
                              "value": "BasicFiles",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Data",
                              "value": "Data",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Standard",
                              "value": "Standard",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "StreamingVideo",
                              "value": "StreamingVideo",
                              "description": "This flow sends video streams."
                            },
                            {
                              "name": "Opaque",
                              "value": "Opaque",
                              "description": "This flow sends blobs but is subject to cloud owner approval."
                            },
                            {
                              "name": "MissionOpaqueXML",
                              "value": "MissionOpaqueXML",
                              "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                            },
                            {
                              "name": "DiskImages",
                              "value": "DiskImages",
                              "description": "This flow sends blobs that can be used for Virtual Machines."
                            },
                            {
                              "name": "API",
                              "value": "API",
                              "description": "This flow sends data via an Application Programmer Interface."
                            }
                          ]
                        }
                      }
                    },
                    "requirementId": {
                      "type": "string",
                      "description": "Requirement ID of the connection"
                    },
                    "remoteSubscriptionId": {
                      "type": "string",
                      "description": "Subscription ID to link cloud subscriptions together"
                    },
                    "approver": {
                      "type": "string",
                      "description": "Approver of this connection request",
                      "readOnly": true
                    },
                    "pin": {
                      "type": "string",
                      "description": "PIN to link requests together"
                    },
                    "dateSubmitted": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp that this connection request was submitted at",
                      "readOnly": true
                    },
                    "primaryContact": {
                      "type": "string",
                      "description": "The primary contact for this connection request"
                    },
                    "secondaryContacts": {
                      "type": "array",
                      "description": "The secondary contacts for this connection request",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the connection",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been accepted for creation."
                          }
                        ]
                      }
                    },
                    "policies": {
                      "type": "array",
                      "description": "The policies for this connection. The policies property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "schemas": {
                      "type": "array",
                      "description": "The schemas for this connection. The schemas property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "object",
                        "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "ID associated with this schema"
                          },
                          "connectionId": {
                            "type": "string",
                            "description": "Connection ID associated with this schema"
                          },
                          "status": {
                            "description": "Status of the schema",
                            "type": "string",
                            "enum": [
                              "New",
                              "Approved"
                            ],
                            "x-ms-enum": {
                              "name": "SchemaStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "New",
                                  "value": "New",
                                  "description": "A schema that has not been approved and is awaiting review."
                                },
                                {
                                  "name": "Approved",
                                  "value": "Approved",
                                  "description": "A schema that has been approved and is ready for use."
                                }
                              ]
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the schema"
                          },
                          "content": {
                            "type": "string",
                            "description": "Content of the schema"
                          },
                          "direction": {
                            "description": "The direction of the schema.",
                            "type": "string",
                            "enum": [
                              "Send",
                              "Receive"
                            ],
                            "x-ms-enum": {
                              "name": "Direction",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Send",
                                  "value": "Send",
                                  "description": "The direction is on the sending side of a pipeline, connection, or flow."
                                },
                                {
                                  "name": "Receive",
                                  "value": "Receive",
                                  "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                                }
                              ]
                            }
                          },
                          "schemaUri": {
                            "type": "string",
                            "format": "uri",
                            "description": "Uri containing SAS token for the zipped schema"
                          },
                          "schemaType": {
                            "description": "The Schema Type",
                            "type": "string",
                            "enum": [
                              "Xsd",
                              "Zip"
                            ],
                            "x-ms-enum": {
                              "name": "SchemaType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Xsd",
                                  "value": "Xsd",
                                  "description": "The schema represents a single XML schema definition file."
                                },
                                {
                                  "name": "Zip",
                                  "value": "Zip",
                                  "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "schemaUris": {
                      "type": "array",
                      "description": "The schema URIs for this connection. The schemaUris property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  },
                  "required": [
                    "pipeline"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Connection' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "The connection resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of connection",
                  "type": "object",
                  "properties": {
                    "pipeline": {
                      "type": "string",
                      "description": "Pipeline to use to transfer data"
                    },
                    "direction": {
                      "description": "Direction of data movement",
                      "type": "string",
                      "enum": [
                        "Send",
                        "Receive"
                      ],
                      "x-ms-enum": {
                        "name": "Direction",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Send",
                            "value": "Send",
                            "description": "The direction is on the sending side of a pipeline, connection, or flow."
                          },
                          {
                            "name": "Receive",
                            "value": "Receive",
                            "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                          }
                        ]
                      }
                    },
                    "justification": {
                      "type": "string",
                      "description": "Justification for the connection request"
                    },
                    "status": {
                      "description": "Status of the connection",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "InReview",
                        "Approved",
                        "Rejected",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ConnectionStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "InReview",
                            "value": "InReview",
                            "description": "This connection has been created but is under review by the pipeline owner."
                          },
                          {
                            "name": "Approved",
                            "value": "Approved",
                            "description": "This connection has been approved by the pipeline owner and is ready for use."
                          },
                          {
                            "name": "Rejected",
                            "value": "Rejected",
                            "description": "This connection has been rejected by the pipeline owner and cannot be used."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Creation of the connection has been accepted."
                          }
                        ]
                      }
                    },
                    "forceDisabledStatus": {
                      "type": "array",
                      "description": "Force disablement status of the current connection",
                      "items": {
                        "type": "string",
                        "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                        "enum": [
                          "ConnectionForceDisabled",
                          "FlowTypeForceDisabled"
                        ],
                        "x-ms-enum": {
                          "name": "ForceDisabledStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "ConnectionForceDisabled",
                              "value": "ConnectionForceDisabled",
                              "description": "Defines disablement of a Flow due to the parent connection being disabled."
                            },
                            {
                              "name": "FlowTypeForceDisabled",
                              "value": "FlowTypeForceDisabled",
                              "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                            }
                          ]
                        }
                      },
                      "readOnly": true
                    },
                    "statusReason": {
                      "type": "string",
                      "description": "Reason for status",
                      "readOnly": true
                    },
                    "linkStatus": {
                      "description": "Link status of the current connection",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Linked",
                        "Unlinked"
                      ],
                      "x-ms-enum": {
                        "name": "LinkStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Linked",
                            "value": "Linked",
                            "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                          },
                          {
                            "name": "Unlinked",
                            "value": "Unlinked",
                            "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                          }
                        ]
                      }
                    },
                    "linkedConnectionId": {
                      "type": "string",
                      "description": "Resource ID of the linked connection",
                      "readOnly": true
                    },
                    "flowTypes": {
                      "type": "array",
                      "description": "The flow types being requested for this connection. This FlowType property has reached end of life support starting version 2025-05-30-preview. Please create a FlowProfile resource instead.",
                      "items": {
                        "type": "string",
                        "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                        "enum": [
                          "Unknown",
                          "Complex",
                          "DevSecOps",
                          "Messaging",
                          "Mission",
                          "MicrosoftInternal",
                          "BasicFiles",
                          "Data",
                          "Standard",
                          "StreamingVideo",
                          "Opaque",
                          "MissionOpaqueXML",
                          "DiskImages",
                          "API"
                        ],
                        "x-ms-enum": {
                          "name": "FlowType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Unknown",
                              "value": "Unknown",
                              "description": "This type of flow is not set."
                            },
                            {
                              "name": "Complex",
                              "value": "Complex",
                              "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                            },
                            {
                              "name": "DevSecOps",
                              "value": "DevSecOps",
                              "description": "This flow sends source code files and artifacts."
                            },
                            {
                              "name": "Messaging",
                              "value": "Messaging",
                              "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                            },
                            {
                              "name": "Mission",
                              "value": "Mission",
                              "description": "This flow sends standard data but is subject to strict cloud owner approval."
                            },
                            {
                              "name": "MicrosoftInternal",
                              "value": "MicrosoftInternal",
                              "description": "This flow is assigned to internal Microsoft use cases."
                            },
                            {
                              "name": "BasicFiles",
                              "value": "BasicFiles",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Data",
                              "value": "Data",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Standard",
                              "value": "Standard",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "StreamingVideo",
                              "value": "StreamingVideo",
                              "description": "This flow sends video streams."
                            },
                            {
                              "name": "Opaque",
                              "value": "Opaque",
                              "description": "This flow sends blobs but is subject to cloud owner approval."
                            },
                            {
                              "name": "MissionOpaqueXML",
                              "value": "MissionOpaqueXML",
                              "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                            },
                            {
                              "name": "DiskImages",
                              "value": "DiskImages",
                              "description": "This flow sends blobs that can be used for Virtual Machines."
                            },
                            {
                              "name": "API",
                              "value": "API",
                              "description": "This flow sends data via an Application Programmer Interface."
                            }
                          ]
                        }
                      }
                    },
                    "requirementId": {
                      "type": "string",
                      "description": "Requirement ID of the connection"
                    },
                    "remoteSubscriptionId": {
                      "type": "string",
                      "description": "Subscription ID to link cloud subscriptions together"
                    },
                    "approver": {
                      "type": "string",
                      "description": "Approver of this connection request",
                      "readOnly": true
                    },
                    "pin": {
                      "type": "string",
                      "description": "PIN to link requests together"
                    },
                    "dateSubmitted": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp that this connection request was submitted at",
                      "readOnly": true
                    },
                    "primaryContact": {
                      "type": "string",
                      "description": "The primary contact for this connection request"
                    },
                    "secondaryContacts": {
                      "type": "array",
                      "description": "The secondary contacts for this connection request",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the connection",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been accepted for creation."
                          }
                        ]
                      }
                    },
                    "policies": {
                      "type": "array",
                      "description": "The policies for this connection. The policies property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "schemas": {
                      "type": "array",
                      "description": "The schemas for this connection. The schemas property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "object",
                        "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "ID associated with this schema"
                          },
                          "connectionId": {
                            "type": "string",
                            "description": "Connection ID associated with this schema"
                          },
                          "status": {
                            "description": "Status of the schema",
                            "type": "string",
                            "enum": [
                              "New",
                              "Approved"
                            ],
                            "x-ms-enum": {
                              "name": "SchemaStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "New",
                                  "value": "New",
                                  "description": "A schema that has not been approved and is awaiting review."
                                },
                                {
                                  "name": "Approved",
                                  "value": "Approved",
                                  "description": "A schema that has been approved and is ready for use."
                                }
                              ]
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the schema"
                          },
                          "content": {
                            "type": "string",
                            "description": "Content of the schema"
                          },
                          "direction": {
                            "description": "The direction of the schema.",
                            "type": "string",
                            "enum": [
                              "Send",
                              "Receive"
                            ],
                            "x-ms-enum": {
                              "name": "Direction",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Send",
                                  "value": "Send",
                                  "description": "The direction is on the sending side of a pipeline, connection, or flow."
                                },
                                {
                                  "name": "Receive",
                                  "value": "Receive",
                                  "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                                }
                              ]
                            }
                          },
                          "schemaUri": {
                            "type": "string",
                            "format": "uri",
                            "description": "Uri containing SAS token for the zipped schema"
                          },
                          "schemaType": {
                            "description": "The Schema Type",
                            "type": "string",
                            "enum": [
                              "Xsd",
                              "Zip"
                            ],
                            "x-ms-enum": {
                              "name": "SchemaType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Xsd",
                                  "value": "Xsd",
                                  "description": "The schema represents a single XML schema definition file."
                                },
                                {
                                  "name": "Zip",
                                  "value": "Zip",
                                  "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "schemaUris": {
                      "type": "array",
                      "description": "The schema URIs for this connection. The schemaUris property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  },
                  "required": [
                    "pipeline"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'Connection' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "The connection resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of connection",
                  "type": "object",
                  "properties": {
                    "pipeline": {
                      "type": "string",
                      "description": "Pipeline to use to transfer data"
                    },
                    "direction": {
                      "description": "Direction of data movement",
                      "type": "string",
                      "enum": [
                        "Send",
                        "Receive"
                      ],
                      "x-ms-enum": {
                        "name": "Direction",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Send",
                            "value": "Send",
                            "description": "The direction is on the sending side of a pipeline, connection, or flow."
                          },
                          {
                            "name": "Receive",
                            "value": "Receive",
                            "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                          }
                        ]
                      }
                    },
                    "justification": {
                      "type": "string",
                      "description": "Justification for the connection request"
                    },
                    "status": {
                      "description": "Status of the connection",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "InReview",
                        "Approved",
                        "Rejected",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ConnectionStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "InReview",
                            "value": "InReview",
                            "description": "This connection has been created but is under review by the pipeline owner."
                          },
                          {
                            "name": "Approved",
                            "value": "Approved",
                            "description": "This connection has been approved by the pipeline owner and is ready for use."
                          },
                          {
                            "name": "Rejected",
                            "value": "Rejected",
                            "description": "This connection has been rejected by the pipeline owner and cannot be used."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Creation of the connection has been accepted."
                          }
                        ]
                      }
                    },
                    "forceDisabledStatus": {
                      "type": "array",
                      "description": "Force disablement status of the current connection",
                      "items": {
                        "type": "string",
                        "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                        "enum": [
                          "ConnectionForceDisabled",
                          "FlowTypeForceDisabled"
                        ],
                        "x-ms-enum": {
                          "name": "ForceDisabledStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "ConnectionForceDisabled",
                              "value": "ConnectionForceDisabled",
                              "description": "Defines disablement of a Flow due to the parent connection being disabled."
                            },
                            {
                              "name": "FlowTypeForceDisabled",
                              "value": "FlowTypeForceDisabled",
                              "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                            }
                          ]
                        }
                      },
                      "readOnly": true
                    },
                    "statusReason": {
                      "type": "string",
                      "description": "Reason for status",
                      "readOnly": true
                    },
                    "linkStatus": {
                      "description": "Link status of the current connection",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Linked",
                        "Unlinked"
                      ],
                      "x-ms-enum": {
                        "name": "LinkStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Linked",
                            "value": "Linked",
                            "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                          },
                          {
                            "name": "Unlinked",
                            "value": "Unlinked",
                            "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                          }
                        ]
                      }
                    },
                    "linkedConnectionId": {
                      "type": "string",
                      "description": "Resource ID of the linked connection",
                      "readOnly": true
                    },
                    "flowTypes": {
                      "type": "array",
                      "description": "The flow types being requested for this connection. This FlowType property has reached end of life support starting version 2025-05-30-preview. Please create a FlowProfile resource instead.",
                      "items": {
                        "type": "string",
                        "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                        "enum": [
                          "Unknown",
                          "Complex",
                          "DevSecOps",
                          "Messaging",
                          "Mission",
                          "MicrosoftInternal",
                          "BasicFiles",
                          "Data",
                          "Standard",
                          "StreamingVideo",
                          "Opaque",
                          "MissionOpaqueXML",
                          "DiskImages",
                          "API"
                        ],
                        "x-ms-enum": {
                          "name": "FlowType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Unknown",
                              "value": "Unknown",
                              "description": "This type of flow is not set."
                            },
                            {
                              "name": "Complex",
                              "value": "Complex",
                              "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                            },
                            {
                              "name": "DevSecOps",
                              "value": "DevSecOps",
                              "description": "This flow sends source code files and artifacts."
                            },
                            {
                              "name": "Messaging",
                              "value": "Messaging",
                              "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                            },
                            {
                              "name": "Mission",
                              "value": "Mission",
                              "description": "This flow sends standard data but is subject to strict cloud owner approval."
                            },
                            {
                              "name": "MicrosoftInternal",
                              "value": "MicrosoftInternal",
                              "description": "This flow is assigned to internal Microsoft use cases."
                            },
                            {
                              "name": "BasicFiles",
                              "value": "BasicFiles",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Data",
                              "value": "Data",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Standard",
                              "value": "Standard",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "StreamingVideo",
                              "value": "StreamingVideo",
                              "description": "This flow sends video streams."
                            },
                            {
                              "name": "Opaque",
                              "value": "Opaque",
                              "description": "This flow sends blobs but is subject to cloud owner approval."
                            },
                            {
                              "name": "MissionOpaqueXML",
                              "value": "MissionOpaqueXML",
                              "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                            },
                            {
                              "name": "DiskImages",
                              "value": "DiskImages",
                              "description": "This flow sends blobs that can be used for Virtual Machines."
                            },
                            {
                              "name": "API",
                              "value": "API",
                              "description": "This flow sends data via an Application Programmer Interface."
                            }
                          ]
                        }
                      }
                    },
                    "requirementId": {
                      "type": "string",
                      "description": "Requirement ID of the connection"
                    },
                    "remoteSubscriptionId": {
                      "type": "string",
                      "description": "Subscription ID to link cloud subscriptions together"
                    },
                    "approver": {
                      "type": "string",
                      "description": "Approver of this connection request",
                      "readOnly": true
                    },
                    "pin": {
                      "type": "string",
                      "description": "PIN to link requests together"
                    },
                    "dateSubmitted": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp that this connection request was submitted at",
                      "readOnly": true
                    },
                    "primaryContact": {
                      "type": "string",
                      "description": "The primary contact for this connection request"
                    },
                    "secondaryContacts": {
                      "type": "array",
                      "description": "The secondary contacts for this connection request",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the connection",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been accepted for creation."
                          }
                        ]
                      }
                    },
                    "policies": {
                      "type": "array",
                      "description": "The policies for this connection. The policies property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "schemas": {
                      "type": "array",
                      "description": "The schemas for this connection. The schemas property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "object",
                        "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "ID associated with this schema"
                          },
                          "connectionId": {
                            "type": "string",
                            "description": "Connection ID associated with this schema"
                          },
                          "status": {
                            "description": "Status of the schema",
                            "type": "string",
                            "enum": [
                              "New",
                              "Approved"
                            ],
                            "x-ms-enum": {
                              "name": "SchemaStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "New",
                                  "value": "New",
                                  "description": "A schema that has not been approved and is awaiting review."
                                },
                                {
                                  "name": "Approved",
                                  "value": "Approved",
                                  "description": "A schema that has been approved and is ready for use."
                                }
                              ]
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the schema"
                          },
                          "content": {
                            "type": "string",
                            "description": "Content of the schema"
                          },
                          "direction": {
                            "description": "The direction of the schema.",
                            "type": "string",
                            "enum": [
                              "Send",
                              "Receive"
                            ],
                            "x-ms-enum": {
                              "name": "Direction",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Send",
                                  "value": "Send",
                                  "description": "The direction is on the sending side of a pipeline, connection, or flow."
                                },
                                {
                                  "name": "Receive",
                                  "value": "Receive",
                                  "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                                }
                              ]
                            }
                          },
                          "schemaUri": {
                            "type": "string",
                            "format": "uri",
                            "description": "Uri containing SAS token for the zipped schema"
                          },
                          "schemaType": {
                            "description": "The Schema Type",
                            "type": "string",
                            "enum": [
                              "Xsd",
                              "Zip"
                            ],
                            "x-ms-enum": {
                              "name": "SchemaType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Xsd",
                                  "value": "Xsd",
                                  "description": "The schema represents a single XML schema definition file."
                                },
                                {
                                  "name": "Zip",
                                  "value": "Zip",
                                  "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "schemaUris": {
                      "type": "array",
                      "description": "The schema URIs for this connection. The schemaUris property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  },
                  "required": [
                    "pipeline"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Connections_Update",
        "tags": [
          "Connections"
        ],
        "description": "Updates the connection resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectionName",
            "in": "path",
            "description": "The name for the connection to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          },
          {
            "name": "connection",
            "in": "body",
            "description": "Connection body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The connections resource patch definition.",
              "properties": {
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The connection resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of connection",
                  "type": "object",
                  "properties": {
                    "pipeline": {
                      "type": "string",
                      "description": "Pipeline to use to transfer data"
                    },
                    "direction": {
                      "description": "Direction of data movement",
                      "type": "string",
                      "enum": [
                        "Send",
                        "Receive"
                      ],
                      "x-ms-enum": {
                        "name": "Direction",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Send",
                            "value": "Send",
                            "description": "The direction is on the sending side of a pipeline, connection, or flow."
                          },
                          {
                            "name": "Receive",
                            "value": "Receive",
                            "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                          }
                        ]
                      }
                    },
                    "justification": {
                      "type": "string",
                      "description": "Justification for the connection request"
                    },
                    "status": {
                      "description": "Status of the connection",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "InReview",
                        "Approved",
                        "Rejected",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ConnectionStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "InReview",
                            "value": "InReview",
                            "description": "This connection has been created but is under review by the pipeline owner."
                          },
                          {
                            "name": "Approved",
                            "value": "Approved",
                            "description": "This connection has been approved by the pipeline owner and is ready for use."
                          },
                          {
                            "name": "Rejected",
                            "value": "Rejected",
                            "description": "This connection has been rejected by the pipeline owner and cannot be used."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Creation of the connection has been accepted."
                          }
                        ]
                      }
                    },
                    "forceDisabledStatus": {
                      "type": "array",
                      "description": "Force disablement status of the current connection",
                      "items": {
                        "type": "string",
                        "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                        "enum": [
                          "ConnectionForceDisabled",
                          "FlowTypeForceDisabled"
                        ],
                        "x-ms-enum": {
                          "name": "ForceDisabledStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "ConnectionForceDisabled",
                              "value": "ConnectionForceDisabled",
                              "description": "Defines disablement of a Flow due to the parent connection being disabled."
                            },
                            {
                              "name": "FlowTypeForceDisabled",
                              "value": "FlowTypeForceDisabled",
                              "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                            }
                          ]
                        }
                      },
                      "readOnly": true
                    },
                    "statusReason": {
                      "type": "string",
                      "description": "Reason for status",
                      "readOnly": true
                    },
                    "linkStatus": {
                      "description": "Link status of the current connection",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Linked",
                        "Unlinked"
                      ],
                      "x-ms-enum": {
                        "name": "LinkStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Linked",
                            "value": "Linked",
                            "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                          },
                          {
                            "name": "Unlinked",
                            "value": "Unlinked",
                            "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                          }
                        ]
                      }
                    },
                    "linkedConnectionId": {
                      "type": "string",
                      "description": "Resource ID of the linked connection",
                      "readOnly": true
                    },
                    "flowTypes": {
                      "type": "array",
                      "description": "The flow types being requested for this connection. This FlowType property has reached end of life support starting version 2025-05-30-preview. Please create a FlowProfile resource instead.",
                      "items": {
                        "type": "string",
                        "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                        "enum": [
                          "Unknown",
                          "Complex",
                          "DevSecOps",
                          "Messaging",
                          "Mission",
                          "MicrosoftInternal",
                          "BasicFiles",
                          "Data",
                          "Standard",
                          "StreamingVideo",
                          "Opaque",
                          "MissionOpaqueXML",
                          "DiskImages",
                          "API"
                        ],
                        "x-ms-enum": {
                          "name": "FlowType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Unknown",
                              "value": "Unknown",
                              "description": "This type of flow is not set."
                            },
                            {
                              "name": "Complex",
                              "value": "Complex",
                              "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                            },
                            {
                              "name": "DevSecOps",
                              "value": "DevSecOps",
                              "description": "This flow sends source code files and artifacts."
                            },
                            {
                              "name": "Messaging",
                              "value": "Messaging",
                              "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                            },
                            {
                              "name": "Mission",
                              "value": "Mission",
                              "description": "This flow sends standard data but is subject to strict cloud owner approval."
                            },
                            {
                              "name": "MicrosoftInternal",
                              "value": "MicrosoftInternal",
                              "description": "This flow is assigned to internal Microsoft use cases."
                            },
                            {
                              "name": "BasicFiles",
                              "value": "BasicFiles",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Data",
                              "value": "Data",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Standard",
                              "value": "Standard",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "StreamingVideo",
                              "value": "StreamingVideo",
                              "description": "This flow sends video streams."
                            },
                            {
                              "name": "Opaque",
                              "value": "Opaque",
                              "description": "This flow sends blobs but is subject to cloud owner approval."
                            },
                            {
                              "name": "MissionOpaqueXML",
                              "value": "MissionOpaqueXML",
                              "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                            },
                            {
                              "name": "DiskImages",
                              "value": "DiskImages",
                              "description": "This flow sends blobs that can be used for Virtual Machines."
                            },
                            {
                              "name": "API",
                              "value": "API",
                              "description": "This flow sends data via an Application Programmer Interface."
                            }
                          ]
                        }
                      }
                    },
                    "requirementId": {
                      "type": "string",
                      "description": "Requirement ID of the connection"
                    },
                    "remoteSubscriptionId": {
                      "type": "string",
                      "description": "Subscription ID to link cloud subscriptions together"
                    },
                    "approver": {
                      "type": "string",
                      "description": "Approver of this connection request",
                      "readOnly": true
                    },
                    "pin": {
                      "type": "string",
                      "description": "PIN to link requests together"
                    },
                    "dateSubmitted": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp that this connection request was submitted at",
                      "readOnly": true
                    },
                    "primaryContact": {
                      "type": "string",
                      "description": "The primary contact for this connection request"
                    },
                    "secondaryContacts": {
                      "type": "array",
                      "description": "The secondary contacts for this connection request",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the connection",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been accepted for creation."
                          }
                        ]
                      }
                    },
                    "policies": {
                      "type": "array",
                      "description": "The policies for this connection. The policies property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "schemas": {
                      "type": "array",
                      "description": "The schemas for this connection. The schemas property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "object",
                        "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "ID associated with this schema"
                          },
                          "connectionId": {
                            "type": "string",
                            "description": "Connection ID associated with this schema"
                          },
                          "status": {
                            "description": "Status of the schema",
                            "type": "string",
                            "enum": [
                              "New",
                              "Approved"
                            ],
                            "x-ms-enum": {
                              "name": "SchemaStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "New",
                                  "value": "New",
                                  "description": "A schema that has not been approved and is awaiting review."
                                },
                                {
                                  "name": "Approved",
                                  "value": "Approved",
                                  "description": "A schema that has been approved and is ready for use."
                                }
                              ]
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the schema"
                          },
                          "content": {
                            "type": "string",
                            "description": "Content of the schema"
                          },
                          "direction": {
                            "description": "The direction of the schema.",
                            "type": "string",
                            "enum": [
                              "Send",
                              "Receive"
                            ],
                            "x-ms-enum": {
                              "name": "Direction",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Send",
                                  "value": "Send",
                                  "description": "The direction is on the sending side of a pipeline, connection, or flow."
                                },
                                {
                                  "name": "Receive",
                                  "value": "Receive",
                                  "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                                }
                              ]
                            }
                          },
                          "schemaUri": {
                            "type": "string",
                            "format": "uri",
                            "description": "Uri containing SAS token for the zipped schema"
                          },
                          "schemaType": {
                            "description": "The Schema Type",
                            "type": "string",
                            "enum": [
                              "Xsd",
                              "Zip"
                            ],
                            "x-ms-enum": {
                              "name": "SchemaType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Xsd",
                                  "value": "Xsd",
                                  "description": "The schema represents a single XML schema definition file."
                                },
                                {
                                  "name": "Zip",
                                  "value": "Zip",
                                  "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "schemaUris": {
                      "type": "array",
                      "description": "The schema URIs for this connection. The schemaUris property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  },
                  "required": [
                    "pipeline"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "type": "object",
              "description": "The connection resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of connection",
                  "type": "object",
                  "properties": {
                    "pipeline": {
                      "type": "string",
                      "description": "Pipeline to use to transfer data"
                    },
                    "direction": {
                      "description": "Direction of data movement",
                      "type": "string",
                      "enum": [
                        "Send",
                        "Receive"
                      ],
                      "x-ms-enum": {
                        "name": "Direction",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Send",
                            "value": "Send",
                            "description": "The direction is on the sending side of a pipeline, connection, or flow."
                          },
                          {
                            "name": "Receive",
                            "value": "Receive",
                            "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                          }
                        ]
                      }
                    },
                    "justification": {
                      "type": "string",
                      "description": "Justification for the connection request"
                    },
                    "status": {
                      "description": "Status of the connection",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "InReview",
                        "Approved",
                        "Rejected",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ConnectionStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "InReview",
                            "value": "InReview",
                            "description": "This connection has been created but is under review by the pipeline owner."
                          },
                          {
                            "name": "Approved",
                            "value": "Approved",
                            "description": "This connection has been approved by the pipeline owner and is ready for use."
                          },
                          {
                            "name": "Rejected",
                            "value": "Rejected",
                            "description": "This connection has been rejected by the pipeline owner and cannot be used."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Creation of the connection has been accepted."
                          }
                        ]
                      }
                    },
                    "forceDisabledStatus": {
                      "type": "array",
                      "description": "Force disablement status of the current connection",
                      "items": {
                        "type": "string",
                        "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                        "enum": [
                          "ConnectionForceDisabled",
                          "FlowTypeForceDisabled"
                        ],
                        "x-ms-enum": {
                          "name": "ForceDisabledStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "ConnectionForceDisabled",
                              "value": "ConnectionForceDisabled",
                              "description": "Defines disablement of a Flow due to the parent connection being disabled."
                            },
                            {
                              "name": "FlowTypeForceDisabled",
                              "value": "FlowTypeForceDisabled",
                              "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                            }
                          ]
                        }
                      },
                      "readOnly": true
                    },
                    "statusReason": {
                      "type": "string",
                      "description": "Reason for status",
                      "readOnly": true
                    },
                    "linkStatus": {
                      "description": "Link status of the current connection",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Linked",
                        "Unlinked"
                      ],
                      "x-ms-enum": {
                        "name": "LinkStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Linked",
                            "value": "Linked",
                            "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                          },
                          {
                            "name": "Unlinked",
                            "value": "Unlinked",
                            "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                          }
                        ]
                      }
                    },
                    "linkedConnectionId": {
                      "type": "string",
                      "description": "Resource ID of the linked connection",
                      "readOnly": true
                    },
                    "flowTypes": {
                      "type": "array",
                      "description": "The flow types being requested for this connection. This FlowType property has reached end of life support starting version 2025-05-30-preview. Please create a FlowProfile resource instead.",
                      "items": {
                        "type": "string",
                        "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                        "enum": [
                          "Unknown",
                          "Complex",
                          "DevSecOps",
                          "Messaging",
                          "Mission",
                          "MicrosoftInternal",
                          "BasicFiles",
                          "Data",
                          "Standard",
                          "StreamingVideo",
                          "Opaque",
                          "MissionOpaqueXML",
                          "DiskImages",
                          "API"
                        ],
                        "x-ms-enum": {
                          "name": "FlowType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Unknown",
                              "value": "Unknown",
                              "description": "This type of flow is not set."
                            },
                            {
                              "name": "Complex",
                              "value": "Complex",
                              "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                            },
                            {
                              "name": "DevSecOps",
                              "value": "DevSecOps",
                              "description": "This flow sends source code files and artifacts."
                            },
                            {
                              "name": "Messaging",
                              "value": "Messaging",
                              "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                            },
                            {
                              "name": "Mission",
                              "value": "Mission",
                              "description": "This flow sends standard data but is subject to strict cloud owner approval."
                            },
                            {
                              "name": "MicrosoftInternal",
                              "value": "MicrosoftInternal",
                              "description": "This flow is assigned to internal Microsoft use cases."
                            },
                            {
                              "name": "BasicFiles",
                              "value": "BasicFiles",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Data",
                              "value": "Data",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Standard",
                              "value": "Standard",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "StreamingVideo",
                              "value": "StreamingVideo",
                              "description": "This flow sends video streams."
                            },
                            {
                              "name": "Opaque",
                              "value": "Opaque",
                              "description": "This flow sends blobs but is subject to cloud owner approval."
                            },
                            {
                              "name": "MissionOpaqueXML",
                              "value": "MissionOpaqueXML",
                              "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                            },
                            {
                              "name": "DiskImages",
                              "value": "DiskImages",
                              "description": "This flow sends blobs that can be used for Virtual Machines."
                            },
                            {
                              "name": "API",
                              "value": "API",
                              "description": "This flow sends data via an Application Programmer Interface."
                            }
                          ]
                        }
                      }
                    },
                    "requirementId": {
                      "type": "string",
                      "description": "Requirement ID of the connection"
                    },
                    "remoteSubscriptionId": {
                      "type": "string",
                      "description": "Subscription ID to link cloud subscriptions together"
                    },
                    "approver": {
                      "type": "string",
                      "description": "Approver of this connection request",
                      "readOnly": true
                    },
                    "pin": {
                      "type": "string",
                      "description": "PIN to link requests together"
                    },
                    "dateSubmitted": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp that this connection request was submitted at",
                      "readOnly": true
                    },
                    "primaryContact": {
                      "type": "string",
                      "description": "The primary contact for this connection request"
                    },
                    "secondaryContacts": {
                      "type": "array",
                      "description": "The secondary contacts for this connection request",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the connection",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been accepted for creation."
                          }
                        ]
                      }
                    },
                    "policies": {
                      "type": "array",
                      "description": "The policies for this connection. The policies property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "schemas": {
                      "type": "array",
                      "description": "The schemas for this connection. The schemas property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "object",
                        "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "ID associated with this schema"
                          },
                          "connectionId": {
                            "type": "string",
                            "description": "Connection ID associated with this schema"
                          },
                          "status": {
                            "description": "Status of the schema",
                            "type": "string",
                            "enum": [
                              "New",
                              "Approved"
                            ],
                            "x-ms-enum": {
                              "name": "SchemaStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "New",
                                  "value": "New",
                                  "description": "A schema that has not been approved and is awaiting review."
                                },
                                {
                                  "name": "Approved",
                                  "value": "Approved",
                                  "description": "A schema that has been approved and is ready for use."
                                }
                              ]
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the schema"
                          },
                          "content": {
                            "type": "string",
                            "description": "Content of the schema"
                          },
                          "direction": {
                            "description": "The direction of the schema.",
                            "type": "string",
                            "enum": [
                              "Send",
                              "Receive"
                            ],
                            "x-ms-enum": {
                              "name": "Direction",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Send",
                                  "value": "Send",
                                  "description": "The direction is on the sending side of a pipeline, connection, or flow."
                                },
                                {
                                  "name": "Receive",
                                  "value": "Receive",
                                  "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                                }
                              ]
                            }
                          },
                          "schemaUri": {
                            "type": "string",
                            "format": "uri",
                            "description": "Uri containing SAS token for the zipped schema"
                          },
                          "schemaType": {
                            "description": "The Schema Type",
                            "type": "string",
                            "enum": [
                              "Xsd",
                              "Zip"
                            ],
                            "x-ms-enum": {
                              "name": "SchemaType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Xsd",
                                  "value": "Xsd",
                                  "description": "The schema represents a single XML schema definition file."
                                },
                                {
                                  "name": "Zip",
                                  "value": "Zip",
                                  "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "schemaUris": {
                      "type": "array",
                      "description": "The schema URIs for this connection. The schemaUris property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  },
                  "required": [
                    "pipeline"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Connections_Delete",
        "tags": [
          "Connections"
        ],
        "description": "Deletes the connection resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectionName",
            "in": "path",
            "description": "The name for the connection to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/connections/{connectionName}/flows": {
      "get": {
        "operationId": "Flows_ListByConnection",
        "tags": [
          "Flows"
        ],
        "description": "Gets flows in a connection.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectionName",
            "in": "path",
            "description": "The name for the connection to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Flow list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Flow items on this page",
                  "items": {
                    "type": "object",
                    "description": "The flow resource definition.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "Properties of flow",
                        "type": "object",
                        "properties": {
                          "connection": {
                            "description": "The connection associated with this flow",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the connection"
                              },
                              "id": {
                                "type": "string",
                                "description": "Id of the connection"
                              },
                              "location": {
                                "type": "string",
                                "description": "Location of the connection",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "subscriptionName": {
                                "type": "string",
                                "description": "Name of the subscription with the connection"
                              }
                            },
                            "required": [
                              "id"
                            ]
                          },
                          "flowId": {
                            "type": "string",
                            "description": "Dataflow GUID associated with this flow",
                            "readOnly": true
                          },
                          "keyVaultUri": {
                            "type": "string",
                            "description": "URI to a Key Vault Secret containing a SAS token."
                          },
                          "linkStatus": {
                            "description": "Link status of the current flow",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Linked",
                              "Unlinked"
                            ],
                            "x-ms-enum": {
                              "name": "LinkStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Linked",
                                  "value": "Linked",
                                  "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                                },
                                {
                                  "name": "Unlinked",
                                  "value": "Unlinked",
                                  "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                                }
                              ]
                            }
                          },
                          "linkedFlowId": {
                            "type": "string",
                            "description": "Resource ID of the linked flow",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the current flow",
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "FlowStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled",
                                  "description": "The flow is currently enabled and able to send or receive data."
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "The flow is currently disabled and cannot send or receive data."
                                }
                              ]
                            }
                          },
                          "forceDisabledStatus": {
                            "type": "array",
                            "description": "Force disablement status of the current flow",
                            "items": {
                              "type": "string",
                              "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                              "enum": [
                                "ConnectionForceDisabled",
                                "FlowTypeForceDisabled"
                              ],
                              "x-ms-enum": {
                                "name": "ForceDisabledStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "ConnectionForceDisabled",
                                    "value": "ConnectionForceDisabled",
                                    "description": "Defines disablement of a Flow due to the parent connection being disabled."
                                  },
                                  {
                                    "name": "FlowTypeForceDisabled",
                                    "value": "FlowTypeForceDisabled",
                                    "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                                  }
                                ]
                              }
                            },
                            "readOnly": true
                          },
                          "storageAccountName": {
                            "type": "string",
                            "description": "Storage Account"
                          },
                          "storageAccountId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Storage Account ID",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Storage/storageAccounts"
                                }
                              ]
                            }
                          },
                          "storageContainerName": {
                            "type": "string",
                            "description": "Storage Container Name"
                          },
                          "storageTableName": {
                            "type": "string",
                            "description": "Storage Table Name"
                          },
                          "serviceBusQueueId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Service Bus Queue ID",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Storage/namespaces/queues"
                                }
                              ]
                            }
                          },
                          "flowType": {
                            "type": "string",
                            "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                            "enum": [
                              "Unknown",
                              "Complex",
                              "DevSecOps",
                              "Messaging",
                              "Mission",
                              "MicrosoftInternal",
                              "BasicFiles",
                              "Data",
                              "Standard",
                              "StreamingVideo",
                              "Opaque",
                              "MissionOpaqueXML",
                              "DiskImages",
                              "API"
                            ],
                            "x-ms-enum": {
                              "name": "FlowType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Unknown",
                                  "value": "Unknown",
                                  "description": "This type of flow is not set."
                                },
                                {
                                  "name": "Complex",
                                  "value": "Complex",
                                  "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                                },
                                {
                                  "name": "DevSecOps",
                                  "value": "DevSecOps",
                                  "description": "This flow sends source code files and artifacts."
                                },
                                {
                                  "name": "Messaging",
                                  "value": "Messaging",
                                  "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                                },
                                {
                                  "name": "Mission",
                                  "value": "Mission",
                                  "description": "This flow sends standard data but is subject to strict cloud owner approval."
                                },
                                {
                                  "name": "MicrosoftInternal",
                                  "value": "MicrosoftInternal",
                                  "description": "This flow is assigned to internal Microsoft use cases."
                                },
                                {
                                  "name": "BasicFiles",
                                  "value": "BasicFiles",
                                  "description": "This flow sends blobs that can be used for multiple use cases."
                                },
                                {
                                  "name": "Data",
                                  "value": "Data",
                                  "description": "This flow sends blobs that can be used for multiple use cases."
                                },
                                {
                                  "name": "Standard",
                                  "value": "Standard",
                                  "description": "This flow sends blobs that can be used for multiple use cases."
                                },
                                {
                                  "name": "StreamingVideo",
                                  "value": "StreamingVideo",
                                  "description": "This flow sends video streams."
                                },
                                {
                                  "name": "Opaque",
                                  "value": "Opaque",
                                  "description": "This flow sends blobs but is subject to cloud owner approval."
                                },
                                {
                                  "name": "MissionOpaqueXML",
                                  "value": "MissionOpaqueXML",
                                  "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                                },
                                {
                                  "name": "DiskImages",
                                  "value": "DiskImages",
                                  "description": "This flow sends blobs that can be used for Virtual Machines."
                                },
                                {
                                  "name": "API",
                                  "value": "API",
                                  "description": "This flow sends data via an Application Programmer Interface."
                                }
                              ]
                            }
                          },
                          "dataType": {
                            "description": "Type of data to transfer via the flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                            "type": "string",
                            "enum": [
                              "Blob",
                              "Table"
                            ],
                            "x-ms-enum": {
                              "name": "DataType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Blob",
                                  "value": "Blob",
                                  "description": "The flow uses Azure Storage blobs to send or receive data."
                                },
                                {
                                  "name": "Table",
                                  "value": "Table",
                                  "description": "The flow uses Azure Storage tables to send or receive data."
                                }
                              ]
                            }
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the flow",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Resource has been accepted for creation."
                                }
                              ]
                            }
                          },
                          "policies": {
                            "type": "array",
                            "description": "The policies for this flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "schema": {
                            "type": "object",
                            "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "ID associated with this schema"
                              },
                              "connectionId": {
                                "type": "string",
                                "description": "Connection ID associated with this schema"
                              },
                              "status": {
                                "description": "Status of the schema",
                                "type": "string",
                                "enum": [
                                  "New",
                                  "Approved"
                                ],
                                "x-ms-enum": {
                                  "name": "SchemaStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "New",
                                      "value": "New",
                                      "description": "A schema that has not been approved and is awaiting review."
                                    },
                                    {
                                      "name": "Approved",
                                      "value": "Approved",
                                      "description": "A schema that has been approved and is ready for use."
                                    }
                                  ]
                                }
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of the schema"
                              },
                              "content": {
                                "type": "string",
                                "description": "Content of the schema"
                              },
                              "direction": {
                                "description": "The direction of the schema.",
                                "type": "string",
                                "enum": [
                                  "Send",
                                  "Receive"
                                ],
                                "x-ms-enum": {
                                  "name": "Direction",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Send",
                                      "value": "Send",
                                      "description": "The direction is on the sending side of a pipeline, connection, or flow."
                                    },
                                    {
                                      "name": "Receive",
                                      "value": "Receive",
                                      "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                                    }
                                  ]
                                }
                              },
                              "schemaUri": {
                                "type": "string",
                                "format": "uri",
                                "description": "Uri containing SAS token for the zipped schema"
                              },
                              "schemaType": {
                                "description": "The Schema Type",
                                "type": "string",
                                "enum": [
                                  "Xsd",
                                  "Zip"
                                ],
                                "x-ms-enum": {
                                  "name": "SchemaType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Xsd",
                                      "value": "Xsd",
                                      "description": "The schema represents a single XML schema definition file."
                                    },
                                    {
                                      "name": "Zip",
                                      "value": "Zip",
                                      "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "messagingOptions": {
                            "description": "The messaging options for this flow",
                            "type": "object",
                            "properties": {
                              "billingTier": {
                                "description": "Billing tier for this messaging flow",
                                "type": "string",
                                "enum": [
                                  "BlobTransport",
                                  "Standard",
                                  "Premium"
                                ],
                                "x-ms-enum": {
                                  "name": "FlowBillingTier",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "BlobTransport",
                                      "value": "BlobTransport",
                                      "description": "Billing tier for messaging processing that charges based on how much data is transferred."
                                    },
                                    {
                                      "name": "Standard",
                                      "value": "Standard",
                                      "description": "Billing tier for standard messaging processing that charges based on having the messaging resource allocated."
                                    },
                                    {
                                      "name": "Premium",
                                      "value": "Premium",
                                      "description": "Billing tier for premium messaging processing that charges based on having the messaging resource allocated."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "apiFlowOptions": {
                            "description": "The API Flow configuration options for Azure Data Transfer API Flow type.",
                            "type": "object",
                            "properties": {
                              "remoteEndpoint": {
                                "type": "string",
                                "description": "Remote host to which communication needs to be made. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the remoteEndpointSettings.endpoint property instead."
                              },
                              "cname": {
                                "type": "string",
                                "description": "Unique CNAME to represent the Azure Data Transfer API Flow instance"
                              },
                              "apiMode": {
                                "description": "Remote Calling Mode in the Azure Data Transfer API Flow, which describes how the API Flow will be invoked",
                                "type": "string",
                                "enum": [
                                  "SDK",
                                  "Endpoint"
                                ],
                                "x-ms-enum": {
                                  "name": "ApiMode",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "SDK",
                                      "value": "SDK",
                                      "description": "The API flow will forward calls to a custom Software Development Kit implementation."
                                    },
                                    {
                                      "name": "Endpoint",
                                      "value": "Endpoint",
                                      "description": "The API flow will forward calls to a specified endpoint."
                                    }
                                  ]
                                }
                              },
                              "identityTranslation": {
                                "description": "Determines which identity to use for extracting the user token for Azure Data Transfer API Flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead.",
                                "type": "string",
                                "enum": [
                                  "UserIdentity",
                                  "ServiceIdentity"
                                ],
                                "x-ms-enum": {
                                  "name": "IdentityTranslation",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "UserIdentity",
                                      "value": "UserIdentity",
                                      "description": "The API flow will make use of the user identity that called this API flow, and pass that token through the boundary."
                                    },
                                    {
                                      "name": "ServiceIdentity",
                                      "value": "ServiceIdentity",
                                      "description": "The API flow will make use of the Azure Data Transfer Flow managed identity on the other side of the boundary."
                                    }
                                  ]
                                }
                              },
                              "senderClientId": {
                                "type": "string",
                                "description": "Sender's app user assigned Manage Identity client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                              },
                              "remoteCallingModeClientId": {
                                "type": "string",
                                "description": "Remote stub app registration Client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                              },
                              "audienceOverride": {
                                "type": "string",
                                "description": "Optional field to override the audience of the remote endpoint. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                              }
                            }
                          },
                          "customerManagedKeyVaultUri": {
                            "type": "string",
                            "format": "uri",
                            "description": "The URI to the customer managed key for this flow"
                          },
                          "streamId": {
                            "type": "string",
                            "description": "The flow stream identifier"
                          },
                          "streamProtocol": {
                            "description": "The protocol of the stream",
                            "type": "string",
                            "enum": [
                              "UDP",
                              "SRT",
                              "RTP"
                            ],
                            "x-ms-enum": {
                              "name": "StreamProtocol",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "UDP",
                                  "value": "UDP",
                                  "description": "This Flow is using User Datagram Protocol for the video stream."
                                },
                                {
                                  "name": "SRT",
                                  "value": "SRT",
                                  "description": "This Flow is using Secure Reliable Transfer for the video stream."
                                },
                                {
                                  "name": "RTP",
                                  "value": "RTP",
                                  "description": "This Flow is using Real-time Transport Protocol for the video stream."
                                }
                              ]
                            }
                          },
                          "streamLatency": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The latency of the stream in milliseconds"
                          },
                          "passphrase": {
                            "type": "string",
                            "description": "The passphrase used for SRT streams"
                          },
                          "sourceAddresses": {
                            "description": "The source IP address and CIDR ranges of the stream",
                            "type": "object",
                            "properties": {
                              "sourceAddresses": {
                                "type": "array",
                                "description": "A source IP address or CIDR range",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "destinationEndpoints": {
                            "type": "array",
                            "description": "The destination endpoints of the stream",
                            "items": {
                              "type": "string"
                            }
                          },
                          "destinationEndpointPorts": {
                            "type": "array",
                            "description": "The destination endpoint ports of the stream",
                            "items": {
                              "type": "integer",
                              "format": "int64"
                            }
                          },
                          "eventHubId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Event Hub ID",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.EventHub/namespaces/eventhubs"
                                }
                              ]
                            }
                          },
                          "consumerGroup": {
                            "type": "string",
                            "description": "Event Hub Consumer Group"
                          }
                        }
                      },
                      "plan": {
                        "description": "Details of the resource plan.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "A user defined name of the 3rd Party Artifact that is being procured."
                          },
                          "publisher": {
                            "type": "string",
                            "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
                          },
                          "product": {
                            "type": "string",
                            "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
                          },
                          "promotionCode": {
                            "type": "string",
                            "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
                          },
                          "version": {
                            "type": "string",
                            "description": "The version of the desired product/artifact."
                          }
                        },
                        "required": [
                          "name",
                          "publisher",
                          "product"
                        ]
                      },
                      "identity": {
                        "description": "The managed service identities assigned to this resource.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "title": "User-Assigned Identities",
                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                            "additionalProperties": {
                              "x-nullable": true,
                              "type": "object",
                              "description": "User assigned identity properties",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID of the assigned identity.",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID of the assigned identity.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/connections/{connectionName}/flows/{flowName}": {
      "get": {
        "operationId": "Flows_Get",
        "tags": [
          "Flows"
        ],
        "description": "Gets flow resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectionName",
            "in": "path",
            "description": "The name for the connection to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          },
          {
            "name": "flowName",
            "in": "path",
            "description": "The name for the flow to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The flow resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of flow",
                  "type": "object",
                  "properties": {
                    "connection": {
                      "description": "The connection associated with this flow",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the connection"
                        },
                        "id": {
                          "type": "string",
                          "description": "Id of the connection"
                        },
                        "location": {
                          "type": "string",
                          "description": "Location of the connection",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "subscriptionName": {
                          "type": "string",
                          "description": "Name of the subscription with the connection"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "flowId": {
                      "type": "string",
                      "description": "Dataflow GUID associated with this flow",
                      "readOnly": true
                    },
                    "keyVaultUri": {
                      "type": "string",
                      "description": "URI to a Key Vault Secret containing a SAS token."
                    },
                    "linkStatus": {
                      "description": "Link status of the current flow",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Linked",
                        "Unlinked"
                      ],
                      "x-ms-enum": {
                        "name": "LinkStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Linked",
                            "value": "Linked",
                            "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                          },
                          {
                            "name": "Unlinked",
                            "value": "Unlinked",
                            "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                          }
                        ]
                      }
                    },
                    "linkedFlowId": {
                      "type": "string",
                      "description": "Resource ID of the linked flow",
                      "readOnly": true
                    },
                    "status": {
                      "description": "Status of the current flow",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "FlowStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "The flow is currently enabled and able to send or receive data."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "The flow is currently disabled and cannot send or receive data."
                          }
                        ]
                      }
                    },
                    "forceDisabledStatus": {
                      "type": "array",
                      "description": "Force disablement status of the current flow",
                      "items": {
                        "type": "string",
                        "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                        "enum": [
                          "ConnectionForceDisabled",
                          "FlowTypeForceDisabled"
                        ],
                        "x-ms-enum": {
                          "name": "ForceDisabledStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "ConnectionForceDisabled",
                              "value": "ConnectionForceDisabled",
                              "description": "Defines disablement of a Flow due to the parent connection being disabled."
                            },
                            {
                              "name": "FlowTypeForceDisabled",
                              "value": "FlowTypeForceDisabled",
                              "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                            }
                          ]
                        }
                      },
                      "readOnly": true
                    },
                    "storageAccountName": {
                      "type": "string",
                      "description": "Storage Account"
                    },
                    "storageAccountId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Storage Account ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Storage/storageAccounts"
                          }
                        ]
                      }
                    },
                    "storageContainerName": {
                      "type": "string",
                      "description": "Storage Container Name"
                    },
                    "storageTableName": {
                      "type": "string",
                      "description": "Storage Table Name"
                    },
                    "serviceBusQueueId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Service Bus Queue ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Storage/namespaces/queues"
                          }
                        ]
                      }
                    },
                    "flowType": {
                      "type": "string",
                      "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                      "enum": [
                        "Unknown",
                        "Complex",
                        "DevSecOps",
                        "Messaging",
                        "Mission",
                        "MicrosoftInternal",
                        "BasicFiles",
                        "Data",
                        "Standard",
                        "StreamingVideo",
                        "Opaque",
                        "MissionOpaqueXML",
                        "DiskImages",
                        "API"
                      ],
                      "x-ms-enum": {
                        "name": "FlowType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "This type of flow is not set."
                          },
                          {
                            "name": "Complex",
                            "value": "Complex",
                            "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                          },
                          {
                            "name": "DevSecOps",
                            "value": "DevSecOps",
                            "description": "This flow sends source code files and artifacts."
                          },
                          {
                            "name": "Messaging",
                            "value": "Messaging",
                            "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                          },
                          {
                            "name": "Mission",
                            "value": "Mission",
                            "description": "This flow sends standard data but is subject to strict cloud owner approval."
                          },
                          {
                            "name": "MicrosoftInternal",
                            "value": "MicrosoftInternal",
                            "description": "This flow is assigned to internal Microsoft use cases."
                          },
                          {
                            "name": "BasicFiles",
                            "value": "BasicFiles",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "Data",
                            "value": "Data",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "Standard",
                            "value": "Standard",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "StreamingVideo",
                            "value": "StreamingVideo",
                            "description": "This flow sends video streams."
                          },
                          {
                            "name": "Opaque",
                            "value": "Opaque",
                            "description": "This flow sends blobs but is subject to cloud owner approval."
                          },
                          {
                            "name": "MissionOpaqueXML",
                            "value": "MissionOpaqueXML",
                            "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                          },
                          {
                            "name": "DiskImages",
                            "value": "DiskImages",
                            "description": "This flow sends blobs that can be used for Virtual Machines."
                          },
                          {
                            "name": "API",
                            "value": "API",
                            "description": "This flow sends data via an Application Programmer Interface."
                          }
                        ]
                      }
                    },
                    "dataType": {
                      "description": "Type of data to transfer via the flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "type": "string",
                      "enum": [
                        "Blob",
                        "Table"
                      ],
                      "x-ms-enum": {
                        "name": "DataType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Blob",
                            "value": "Blob",
                            "description": "The flow uses Azure Storage blobs to send or receive data."
                          },
                          {
                            "name": "Table",
                            "value": "Table",
                            "description": "The flow uses Azure Storage tables to send or receive data."
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the flow",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been accepted for creation."
                          }
                        ]
                      }
                    },
                    "policies": {
                      "type": "array",
                      "description": "The policies for this flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "schema": {
                      "type": "object",
                      "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "ID associated with this schema"
                        },
                        "connectionId": {
                          "type": "string",
                          "description": "Connection ID associated with this schema"
                        },
                        "status": {
                          "description": "Status of the schema",
                          "type": "string",
                          "enum": [
                            "New",
                            "Approved"
                          ],
                          "x-ms-enum": {
                            "name": "SchemaStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "New",
                                "value": "New",
                                "description": "A schema that has not been approved and is awaiting review."
                              },
                              {
                                "name": "Approved",
                                "value": "Approved",
                                "description": "A schema that has been approved and is ready for use."
                              }
                            ]
                          }
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the schema"
                        },
                        "content": {
                          "type": "string",
                          "description": "Content of the schema"
                        },
                        "direction": {
                          "description": "The direction of the schema.",
                          "type": "string",
                          "enum": [
                            "Send",
                            "Receive"
                          ],
                          "x-ms-enum": {
                            "name": "Direction",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Send",
                                "value": "Send",
                                "description": "The direction is on the sending side of a pipeline, connection, or flow."
                              },
                              {
                                "name": "Receive",
                                "value": "Receive",
                                "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                              }
                            ]
                          }
                        },
                        "schemaUri": {
                          "type": "string",
                          "format": "uri",
                          "description": "Uri containing SAS token for the zipped schema"
                        },
                        "schemaType": {
                          "description": "The Schema Type",
                          "type": "string",
                          "enum": [
                            "Xsd",
                            "Zip"
                          ],
                          "x-ms-enum": {
                            "name": "SchemaType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Xsd",
                                "value": "Xsd",
                                "description": "The schema represents a single XML schema definition file."
                              },
                              {
                                "name": "Zip",
                                "value": "Zip",
                                "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "messagingOptions": {
                      "description": "The messaging options for this flow",
                      "type": "object",
                      "properties": {
                        "billingTier": {
                          "description": "Billing tier for this messaging flow",
                          "type": "string",
                          "enum": [
                            "BlobTransport",
                            "Standard",
                            "Premium"
                          ],
                          "x-ms-enum": {
                            "name": "FlowBillingTier",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "BlobTransport",
                                "value": "BlobTransport",
                                "description": "Billing tier for messaging processing that charges based on how much data is transferred."
                              },
                              {
                                "name": "Standard",
                                "value": "Standard",
                                "description": "Billing tier for standard messaging processing that charges based on having the messaging resource allocated."
                              },
                              {
                                "name": "Premium",
                                "value": "Premium",
                                "description": "Billing tier for premium messaging processing that charges based on having the messaging resource allocated."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "apiFlowOptions": {
                      "description": "The API Flow configuration options for Azure Data Transfer API Flow type.",
                      "type": "object",
                      "properties": {
                        "remoteEndpoint": {
                          "type": "string",
                          "description": "Remote host to which communication needs to be made. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the remoteEndpointSettings.endpoint property instead."
                        },
                        "cname": {
                          "type": "string",
                          "description": "Unique CNAME to represent the Azure Data Transfer API Flow instance"
                        },
                        "apiMode": {
                          "description": "Remote Calling Mode in the Azure Data Transfer API Flow, which describes how the API Flow will be invoked",
                          "type": "string",
                          "enum": [
                            "SDK",
                            "Endpoint"
                          ],
                          "x-ms-enum": {
                            "name": "ApiMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "SDK",
                                "value": "SDK",
                                "description": "The API flow will forward calls to a custom Software Development Kit implementation."
                              },
                              {
                                "name": "Endpoint",
                                "value": "Endpoint",
                                "description": "The API flow will forward calls to a specified endpoint."
                              }
                            ]
                          }
                        },
                        "identityTranslation": {
                          "description": "Determines which identity to use for extracting the user token for Azure Data Transfer API Flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead.",
                          "type": "string",
                          "enum": [
                            "UserIdentity",
                            "ServiceIdentity"
                          ],
                          "x-ms-enum": {
                            "name": "IdentityTranslation",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "UserIdentity",
                                "value": "UserIdentity",
                                "description": "The API flow will make use of the user identity that called this API flow, and pass that token through the boundary."
                              },
                              {
                                "name": "ServiceIdentity",
                                "value": "ServiceIdentity",
                                "description": "The API flow will make use of the Azure Data Transfer Flow managed identity on the other side of the boundary."
                              }
                            ]
                          }
                        },
                        "senderClientId": {
                          "type": "string",
                          "description": "Sender's app user assigned Manage Identity client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        },
                        "remoteCallingModeClientId": {
                          "type": "string",
                          "description": "Remote stub app registration Client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        },
                        "audienceOverride": {
                          "type": "string",
                          "description": "Optional field to override the audience of the remote endpoint. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        }
                      }
                    },
                    "customerManagedKeyVaultUri": {
                      "type": "string",
                      "format": "uri",
                      "description": "The URI to the customer managed key for this flow"
                    },
                    "streamId": {
                      "type": "string",
                      "description": "The flow stream identifier"
                    },
                    "streamProtocol": {
                      "description": "The protocol of the stream",
                      "type": "string",
                      "enum": [
                        "UDP",
                        "SRT",
                        "RTP"
                      ],
                      "x-ms-enum": {
                        "name": "StreamProtocol",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "UDP",
                            "value": "UDP",
                            "description": "This Flow is using User Datagram Protocol for the video stream."
                          },
                          {
                            "name": "SRT",
                            "value": "SRT",
                            "description": "This Flow is using Secure Reliable Transfer for the video stream."
                          },
                          {
                            "name": "RTP",
                            "value": "RTP",
                            "description": "This Flow is using Real-time Transport Protocol for the video stream."
                          }
                        ]
                      }
                    },
                    "streamLatency": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The latency of the stream in milliseconds"
                    },
                    "passphrase": {
                      "type": "string",
                      "description": "The passphrase used for SRT streams"
                    },
                    "sourceAddresses": {
                      "description": "The source IP address and CIDR ranges of the stream",
                      "type": "object",
                      "properties": {
                        "sourceAddresses": {
                          "type": "array",
                          "description": "A source IP address or CIDR range",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "destinationEndpoints": {
                      "type": "array",
                      "description": "The destination endpoints of the stream",
                      "items": {
                        "type": "string"
                      }
                    },
                    "destinationEndpointPorts": {
                      "type": "array",
                      "description": "The destination endpoint ports of the stream",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "eventHubId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Event Hub ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.EventHub/namespaces/eventhubs"
                          }
                        ]
                      }
                    },
                    "consumerGroup": {
                      "type": "string",
                      "description": "Event Hub Consumer Group"
                    }
                  }
                },
                "plan": {
                  "description": "Details of the resource plan.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "A user defined name of the 3rd Party Artifact that is being procured."
                    },
                    "publisher": {
                      "type": "string",
                      "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
                    },
                    "product": {
                      "type": "string",
                      "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
                    },
                    "promotionCode": {
                      "type": "string",
                      "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
                    },
                    "version": {
                      "type": "string",
                      "description": "The version of the desired product/artifact."
                    }
                  },
                  "required": [
                    "name",
                    "publisher",
                    "product"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Flows_CreateOrUpdate",
        "tags": [
          "Flows"
        ],
        "description": "Creates or updates the flow resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectionName",
            "in": "path",
            "description": "The name for the connection to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          },
          {
            "name": "flowName",
            "in": "path",
            "description": "The name for the flow to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          },
          {
            "name": "flow",
            "in": "body",
            "description": "Flow body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The flow resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of flow",
                  "type": "object",
                  "properties": {
                    "connection": {
                      "description": "The connection associated with this flow",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the connection"
                        },
                        "id": {
                          "type": "string",
                          "description": "Id of the connection"
                        },
                        "location": {
                          "type": "string",
                          "description": "Location of the connection",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "subscriptionName": {
                          "type": "string",
                          "description": "Name of the subscription with the connection"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "flowId": {
                      "type": "string",
                      "description": "Dataflow GUID associated with this flow",
                      "readOnly": true
                    },
                    "keyVaultUri": {
                      "type": "string",
                      "description": "URI to a Key Vault Secret containing a SAS token."
                    },
                    "linkStatus": {
                      "description": "Link status of the current flow",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Linked",
                        "Unlinked"
                      ],
                      "x-ms-enum": {
                        "name": "LinkStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Linked",
                            "value": "Linked",
                            "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                          },
                          {
                            "name": "Unlinked",
                            "value": "Unlinked",
                            "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                          }
                        ]
                      }
                    },
                    "linkedFlowId": {
                      "type": "string",
                      "description": "Resource ID of the linked flow",
                      "readOnly": true
                    },
                    "status": {
                      "description": "Status of the current flow",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "FlowStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "The flow is currently enabled and able to send or receive data."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "The flow is currently disabled and cannot send or receive data."
                          }
                        ]
                      }
                    },
                    "forceDisabledStatus": {
                      "type": "array",
                      "description": "Force disablement status of the current flow",
                      "items": {
                        "type": "string",
                        "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                        "enum": [
                          "ConnectionForceDisabled",
                          "FlowTypeForceDisabled"
                        ],
                        "x-ms-enum": {
                          "name": "ForceDisabledStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "ConnectionForceDisabled",
                              "value": "ConnectionForceDisabled",
                              "description": "Defines disablement of a Flow due to the parent connection being disabled."
                            },
                            {
                              "name": "FlowTypeForceDisabled",
                              "value": "FlowTypeForceDisabled",
                              "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                            }
                          ]
                        }
                      },
                      "readOnly": true
                    },
                    "storageAccountName": {
                      "type": "string",
                      "description": "Storage Account"
                    },
                    "storageAccountId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Storage Account ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Storage/storageAccounts"
                          }
                        ]
                      }
                    },
                    "storageContainerName": {
                      "type": "string",
                      "description": "Storage Container Name"
                    },
                    "storageTableName": {
                      "type": "string",
                      "description": "Storage Table Name"
                    },
                    "serviceBusQueueId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Service Bus Queue ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Storage/namespaces/queues"
                          }
                        ]
                      }
                    },
                    "flowType": {
                      "type": "string",
                      "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                      "enum": [
                        "Unknown",
                        "Complex",
                        "DevSecOps",
                        "Messaging",
                        "Mission",
                        "MicrosoftInternal",
                        "BasicFiles",
                        "Data",
                        "Standard",
                        "StreamingVideo",
                        "Opaque",
                        "MissionOpaqueXML",
                        "DiskImages",
                        "API"
                      ],
                      "x-ms-enum": {
                        "name": "FlowType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "This type of flow is not set."
                          },
                          {
                            "name": "Complex",
                            "value": "Complex",
                            "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                          },
                          {
                            "name": "DevSecOps",
                            "value": "DevSecOps",
                            "description": "This flow sends source code files and artifacts."
                          },
                          {
                            "name": "Messaging",
                            "value": "Messaging",
                            "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                          },
                          {
                            "name": "Mission",
                            "value": "Mission",
                            "description": "This flow sends standard data but is subject to strict cloud owner approval."
                          },
                          {
                            "name": "MicrosoftInternal",
                            "value": "MicrosoftInternal",
                            "description": "This flow is assigned to internal Microsoft use cases."
                          },
                          {
                            "name": "BasicFiles",
                            "value": "BasicFiles",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "Data",
                            "value": "Data",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "Standard",
                            "value": "Standard",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "StreamingVideo",
                            "value": "StreamingVideo",
                            "description": "This flow sends video streams."
                          },
                          {
                            "name": "Opaque",
                            "value": "Opaque",
                            "description": "This flow sends blobs but is subject to cloud owner approval."
                          },
                          {
                            "name": "MissionOpaqueXML",
                            "value": "MissionOpaqueXML",
                            "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                          },
                          {
                            "name": "DiskImages",
                            "value": "DiskImages",
                            "description": "This flow sends blobs that can be used for Virtual Machines."
                          },
                          {
                            "name": "API",
                            "value": "API",
                            "description": "This flow sends data via an Application Programmer Interface."
                          }
                        ]
                      }
                    },
                    "dataType": {
                      "description": "Type of data to transfer via the flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "type": "string",
                      "enum": [
                        "Blob",
                        "Table"
                      ],
                      "x-ms-enum": {
                        "name": "DataType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Blob",
                            "value": "Blob",
                            "description": "The flow uses Azure Storage blobs to send or receive data."
                          },
                          {
                            "name": "Table",
                            "value": "Table",
                            "description": "The flow uses Azure Storage tables to send or receive data."
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the flow",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been accepted for creation."
                          }
                        ]
                      }
                    },
                    "policies": {
                      "type": "array",
                      "description": "The policies for this flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "schema": {
                      "type": "object",
                      "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "ID associated with this schema"
                        },
                        "connectionId": {
                          "type": "string",
                          "description": "Connection ID associated with this schema"
                        },
                        "status": {
                          "description": "Status of the schema",
                          "type": "string",
                          "enum": [
                            "New",
                            "Approved"
                          ],
                          "x-ms-enum": {
                            "name": "SchemaStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "New",
                                "value": "New",
                                "description": "A schema that has not been approved and is awaiting review."
                              },
                              {
                                "name": "Approved",
                                "value": "Approved",
                                "description": "A schema that has been approved and is ready for use."
                              }
                            ]
                          }
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the schema"
                        },
                        "content": {
                          "type": "string",
                          "description": "Content of the schema"
                        },
                        "direction": {
                          "description": "The direction of the schema.",
                          "type": "string",
                          "enum": [
                            "Send",
                            "Receive"
                          ],
                          "x-ms-enum": {
                            "name": "Direction",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Send",
                                "value": "Send",
                                "description": "The direction is on the sending side of a pipeline, connection, or flow."
                              },
                              {
                                "name": "Receive",
                                "value": "Receive",
                                "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                              }
                            ]
                          }
                        },
                        "schemaUri": {
                          "type": "string",
                          "format": "uri",
                          "description": "Uri containing SAS token for the zipped schema"
                        },
                        "schemaType": {
                          "description": "The Schema Type",
                          "type": "string",
                          "enum": [
                            "Xsd",
                            "Zip"
                          ],
                          "x-ms-enum": {
                            "name": "SchemaType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Xsd",
                                "value": "Xsd",
                                "description": "The schema represents a single XML schema definition file."
                              },
                              {
                                "name": "Zip",
                                "value": "Zip",
                                "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "messagingOptions": {
                      "description": "The messaging options for this flow",
                      "type": "object",
                      "properties": {
                        "billingTier": {
                          "description": "Billing tier for this messaging flow",
                          "type": "string",
                          "enum": [
                            "BlobTransport",
                            "Standard",
                            "Premium"
                          ],
                          "x-ms-enum": {
                            "name": "FlowBillingTier",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "BlobTransport",
                                "value": "BlobTransport",
                                "description": "Billing tier for messaging processing that charges based on how much data is transferred."
                              },
                              {
                                "name": "Standard",
                                "value": "Standard",
                                "description": "Billing tier for standard messaging processing that charges based on having the messaging resource allocated."
                              },
                              {
                                "name": "Premium",
                                "value": "Premium",
                                "description": "Billing tier for premium messaging processing that charges based on having the messaging resource allocated."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "apiFlowOptions": {
                      "description": "The API Flow configuration options for Azure Data Transfer API Flow type.",
                      "type": "object",
                      "properties": {
                        "remoteEndpoint": {
                          "type": "string",
                          "description": "Remote host to which communication needs to be made. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the remoteEndpointSettings.endpoint property instead."
                        },
                        "cname": {
                          "type": "string",
                          "description": "Unique CNAME to represent the Azure Data Transfer API Flow instance"
                        },
                        "apiMode": {
                          "description": "Remote Calling Mode in the Azure Data Transfer API Flow, which describes how the API Flow will be invoked",
                          "type": "string",
                          "enum": [
                            "SDK",
                            "Endpoint"
                          ],
                          "x-ms-enum": {
                            "name": "ApiMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "SDK",
                                "value": "SDK",
                                "description": "The API flow will forward calls to a custom Software Development Kit implementation."
                              },
                              {
                                "name": "Endpoint",
                                "value": "Endpoint",
                                "description": "The API flow will forward calls to a specified endpoint."
                              }
                            ]
                          }
                        },
                        "identityTranslation": {
                          "description": "Determines which identity to use for extracting the user token for Azure Data Transfer API Flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead.",
                          "type": "string",
                          "enum": [
                            "UserIdentity",
                            "ServiceIdentity"
                          ],
                          "x-ms-enum": {
                            "name": "IdentityTranslation",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "UserIdentity",
                                "value": "UserIdentity",
                                "description": "The API flow will make use of the user identity that called this API flow, and pass that token through the boundary."
                              },
                              {
                                "name": "ServiceIdentity",
                                "value": "ServiceIdentity",
                                "description": "The API flow will make use of the Azure Data Transfer Flow managed identity on the other side of the boundary."
                              }
                            ]
                          }
                        },
                        "senderClientId": {
                          "type": "string",
                          "description": "Sender's app user assigned Manage Identity client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        },
                        "remoteCallingModeClientId": {
                          "type": "string",
                          "description": "Remote stub app registration Client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        },
                        "audienceOverride": {
                          "type": "string",
                          "description": "Optional field to override the audience of the remote endpoint. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        }
                      }
                    },
                    "customerManagedKeyVaultUri": {
                      "type": "string",
                      "format": "uri",
                      "description": "The URI to the customer managed key for this flow"
                    },
                    "streamId": {
                      "type": "string",
                      "description": "The flow stream identifier"
                    },
                    "streamProtocol": {
                      "description": "The protocol of the stream",
                      "type": "string",
                      "enum": [
                        "UDP",
                        "SRT",
                        "RTP"
                      ],
                      "x-ms-enum": {
                        "name": "StreamProtocol",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "UDP",
                            "value": "UDP",
                            "description": "This Flow is using User Datagram Protocol for the video stream."
                          },
                          {
                            "name": "SRT",
                            "value": "SRT",
                            "description": "This Flow is using Secure Reliable Transfer for the video stream."
                          },
                          {
                            "name": "RTP",
                            "value": "RTP",
                            "description": "This Flow is using Real-time Transport Protocol for the video stream."
                          }
                        ]
                      }
                    },
                    "streamLatency": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The latency of the stream in milliseconds"
                    },
                    "passphrase": {
                      "type": "string",
                      "description": "The passphrase used for SRT streams"
                    },
                    "sourceAddresses": {
                      "description": "The source IP address and CIDR ranges of the stream",
                      "type": "object",
                      "properties": {
                        "sourceAddresses": {
                          "type": "array",
                          "description": "A source IP address or CIDR range",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "destinationEndpoints": {
                      "type": "array",
                      "description": "The destination endpoints of the stream",
                      "items": {
                        "type": "string"
                      }
                    },
                    "destinationEndpointPorts": {
                      "type": "array",
                      "description": "The destination endpoint ports of the stream",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "eventHubId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Event Hub ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.EventHub/namespaces/eventhubs"
                          }
                        ]
                      }
                    },
                    "consumerGroup": {
                      "type": "string",
                      "description": "Event Hub Consumer Group"
                    }
                  }
                },
                "plan": {
                  "description": "Details of the resource plan.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "A user defined name of the 3rd Party Artifact that is being procured."
                    },
                    "publisher": {
                      "type": "string",
                      "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
                    },
                    "product": {
                      "type": "string",
                      "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
                    },
                    "promotionCode": {
                      "type": "string",
                      "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
                    },
                    "version": {
                      "type": "string",
                      "description": "The version of the desired product/artifact."
                    }
                  },
                  "required": [
                    "name",
                    "publisher",
                    "product"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Flow' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "The flow resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of flow",
                  "type": "object",
                  "properties": {
                    "connection": {
                      "description": "The connection associated with this flow",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the connection"
                        },
                        "id": {
                          "type": "string",
                          "description": "Id of the connection"
                        },
                        "location": {
                          "type": "string",
                          "description": "Location of the connection",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "subscriptionName": {
                          "type": "string",
                          "description": "Name of the subscription with the connection"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "flowId": {
                      "type": "string",
                      "description": "Dataflow GUID associated with this flow",
                      "readOnly": true
                    },
                    "keyVaultUri": {
                      "type": "string",
                      "description": "URI to a Key Vault Secret containing a SAS token."
                    },
                    "linkStatus": {
                      "description": "Link status of the current flow",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Linked",
                        "Unlinked"
                      ],
                      "x-ms-enum": {
                        "name": "LinkStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Linked",
                            "value": "Linked",
                            "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                          },
                          {
                            "name": "Unlinked",
                            "value": "Unlinked",
                            "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                          }
                        ]
                      }
                    },
                    "linkedFlowId": {
                      "type": "string",
                      "description": "Resource ID of the linked flow",
                      "readOnly": true
                    },
                    "status": {
                      "description": "Status of the current flow",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "FlowStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "The flow is currently enabled and able to send or receive data."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "The flow is currently disabled and cannot send or receive data."
                          }
                        ]
                      }
                    },
                    "forceDisabledStatus": {
                      "type": "array",
                      "description": "Force disablement status of the current flow",
                      "items": {
                        "type": "string",
                        "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                        "enum": [
                          "ConnectionForceDisabled",
                          "FlowTypeForceDisabled"
                        ],
                        "x-ms-enum": {
                          "name": "ForceDisabledStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "ConnectionForceDisabled",
                              "value": "ConnectionForceDisabled",
                              "description": "Defines disablement of a Flow due to the parent connection being disabled."
                            },
                            {
                              "name": "FlowTypeForceDisabled",
                              "value": "FlowTypeForceDisabled",
                              "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                            }
                          ]
                        }
                      },
                      "readOnly": true
                    },
                    "storageAccountName": {
                      "type": "string",
                      "description": "Storage Account"
                    },
                    "storageAccountId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Storage Account ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Storage/storageAccounts"
                          }
                        ]
                      }
                    },
                    "storageContainerName": {
                      "type": "string",
                      "description": "Storage Container Name"
                    },
                    "storageTableName": {
                      "type": "string",
                      "description": "Storage Table Name"
                    },
                    "serviceBusQueueId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Service Bus Queue ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Storage/namespaces/queues"
                          }
                        ]
                      }
                    },
                    "flowType": {
                      "type": "string",
                      "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                      "enum": [
                        "Unknown",
                        "Complex",
                        "DevSecOps",
                        "Messaging",
                        "Mission",
                        "MicrosoftInternal",
                        "BasicFiles",
                        "Data",
                        "Standard",
                        "StreamingVideo",
                        "Opaque",
                        "MissionOpaqueXML",
                        "DiskImages",
                        "API"
                      ],
                      "x-ms-enum": {
                        "name": "FlowType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "This type of flow is not set."
                          },
                          {
                            "name": "Complex",
                            "value": "Complex",
                            "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                          },
                          {
                            "name": "DevSecOps",
                            "value": "DevSecOps",
                            "description": "This flow sends source code files and artifacts."
                          },
                          {
                            "name": "Messaging",
                            "value": "Messaging",
                            "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                          },
                          {
                            "name": "Mission",
                            "value": "Mission",
                            "description": "This flow sends standard data but is subject to strict cloud owner approval."
                          },
                          {
                            "name": "MicrosoftInternal",
                            "value": "MicrosoftInternal",
                            "description": "This flow is assigned to internal Microsoft use cases."
                          },
                          {
                            "name": "BasicFiles",
                            "value": "BasicFiles",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "Data",
                            "value": "Data",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "Standard",
                            "value": "Standard",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "StreamingVideo",
                            "value": "StreamingVideo",
                            "description": "This flow sends video streams."
                          },
                          {
                            "name": "Opaque",
                            "value": "Opaque",
                            "description": "This flow sends blobs but is subject to cloud owner approval."
                          },
                          {
                            "name": "MissionOpaqueXML",
                            "value": "MissionOpaqueXML",
                            "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                          },
                          {
                            "name": "DiskImages",
                            "value": "DiskImages",
                            "description": "This flow sends blobs that can be used for Virtual Machines."
                          },
                          {
                            "name": "API",
                            "value": "API",
                            "description": "This flow sends data via an Application Programmer Interface."
                          }
                        ]
                      }
                    },
                    "dataType": {
                      "description": "Type of data to transfer via the flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "type": "string",
                      "enum": [
                        "Blob",
                        "Table"
                      ],
                      "x-ms-enum": {
                        "name": "DataType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Blob",
                            "value": "Blob",
                            "description": "The flow uses Azure Storage blobs to send or receive data."
                          },
                          {
                            "name": "Table",
                            "value": "Table",
                            "description": "The flow uses Azure Storage tables to send or receive data."
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the flow",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been accepted for creation."
                          }
                        ]
                      }
                    },
                    "policies": {
                      "type": "array",
                      "description": "The policies for this flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "schema": {
                      "type": "object",
                      "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "ID associated with this schema"
                        },
                        "connectionId": {
                          "type": "string",
                          "description": "Connection ID associated with this schema"
                        },
                        "status": {
                          "description": "Status of the schema",
                          "type": "string",
                          "enum": [
                            "New",
                            "Approved"
                          ],
                          "x-ms-enum": {
                            "name": "SchemaStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "New",
                                "value": "New",
                                "description": "A schema that has not been approved and is awaiting review."
                              },
                              {
                                "name": "Approved",
                                "value": "Approved",
                                "description": "A schema that has been approved and is ready for use."
                              }
                            ]
                          }
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the schema"
                        },
                        "content": {
                          "type": "string",
                          "description": "Content of the schema"
                        },
                        "direction": {
                          "description": "The direction of the schema.",
                          "type": "string",
                          "enum": [
                            "Send",
                            "Receive"
                          ],
                          "x-ms-enum": {
                            "name": "Direction",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Send",
                                "value": "Send",
                                "description": "The direction is on the sending side of a pipeline, connection, or flow."
                              },
                              {
                                "name": "Receive",
                                "value": "Receive",
                                "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                              }
                            ]
                          }
                        },
                        "schemaUri": {
                          "type": "string",
                          "format": "uri",
                          "description": "Uri containing SAS token for the zipped schema"
                        },
                        "schemaType": {
                          "description": "The Schema Type",
                          "type": "string",
                          "enum": [
                            "Xsd",
                            "Zip"
                          ],
                          "x-ms-enum": {
                            "name": "SchemaType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Xsd",
                                "value": "Xsd",
                                "description": "The schema represents a single XML schema definition file."
                              },
                              {
                                "name": "Zip",
                                "value": "Zip",
                                "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "messagingOptions": {
                      "description": "The messaging options for this flow",
                      "type": "object",
                      "properties": {
                        "billingTier": {
                          "description": "Billing tier for this messaging flow",
                          "type": "string",
                          "enum": [
                            "BlobTransport",
                            "Standard",
                            "Premium"
                          ],
                          "x-ms-enum": {
                            "name": "FlowBillingTier",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "BlobTransport",
                                "value": "BlobTransport",
                                "description": "Billing tier for messaging processing that charges based on how much data is transferred."
                              },
                              {
                                "name": "Standard",
                                "value": "Standard",
                                "description": "Billing tier for standard messaging processing that charges based on having the messaging resource allocated."
                              },
                              {
                                "name": "Premium",
                                "value": "Premium",
                                "description": "Billing tier for premium messaging processing that charges based on having the messaging resource allocated."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "apiFlowOptions": {
                      "description": "The API Flow configuration options for Azure Data Transfer API Flow type.",
                      "type": "object",
                      "properties": {
                        "remoteEndpoint": {
                          "type": "string",
                          "description": "Remote host to which communication needs to be made. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the remoteEndpointSettings.endpoint property instead."
                        },
                        "cname": {
                          "type": "string",
                          "description": "Unique CNAME to represent the Azure Data Transfer API Flow instance"
                        },
                        "apiMode": {
                          "description": "Remote Calling Mode in the Azure Data Transfer API Flow, which describes how the API Flow will be invoked",
                          "type": "string",
                          "enum": [
                            "SDK",
                            "Endpoint"
                          ],
                          "x-ms-enum": {
                            "name": "ApiMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "SDK",
                                "value": "SDK",
                                "description": "The API flow will forward calls to a custom Software Development Kit implementation."
                              },
                              {
                                "name": "Endpoint",
                                "value": "Endpoint",
                                "description": "The API flow will forward calls to a specified endpoint."
                              }
                            ]
                          }
                        },
                        "identityTranslation": {
                          "description": "Determines which identity to use for extracting the user token for Azure Data Transfer API Flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead.",
                          "type": "string",
                          "enum": [
                            "UserIdentity",
                            "ServiceIdentity"
                          ],
                          "x-ms-enum": {
                            "name": "IdentityTranslation",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "UserIdentity",
                                "value": "UserIdentity",
                                "description": "The API flow will make use of the user identity that called this API flow, and pass that token through the boundary."
                              },
                              {
                                "name": "ServiceIdentity",
                                "value": "ServiceIdentity",
                                "description": "The API flow will make use of the Azure Data Transfer Flow managed identity on the other side of the boundary."
                              }
                            ]
                          }
                        },
                        "senderClientId": {
                          "type": "string",
                          "description": "Sender's app user assigned Manage Identity client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        },
                        "remoteCallingModeClientId": {
                          "type": "string",
                          "description": "Remote stub app registration Client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        },
                        "audienceOverride": {
                          "type": "string",
                          "description": "Optional field to override the audience of the remote endpoint. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        }
                      }
                    },
                    "customerManagedKeyVaultUri": {
                      "type": "string",
                      "format": "uri",
                      "description": "The URI to the customer managed key for this flow"
                    },
                    "streamId": {
                      "type": "string",
                      "description": "The flow stream identifier"
                    },
                    "streamProtocol": {
                      "description": "The protocol of the stream",
                      "type": "string",
                      "enum": [
                        "UDP",
                        "SRT",
                        "RTP"
                      ],
                      "x-ms-enum": {
                        "name": "StreamProtocol",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "UDP",
                            "value": "UDP",
                            "description": "This Flow is using User Datagram Protocol for the video stream."
                          },
                          {
                            "name": "SRT",
                            "value": "SRT",
                            "description": "This Flow is using Secure Reliable Transfer for the video stream."
                          },
                          {
                            "name": "RTP",
                            "value": "RTP",
                            "description": "This Flow is using Real-time Transport Protocol for the video stream."
                          }
                        ]
                      }
                    },
                    "streamLatency": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The latency of the stream in milliseconds"
                    },
                    "passphrase": {
                      "type": "string",
                      "description": "The passphrase used for SRT streams"
                    },
                    "sourceAddresses": {
                      "description": "The source IP address and CIDR ranges of the stream",
                      "type": "object",
                      "properties": {
                        "sourceAddresses": {
                          "type": "array",
                          "description": "A source IP address or CIDR range",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "destinationEndpoints": {
                      "type": "array",
                      "description": "The destination endpoints of the stream",
                      "items": {
                        "type": "string"
                      }
                    },
                    "destinationEndpointPorts": {
                      "type": "array",
                      "description": "The destination endpoint ports of the stream",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "eventHubId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Event Hub ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.EventHub/namespaces/eventhubs"
                          }
                        ]
                      }
                    },
                    "consumerGroup": {
                      "type": "string",
                      "description": "Event Hub Consumer Group"
                    }
                  }
                },
                "plan": {
                  "description": "Details of the resource plan.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "A user defined name of the 3rd Party Artifact that is being procured."
                    },
                    "publisher": {
                      "type": "string",
                      "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
                    },
                    "product": {
                      "type": "string",
                      "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
                    },
                    "promotionCode": {
                      "type": "string",
                      "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
                    },
                    "version": {
                      "type": "string",
                      "description": "The version of the desired product/artifact."
                    }
                  },
                  "required": [
                    "name",
                    "publisher",
                    "product"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'Flow' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "The flow resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of flow",
                  "type": "object",
                  "properties": {
                    "connection": {
                      "description": "The connection associated with this flow",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the connection"
                        },
                        "id": {
                          "type": "string",
                          "description": "Id of the connection"
                        },
                        "location": {
                          "type": "string",
                          "description": "Location of the connection",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "subscriptionName": {
                          "type": "string",
                          "description": "Name of the subscription with the connection"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "flowId": {
                      "type": "string",
                      "description": "Dataflow GUID associated with this flow",
                      "readOnly": true
                    },
                    "keyVaultUri": {
                      "type": "string",
                      "description": "URI to a Key Vault Secret containing a SAS token."
                    },
                    "linkStatus": {
                      "description": "Link status of the current flow",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Linked",
                        "Unlinked"
                      ],
                      "x-ms-enum": {
                        "name": "LinkStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Linked",
                            "value": "Linked",
                            "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                          },
                          {
                            "name": "Unlinked",
                            "value": "Unlinked",
                            "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                          }
                        ]
                      }
                    },
                    "linkedFlowId": {
                      "type": "string",
                      "description": "Resource ID of the linked flow",
                      "readOnly": true
                    },
                    "status": {
                      "description": "Status of the current flow",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "FlowStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "The flow is currently enabled and able to send or receive data."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "The flow is currently disabled and cannot send or receive data."
                          }
                        ]
                      }
                    },
                    "forceDisabledStatus": {
                      "type": "array",
                      "description": "Force disablement status of the current flow",
                      "items": {
                        "type": "string",
                        "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                        "enum": [
                          "ConnectionForceDisabled",
                          "FlowTypeForceDisabled"
                        ],
                        "x-ms-enum": {
                          "name": "ForceDisabledStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "ConnectionForceDisabled",
                              "value": "ConnectionForceDisabled",
                              "description": "Defines disablement of a Flow due to the parent connection being disabled."
                            },
                            {
                              "name": "FlowTypeForceDisabled",
                              "value": "FlowTypeForceDisabled",
                              "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                            }
                          ]
                        }
                      },
                      "readOnly": true
                    },
                    "storageAccountName": {
                      "type": "string",
                      "description": "Storage Account"
                    },
                    "storageAccountId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Storage Account ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Storage/storageAccounts"
                          }
                        ]
                      }
                    },
                    "storageContainerName": {
                      "type": "string",
                      "description": "Storage Container Name"
                    },
                    "storageTableName": {
                      "type": "string",
                      "description": "Storage Table Name"
                    },
                    "serviceBusQueueId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Service Bus Queue ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Storage/namespaces/queues"
                          }
                        ]
                      }
                    },
                    "flowType": {
                      "type": "string",
                      "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                      "enum": [
                        "Unknown",
                        "Complex",
                        "DevSecOps",
                        "Messaging",
                        "Mission",
                        "MicrosoftInternal",
                        "BasicFiles",
                        "Data",
                        "Standard",
                        "StreamingVideo",
                        "Opaque",
                        "MissionOpaqueXML",
                        "DiskImages",
                        "API"
                      ],
                      "x-ms-enum": {
                        "name": "FlowType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "This type of flow is not set."
                          },
                          {
                            "name": "Complex",
                            "value": "Complex",
                            "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                          },
                          {
                            "name": "DevSecOps",
                            "value": "DevSecOps",
                            "description": "This flow sends source code files and artifacts."
                          },
                          {
                            "name": "Messaging",
                            "value": "Messaging",
                            "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                          },
                          {
                            "name": "Mission",
                            "value": "Mission",
                            "description": "This flow sends standard data but is subject to strict cloud owner approval."
                          },
                          {
                            "name": "MicrosoftInternal",
                            "value": "MicrosoftInternal",
                            "description": "This flow is assigned to internal Microsoft use cases."
                          },
                          {
                            "name": "BasicFiles",
                            "value": "BasicFiles",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "Data",
                            "value": "Data",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "Standard",
                            "value": "Standard",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "StreamingVideo",
                            "value": "StreamingVideo",
                            "description": "This flow sends video streams."
                          },
                          {
                            "name": "Opaque",
                            "value": "Opaque",
                            "description": "This flow sends blobs but is subject to cloud owner approval."
                          },
                          {
                            "name": "MissionOpaqueXML",
                            "value": "MissionOpaqueXML",
                            "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                          },
                          {
                            "name": "DiskImages",
                            "value": "DiskImages",
                            "description": "This flow sends blobs that can be used for Virtual Machines."
                          },
                          {
                            "name": "API",
                            "value": "API",
                            "description": "This flow sends data via an Application Programmer Interface."
                          }
                        ]
                      }
                    },
                    "dataType": {
                      "description": "Type of data to transfer via the flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "type": "string",
                      "enum": [
                        "Blob",
                        "Table"
                      ],
                      "x-ms-enum": {
                        "name": "DataType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Blob",
                            "value": "Blob",
                            "description": "The flow uses Azure Storage blobs to send or receive data."
                          },
                          {
                            "name": "Table",
                            "value": "Table",
                            "description": "The flow uses Azure Storage tables to send or receive data."
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the flow",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been accepted for creation."
                          }
                        ]
                      }
                    },
                    "policies": {
                      "type": "array",
                      "description": "The policies for this flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "schema": {
                      "type": "object",
                      "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "ID associated with this schema"
                        },
                        "connectionId": {
                          "type": "string",
                          "description": "Connection ID associated with this schema"
                        },
                        "status": {
                          "description": "Status of the schema",
                          "type": "string",
                          "enum": [
                            "New",
                            "Approved"
                          ],
                          "x-ms-enum": {
                            "name": "SchemaStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "New",
                                "value": "New",
                                "description": "A schema that has not been approved and is awaiting review."
                              },
                              {
                                "name": "Approved",
                                "value": "Approved",
                                "description": "A schema that has been approved and is ready for use."
                              }
                            ]
                          }
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the schema"
                        },
                        "content": {
                          "type": "string",
                          "description": "Content of the schema"
                        },
                        "direction": {
                          "description": "The direction of the schema.",
                          "type": "string",
                          "enum": [
                            "Send",
                            "Receive"
                          ],
                          "x-ms-enum": {
                            "name": "Direction",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Send",
                                "value": "Send",
                                "description": "The direction is on the sending side of a pipeline, connection, or flow."
                              },
                              {
                                "name": "Receive",
                                "value": "Receive",
                                "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                              }
                            ]
                          }
                        },
                        "schemaUri": {
                          "type": "string",
                          "format": "uri",
                          "description": "Uri containing SAS token for the zipped schema"
                        },
                        "schemaType": {
                          "description": "The Schema Type",
                          "type": "string",
                          "enum": [
                            "Xsd",
                            "Zip"
                          ],
                          "x-ms-enum": {
                            "name": "SchemaType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Xsd",
                                "value": "Xsd",
                                "description": "The schema represents a single XML schema definition file."
                              },
                              {
                                "name": "Zip",
                                "value": "Zip",
                                "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "messagingOptions": {
                      "description": "The messaging options for this flow",
                      "type": "object",
                      "properties": {
                        "billingTier": {
                          "description": "Billing tier for this messaging flow",
                          "type": "string",
                          "enum": [
                            "BlobTransport",
                            "Standard",
                            "Premium"
                          ],
                          "x-ms-enum": {
                            "name": "FlowBillingTier",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "BlobTransport",
                                "value": "BlobTransport",
                                "description": "Billing tier for messaging processing that charges based on how much data is transferred."
                              },
                              {
                                "name": "Standard",
                                "value": "Standard",
                                "description": "Billing tier for standard messaging processing that charges based on having the messaging resource allocated."
                              },
                              {
                                "name": "Premium",
                                "value": "Premium",
                                "description": "Billing tier for premium messaging processing that charges based on having the messaging resource allocated."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "apiFlowOptions": {
                      "description": "The API Flow configuration options for Azure Data Transfer API Flow type.",
                      "type": "object",
                      "properties": {
                        "remoteEndpoint": {
                          "type": "string",
                          "description": "Remote host to which communication needs to be made. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the remoteEndpointSettings.endpoint property instead."
                        },
                        "cname": {
                          "type": "string",
                          "description": "Unique CNAME to represent the Azure Data Transfer API Flow instance"
                        },
                        "apiMode": {
                          "description": "Remote Calling Mode in the Azure Data Transfer API Flow, which describes how the API Flow will be invoked",
                          "type": "string",
                          "enum": [
                            "SDK",
                            "Endpoint"
                          ],
                          "x-ms-enum": {
                            "name": "ApiMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "SDK",
                                "value": "SDK",
                                "description": "The API flow will forward calls to a custom Software Development Kit implementation."
                              },
                              {
                                "name": "Endpoint",
                                "value": "Endpoint",
                                "description": "The API flow will forward calls to a specified endpoint."
                              }
                            ]
                          }
                        },
                        "identityTranslation": {
                          "description": "Determines which identity to use for extracting the user token for Azure Data Transfer API Flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead.",
                          "type": "string",
                          "enum": [
                            "UserIdentity",
                            "ServiceIdentity"
                          ],
                          "x-ms-enum": {
                            "name": "IdentityTranslation",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "UserIdentity",
                                "value": "UserIdentity",
                                "description": "The API flow will make use of the user identity that called this API flow, and pass that token through the boundary."
                              },
                              {
                                "name": "ServiceIdentity",
                                "value": "ServiceIdentity",
                                "description": "The API flow will make use of the Azure Data Transfer Flow managed identity on the other side of the boundary."
                              }
                            ]
                          }
                        },
                        "senderClientId": {
                          "type": "string",
                          "description": "Sender's app user assigned Manage Identity client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        },
                        "remoteCallingModeClientId": {
                          "type": "string",
                          "description": "Remote stub app registration Client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        },
                        "audienceOverride": {
                          "type": "string",
                          "description": "Optional field to override the audience of the remote endpoint. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        }
                      }
                    },
                    "customerManagedKeyVaultUri": {
                      "type": "string",
                      "format": "uri",
                      "description": "The URI to the customer managed key for this flow"
                    },
                    "streamId": {
                      "type": "string",
                      "description": "The flow stream identifier"
                    },
                    "streamProtocol": {
                      "description": "The protocol of the stream",
                      "type": "string",
                      "enum": [
                        "UDP",
                        "SRT",
                        "RTP"
                      ],
                      "x-ms-enum": {
                        "name": "StreamProtocol",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "UDP",
                            "value": "UDP",
                            "description": "This Flow is using User Datagram Protocol for the video stream."
                          },
                          {
                            "name": "SRT",
                            "value": "SRT",
                            "description": "This Flow is using Secure Reliable Transfer for the video stream."
                          },
                          {
                            "name": "RTP",
                            "value": "RTP",
                            "description": "This Flow is using Real-time Transport Protocol for the video stream."
                          }
                        ]
                      }
                    },
                    "streamLatency": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The latency of the stream in milliseconds"
                    },
                    "passphrase": {
                      "type": "string",
                      "description": "The passphrase used for SRT streams"
                    },
                    "sourceAddresses": {
                      "description": "The source IP address and CIDR ranges of the stream",
                      "type": "object",
                      "properties": {
                        "sourceAddresses": {
                          "type": "array",
                          "description": "A source IP address or CIDR range",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "destinationEndpoints": {
                      "type": "array",
                      "description": "The destination endpoints of the stream",
                      "items": {
                        "type": "string"
                      }
                    },
                    "destinationEndpointPorts": {
                      "type": "array",
                      "description": "The destination endpoint ports of the stream",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "eventHubId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Event Hub ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.EventHub/namespaces/eventhubs"
                          }
                        ]
                      }
                    },
                    "consumerGroup": {
                      "type": "string",
                      "description": "Event Hub Consumer Group"
                    }
                  }
                },
                "plan": {
                  "description": "Details of the resource plan.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "A user defined name of the 3rd Party Artifact that is being procured."
                    },
                    "publisher": {
                      "type": "string",
                      "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
                    },
                    "product": {
                      "type": "string",
                      "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
                    },
                    "promotionCode": {
                      "type": "string",
                      "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
                    },
                    "version": {
                      "type": "string",
                      "description": "The version of the desired product/artifact."
                    }
                  },
                  "required": [
                    "name",
                    "publisher",
                    "product"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Flows_Update",
        "tags": [
          "Flows"
        ],
        "description": "Updates the flow resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectionName",
            "in": "path",
            "description": "The name for the connection to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          },
          {
            "name": "flowName",
            "in": "path",
            "description": "The name for the flow to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          },
          {
            "name": "flow",
            "in": "body",
            "description": "Flow body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The flows resource patch definition.",
              "properties": {
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The flow resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of flow",
                  "type": "object",
                  "properties": {
                    "connection": {
                      "description": "The connection associated with this flow",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the connection"
                        },
                        "id": {
                          "type": "string",
                          "description": "Id of the connection"
                        },
                        "location": {
                          "type": "string",
                          "description": "Location of the connection",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "subscriptionName": {
                          "type": "string",
                          "description": "Name of the subscription with the connection"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "flowId": {
                      "type": "string",
                      "description": "Dataflow GUID associated with this flow",
                      "readOnly": true
                    },
                    "keyVaultUri": {
                      "type": "string",
                      "description": "URI to a Key Vault Secret containing a SAS token."
                    },
                    "linkStatus": {
                      "description": "Link status of the current flow",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Linked",
                        "Unlinked"
                      ],
                      "x-ms-enum": {
                        "name": "LinkStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Linked",
                            "value": "Linked",
                            "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                          },
                          {
                            "name": "Unlinked",
                            "value": "Unlinked",
                            "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                          }
                        ]
                      }
                    },
                    "linkedFlowId": {
                      "type": "string",
                      "description": "Resource ID of the linked flow",
                      "readOnly": true
                    },
                    "status": {
                      "description": "Status of the current flow",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "FlowStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "The flow is currently enabled and able to send or receive data."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "The flow is currently disabled and cannot send or receive data."
                          }
                        ]
                      }
                    },
                    "forceDisabledStatus": {
                      "type": "array",
                      "description": "Force disablement status of the current flow",
                      "items": {
                        "type": "string",
                        "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                        "enum": [
                          "ConnectionForceDisabled",
                          "FlowTypeForceDisabled"
                        ],
                        "x-ms-enum": {
                          "name": "ForceDisabledStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "ConnectionForceDisabled",
                              "value": "ConnectionForceDisabled",
                              "description": "Defines disablement of a Flow due to the parent connection being disabled."
                            },
                            {
                              "name": "FlowTypeForceDisabled",
                              "value": "FlowTypeForceDisabled",
                              "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                            }
                          ]
                        }
                      },
                      "readOnly": true
                    },
                    "storageAccountName": {
                      "type": "string",
                      "description": "Storage Account"
                    },
                    "storageAccountId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Storage Account ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Storage/storageAccounts"
                          }
                        ]
                      }
                    },
                    "storageContainerName": {
                      "type": "string",
                      "description": "Storage Container Name"
                    },
                    "storageTableName": {
                      "type": "string",
                      "description": "Storage Table Name"
                    },
                    "serviceBusQueueId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Service Bus Queue ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Storage/namespaces/queues"
                          }
                        ]
                      }
                    },
                    "flowType": {
                      "type": "string",
                      "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                      "enum": [
                        "Unknown",
                        "Complex",
                        "DevSecOps",
                        "Messaging",
                        "Mission",
                        "MicrosoftInternal",
                        "BasicFiles",
                        "Data",
                        "Standard",
                        "StreamingVideo",
                        "Opaque",
                        "MissionOpaqueXML",
                        "DiskImages",
                        "API"
                      ],
                      "x-ms-enum": {
                        "name": "FlowType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "This type of flow is not set."
                          },
                          {
                            "name": "Complex",
                            "value": "Complex",
                            "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                          },
                          {
                            "name": "DevSecOps",
                            "value": "DevSecOps",
                            "description": "This flow sends source code files and artifacts."
                          },
                          {
                            "name": "Messaging",
                            "value": "Messaging",
                            "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                          },
                          {
                            "name": "Mission",
                            "value": "Mission",
                            "description": "This flow sends standard data but is subject to strict cloud owner approval."
                          },
                          {
                            "name": "MicrosoftInternal",
                            "value": "MicrosoftInternal",
                            "description": "This flow is assigned to internal Microsoft use cases."
                          },
                          {
                            "name": "BasicFiles",
                            "value": "BasicFiles",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "Data",
                            "value": "Data",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "Standard",
                            "value": "Standard",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "StreamingVideo",
                            "value": "StreamingVideo",
                            "description": "This flow sends video streams."
                          },
                          {
                            "name": "Opaque",
                            "value": "Opaque",
                            "description": "This flow sends blobs but is subject to cloud owner approval."
                          },
                          {
                            "name": "MissionOpaqueXML",
                            "value": "MissionOpaqueXML",
                            "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                          },
                          {
                            "name": "DiskImages",
                            "value": "DiskImages",
                            "description": "This flow sends blobs that can be used for Virtual Machines."
                          },
                          {
                            "name": "API",
                            "value": "API",
                            "description": "This flow sends data via an Application Programmer Interface."
                          }
                        ]
                      }
                    },
                    "dataType": {
                      "description": "Type of data to transfer via the flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "type": "string",
                      "enum": [
                        "Blob",
                        "Table"
                      ],
                      "x-ms-enum": {
                        "name": "DataType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Blob",
                            "value": "Blob",
                            "description": "The flow uses Azure Storage blobs to send or receive data."
                          },
                          {
                            "name": "Table",
                            "value": "Table",
                            "description": "The flow uses Azure Storage tables to send or receive data."
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the flow",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been accepted for creation."
                          }
                        ]
                      }
                    },
                    "policies": {
                      "type": "array",
                      "description": "The policies for this flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "schema": {
                      "type": "object",
                      "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "ID associated with this schema"
                        },
                        "connectionId": {
                          "type": "string",
                          "description": "Connection ID associated with this schema"
                        },
                        "status": {
                          "description": "Status of the schema",
                          "type": "string",
                          "enum": [
                            "New",
                            "Approved"
                          ],
                          "x-ms-enum": {
                            "name": "SchemaStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "New",
                                "value": "New",
                                "description": "A schema that has not been approved and is awaiting review."
                              },
                              {
                                "name": "Approved",
                                "value": "Approved",
                                "description": "A schema that has been approved and is ready for use."
                              }
                            ]
                          }
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the schema"
                        },
                        "content": {
                          "type": "string",
                          "description": "Content of the schema"
                        },
                        "direction": {
                          "description": "The direction of the schema.",
                          "type": "string",
                          "enum": [
                            "Send",
                            "Receive"
                          ],
                          "x-ms-enum": {
                            "name": "Direction",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Send",
                                "value": "Send",
                                "description": "The direction is on the sending side of a pipeline, connection, or flow."
                              },
                              {
                                "name": "Receive",
                                "value": "Receive",
                                "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                              }
                            ]
                          }
                        },
                        "schemaUri": {
                          "type": "string",
                          "format": "uri",
                          "description": "Uri containing SAS token for the zipped schema"
                        },
                        "schemaType": {
                          "description": "The Schema Type",
                          "type": "string",
                          "enum": [
                            "Xsd",
                            "Zip"
                          ],
                          "x-ms-enum": {
                            "name": "SchemaType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Xsd",
                                "value": "Xsd",
                                "description": "The schema represents a single XML schema definition file."
                              },
                              {
                                "name": "Zip",
                                "value": "Zip",
                                "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "messagingOptions": {
                      "description": "The messaging options for this flow",
                      "type": "object",
                      "properties": {
                        "billingTier": {
                          "description": "Billing tier for this messaging flow",
                          "type": "string",
                          "enum": [
                            "BlobTransport",
                            "Standard",
                            "Premium"
                          ],
                          "x-ms-enum": {
                            "name": "FlowBillingTier",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "BlobTransport",
                                "value": "BlobTransport",
                                "description": "Billing tier for messaging processing that charges based on how much data is transferred."
                              },
                              {
                                "name": "Standard",
                                "value": "Standard",
                                "description": "Billing tier for standard messaging processing that charges based on having the messaging resource allocated."
                              },
                              {
                                "name": "Premium",
                                "value": "Premium",
                                "description": "Billing tier for premium messaging processing that charges based on having the messaging resource allocated."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "apiFlowOptions": {
                      "description": "The API Flow configuration options for Azure Data Transfer API Flow type.",
                      "type": "object",
                      "properties": {
                        "remoteEndpoint": {
                          "type": "string",
                          "description": "Remote host to which communication needs to be made. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the remoteEndpointSettings.endpoint property instead."
                        },
                        "cname": {
                          "type": "string",
                          "description": "Unique CNAME to represent the Azure Data Transfer API Flow instance"
                        },
                        "apiMode": {
                          "description": "Remote Calling Mode in the Azure Data Transfer API Flow, which describes how the API Flow will be invoked",
                          "type": "string",
                          "enum": [
                            "SDK",
                            "Endpoint"
                          ],
                          "x-ms-enum": {
                            "name": "ApiMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "SDK",
                                "value": "SDK",
                                "description": "The API flow will forward calls to a custom Software Development Kit implementation."
                              },
                              {
                                "name": "Endpoint",
                                "value": "Endpoint",
                                "description": "The API flow will forward calls to a specified endpoint."
                              }
                            ]
                          }
                        },
                        "identityTranslation": {
                          "description": "Determines which identity to use for extracting the user token for Azure Data Transfer API Flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead.",
                          "type": "string",
                          "enum": [
                            "UserIdentity",
                            "ServiceIdentity"
                          ],
                          "x-ms-enum": {
                            "name": "IdentityTranslation",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "UserIdentity",
                                "value": "UserIdentity",
                                "description": "The API flow will make use of the user identity that called this API flow, and pass that token through the boundary."
                              },
                              {
                                "name": "ServiceIdentity",
                                "value": "ServiceIdentity",
                                "description": "The API flow will make use of the Azure Data Transfer Flow managed identity on the other side of the boundary."
                              }
                            ]
                          }
                        },
                        "senderClientId": {
                          "type": "string",
                          "description": "Sender's app user assigned Manage Identity client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        },
                        "remoteCallingModeClientId": {
                          "type": "string",
                          "description": "Remote stub app registration Client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        },
                        "audienceOverride": {
                          "type": "string",
                          "description": "Optional field to override the audience of the remote endpoint. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        }
                      }
                    },
                    "customerManagedKeyVaultUri": {
                      "type": "string",
                      "format": "uri",
                      "description": "The URI to the customer managed key for this flow"
                    },
                    "streamId": {
                      "type": "string",
                      "description": "The flow stream identifier"
                    },
                    "streamProtocol": {
                      "description": "The protocol of the stream",
                      "type": "string",
                      "enum": [
                        "UDP",
                        "SRT",
                        "RTP"
                      ],
                      "x-ms-enum": {
                        "name": "StreamProtocol",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "UDP",
                            "value": "UDP",
                            "description": "This Flow is using User Datagram Protocol for the video stream."
                          },
                          {
                            "name": "SRT",
                            "value": "SRT",
                            "description": "This Flow is using Secure Reliable Transfer for the video stream."
                          },
                          {
                            "name": "RTP",
                            "value": "RTP",
                            "description": "This Flow is using Real-time Transport Protocol for the video stream."
                          }
                        ]
                      }
                    },
                    "streamLatency": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The latency of the stream in milliseconds"
                    },
                    "passphrase": {
                      "type": "string",
                      "description": "The passphrase used for SRT streams"
                    },
                    "sourceAddresses": {
                      "description": "The source IP address and CIDR ranges of the stream",
                      "type": "object",
                      "properties": {
                        "sourceAddresses": {
                          "type": "array",
                          "description": "A source IP address or CIDR range",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "destinationEndpoints": {
                      "type": "array",
                      "description": "The destination endpoints of the stream",
                      "items": {
                        "type": "string"
                      }
                    },
                    "destinationEndpointPorts": {
                      "type": "array",
                      "description": "The destination endpoint ports of the stream",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "eventHubId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Event Hub ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.EventHub/namespaces/eventhubs"
                          }
                        ]
                      }
                    },
                    "consumerGroup": {
                      "type": "string",
                      "description": "Event Hub Consumer Group"
                    }
                  }
                },
                "plan": {
                  "description": "Details of the resource plan.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "A user defined name of the 3rd Party Artifact that is being procured."
                    },
                    "publisher": {
                      "type": "string",
                      "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
                    },
                    "product": {
                      "type": "string",
                      "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
                    },
                    "promotionCode": {
                      "type": "string",
                      "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
                    },
                    "version": {
                      "type": "string",
                      "description": "The version of the desired product/artifact."
                    }
                  },
                  "required": [
                    "name",
                    "publisher",
                    "product"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "type": "object",
              "description": "The flow resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of flow",
                  "type": "object",
                  "properties": {
                    "connection": {
                      "description": "The connection associated with this flow",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the connection"
                        },
                        "id": {
                          "type": "string",
                          "description": "Id of the connection"
                        },
                        "location": {
                          "type": "string",
                          "description": "Location of the connection",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "subscriptionName": {
                          "type": "string",
                          "description": "Name of the subscription with the connection"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "flowId": {
                      "type": "string",
                      "description": "Dataflow GUID associated with this flow",
                      "readOnly": true
                    },
                    "keyVaultUri": {
                      "type": "string",
                      "description": "URI to a Key Vault Secret containing a SAS token."
                    },
                    "linkStatus": {
                      "description": "Link status of the current flow",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Linked",
                        "Unlinked"
                      ],
                      "x-ms-enum": {
                        "name": "LinkStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Linked",
                            "value": "Linked",
                            "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                          },
                          {
                            "name": "Unlinked",
                            "value": "Unlinked",
                            "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                          }
                        ]
                      }
                    },
                    "linkedFlowId": {
                      "type": "string",
                      "description": "Resource ID of the linked flow",
                      "readOnly": true
                    },
                    "status": {
                      "description": "Status of the current flow",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "FlowStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "The flow is currently enabled and able to send or receive data."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "The flow is currently disabled and cannot send or receive data."
                          }
                        ]
                      }
                    },
                    "forceDisabledStatus": {
                      "type": "array",
                      "description": "Force disablement status of the current flow",
                      "items": {
                        "type": "string",
                        "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                        "enum": [
                          "ConnectionForceDisabled",
                          "FlowTypeForceDisabled"
                        ],
                        "x-ms-enum": {
                          "name": "ForceDisabledStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "ConnectionForceDisabled",
                              "value": "ConnectionForceDisabled",
                              "description": "Defines disablement of a Flow due to the parent connection being disabled."
                            },
                            {
                              "name": "FlowTypeForceDisabled",
                              "value": "FlowTypeForceDisabled",
                              "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                            }
                          ]
                        }
                      },
                      "readOnly": true
                    },
                    "storageAccountName": {
                      "type": "string",
                      "description": "Storage Account"
                    },
                    "storageAccountId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Storage Account ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Storage/storageAccounts"
                          }
                        ]
                      }
                    },
                    "storageContainerName": {
                      "type": "string",
                      "description": "Storage Container Name"
                    },
                    "storageTableName": {
                      "type": "string",
                      "description": "Storage Table Name"
                    },
                    "serviceBusQueueId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Service Bus Queue ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Storage/namespaces/queues"
                          }
                        ]
                      }
                    },
                    "flowType": {
                      "type": "string",
                      "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                      "enum": [
                        "Unknown",
                        "Complex",
                        "DevSecOps",
                        "Messaging",
                        "Mission",
                        "MicrosoftInternal",
                        "BasicFiles",
                        "Data",
                        "Standard",
                        "StreamingVideo",
                        "Opaque",
                        "MissionOpaqueXML",
                        "DiskImages",
                        "API"
                      ],
                      "x-ms-enum": {
                        "name": "FlowType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "This type of flow is not set."
                          },
                          {
                            "name": "Complex",
                            "value": "Complex",
                            "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                          },
                          {
                            "name": "DevSecOps",
                            "value": "DevSecOps",
                            "description": "This flow sends source code files and artifacts."
                          },
                          {
                            "name": "Messaging",
                            "value": "Messaging",
                            "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                          },
                          {
                            "name": "Mission",
                            "value": "Mission",
                            "description": "This flow sends standard data but is subject to strict cloud owner approval."
                          },
                          {
                            "name": "MicrosoftInternal",
                            "value": "MicrosoftInternal",
                            "description": "This flow is assigned to internal Microsoft use cases."
                          },
                          {
                            "name": "BasicFiles",
                            "value": "BasicFiles",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "Data",
                            "value": "Data",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "Standard",
                            "value": "Standard",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "StreamingVideo",
                            "value": "StreamingVideo",
                            "description": "This flow sends video streams."
                          },
                          {
                            "name": "Opaque",
                            "value": "Opaque",
                            "description": "This flow sends blobs but is subject to cloud owner approval."
                          },
                          {
                            "name": "MissionOpaqueXML",
                            "value": "MissionOpaqueXML",
                            "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                          },
                          {
                            "name": "DiskImages",
                            "value": "DiskImages",
                            "description": "This flow sends blobs that can be used for Virtual Machines."
                          },
                          {
                            "name": "API",
                            "value": "API",
                            "description": "This flow sends data via an Application Programmer Interface."
                          }
                        ]
                      }
                    },
                    "dataType": {
                      "description": "Type of data to transfer via the flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "type": "string",
                      "enum": [
                        "Blob",
                        "Table"
                      ],
                      "x-ms-enum": {
                        "name": "DataType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Blob",
                            "value": "Blob",
                            "description": "The flow uses Azure Storage blobs to send or receive data."
                          },
                          {
                            "name": "Table",
                            "value": "Table",
                            "description": "The flow uses Azure Storage tables to send or receive data."
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the flow",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been accepted for creation."
                          }
                        ]
                      }
                    },
                    "policies": {
                      "type": "array",
                      "description": "The policies for this flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "schema": {
                      "type": "object",
                      "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "ID associated with this schema"
                        },
                        "connectionId": {
                          "type": "string",
                          "description": "Connection ID associated with this schema"
                        },
                        "status": {
                          "description": "Status of the schema",
                          "type": "string",
                          "enum": [
                            "New",
                            "Approved"
                          ],
                          "x-ms-enum": {
                            "name": "SchemaStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "New",
                                "value": "New",
                                "description": "A schema that has not been approved and is awaiting review."
                              },
                              {
                                "name": "Approved",
                                "value": "Approved",
                                "description": "A schema that has been approved and is ready for use."
                              }
                            ]
                          }
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the schema"
                        },
                        "content": {
                          "type": "string",
                          "description": "Content of the schema"
                        },
                        "direction": {
                          "description": "The direction of the schema.",
                          "type": "string",
                          "enum": [
                            "Send",
                            "Receive"
                          ],
                          "x-ms-enum": {
                            "name": "Direction",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Send",
                                "value": "Send",
                                "description": "The direction is on the sending side of a pipeline, connection, or flow."
                              },
                              {
                                "name": "Receive",
                                "value": "Receive",
                                "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                              }
                            ]
                          }
                        },
                        "schemaUri": {
                          "type": "string",
                          "format": "uri",
                          "description": "Uri containing SAS token for the zipped schema"
                        },
                        "schemaType": {
                          "description": "The Schema Type",
                          "type": "string",
                          "enum": [
                            "Xsd",
                            "Zip"
                          ],
                          "x-ms-enum": {
                            "name": "SchemaType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Xsd",
                                "value": "Xsd",
                                "description": "The schema represents a single XML schema definition file."
                              },
                              {
                                "name": "Zip",
                                "value": "Zip",
                                "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "messagingOptions": {
                      "description": "The messaging options for this flow",
                      "type": "object",
                      "properties": {
                        "billingTier": {
                          "description": "Billing tier for this messaging flow",
                          "type": "string",
                          "enum": [
                            "BlobTransport",
                            "Standard",
                            "Premium"
                          ],
                          "x-ms-enum": {
                            "name": "FlowBillingTier",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "BlobTransport",
                                "value": "BlobTransport",
                                "description": "Billing tier for messaging processing that charges based on how much data is transferred."
                              },
                              {
                                "name": "Standard",
                                "value": "Standard",
                                "description": "Billing tier for standard messaging processing that charges based on having the messaging resource allocated."
                              },
                              {
                                "name": "Premium",
                                "value": "Premium",
                                "description": "Billing tier for premium messaging processing that charges based on having the messaging resource allocated."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "apiFlowOptions": {
                      "description": "The API Flow configuration options for Azure Data Transfer API Flow type.",
                      "type": "object",
                      "properties": {
                        "remoteEndpoint": {
                          "type": "string",
                          "description": "Remote host to which communication needs to be made. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the remoteEndpointSettings.endpoint property instead."
                        },
                        "cname": {
                          "type": "string",
                          "description": "Unique CNAME to represent the Azure Data Transfer API Flow instance"
                        },
                        "apiMode": {
                          "description": "Remote Calling Mode in the Azure Data Transfer API Flow, which describes how the API Flow will be invoked",
                          "type": "string",
                          "enum": [
                            "SDK",
                            "Endpoint"
                          ],
                          "x-ms-enum": {
                            "name": "ApiMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "SDK",
                                "value": "SDK",
                                "description": "The API flow will forward calls to a custom Software Development Kit implementation."
                              },
                              {
                                "name": "Endpoint",
                                "value": "Endpoint",
                                "description": "The API flow will forward calls to a specified endpoint."
                              }
                            ]
                          }
                        },
                        "identityTranslation": {
                          "description": "Determines which identity to use for extracting the user token for Azure Data Transfer API Flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead.",
                          "type": "string",
                          "enum": [
                            "UserIdentity",
                            "ServiceIdentity"
                          ],
                          "x-ms-enum": {
                            "name": "IdentityTranslation",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "UserIdentity",
                                "value": "UserIdentity",
                                "description": "The API flow will make use of the user identity that called this API flow, and pass that token through the boundary."
                              },
                              {
                                "name": "ServiceIdentity",
                                "value": "ServiceIdentity",
                                "description": "The API flow will make use of the Azure Data Transfer Flow managed identity on the other side of the boundary."
                              }
                            ]
                          }
                        },
                        "senderClientId": {
                          "type": "string",
                          "description": "Sender's app user assigned Manage Identity client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        },
                        "remoteCallingModeClientId": {
                          "type": "string",
                          "description": "Remote stub app registration Client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        },
                        "audienceOverride": {
                          "type": "string",
                          "description": "Optional field to override the audience of the remote endpoint. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        }
                      }
                    },
                    "customerManagedKeyVaultUri": {
                      "type": "string",
                      "format": "uri",
                      "description": "The URI to the customer managed key for this flow"
                    },
                    "streamId": {
                      "type": "string",
                      "description": "The flow stream identifier"
                    },
                    "streamProtocol": {
                      "description": "The protocol of the stream",
                      "type": "string",
                      "enum": [
                        "UDP",
                        "SRT",
                        "RTP"
                      ],
                      "x-ms-enum": {
                        "name": "StreamProtocol",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "UDP",
                            "value": "UDP",
                            "description": "This Flow is using User Datagram Protocol for the video stream."
                          },
                          {
                            "name": "SRT",
                            "value": "SRT",
                            "description": "This Flow is using Secure Reliable Transfer for the video stream."
                          },
                          {
                            "name": "RTP",
                            "value": "RTP",
                            "description": "This Flow is using Real-time Transport Protocol for the video stream."
                          }
                        ]
                      }
                    },
                    "streamLatency": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The latency of the stream in milliseconds"
                    },
                    "passphrase": {
                      "type": "string",
                      "description": "The passphrase used for SRT streams"
                    },
                    "sourceAddresses": {
                      "description": "The source IP address and CIDR ranges of the stream",
                      "type": "object",
                      "properties": {
                        "sourceAddresses": {
                          "type": "array",
                          "description": "A source IP address or CIDR range",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "destinationEndpoints": {
                      "type": "array",
                      "description": "The destination endpoints of the stream",
                      "items": {
                        "type": "string"
                      }
                    },
                    "destinationEndpointPorts": {
                      "type": "array",
                      "description": "The destination endpoint ports of the stream",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "eventHubId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Event Hub ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.EventHub/namespaces/eventhubs"
                          }
                        ]
                      }
                    },
                    "consumerGroup": {
                      "type": "string",
                      "description": "Event Hub Consumer Group"
                    }
                  }
                },
                "plan": {
                  "description": "Details of the resource plan.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "A user defined name of the 3rd Party Artifact that is being procured."
                    },
                    "publisher": {
                      "type": "string",
                      "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
                    },
                    "product": {
                      "type": "string",
                      "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
                    },
                    "promotionCode": {
                      "type": "string",
                      "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
                    },
                    "version": {
                      "type": "string",
                      "description": "The version of the desired product/artifact."
                    }
                  },
                  "required": [
                    "name",
                    "publisher",
                    "product"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Flows_Delete",
        "tags": [
          "Flows"
        ],
        "description": "Deletes the flow resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectionName",
            "in": "path",
            "description": "The name for the connection to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          },
          {
            "name": "flowName",
            "in": "path",
            "description": "The name for the flow to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/connections/{connectionName}/flows/{flowName}/disable": {
      "post": {
        "operationId": "Flows_Disable",
        "tags": [
          "Flows"
        ],
        "description": "Disables the specified flow",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectionName",
            "in": "path",
            "description": "The name for the connection to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          },
          {
            "name": "flowName",
            "in": "path",
            "description": "The name for the flow to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The flow resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of flow",
                  "type": "object",
                  "properties": {
                    "connection": {
                      "description": "The connection associated with this flow",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the connection"
                        },
                        "id": {
                          "type": "string",
                          "description": "Id of the connection"
                        },
                        "location": {
                          "type": "string",
                          "description": "Location of the connection",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "subscriptionName": {
                          "type": "string",
                          "description": "Name of the subscription with the connection"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "flowId": {
                      "type": "string",
                      "description": "Dataflow GUID associated with this flow",
                      "readOnly": true
                    },
                    "keyVaultUri": {
                      "type": "string",
                      "description": "URI to a Key Vault Secret containing a SAS token."
                    },
                    "linkStatus": {
                      "description": "Link status of the current flow",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Linked",
                        "Unlinked"
                      ],
                      "x-ms-enum": {
                        "name": "LinkStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Linked",
                            "value": "Linked",
                            "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                          },
                          {
                            "name": "Unlinked",
                            "value": "Unlinked",
                            "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                          }
                        ]
                      }
                    },
                    "linkedFlowId": {
                      "type": "string",
                      "description": "Resource ID of the linked flow",
                      "readOnly": true
                    },
                    "status": {
                      "description": "Status of the current flow",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "FlowStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "The flow is currently enabled and able to send or receive data."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "The flow is currently disabled and cannot send or receive data."
                          }
                        ]
                      }
                    },
                    "forceDisabledStatus": {
                      "type": "array",
                      "description": "Force disablement status of the current flow",
                      "items": {
                        "type": "string",
                        "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                        "enum": [
                          "ConnectionForceDisabled",
                          "FlowTypeForceDisabled"
                        ],
                        "x-ms-enum": {
                          "name": "ForceDisabledStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "ConnectionForceDisabled",
                              "value": "ConnectionForceDisabled",
                              "description": "Defines disablement of a Flow due to the parent connection being disabled."
                            },
                            {
                              "name": "FlowTypeForceDisabled",
                              "value": "FlowTypeForceDisabled",
                              "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                            }
                          ]
                        }
                      },
                      "readOnly": true
                    },
                    "storageAccountName": {
                      "type": "string",
                      "description": "Storage Account"
                    },
                    "storageAccountId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Storage Account ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Storage/storageAccounts"
                          }
                        ]
                      }
                    },
                    "storageContainerName": {
                      "type": "string",
                      "description": "Storage Container Name"
                    },
                    "storageTableName": {
                      "type": "string",
                      "description": "Storage Table Name"
                    },
                    "serviceBusQueueId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Service Bus Queue ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Storage/namespaces/queues"
                          }
                        ]
                      }
                    },
                    "flowType": {
                      "type": "string",
                      "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                      "enum": [
                        "Unknown",
                        "Complex",
                        "DevSecOps",
                        "Messaging",
                        "Mission",
                        "MicrosoftInternal",
                        "BasicFiles",
                        "Data",
                        "Standard",
                        "StreamingVideo",
                        "Opaque",
                        "MissionOpaqueXML",
                        "DiskImages",
                        "API"
                      ],
                      "x-ms-enum": {
                        "name": "FlowType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "This type of flow is not set."
                          },
                          {
                            "name": "Complex",
                            "value": "Complex",
                            "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                          },
                          {
                            "name": "DevSecOps",
                            "value": "DevSecOps",
                            "description": "This flow sends source code files and artifacts."
                          },
                          {
                            "name": "Messaging",
                            "value": "Messaging",
                            "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                          },
                          {
                            "name": "Mission",
                            "value": "Mission",
                            "description": "This flow sends standard data but is subject to strict cloud owner approval."
                          },
                          {
                            "name": "MicrosoftInternal",
                            "value": "MicrosoftInternal",
                            "description": "This flow is assigned to internal Microsoft use cases."
                          },
                          {
                            "name": "BasicFiles",
                            "value": "BasicFiles",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "Data",
                            "value": "Data",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "Standard",
                            "value": "Standard",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "StreamingVideo",
                            "value": "StreamingVideo",
                            "description": "This flow sends video streams."
                          },
                          {
                            "name": "Opaque",
                            "value": "Opaque",
                            "description": "This flow sends blobs but is subject to cloud owner approval."
                          },
                          {
                            "name": "MissionOpaqueXML",
                            "value": "MissionOpaqueXML",
                            "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                          },
                          {
                            "name": "DiskImages",
                            "value": "DiskImages",
                            "description": "This flow sends blobs that can be used for Virtual Machines."
                          },
                          {
                            "name": "API",
                            "value": "API",
                            "description": "This flow sends data via an Application Programmer Interface."
                          }
                        ]
                      }
                    },
                    "dataType": {
                      "description": "Type of data to transfer via the flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "type": "string",
                      "enum": [
                        "Blob",
                        "Table"
                      ],
                      "x-ms-enum": {
                        "name": "DataType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Blob",
                            "value": "Blob",
                            "description": "The flow uses Azure Storage blobs to send or receive data."
                          },
                          {
                            "name": "Table",
                            "value": "Table",
                            "description": "The flow uses Azure Storage tables to send or receive data."
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the flow",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been accepted for creation."
                          }
                        ]
                      }
                    },
                    "policies": {
                      "type": "array",
                      "description": "The policies for this flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "schema": {
                      "type": "object",
                      "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "ID associated with this schema"
                        },
                        "connectionId": {
                          "type": "string",
                          "description": "Connection ID associated with this schema"
                        },
                        "status": {
                          "description": "Status of the schema",
                          "type": "string",
                          "enum": [
                            "New",
                            "Approved"
                          ],
                          "x-ms-enum": {
                            "name": "SchemaStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "New",
                                "value": "New",
                                "description": "A schema that has not been approved and is awaiting review."
                              },
                              {
                                "name": "Approved",
                                "value": "Approved",
                                "description": "A schema that has been approved and is ready for use."
                              }
                            ]
                          }
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the schema"
                        },
                        "content": {
                          "type": "string",
                          "description": "Content of the schema"
                        },
                        "direction": {
                          "description": "The direction of the schema.",
                          "type": "string",
                          "enum": [
                            "Send",
                            "Receive"
                          ],
                          "x-ms-enum": {
                            "name": "Direction",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Send",
                                "value": "Send",
                                "description": "The direction is on the sending side of a pipeline, connection, or flow."
                              },
                              {
                                "name": "Receive",
                                "value": "Receive",
                                "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                              }
                            ]
                          }
                        },
                        "schemaUri": {
                          "type": "string",
                          "format": "uri",
                          "description": "Uri containing SAS token for the zipped schema"
                        },
                        "schemaType": {
                          "description": "The Schema Type",
                          "type": "string",
                          "enum": [
                            "Xsd",
                            "Zip"
                          ],
                          "x-ms-enum": {
                            "name": "SchemaType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Xsd",
                                "value": "Xsd",
                                "description": "The schema represents a single XML schema definition file."
                              },
                              {
                                "name": "Zip",
                                "value": "Zip",
                                "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "messagingOptions": {
                      "description": "The messaging options for this flow",
                      "type": "object",
                      "properties": {
                        "billingTier": {
                          "description": "Billing tier for this messaging flow",
                          "type": "string",
                          "enum": [
                            "BlobTransport",
                            "Standard",
                            "Premium"
                          ],
                          "x-ms-enum": {
                            "name": "FlowBillingTier",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "BlobTransport",
                                "value": "BlobTransport",
                                "description": "Billing tier for messaging processing that charges based on how much data is transferred."
                              },
                              {
                                "name": "Standard",
                                "value": "Standard",
                                "description": "Billing tier for standard messaging processing that charges based on having the messaging resource allocated."
                              },
                              {
                                "name": "Premium",
                                "value": "Premium",
                                "description": "Billing tier for premium messaging processing that charges based on having the messaging resource allocated."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "apiFlowOptions": {
                      "description": "The API Flow configuration options for Azure Data Transfer API Flow type.",
                      "type": "object",
                      "properties": {
                        "remoteEndpoint": {
                          "type": "string",
                          "description": "Remote host to which communication needs to be made. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the remoteEndpointSettings.endpoint property instead."
                        },
                        "cname": {
                          "type": "string",
                          "description": "Unique CNAME to represent the Azure Data Transfer API Flow instance"
                        },
                        "apiMode": {
                          "description": "Remote Calling Mode in the Azure Data Transfer API Flow, which describes how the API Flow will be invoked",
                          "type": "string",
                          "enum": [
                            "SDK",
                            "Endpoint"
                          ],
                          "x-ms-enum": {
                            "name": "ApiMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "SDK",
                                "value": "SDK",
                                "description": "The API flow will forward calls to a custom Software Development Kit implementation."
                              },
                              {
                                "name": "Endpoint",
                                "value": "Endpoint",
                                "description": "The API flow will forward calls to a specified endpoint."
                              }
                            ]
                          }
                        },
                        "identityTranslation": {
                          "description": "Determines which identity to use for extracting the user token for Azure Data Transfer API Flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead.",
                          "type": "string",
                          "enum": [
                            "UserIdentity",
                            "ServiceIdentity"
                          ],
                          "x-ms-enum": {
                            "name": "IdentityTranslation",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "UserIdentity",
                                "value": "UserIdentity",
                                "description": "The API flow will make use of the user identity that called this API flow, and pass that token through the boundary."
                              },
                              {
                                "name": "ServiceIdentity",
                                "value": "ServiceIdentity",
                                "description": "The API flow will make use of the Azure Data Transfer Flow managed identity on the other side of the boundary."
                              }
                            ]
                          }
                        },
                        "senderClientId": {
                          "type": "string",
                          "description": "Sender's app user assigned Manage Identity client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        },
                        "remoteCallingModeClientId": {
                          "type": "string",
                          "description": "Remote stub app registration Client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        },
                        "audienceOverride": {
                          "type": "string",
                          "description": "Optional field to override the audience of the remote endpoint. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        }
                      }
                    },
                    "customerManagedKeyVaultUri": {
                      "type": "string",
                      "format": "uri",
                      "description": "The URI to the customer managed key for this flow"
                    },
                    "streamId": {
                      "type": "string",
                      "description": "The flow stream identifier"
                    },
                    "streamProtocol": {
                      "description": "The protocol of the stream",
                      "type": "string",
                      "enum": [
                        "UDP",
                        "SRT",
                        "RTP"
                      ],
                      "x-ms-enum": {
                        "name": "StreamProtocol",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "UDP",
                            "value": "UDP",
                            "description": "This Flow is using User Datagram Protocol for the video stream."
                          },
                          {
                            "name": "SRT",
                            "value": "SRT",
                            "description": "This Flow is using Secure Reliable Transfer for the video stream."
                          },
                          {
                            "name": "RTP",
                            "value": "RTP",
                            "description": "This Flow is using Real-time Transport Protocol for the video stream."
                          }
                        ]
                      }
                    },
                    "streamLatency": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The latency of the stream in milliseconds"
                    },
                    "passphrase": {
                      "type": "string",
                      "description": "The passphrase used for SRT streams"
                    },
                    "sourceAddresses": {
                      "description": "The source IP address and CIDR ranges of the stream",
                      "type": "object",
                      "properties": {
                        "sourceAddresses": {
                          "type": "array",
                          "description": "A source IP address or CIDR range",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "destinationEndpoints": {
                      "type": "array",
                      "description": "The destination endpoints of the stream",
                      "items": {
                        "type": "string"
                      }
                    },
                    "destinationEndpointPorts": {
                      "type": "array",
                      "description": "The destination endpoint ports of the stream",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "eventHubId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Event Hub ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.EventHub/namespaces/eventhubs"
                          }
                        ]
                      }
                    },
                    "consumerGroup": {
                      "type": "string",
                      "description": "Event Hub Consumer Group"
                    }
                  }
                },
                "plan": {
                  "description": "Details of the resource plan.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "A user defined name of the 3rd Party Artifact that is being procured."
                    },
                    "publisher": {
                      "type": "string",
                      "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
                    },
                    "product": {
                      "type": "string",
                      "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
                    },
                    "promotionCode": {
                      "type": "string",
                      "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
                    },
                    "version": {
                      "type": "string",
                      "description": "The version of the desired product/artifact."
                    }
                  },
                  "required": [
                    "name",
                    "publisher",
                    "product"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/connections/{connectionName}/flows/{flowName}/enable": {
      "post": {
        "operationId": "Flows_Enable",
        "tags": [
          "Flows"
        ],
        "description": "Enables the specified flow.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectionName",
            "in": "path",
            "description": "The name for the connection to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          },
          {
            "name": "flowName",
            "in": "path",
            "description": "The name for the flow to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The flow resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of flow",
                  "type": "object",
                  "properties": {
                    "connection": {
                      "description": "The connection associated with this flow",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the connection"
                        },
                        "id": {
                          "type": "string",
                          "description": "Id of the connection"
                        },
                        "location": {
                          "type": "string",
                          "description": "Location of the connection",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "subscriptionName": {
                          "type": "string",
                          "description": "Name of the subscription with the connection"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "flowId": {
                      "type": "string",
                      "description": "Dataflow GUID associated with this flow",
                      "readOnly": true
                    },
                    "keyVaultUri": {
                      "type": "string",
                      "description": "URI to a Key Vault Secret containing a SAS token."
                    },
                    "linkStatus": {
                      "description": "Link status of the current flow",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Linked",
                        "Unlinked"
                      ],
                      "x-ms-enum": {
                        "name": "LinkStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Linked",
                            "value": "Linked",
                            "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                          },
                          {
                            "name": "Unlinked",
                            "value": "Unlinked",
                            "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                          }
                        ]
                      }
                    },
                    "linkedFlowId": {
                      "type": "string",
                      "description": "Resource ID of the linked flow",
                      "readOnly": true
                    },
                    "status": {
                      "description": "Status of the current flow",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "FlowStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "The flow is currently enabled and able to send or receive data."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "The flow is currently disabled and cannot send or receive data."
                          }
                        ]
                      }
                    },
                    "forceDisabledStatus": {
                      "type": "array",
                      "description": "Force disablement status of the current flow",
                      "items": {
                        "type": "string",
                        "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                        "enum": [
                          "ConnectionForceDisabled",
                          "FlowTypeForceDisabled"
                        ],
                        "x-ms-enum": {
                          "name": "ForceDisabledStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "ConnectionForceDisabled",
                              "value": "ConnectionForceDisabled",
                              "description": "Defines disablement of a Flow due to the parent connection being disabled."
                            },
                            {
                              "name": "FlowTypeForceDisabled",
                              "value": "FlowTypeForceDisabled",
                              "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                            }
                          ]
                        }
                      },
                      "readOnly": true
                    },
                    "storageAccountName": {
                      "type": "string",
                      "description": "Storage Account"
                    },
                    "storageAccountId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Storage Account ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Storage/storageAccounts"
                          }
                        ]
                      }
                    },
                    "storageContainerName": {
                      "type": "string",
                      "description": "Storage Container Name"
                    },
                    "storageTableName": {
                      "type": "string",
                      "description": "Storage Table Name"
                    },
                    "serviceBusQueueId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Service Bus Queue ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Storage/namespaces/queues"
                          }
                        ]
                      }
                    },
                    "flowType": {
                      "type": "string",
                      "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                      "enum": [
                        "Unknown",
                        "Complex",
                        "DevSecOps",
                        "Messaging",
                        "Mission",
                        "MicrosoftInternal",
                        "BasicFiles",
                        "Data",
                        "Standard",
                        "StreamingVideo",
                        "Opaque",
                        "MissionOpaqueXML",
                        "DiskImages",
                        "API"
                      ],
                      "x-ms-enum": {
                        "name": "FlowType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "This type of flow is not set."
                          },
                          {
                            "name": "Complex",
                            "value": "Complex",
                            "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                          },
                          {
                            "name": "DevSecOps",
                            "value": "DevSecOps",
                            "description": "This flow sends source code files and artifacts."
                          },
                          {
                            "name": "Messaging",
                            "value": "Messaging",
                            "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                          },
                          {
                            "name": "Mission",
                            "value": "Mission",
                            "description": "This flow sends standard data but is subject to strict cloud owner approval."
                          },
                          {
                            "name": "MicrosoftInternal",
                            "value": "MicrosoftInternal",
                            "description": "This flow is assigned to internal Microsoft use cases."
                          },
                          {
                            "name": "BasicFiles",
                            "value": "BasicFiles",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "Data",
                            "value": "Data",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "Standard",
                            "value": "Standard",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "StreamingVideo",
                            "value": "StreamingVideo",
                            "description": "This flow sends video streams."
                          },
                          {
                            "name": "Opaque",
                            "value": "Opaque",
                            "description": "This flow sends blobs but is subject to cloud owner approval."
                          },
                          {
                            "name": "MissionOpaqueXML",
                            "value": "MissionOpaqueXML",
                            "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                          },
                          {
                            "name": "DiskImages",
                            "value": "DiskImages",
                            "description": "This flow sends blobs that can be used for Virtual Machines."
                          },
                          {
                            "name": "API",
                            "value": "API",
                            "description": "This flow sends data via an Application Programmer Interface."
                          }
                        ]
                      }
                    },
                    "dataType": {
                      "description": "Type of data to transfer via the flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "type": "string",
                      "enum": [
                        "Blob",
                        "Table"
                      ],
                      "x-ms-enum": {
                        "name": "DataType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Blob",
                            "value": "Blob",
                            "description": "The flow uses Azure Storage blobs to send or receive data."
                          },
                          {
                            "name": "Table",
                            "value": "Table",
                            "description": "The flow uses Azure Storage tables to send or receive data."
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the flow",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been accepted for creation."
                          }
                        ]
                      }
                    },
                    "policies": {
                      "type": "array",
                      "description": "The policies for this flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "schema": {
                      "type": "object",
                      "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "ID associated with this schema"
                        },
                        "connectionId": {
                          "type": "string",
                          "description": "Connection ID associated with this schema"
                        },
                        "status": {
                          "description": "Status of the schema",
                          "type": "string",
                          "enum": [
                            "New",
                            "Approved"
                          ],
                          "x-ms-enum": {
                            "name": "SchemaStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "New",
                                "value": "New",
                                "description": "A schema that has not been approved and is awaiting review."
                              },
                              {
                                "name": "Approved",
                                "value": "Approved",
                                "description": "A schema that has been approved and is ready for use."
                              }
                            ]
                          }
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the schema"
                        },
                        "content": {
                          "type": "string",
                          "description": "Content of the schema"
                        },
                        "direction": {
                          "description": "The direction of the schema.",
                          "type": "string",
                          "enum": [
                            "Send",
                            "Receive"
                          ],
                          "x-ms-enum": {
                            "name": "Direction",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Send",
                                "value": "Send",
                                "description": "The direction is on the sending side of a pipeline, connection, or flow."
                              },
                              {
                                "name": "Receive",
                                "value": "Receive",
                                "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                              }
                            ]
                          }
                        },
                        "schemaUri": {
                          "type": "string",
                          "format": "uri",
                          "description": "Uri containing SAS token for the zipped schema"
                        },
                        "schemaType": {
                          "description": "The Schema Type",
                          "type": "string",
                          "enum": [
                            "Xsd",
                            "Zip"
                          ],
                          "x-ms-enum": {
                            "name": "SchemaType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Xsd",
                                "value": "Xsd",
                                "description": "The schema represents a single XML schema definition file."
                              },
                              {
                                "name": "Zip",
                                "value": "Zip",
                                "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "messagingOptions": {
                      "description": "The messaging options for this flow",
                      "type": "object",
                      "properties": {
                        "billingTier": {
                          "description": "Billing tier for this messaging flow",
                          "type": "string",
                          "enum": [
                            "BlobTransport",
                            "Standard",
                            "Premium"
                          ],
                          "x-ms-enum": {
                            "name": "FlowBillingTier",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "BlobTransport",
                                "value": "BlobTransport",
                                "description": "Billing tier for messaging processing that charges based on how much data is transferred."
                              },
                              {
                                "name": "Standard",
                                "value": "Standard",
                                "description": "Billing tier for standard messaging processing that charges based on having the messaging resource allocated."
                              },
                              {
                                "name": "Premium",
                                "value": "Premium",
                                "description": "Billing tier for premium messaging processing that charges based on having the messaging resource allocated."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "apiFlowOptions": {
                      "description": "The API Flow configuration options for Azure Data Transfer API Flow type.",
                      "type": "object",
                      "properties": {
                        "remoteEndpoint": {
                          "type": "string",
                          "description": "Remote host to which communication needs to be made. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the remoteEndpointSettings.endpoint property instead."
                        },
                        "cname": {
                          "type": "string",
                          "description": "Unique CNAME to represent the Azure Data Transfer API Flow instance"
                        },
                        "apiMode": {
                          "description": "Remote Calling Mode in the Azure Data Transfer API Flow, which describes how the API Flow will be invoked",
                          "type": "string",
                          "enum": [
                            "SDK",
                            "Endpoint"
                          ],
                          "x-ms-enum": {
                            "name": "ApiMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "SDK",
                                "value": "SDK",
                                "description": "The API flow will forward calls to a custom Software Development Kit implementation."
                              },
                              {
                                "name": "Endpoint",
                                "value": "Endpoint",
                                "description": "The API flow will forward calls to a specified endpoint."
                              }
                            ]
                          }
                        },
                        "identityTranslation": {
                          "description": "Determines which identity to use for extracting the user token for Azure Data Transfer API Flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead.",
                          "type": "string",
                          "enum": [
                            "UserIdentity",
                            "ServiceIdentity"
                          ],
                          "x-ms-enum": {
                            "name": "IdentityTranslation",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "UserIdentity",
                                "value": "UserIdentity",
                                "description": "The API flow will make use of the user identity that called this API flow, and pass that token through the boundary."
                              },
                              {
                                "name": "ServiceIdentity",
                                "value": "ServiceIdentity",
                                "description": "The API flow will make use of the Azure Data Transfer Flow managed identity on the other side of the boundary."
                              }
                            ]
                          }
                        },
                        "senderClientId": {
                          "type": "string",
                          "description": "Sender's app user assigned Manage Identity client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        },
                        "remoteCallingModeClientId": {
                          "type": "string",
                          "description": "Remote stub app registration Client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        },
                        "audienceOverride": {
                          "type": "string",
                          "description": "Optional field to override the audience of the remote endpoint. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        }
                      }
                    },
                    "customerManagedKeyVaultUri": {
                      "type": "string",
                      "format": "uri",
                      "description": "The URI to the customer managed key for this flow"
                    },
                    "streamId": {
                      "type": "string",
                      "description": "The flow stream identifier"
                    },
                    "streamProtocol": {
                      "description": "The protocol of the stream",
                      "type": "string",
                      "enum": [
                        "UDP",
                        "SRT",
                        "RTP"
                      ],
                      "x-ms-enum": {
                        "name": "StreamProtocol",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "UDP",
                            "value": "UDP",
                            "description": "This Flow is using User Datagram Protocol for the video stream."
                          },
                          {
                            "name": "SRT",
                            "value": "SRT",
                            "description": "This Flow is using Secure Reliable Transfer for the video stream."
                          },
                          {
                            "name": "RTP",
                            "value": "RTP",
                            "description": "This Flow is using Real-time Transport Protocol for the video stream."
                          }
                        ]
                      }
                    },
                    "streamLatency": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The latency of the stream in milliseconds"
                    },
                    "passphrase": {
                      "type": "string",
                      "description": "The passphrase used for SRT streams"
                    },
                    "sourceAddresses": {
                      "description": "The source IP address and CIDR ranges of the stream",
                      "type": "object",
                      "properties": {
                        "sourceAddresses": {
                          "type": "array",
                          "description": "A source IP address or CIDR range",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "destinationEndpoints": {
                      "type": "array",
                      "description": "The destination endpoints of the stream",
                      "items": {
                        "type": "string"
                      }
                    },
                    "destinationEndpointPorts": {
                      "type": "array",
                      "description": "The destination endpoint ports of the stream",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "eventHubId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Event Hub ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.EventHub/namespaces/eventhubs"
                          }
                        ]
                      }
                    },
                    "consumerGroup": {
                      "type": "string",
                      "description": "Event Hub Consumer Group"
                    }
                  }
                },
                "plan": {
                  "description": "Details of the resource plan.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "A user defined name of the 3rd Party Artifact that is being procured."
                    },
                    "publisher": {
                      "type": "string",
                      "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
                    },
                    "product": {
                      "type": "string",
                      "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
                    },
                    "promotionCode": {
                      "type": "string",
                      "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
                    },
                    "version": {
                      "type": "string",
                      "description": "The version of the desired product/artifact."
                    }
                  },
                  "required": [
                    "name",
                    "publisher",
                    "product"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/connections/{connectionName}/flows/{flowName}/generatePassphrase": {
      "post": {
        "operationId": "Flows_GeneratePassphrase",
        "tags": [
          "Flows"
        ],
        "description": "Generate a compliant passphrase for the specified flow.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectionName",
            "in": "path",
            "description": "The name for the connection to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          },
          {
            "name": "flowName",
            "in": "path",
            "description": "The name for the flow to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The flow resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of flow",
                  "type": "object",
                  "properties": {
                    "connection": {
                      "description": "The connection associated with this flow",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the connection"
                        },
                        "id": {
                          "type": "string",
                          "description": "Id of the connection"
                        },
                        "location": {
                          "type": "string",
                          "description": "Location of the connection",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "subscriptionName": {
                          "type": "string",
                          "description": "Name of the subscription with the connection"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "flowId": {
                      "type": "string",
                      "description": "Dataflow GUID associated with this flow",
                      "readOnly": true
                    },
                    "keyVaultUri": {
                      "type": "string",
                      "description": "URI to a Key Vault Secret containing a SAS token."
                    },
                    "linkStatus": {
                      "description": "Link status of the current flow",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Linked",
                        "Unlinked"
                      ],
                      "x-ms-enum": {
                        "name": "LinkStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Linked",
                            "value": "Linked",
                            "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                          },
                          {
                            "name": "Unlinked",
                            "value": "Unlinked",
                            "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                          }
                        ]
                      }
                    },
                    "linkedFlowId": {
                      "type": "string",
                      "description": "Resource ID of the linked flow",
                      "readOnly": true
                    },
                    "status": {
                      "description": "Status of the current flow",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "FlowStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "The flow is currently enabled and able to send or receive data."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "The flow is currently disabled and cannot send or receive data."
                          }
                        ]
                      }
                    },
                    "forceDisabledStatus": {
                      "type": "array",
                      "description": "Force disablement status of the current flow",
                      "items": {
                        "type": "string",
                        "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                        "enum": [
                          "ConnectionForceDisabled",
                          "FlowTypeForceDisabled"
                        ],
                        "x-ms-enum": {
                          "name": "ForceDisabledStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "ConnectionForceDisabled",
                              "value": "ConnectionForceDisabled",
                              "description": "Defines disablement of a Flow due to the parent connection being disabled."
                            },
                            {
                              "name": "FlowTypeForceDisabled",
                              "value": "FlowTypeForceDisabled",
                              "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                            }
                          ]
                        }
                      },
                      "readOnly": true
                    },
                    "storageAccountName": {
                      "type": "string",
                      "description": "Storage Account"
                    },
                    "storageAccountId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Storage Account ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Storage/storageAccounts"
                          }
                        ]
                      }
                    },
                    "storageContainerName": {
                      "type": "string",
                      "description": "Storage Container Name"
                    },
                    "storageTableName": {
                      "type": "string",
                      "description": "Storage Table Name"
                    },
                    "serviceBusQueueId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Service Bus Queue ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Storage/namespaces/queues"
                          }
                        ]
                      }
                    },
                    "flowType": {
                      "type": "string",
                      "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                      "enum": [
                        "Unknown",
                        "Complex",
                        "DevSecOps",
                        "Messaging",
                        "Mission",
                        "MicrosoftInternal",
                        "BasicFiles",
                        "Data",
                        "Standard",
                        "StreamingVideo",
                        "Opaque",
                        "MissionOpaqueXML",
                        "DiskImages",
                        "API"
                      ],
                      "x-ms-enum": {
                        "name": "FlowType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "This type of flow is not set."
                          },
                          {
                            "name": "Complex",
                            "value": "Complex",
                            "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                          },
                          {
                            "name": "DevSecOps",
                            "value": "DevSecOps",
                            "description": "This flow sends source code files and artifacts."
                          },
                          {
                            "name": "Messaging",
                            "value": "Messaging",
                            "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                          },
                          {
                            "name": "Mission",
                            "value": "Mission",
                            "description": "This flow sends standard data but is subject to strict cloud owner approval."
                          },
                          {
                            "name": "MicrosoftInternal",
                            "value": "MicrosoftInternal",
                            "description": "This flow is assigned to internal Microsoft use cases."
                          },
                          {
                            "name": "BasicFiles",
                            "value": "BasicFiles",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "Data",
                            "value": "Data",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "Standard",
                            "value": "Standard",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "StreamingVideo",
                            "value": "StreamingVideo",
                            "description": "This flow sends video streams."
                          },
                          {
                            "name": "Opaque",
                            "value": "Opaque",
                            "description": "This flow sends blobs but is subject to cloud owner approval."
                          },
                          {
                            "name": "MissionOpaqueXML",
                            "value": "MissionOpaqueXML",
                            "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                          },
                          {
                            "name": "DiskImages",
                            "value": "DiskImages",
                            "description": "This flow sends blobs that can be used for Virtual Machines."
                          },
                          {
                            "name": "API",
                            "value": "API",
                            "description": "This flow sends data via an Application Programmer Interface."
                          }
                        ]
                      }
                    },
                    "dataType": {
                      "description": "Type of data to transfer via the flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "type": "string",
                      "enum": [
                        "Blob",
                        "Table"
                      ],
                      "x-ms-enum": {
                        "name": "DataType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Blob",
                            "value": "Blob",
                            "description": "The flow uses Azure Storage blobs to send or receive data."
                          },
                          {
                            "name": "Table",
                            "value": "Table",
                            "description": "The flow uses Azure Storage tables to send or receive data."
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the flow",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been accepted for creation."
                          }
                        ]
                      }
                    },
                    "policies": {
                      "type": "array",
                      "description": "The policies for this flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "schema": {
                      "type": "object",
                      "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "ID associated with this schema"
                        },
                        "connectionId": {
                          "type": "string",
                          "description": "Connection ID associated with this schema"
                        },
                        "status": {
                          "description": "Status of the schema",
                          "type": "string",
                          "enum": [
                            "New",
                            "Approved"
                          ],
                          "x-ms-enum": {
                            "name": "SchemaStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "New",
                                "value": "New",
                                "description": "A schema that has not been approved and is awaiting review."
                              },
                              {
                                "name": "Approved",
                                "value": "Approved",
                                "description": "A schema that has been approved and is ready for use."
                              }
                            ]
                          }
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the schema"
                        },
                        "content": {
                          "type": "string",
                          "description": "Content of the schema"
                        },
                        "direction": {
                          "description": "The direction of the schema.",
                          "type": "string",
                          "enum": [
                            "Send",
                            "Receive"
                          ],
                          "x-ms-enum": {
                            "name": "Direction",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Send",
                                "value": "Send",
                                "description": "The direction is on the sending side of a pipeline, connection, or flow."
                              },
                              {
                                "name": "Receive",
                                "value": "Receive",
                                "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                              }
                            ]
                          }
                        },
                        "schemaUri": {
                          "type": "string",
                          "format": "uri",
                          "description": "Uri containing SAS token for the zipped schema"
                        },
                        "schemaType": {
                          "description": "The Schema Type",
                          "type": "string",
                          "enum": [
                            "Xsd",
                            "Zip"
                          ],
                          "x-ms-enum": {
                            "name": "SchemaType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Xsd",
                                "value": "Xsd",
                                "description": "The schema represents a single XML schema definition file."
                              },
                              {
                                "name": "Zip",
                                "value": "Zip",
                                "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "messagingOptions": {
                      "description": "The messaging options for this flow",
                      "type": "object",
                      "properties": {
                        "billingTier": {
                          "description": "Billing tier for this messaging flow",
                          "type": "string",
                          "enum": [
                            "BlobTransport",
                            "Standard",
                            "Premium"
                          ],
                          "x-ms-enum": {
                            "name": "FlowBillingTier",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "BlobTransport",
                                "value": "BlobTransport",
                                "description": "Billing tier for messaging processing that charges based on how much data is transferred."
                              },
                              {
                                "name": "Standard",
                                "value": "Standard",
                                "description": "Billing tier for standard messaging processing that charges based on having the messaging resource allocated."
                              },
                              {
                                "name": "Premium",
                                "value": "Premium",
                                "description": "Billing tier for premium messaging processing that charges based on having the messaging resource allocated."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "apiFlowOptions": {
                      "description": "The API Flow configuration options for Azure Data Transfer API Flow type.",
                      "type": "object",
                      "properties": {
                        "remoteEndpoint": {
                          "type": "string",
                          "description": "Remote host to which communication needs to be made. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the remoteEndpointSettings.endpoint property instead."
                        },
                        "cname": {
                          "type": "string",
                          "description": "Unique CNAME to represent the Azure Data Transfer API Flow instance"
                        },
                        "apiMode": {
                          "description": "Remote Calling Mode in the Azure Data Transfer API Flow, which describes how the API Flow will be invoked",
                          "type": "string",
                          "enum": [
                            "SDK",
                            "Endpoint"
                          ],
                          "x-ms-enum": {
                            "name": "ApiMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "SDK",
                                "value": "SDK",
                                "description": "The API flow will forward calls to a custom Software Development Kit implementation."
                              },
                              {
                                "name": "Endpoint",
                                "value": "Endpoint",
                                "description": "The API flow will forward calls to a specified endpoint."
                              }
                            ]
                          }
                        },
                        "identityTranslation": {
                          "description": "Determines which identity to use for extracting the user token for Azure Data Transfer API Flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead.",
                          "type": "string",
                          "enum": [
                            "UserIdentity",
                            "ServiceIdentity"
                          ],
                          "x-ms-enum": {
                            "name": "IdentityTranslation",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "UserIdentity",
                                "value": "UserIdentity",
                                "description": "The API flow will make use of the user identity that called this API flow, and pass that token through the boundary."
                              },
                              {
                                "name": "ServiceIdentity",
                                "value": "ServiceIdentity",
                                "description": "The API flow will make use of the Azure Data Transfer Flow managed identity on the other side of the boundary."
                              }
                            ]
                          }
                        },
                        "senderClientId": {
                          "type": "string",
                          "description": "Sender's app user assigned Manage Identity client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        },
                        "remoteCallingModeClientId": {
                          "type": "string",
                          "description": "Remote stub app registration Client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        },
                        "audienceOverride": {
                          "type": "string",
                          "description": "Optional field to override the audience of the remote endpoint. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        }
                      }
                    },
                    "customerManagedKeyVaultUri": {
                      "type": "string",
                      "format": "uri",
                      "description": "The URI to the customer managed key for this flow"
                    },
                    "streamId": {
                      "type": "string",
                      "description": "The flow stream identifier"
                    },
                    "streamProtocol": {
                      "description": "The protocol of the stream",
                      "type": "string",
                      "enum": [
                        "UDP",
                        "SRT",
                        "RTP"
                      ],
                      "x-ms-enum": {
                        "name": "StreamProtocol",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "UDP",
                            "value": "UDP",
                            "description": "This Flow is using User Datagram Protocol for the video stream."
                          },
                          {
                            "name": "SRT",
                            "value": "SRT",
                            "description": "This Flow is using Secure Reliable Transfer for the video stream."
                          },
                          {
                            "name": "RTP",
                            "value": "RTP",
                            "description": "This Flow is using Real-time Transport Protocol for the video stream."
                          }
                        ]
                      }
                    },
                    "streamLatency": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The latency of the stream in milliseconds"
                    },
                    "passphrase": {
                      "type": "string",
                      "description": "The passphrase used for SRT streams"
                    },
                    "sourceAddresses": {
                      "description": "The source IP address and CIDR ranges of the stream",
                      "type": "object",
                      "properties": {
                        "sourceAddresses": {
                          "type": "array",
                          "description": "A source IP address or CIDR range",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "destinationEndpoints": {
                      "type": "array",
                      "description": "The destination endpoints of the stream",
                      "items": {
                        "type": "string"
                      }
                    },
                    "destinationEndpointPorts": {
                      "type": "array",
                      "description": "The destination endpoint ports of the stream",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "eventHubId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Event Hub ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.EventHub/namespaces/eventhubs"
                          }
                        ]
                      }
                    },
                    "consumerGroup": {
                      "type": "string",
                      "description": "Event Hub Consumer Group"
                    }
                  }
                },
                "plan": {
                  "description": "Details of the resource plan.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "A user defined name of the 3rd Party Artifact that is being procured."
                    },
                    "publisher": {
                      "type": "string",
                      "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
                    },
                    "product": {
                      "type": "string",
                      "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
                    },
                    "promotionCode": {
                      "type": "string",
                      "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
                    },
                    "version": {
                      "type": "string",
                      "description": "The version of the desired product/artifact."
                    }
                  },
                  "required": [
                    "name",
                    "publisher",
                    "product"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/connections/{connectionName}/flows/{flowName}/getDestinationEndpointPorts": {
      "post": {
        "operationId": "Flows_GetDestinationEndpointPorts",
        "tags": [
          "Flows"
        ],
        "description": "Get the destination endpoint ports for the specified flow.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectionName",
            "in": "path",
            "description": "The name for the connection to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          },
          {
            "name": "flowName",
            "in": "path",
            "description": "The name for the flow to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "List of destination endpoint ports for the flow stream",
              "properties": {
                "ports": {
                  "type": "array",
                  "description": "The destination endpoint port for the flow stream",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/connections/{connectionName}/flows/{flowName}/getDestinationEndpoints": {
      "post": {
        "operationId": "Flows_GetDestinationEndpoints",
        "tags": [
          "Flows"
        ],
        "description": "Get the destination endpoints for the specified flow.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectionName",
            "in": "path",
            "description": "The name for the connection to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          },
          {
            "name": "flowName",
            "in": "path",
            "description": "The name for the flow to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "List of destination endpoints for the flow stream",
              "properties": {
                "endpoints": {
                  "type": "array",
                  "description": "The destination endpoints for the flow stream",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/connections/{connectionName}/flows/{flowName}/getSourceAddresses": {
      "post": {
        "operationId": "Flows_GetSourceAddresses",
        "tags": [
          "Flows"
        ],
        "description": "Get the source addresses for the specified flow.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectionName",
            "in": "path",
            "description": "The name for the connection to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          },
          {
            "name": "flowName",
            "in": "path",
            "description": "The name for the flow to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The source IP address and CIDR ranges of the stream",
              "properties": {
                "sourceAddresses": {
                  "type": "array",
                  "description": "A source IP address or CIDR range",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/connections/{connectionName}/flows/{flowName}/getStreamConnectionString": {
      "post": {
        "operationId": "Flows_GetStreamConnectionString",
        "tags": [
          "Flows"
        ],
        "description": "Get the connection string for the specified flow.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectionName",
            "in": "path",
            "description": "The name for the connection to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          },
          {
            "name": "flowName",
            "in": "path",
            "description": "The name for the flow to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The connection string for the specified streaming flow",
              "properties": {
                "connectionString": {
                  "type": "string",
                  "description": "The connection string for the specified streaming flow"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/connections/{connectionName}/flows/{flowName}/link": {
      "post": {
        "operationId": "Flows_Link",
        "tags": [
          "Flows"
        ],
        "description": "Links the specified flow.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectionName",
            "in": "path",
            "description": "The name for the connection to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          },
          {
            "name": "flowName",
            "in": "path",
            "description": "The name for the flow to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          },
          {
            "name": "flow",
            "in": "body",
            "description": "Flow body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The resource to reference.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "ID of the resource."
                },
                "statusReason": {
                  "type": "string",
                  "description": "Reason for resource operation."
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The flow resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of flow",
                  "type": "object",
                  "properties": {
                    "connection": {
                      "description": "The connection associated with this flow",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the connection"
                        },
                        "id": {
                          "type": "string",
                          "description": "Id of the connection"
                        },
                        "location": {
                          "type": "string",
                          "description": "Location of the connection",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "subscriptionName": {
                          "type": "string",
                          "description": "Name of the subscription with the connection"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "flowId": {
                      "type": "string",
                      "description": "Dataflow GUID associated with this flow",
                      "readOnly": true
                    },
                    "keyVaultUri": {
                      "type": "string",
                      "description": "URI to a Key Vault Secret containing a SAS token."
                    },
                    "linkStatus": {
                      "description": "Link status of the current flow",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Linked",
                        "Unlinked"
                      ],
                      "x-ms-enum": {
                        "name": "LinkStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Linked",
                            "value": "Linked",
                            "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                          },
                          {
                            "name": "Unlinked",
                            "value": "Unlinked",
                            "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                          }
                        ]
                      }
                    },
                    "linkedFlowId": {
                      "type": "string",
                      "description": "Resource ID of the linked flow",
                      "readOnly": true
                    },
                    "status": {
                      "description": "Status of the current flow",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "FlowStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "The flow is currently enabled and able to send or receive data."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "The flow is currently disabled and cannot send or receive data."
                          }
                        ]
                      }
                    },
                    "forceDisabledStatus": {
                      "type": "array",
                      "description": "Force disablement status of the current flow",
                      "items": {
                        "type": "string",
                        "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                        "enum": [
                          "ConnectionForceDisabled",
                          "FlowTypeForceDisabled"
                        ],
                        "x-ms-enum": {
                          "name": "ForceDisabledStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "ConnectionForceDisabled",
                              "value": "ConnectionForceDisabled",
                              "description": "Defines disablement of a Flow due to the parent connection being disabled."
                            },
                            {
                              "name": "FlowTypeForceDisabled",
                              "value": "FlowTypeForceDisabled",
                              "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                            }
                          ]
                        }
                      },
                      "readOnly": true
                    },
                    "storageAccountName": {
                      "type": "string",
                      "description": "Storage Account"
                    },
                    "storageAccountId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Storage Account ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Storage/storageAccounts"
                          }
                        ]
                      }
                    },
                    "storageContainerName": {
                      "type": "string",
                      "description": "Storage Container Name"
                    },
                    "storageTableName": {
                      "type": "string",
                      "description": "Storage Table Name"
                    },
                    "serviceBusQueueId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Service Bus Queue ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Storage/namespaces/queues"
                          }
                        ]
                      }
                    },
                    "flowType": {
                      "type": "string",
                      "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                      "enum": [
                        "Unknown",
                        "Complex",
                        "DevSecOps",
                        "Messaging",
                        "Mission",
                        "MicrosoftInternal",
                        "BasicFiles",
                        "Data",
                        "Standard",
                        "StreamingVideo",
                        "Opaque",
                        "MissionOpaqueXML",
                        "DiskImages",
                        "API"
                      ],
                      "x-ms-enum": {
                        "name": "FlowType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "This type of flow is not set."
                          },
                          {
                            "name": "Complex",
                            "value": "Complex",
                            "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                          },
                          {
                            "name": "DevSecOps",
                            "value": "DevSecOps",
                            "description": "This flow sends source code files and artifacts."
                          },
                          {
                            "name": "Messaging",
                            "value": "Messaging",
                            "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                          },
                          {
                            "name": "Mission",
                            "value": "Mission",
                            "description": "This flow sends standard data but is subject to strict cloud owner approval."
                          },
                          {
                            "name": "MicrosoftInternal",
                            "value": "MicrosoftInternal",
                            "description": "This flow is assigned to internal Microsoft use cases."
                          },
                          {
                            "name": "BasicFiles",
                            "value": "BasicFiles",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "Data",
                            "value": "Data",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "Standard",
                            "value": "Standard",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "StreamingVideo",
                            "value": "StreamingVideo",
                            "description": "This flow sends video streams."
                          },
                          {
                            "name": "Opaque",
                            "value": "Opaque",
                            "description": "This flow sends blobs but is subject to cloud owner approval."
                          },
                          {
                            "name": "MissionOpaqueXML",
                            "value": "MissionOpaqueXML",
                            "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                          },
                          {
                            "name": "DiskImages",
                            "value": "DiskImages",
                            "description": "This flow sends blobs that can be used for Virtual Machines."
                          },
                          {
                            "name": "API",
                            "value": "API",
                            "description": "This flow sends data via an Application Programmer Interface."
                          }
                        ]
                      }
                    },
                    "dataType": {
                      "description": "Type of data to transfer via the flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "type": "string",
                      "enum": [
                        "Blob",
                        "Table"
                      ],
                      "x-ms-enum": {
                        "name": "DataType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Blob",
                            "value": "Blob",
                            "description": "The flow uses Azure Storage blobs to send or receive data."
                          },
                          {
                            "name": "Table",
                            "value": "Table",
                            "description": "The flow uses Azure Storage tables to send or receive data."
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the flow",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been accepted for creation."
                          }
                        ]
                      }
                    },
                    "policies": {
                      "type": "array",
                      "description": "The policies for this flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "schema": {
                      "type": "object",
                      "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "ID associated with this schema"
                        },
                        "connectionId": {
                          "type": "string",
                          "description": "Connection ID associated with this schema"
                        },
                        "status": {
                          "description": "Status of the schema",
                          "type": "string",
                          "enum": [
                            "New",
                            "Approved"
                          ],
                          "x-ms-enum": {
                            "name": "SchemaStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "New",
                                "value": "New",
                                "description": "A schema that has not been approved and is awaiting review."
                              },
                              {
                                "name": "Approved",
                                "value": "Approved",
                                "description": "A schema that has been approved and is ready for use."
                              }
                            ]
                          }
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the schema"
                        },
                        "content": {
                          "type": "string",
                          "description": "Content of the schema"
                        },
                        "direction": {
                          "description": "The direction of the schema.",
                          "type": "string",
                          "enum": [
                            "Send",
                            "Receive"
                          ],
                          "x-ms-enum": {
                            "name": "Direction",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Send",
                                "value": "Send",
                                "description": "The direction is on the sending side of a pipeline, connection, or flow."
                              },
                              {
                                "name": "Receive",
                                "value": "Receive",
                                "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                              }
                            ]
                          }
                        },
                        "schemaUri": {
                          "type": "string",
                          "format": "uri",
                          "description": "Uri containing SAS token for the zipped schema"
                        },
                        "schemaType": {
                          "description": "The Schema Type",
                          "type": "string",
                          "enum": [
                            "Xsd",
                            "Zip"
                          ],
                          "x-ms-enum": {
                            "name": "SchemaType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Xsd",
                                "value": "Xsd",
                                "description": "The schema represents a single XML schema definition file."
                              },
                              {
                                "name": "Zip",
                                "value": "Zip",
                                "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "messagingOptions": {
                      "description": "The messaging options for this flow",
                      "type": "object",
                      "properties": {
                        "billingTier": {
                          "description": "Billing tier for this messaging flow",
                          "type": "string",
                          "enum": [
                            "BlobTransport",
                            "Standard",
                            "Premium"
                          ],
                          "x-ms-enum": {
                            "name": "FlowBillingTier",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "BlobTransport",
                                "value": "BlobTransport",
                                "description": "Billing tier for messaging processing that charges based on how much data is transferred."
                              },
                              {
                                "name": "Standard",
                                "value": "Standard",
                                "description": "Billing tier for standard messaging processing that charges based on having the messaging resource allocated."
                              },
                              {
                                "name": "Premium",
                                "value": "Premium",
                                "description": "Billing tier for premium messaging processing that charges based on having the messaging resource allocated."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "apiFlowOptions": {
                      "description": "The API Flow configuration options for Azure Data Transfer API Flow type.",
                      "type": "object",
                      "properties": {
                        "remoteEndpoint": {
                          "type": "string",
                          "description": "Remote host to which communication needs to be made. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the remoteEndpointSettings.endpoint property instead."
                        },
                        "cname": {
                          "type": "string",
                          "description": "Unique CNAME to represent the Azure Data Transfer API Flow instance"
                        },
                        "apiMode": {
                          "description": "Remote Calling Mode in the Azure Data Transfer API Flow, which describes how the API Flow will be invoked",
                          "type": "string",
                          "enum": [
                            "SDK",
                            "Endpoint"
                          ],
                          "x-ms-enum": {
                            "name": "ApiMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "SDK",
                                "value": "SDK",
                                "description": "The API flow will forward calls to a custom Software Development Kit implementation."
                              },
                              {
                                "name": "Endpoint",
                                "value": "Endpoint",
                                "description": "The API flow will forward calls to a specified endpoint."
                              }
                            ]
                          }
                        },
                        "identityTranslation": {
                          "description": "Determines which identity to use for extracting the user token for Azure Data Transfer API Flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead.",
                          "type": "string",
                          "enum": [
                            "UserIdentity",
                            "ServiceIdentity"
                          ],
                          "x-ms-enum": {
                            "name": "IdentityTranslation",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "UserIdentity",
                                "value": "UserIdentity",
                                "description": "The API flow will make use of the user identity that called this API flow, and pass that token through the boundary."
                              },
                              {
                                "name": "ServiceIdentity",
                                "value": "ServiceIdentity",
                                "description": "The API flow will make use of the Azure Data Transfer Flow managed identity on the other side of the boundary."
                              }
                            ]
                          }
                        },
                        "senderClientId": {
                          "type": "string",
                          "description": "Sender's app user assigned Manage Identity client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        },
                        "remoteCallingModeClientId": {
                          "type": "string",
                          "description": "Remote stub app registration Client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        },
                        "audienceOverride": {
                          "type": "string",
                          "description": "Optional field to override the audience of the remote endpoint. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        }
                      }
                    },
                    "customerManagedKeyVaultUri": {
                      "type": "string",
                      "format": "uri",
                      "description": "The URI to the customer managed key for this flow"
                    },
                    "streamId": {
                      "type": "string",
                      "description": "The flow stream identifier"
                    },
                    "streamProtocol": {
                      "description": "The protocol of the stream",
                      "type": "string",
                      "enum": [
                        "UDP",
                        "SRT",
                        "RTP"
                      ],
                      "x-ms-enum": {
                        "name": "StreamProtocol",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "UDP",
                            "value": "UDP",
                            "description": "This Flow is using User Datagram Protocol for the video stream."
                          },
                          {
                            "name": "SRT",
                            "value": "SRT",
                            "description": "This Flow is using Secure Reliable Transfer for the video stream."
                          },
                          {
                            "name": "RTP",
                            "value": "RTP",
                            "description": "This Flow is using Real-time Transport Protocol for the video stream."
                          }
                        ]
                      }
                    },
                    "streamLatency": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The latency of the stream in milliseconds"
                    },
                    "passphrase": {
                      "type": "string",
                      "description": "The passphrase used for SRT streams"
                    },
                    "sourceAddresses": {
                      "description": "The source IP address and CIDR ranges of the stream",
                      "type": "object",
                      "properties": {
                        "sourceAddresses": {
                          "type": "array",
                          "description": "A source IP address or CIDR range",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "destinationEndpoints": {
                      "type": "array",
                      "description": "The destination endpoints of the stream",
                      "items": {
                        "type": "string"
                      }
                    },
                    "destinationEndpointPorts": {
                      "type": "array",
                      "description": "The destination endpoint ports of the stream",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "eventHubId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Event Hub ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.EventHub/namespaces/eventhubs"
                          }
                        ]
                      }
                    },
                    "consumerGroup": {
                      "type": "string",
                      "description": "Event Hub Consumer Group"
                    }
                  }
                },
                "plan": {
                  "description": "Details of the resource plan.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "A user defined name of the 3rd Party Artifact that is being procured."
                    },
                    "publisher": {
                      "type": "string",
                      "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
                    },
                    "product": {
                      "type": "string",
                      "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
                    },
                    "promotionCode": {
                      "type": "string",
                      "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
                    },
                    "version": {
                      "type": "string",
                      "description": "The version of the desired product/artifact."
                    }
                  },
                  "required": [
                    "name",
                    "publisher",
                    "product"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/connections/{connectionName}/flows/{flowName}/setDestinationEndpointPorts": {
      "post": {
        "operationId": "Flows_SetDestinationEndpointPorts",
        "tags": [
          "Flows"
        ],
        "description": "Set the destination endpoint ports for the specified flow.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectionName",
            "in": "path",
            "description": "The name for the connection to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          },
          {
            "name": "flowName",
            "in": "path",
            "description": "The name for the flow to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          },
          {
            "name": "streamDestinationEndpointPorts",
            "in": "body",
            "description": "The destination endpoint ports wanted",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Set the destination endpoint ports for the specified flow.",
              "properties": {
                "ports": {
                  "type": "array",
                  "description": "The specified flow destination endpoint ports",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The flow resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of flow",
                  "type": "object",
                  "properties": {
                    "connection": {
                      "description": "The connection associated with this flow",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the connection"
                        },
                        "id": {
                          "type": "string",
                          "description": "Id of the connection"
                        },
                        "location": {
                          "type": "string",
                          "description": "Location of the connection",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "subscriptionName": {
                          "type": "string",
                          "description": "Name of the subscription with the connection"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "flowId": {
                      "type": "string",
                      "description": "Dataflow GUID associated with this flow",
                      "readOnly": true
                    },
                    "keyVaultUri": {
                      "type": "string",
                      "description": "URI to a Key Vault Secret containing a SAS token."
                    },
                    "linkStatus": {
                      "description": "Link status of the current flow",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Linked",
                        "Unlinked"
                      ],
                      "x-ms-enum": {
                        "name": "LinkStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Linked",
                            "value": "Linked",
                            "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                          },
                          {
                            "name": "Unlinked",
                            "value": "Unlinked",
                            "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                          }
                        ]
                      }
                    },
                    "linkedFlowId": {
                      "type": "string",
                      "description": "Resource ID of the linked flow",
                      "readOnly": true
                    },
                    "status": {
                      "description": "Status of the current flow",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "FlowStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "The flow is currently enabled and able to send or receive data."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "The flow is currently disabled and cannot send or receive data."
                          }
                        ]
                      }
                    },
                    "forceDisabledStatus": {
                      "type": "array",
                      "description": "Force disablement status of the current flow",
                      "items": {
                        "type": "string",
                        "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                        "enum": [
                          "ConnectionForceDisabled",
                          "FlowTypeForceDisabled"
                        ],
                        "x-ms-enum": {
                          "name": "ForceDisabledStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "ConnectionForceDisabled",
                              "value": "ConnectionForceDisabled",
                              "description": "Defines disablement of a Flow due to the parent connection being disabled."
                            },
                            {
                              "name": "FlowTypeForceDisabled",
                              "value": "FlowTypeForceDisabled",
                              "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                            }
                          ]
                        }
                      },
                      "readOnly": true
                    },
                    "storageAccountName": {
                      "type": "string",
                      "description": "Storage Account"
                    },
                    "storageAccountId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Storage Account ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Storage/storageAccounts"
                          }
                        ]
                      }
                    },
                    "storageContainerName": {
                      "type": "string",
                      "description": "Storage Container Name"
                    },
                    "storageTableName": {
                      "type": "string",
                      "description": "Storage Table Name"
                    },
                    "serviceBusQueueId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Service Bus Queue ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Storage/namespaces/queues"
                          }
                        ]
                      }
                    },
                    "flowType": {
                      "type": "string",
                      "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                      "enum": [
                        "Unknown",
                        "Complex",
                        "DevSecOps",
                        "Messaging",
                        "Mission",
                        "MicrosoftInternal",
                        "BasicFiles",
                        "Data",
                        "Standard",
                        "StreamingVideo",
                        "Opaque",
                        "MissionOpaqueXML",
                        "DiskImages",
                        "API"
                      ],
                      "x-ms-enum": {
                        "name": "FlowType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "This type of flow is not set."
                          },
                          {
                            "name": "Complex",
                            "value": "Complex",
                            "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                          },
                          {
                            "name": "DevSecOps",
                            "value": "DevSecOps",
                            "description": "This flow sends source code files and artifacts."
                          },
                          {
                            "name": "Messaging",
                            "value": "Messaging",
                            "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                          },
                          {
                            "name": "Mission",
                            "value": "Mission",
                            "description": "This flow sends standard data but is subject to strict cloud owner approval."
                          },
                          {
                            "name": "MicrosoftInternal",
                            "value": "MicrosoftInternal",
                            "description": "This flow is assigned to internal Microsoft use cases."
                          },
                          {
                            "name": "BasicFiles",
                            "value": "BasicFiles",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "Data",
                            "value": "Data",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "Standard",
                            "value": "Standard",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "StreamingVideo",
                            "value": "StreamingVideo",
                            "description": "This flow sends video streams."
                          },
                          {
                            "name": "Opaque",
                            "value": "Opaque",
                            "description": "This flow sends blobs but is subject to cloud owner approval."
                          },
                          {
                            "name": "MissionOpaqueXML",
                            "value": "MissionOpaqueXML",
                            "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                          },
                          {
                            "name": "DiskImages",
                            "value": "DiskImages",
                            "description": "This flow sends blobs that can be used for Virtual Machines."
                          },
                          {
                            "name": "API",
                            "value": "API",
                            "description": "This flow sends data via an Application Programmer Interface."
                          }
                        ]
                      }
                    },
                    "dataType": {
                      "description": "Type of data to transfer via the flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "type": "string",
                      "enum": [
                        "Blob",
                        "Table"
                      ],
                      "x-ms-enum": {
                        "name": "DataType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Blob",
                            "value": "Blob",
                            "description": "The flow uses Azure Storage blobs to send or receive data."
                          },
                          {
                            "name": "Table",
                            "value": "Table",
                            "description": "The flow uses Azure Storage tables to send or receive data."
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the flow",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been accepted for creation."
                          }
                        ]
                      }
                    },
                    "policies": {
                      "type": "array",
                      "description": "The policies for this flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "schema": {
                      "type": "object",
                      "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "ID associated with this schema"
                        },
                        "connectionId": {
                          "type": "string",
                          "description": "Connection ID associated with this schema"
                        },
                        "status": {
                          "description": "Status of the schema",
                          "type": "string",
                          "enum": [
                            "New",
                            "Approved"
                          ],
                          "x-ms-enum": {
                            "name": "SchemaStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "New",
                                "value": "New",
                                "description": "A schema that has not been approved and is awaiting review."
                              },
                              {
                                "name": "Approved",
                                "value": "Approved",
                                "description": "A schema that has been approved and is ready for use."
                              }
                            ]
                          }
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the schema"
                        },
                        "content": {
                          "type": "string",
                          "description": "Content of the schema"
                        },
                        "direction": {
                          "description": "The direction of the schema.",
                          "type": "string",
                          "enum": [
                            "Send",
                            "Receive"
                          ],
                          "x-ms-enum": {
                            "name": "Direction",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Send",
                                "value": "Send",
                                "description": "The direction is on the sending side of a pipeline, connection, or flow."
                              },
                              {
                                "name": "Receive",
                                "value": "Receive",
                                "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                              }
                            ]
                          }
                        },
                        "schemaUri": {
                          "type": "string",
                          "format": "uri",
                          "description": "Uri containing SAS token for the zipped schema"
                        },
                        "schemaType": {
                          "description": "The Schema Type",
                          "type": "string",
                          "enum": [
                            "Xsd",
                            "Zip"
                          ],
                          "x-ms-enum": {
                            "name": "SchemaType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Xsd",
                                "value": "Xsd",
                                "description": "The schema represents a single XML schema definition file."
                              },
                              {
                                "name": "Zip",
                                "value": "Zip",
                                "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "messagingOptions": {
                      "description": "The messaging options for this flow",
                      "type": "object",
                      "properties": {
                        "billingTier": {
                          "description": "Billing tier for this messaging flow",
                          "type": "string",
                          "enum": [
                            "BlobTransport",
                            "Standard",
                            "Premium"
                          ],
                          "x-ms-enum": {
                            "name": "FlowBillingTier",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "BlobTransport",
                                "value": "BlobTransport",
                                "description": "Billing tier for messaging processing that charges based on how much data is transferred."
                              },
                              {
                                "name": "Standard",
                                "value": "Standard",
                                "description": "Billing tier for standard messaging processing that charges based on having the messaging resource allocated."
                              },
                              {
                                "name": "Premium",
                                "value": "Premium",
                                "description": "Billing tier for premium messaging processing that charges based on having the messaging resource allocated."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "apiFlowOptions": {
                      "description": "The API Flow configuration options for Azure Data Transfer API Flow type.",
                      "type": "object",
                      "properties": {
                        "remoteEndpoint": {
                          "type": "string",
                          "description": "Remote host to which communication needs to be made. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the remoteEndpointSettings.endpoint property instead."
                        },
                        "cname": {
                          "type": "string",
                          "description": "Unique CNAME to represent the Azure Data Transfer API Flow instance"
                        },
                        "apiMode": {
                          "description": "Remote Calling Mode in the Azure Data Transfer API Flow, which describes how the API Flow will be invoked",
                          "type": "string",
                          "enum": [
                            "SDK",
                            "Endpoint"
                          ],
                          "x-ms-enum": {
                            "name": "ApiMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "SDK",
                                "value": "SDK",
                                "description": "The API flow will forward calls to a custom Software Development Kit implementation."
                              },
                              {
                                "name": "Endpoint",
                                "value": "Endpoint",
                                "description": "The API flow will forward calls to a specified endpoint."
                              }
                            ]
                          }
                        },
                        "identityTranslation": {
                          "description": "Determines which identity to use for extracting the user token for Azure Data Transfer API Flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead.",
                          "type": "string",
                          "enum": [
                            "UserIdentity",
                            "ServiceIdentity"
                          ],
                          "x-ms-enum": {
                            "name": "IdentityTranslation",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "UserIdentity",
                                "value": "UserIdentity",
                                "description": "The API flow will make use of the user identity that called this API flow, and pass that token through the boundary."
                              },
                              {
                                "name": "ServiceIdentity",
                                "value": "ServiceIdentity",
                                "description": "The API flow will make use of the Azure Data Transfer Flow managed identity on the other side of the boundary."
                              }
                            ]
                          }
                        },
                        "senderClientId": {
                          "type": "string",
                          "description": "Sender's app user assigned Manage Identity client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        },
                        "remoteCallingModeClientId": {
                          "type": "string",
                          "description": "Remote stub app registration Client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        },
                        "audienceOverride": {
                          "type": "string",
                          "description": "Optional field to override the audience of the remote endpoint. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        }
                      }
                    },
                    "customerManagedKeyVaultUri": {
                      "type": "string",
                      "format": "uri",
                      "description": "The URI to the customer managed key for this flow"
                    },
                    "streamId": {
                      "type": "string",
                      "description": "The flow stream identifier"
                    },
                    "streamProtocol": {
                      "description": "The protocol of the stream",
                      "type": "string",
                      "enum": [
                        "UDP",
                        "SRT",
                        "RTP"
                      ],
                      "x-ms-enum": {
                        "name": "StreamProtocol",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "UDP",
                            "value": "UDP",
                            "description": "This Flow is using User Datagram Protocol for the video stream."
                          },
                          {
                            "name": "SRT",
                            "value": "SRT",
                            "description": "This Flow is using Secure Reliable Transfer for the video stream."
                          },
                          {
                            "name": "RTP",
                            "value": "RTP",
                            "description": "This Flow is using Real-time Transport Protocol for the video stream."
                          }
                        ]
                      }
                    },
                    "streamLatency": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The latency of the stream in milliseconds"
                    },
                    "passphrase": {
                      "type": "string",
                      "description": "The passphrase used for SRT streams"
                    },
                    "sourceAddresses": {
                      "description": "The source IP address and CIDR ranges of the stream",
                      "type": "object",
                      "properties": {
                        "sourceAddresses": {
                          "type": "array",
                          "description": "A source IP address or CIDR range",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "destinationEndpoints": {
                      "type": "array",
                      "description": "The destination endpoints of the stream",
                      "items": {
                        "type": "string"
                      }
                    },
                    "destinationEndpointPorts": {
                      "type": "array",
                      "description": "The destination endpoint ports of the stream",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "eventHubId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Event Hub ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.EventHub/namespaces/eventhubs"
                          }
                        ]
                      }
                    },
                    "consumerGroup": {
                      "type": "string",
                      "description": "Event Hub Consumer Group"
                    }
                  }
                },
                "plan": {
                  "description": "Details of the resource plan.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "A user defined name of the 3rd Party Artifact that is being procured."
                    },
                    "publisher": {
                      "type": "string",
                      "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
                    },
                    "product": {
                      "type": "string",
                      "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
                    },
                    "promotionCode": {
                      "type": "string",
                      "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
                    },
                    "version": {
                      "type": "string",
                      "description": "The version of the desired product/artifact."
                    }
                  },
                  "required": [
                    "name",
                    "publisher",
                    "product"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/connections/{connectionName}/flows/{flowName}/setDestinationEndpoints": {
      "post": {
        "operationId": "Flows_SetDestinationEndpoints",
        "tags": [
          "Flows"
        ],
        "description": "Set the destination endpoints for the specified flow.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectionName",
            "in": "path",
            "description": "The name for the connection to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          },
          {
            "name": "flowName",
            "in": "path",
            "description": "The name for the flow to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          },
          {
            "name": "streamDestinationEndpoints",
            "in": "body",
            "description": "Destination endpoints wanted.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Set the destination endpoints for the specified flow.",
              "properties": {
                "endpoints": {
                  "type": "array",
                  "description": "The specified flow destination endpoints.",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The flow resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of flow",
                  "type": "object",
                  "properties": {
                    "connection": {
                      "description": "The connection associated with this flow",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the connection"
                        },
                        "id": {
                          "type": "string",
                          "description": "Id of the connection"
                        },
                        "location": {
                          "type": "string",
                          "description": "Location of the connection",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "subscriptionName": {
                          "type": "string",
                          "description": "Name of the subscription with the connection"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "flowId": {
                      "type": "string",
                      "description": "Dataflow GUID associated with this flow",
                      "readOnly": true
                    },
                    "keyVaultUri": {
                      "type": "string",
                      "description": "URI to a Key Vault Secret containing a SAS token."
                    },
                    "linkStatus": {
                      "description": "Link status of the current flow",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Linked",
                        "Unlinked"
                      ],
                      "x-ms-enum": {
                        "name": "LinkStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Linked",
                            "value": "Linked",
                            "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                          },
                          {
                            "name": "Unlinked",
                            "value": "Unlinked",
                            "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                          }
                        ]
                      }
                    },
                    "linkedFlowId": {
                      "type": "string",
                      "description": "Resource ID of the linked flow",
                      "readOnly": true
                    },
                    "status": {
                      "description": "Status of the current flow",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "FlowStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "The flow is currently enabled and able to send or receive data."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "The flow is currently disabled and cannot send or receive data."
                          }
                        ]
                      }
                    },
                    "forceDisabledStatus": {
                      "type": "array",
                      "description": "Force disablement status of the current flow",
                      "items": {
                        "type": "string",
                        "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                        "enum": [
                          "ConnectionForceDisabled",
                          "FlowTypeForceDisabled"
                        ],
                        "x-ms-enum": {
                          "name": "ForceDisabledStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "ConnectionForceDisabled",
                              "value": "ConnectionForceDisabled",
                              "description": "Defines disablement of a Flow due to the parent connection being disabled."
                            },
                            {
                              "name": "FlowTypeForceDisabled",
                              "value": "FlowTypeForceDisabled",
                              "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                            }
                          ]
                        }
                      },
                      "readOnly": true
                    },
                    "storageAccountName": {
                      "type": "string",
                      "description": "Storage Account"
                    },
                    "storageAccountId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Storage Account ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Storage/storageAccounts"
                          }
                        ]
                      }
                    },
                    "storageContainerName": {
                      "type": "string",
                      "description": "Storage Container Name"
                    },
                    "storageTableName": {
                      "type": "string",
                      "description": "Storage Table Name"
                    },
                    "serviceBusQueueId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Service Bus Queue ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Storage/namespaces/queues"
                          }
                        ]
                      }
                    },
                    "flowType": {
                      "type": "string",
                      "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                      "enum": [
                        "Unknown",
                        "Complex",
                        "DevSecOps",
                        "Messaging",
                        "Mission",
                        "MicrosoftInternal",
                        "BasicFiles",
                        "Data",
                        "Standard",
                        "StreamingVideo",
                        "Opaque",
                        "MissionOpaqueXML",
                        "DiskImages",
                        "API"
                      ],
                      "x-ms-enum": {
                        "name": "FlowType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "This type of flow is not set."
                          },
                          {
                            "name": "Complex",
                            "value": "Complex",
                            "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                          },
                          {
                            "name": "DevSecOps",
                            "value": "DevSecOps",
                            "description": "This flow sends source code files and artifacts."
                          },
                          {
                            "name": "Messaging",
                            "value": "Messaging",
                            "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                          },
                          {
                            "name": "Mission",
                            "value": "Mission",
                            "description": "This flow sends standard data but is subject to strict cloud owner approval."
                          },
                          {
                            "name": "MicrosoftInternal",
                            "value": "MicrosoftInternal",
                            "description": "This flow is assigned to internal Microsoft use cases."
                          },
                          {
                            "name": "BasicFiles",
                            "value": "BasicFiles",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "Data",
                            "value": "Data",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "Standard",
                            "value": "Standard",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "StreamingVideo",
                            "value": "StreamingVideo",
                            "description": "This flow sends video streams."
                          },
                          {
                            "name": "Opaque",
                            "value": "Opaque",
                            "description": "This flow sends blobs but is subject to cloud owner approval."
                          },
                          {
                            "name": "MissionOpaqueXML",
                            "value": "MissionOpaqueXML",
                            "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                          },
                          {
                            "name": "DiskImages",
                            "value": "DiskImages",
                            "description": "This flow sends blobs that can be used for Virtual Machines."
                          },
                          {
                            "name": "API",
                            "value": "API",
                            "description": "This flow sends data via an Application Programmer Interface."
                          }
                        ]
                      }
                    },
                    "dataType": {
                      "description": "Type of data to transfer via the flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "type": "string",
                      "enum": [
                        "Blob",
                        "Table"
                      ],
                      "x-ms-enum": {
                        "name": "DataType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Blob",
                            "value": "Blob",
                            "description": "The flow uses Azure Storage blobs to send or receive data."
                          },
                          {
                            "name": "Table",
                            "value": "Table",
                            "description": "The flow uses Azure Storage tables to send or receive data."
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the flow",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been accepted for creation."
                          }
                        ]
                      }
                    },
                    "policies": {
                      "type": "array",
                      "description": "The policies for this flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "schema": {
                      "type": "object",
                      "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "ID associated with this schema"
                        },
                        "connectionId": {
                          "type": "string",
                          "description": "Connection ID associated with this schema"
                        },
                        "status": {
                          "description": "Status of the schema",
                          "type": "string",
                          "enum": [
                            "New",
                            "Approved"
                          ],
                          "x-ms-enum": {
                            "name": "SchemaStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "New",
                                "value": "New",
                                "description": "A schema that has not been approved and is awaiting review."
                              },
                              {
                                "name": "Approved",
                                "value": "Approved",
                                "description": "A schema that has been approved and is ready for use."
                              }
                            ]
                          }
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the schema"
                        },
                        "content": {
                          "type": "string",
                          "description": "Content of the schema"
                        },
                        "direction": {
                          "description": "The direction of the schema.",
                          "type": "string",
                          "enum": [
                            "Send",
                            "Receive"
                          ],
                          "x-ms-enum": {
                            "name": "Direction",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Send",
                                "value": "Send",
                                "description": "The direction is on the sending side of a pipeline, connection, or flow."
                              },
                              {
                                "name": "Receive",
                                "value": "Receive",
                                "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                              }
                            ]
                          }
                        },
                        "schemaUri": {
                          "type": "string",
                          "format": "uri",
                          "description": "Uri containing SAS token for the zipped schema"
                        },
                        "schemaType": {
                          "description": "The Schema Type",
                          "type": "string",
                          "enum": [
                            "Xsd",
                            "Zip"
                          ],
                          "x-ms-enum": {
                            "name": "SchemaType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Xsd",
                                "value": "Xsd",
                                "description": "The schema represents a single XML schema definition file."
                              },
                              {
                                "name": "Zip",
                                "value": "Zip",
                                "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "messagingOptions": {
                      "description": "The messaging options for this flow",
                      "type": "object",
                      "properties": {
                        "billingTier": {
                          "description": "Billing tier for this messaging flow",
                          "type": "string",
                          "enum": [
                            "BlobTransport",
                            "Standard",
                            "Premium"
                          ],
                          "x-ms-enum": {
                            "name": "FlowBillingTier",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "BlobTransport",
                                "value": "BlobTransport",
                                "description": "Billing tier for messaging processing that charges based on how much data is transferred."
                              },
                              {
                                "name": "Standard",
                                "value": "Standard",
                                "description": "Billing tier for standard messaging processing that charges based on having the messaging resource allocated."
                              },
                              {
                                "name": "Premium",
                                "value": "Premium",
                                "description": "Billing tier for premium messaging processing that charges based on having the messaging resource allocated."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "apiFlowOptions": {
                      "description": "The API Flow configuration options for Azure Data Transfer API Flow type.",
                      "type": "object",
                      "properties": {
                        "remoteEndpoint": {
                          "type": "string",
                          "description": "Remote host to which communication needs to be made. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the remoteEndpointSettings.endpoint property instead."
                        },
                        "cname": {
                          "type": "string",
                          "description": "Unique CNAME to represent the Azure Data Transfer API Flow instance"
                        },
                        "apiMode": {
                          "description": "Remote Calling Mode in the Azure Data Transfer API Flow, which describes how the API Flow will be invoked",
                          "type": "string",
                          "enum": [
                            "SDK",
                            "Endpoint"
                          ],
                          "x-ms-enum": {
                            "name": "ApiMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "SDK",
                                "value": "SDK",
                                "description": "The API flow will forward calls to a custom Software Development Kit implementation."
                              },
                              {
                                "name": "Endpoint",
                                "value": "Endpoint",
                                "description": "The API flow will forward calls to a specified endpoint."
                              }
                            ]
                          }
                        },
                        "identityTranslation": {
                          "description": "Determines which identity to use for extracting the user token for Azure Data Transfer API Flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead.",
                          "type": "string",
                          "enum": [
                            "UserIdentity",
                            "ServiceIdentity"
                          ],
                          "x-ms-enum": {
                            "name": "IdentityTranslation",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "UserIdentity",
                                "value": "UserIdentity",
                                "description": "The API flow will make use of the user identity that called this API flow, and pass that token through the boundary."
                              },
                              {
                                "name": "ServiceIdentity",
                                "value": "ServiceIdentity",
                                "description": "The API flow will make use of the Azure Data Transfer Flow managed identity on the other side of the boundary."
                              }
                            ]
                          }
                        },
                        "senderClientId": {
                          "type": "string",
                          "description": "Sender's app user assigned Manage Identity client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        },
                        "remoteCallingModeClientId": {
                          "type": "string",
                          "description": "Remote stub app registration Client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        },
                        "audienceOverride": {
                          "type": "string",
                          "description": "Optional field to override the audience of the remote endpoint. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        }
                      }
                    },
                    "customerManagedKeyVaultUri": {
                      "type": "string",
                      "format": "uri",
                      "description": "The URI to the customer managed key for this flow"
                    },
                    "streamId": {
                      "type": "string",
                      "description": "The flow stream identifier"
                    },
                    "streamProtocol": {
                      "description": "The protocol of the stream",
                      "type": "string",
                      "enum": [
                        "UDP",
                        "SRT",
                        "RTP"
                      ],
                      "x-ms-enum": {
                        "name": "StreamProtocol",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "UDP",
                            "value": "UDP",
                            "description": "This Flow is using User Datagram Protocol for the video stream."
                          },
                          {
                            "name": "SRT",
                            "value": "SRT",
                            "description": "This Flow is using Secure Reliable Transfer for the video stream."
                          },
                          {
                            "name": "RTP",
                            "value": "RTP",
                            "description": "This Flow is using Real-time Transport Protocol for the video stream."
                          }
                        ]
                      }
                    },
                    "streamLatency": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The latency of the stream in milliseconds"
                    },
                    "passphrase": {
                      "type": "string",
                      "description": "The passphrase used for SRT streams"
                    },
                    "sourceAddresses": {
                      "description": "The source IP address and CIDR ranges of the stream",
                      "type": "object",
                      "properties": {
                        "sourceAddresses": {
                          "type": "array",
                          "description": "A source IP address or CIDR range",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "destinationEndpoints": {
                      "type": "array",
                      "description": "The destination endpoints of the stream",
                      "items": {
                        "type": "string"
                      }
                    },
                    "destinationEndpointPorts": {
                      "type": "array",
                      "description": "The destination endpoint ports of the stream",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "eventHubId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Event Hub ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.EventHub/namespaces/eventhubs"
                          }
                        ]
                      }
                    },
                    "consumerGroup": {
                      "type": "string",
                      "description": "Event Hub Consumer Group"
                    }
                  }
                },
                "plan": {
                  "description": "Details of the resource plan.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "A user defined name of the 3rd Party Artifact that is being procured."
                    },
                    "publisher": {
                      "type": "string",
                      "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
                    },
                    "product": {
                      "type": "string",
                      "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
                    },
                    "promotionCode": {
                      "type": "string",
                      "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
                    },
                    "version": {
                      "type": "string",
                      "description": "The version of the desired product/artifact."
                    }
                  },
                  "required": [
                    "name",
                    "publisher",
                    "product"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/connections/{connectionName}/flows/{flowName}/setPassphrase": {
      "post": {
        "operationId": "Flows_SetPassphrase",
        "tags": [
          "Flows"
        ],
        "description": "Sets the passphrase of the specified flow.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectionName",
            "in": "path",
            "description": "The name for the connection to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          },
          {
            "name": "flowName",
            "in": "path",
            "description": "The name for the flow to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          },
          {
            "name": "passphrase",
            "in": "body",
            "description": "Passphrase to set",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Set the passphrase used for SRT streams",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "The passphrase used for SRT streams"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The flow resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of flow",
                  "type": "object",
                  "properties": {
                    "connection": {
                      "description": "The connection associated with this flow",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the connection"
                        },
                        "id": {
                          "type": "string",
                          "description": "Id of the connection"
                        },
                        "location": {
                          "type": "string",
                          "description": "Location of the connection",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "subscriptionName": {
                          "type": "string",
                          "description": "Name of the subscription with the connection"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "flowId": {
                      "type": "string",
                      "description": "Dataflow GUID associated with this flow",
                      "readOnly": true
                    },
                    "keyVaultUri": {
                      "type": "string",
                      "description": "URI to a Key Vault Secret containing a SAS token."
                    },
                    "linkStatus": {
                      "description": "Link status of the current flow",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Linked",
                        "Unlinked"
                      ],
                      "x-ms-enum": {
                        "name": "LinkStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Linked",
                            "value": "Linked",
                            "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                          },
                          {
                            "name": "Unlinked",
                            "value": "Unlinked",
                            "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                          }
                        ]
                      }
                    },
                    "linkedFlowId": {
                      "type": "string",
                      "description": "Resource ID of the linked flow",
                      "readOnly": true
                    },
                    "status": {
                      "description": "Status of the current flow",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "FlowStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "The flow is currently enabled and able to send or receive data."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "The flow is currently disabled and cannot send or receive data."
                          }
                        ]
                      }
                    },
                    "forceDisabledStatus": {
                      "type": "array",
                      "description": "Force disablement status of the current flow",
                      "items": {
                        "type": "string",
                        "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                        "enum": [
                          "ConnectionForceDisabled",
                          "FlowTypeForceDisabled"
                        ],
                        "x-ms-enum": {
                          "name": "ForceDisabledStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "ConnectionForceDisabled",
                              "value": "ConnectionForceDisabled",
                              "description": "Defines disablement of a Flow due to the parent connection being disabled."
                            },
                            {
                              "name": "FlowTypeForceDisabled",
                              "value": "FlowTypeForceDisabled",
                              "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                            }
                          ]
                        }
                      },
                      "readOnly": true
                    },
                    "storageAccountName": {
                      "type": "string",
                      "description": "Storage Account"
                    },
                    "storageAccountId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Storage Account ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Storage/storageAccounts"
                          }
                        ]
                      }
                    },
                    "storageContainerName": {
                      "type": "string",
                      "description": "Storage Container Name"
                    },
                    "storageTableName": {
                      "type": "string",
                      "description": "Storage Table Name"
                    },
                    "serviceBusQueueId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Service Bus Queue ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Storage/namespaces/queues"
                          }
                        ]
                      }
                    },
                    "flowType": {
                      "type": "string",
                      "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                      "enum": [
                        "Unknown",
                        "Complex",
                        "DevSecOps",
                        "Messaging",
                        "Mission",
                        "MicrosoftInternal",
                        "BasicFiles",
                        "Data",
                        "Standard",
                        "StreamingVideo",
                        "Opaque",
                        "MissionOpaqueXML",
                        "DiskImages",
                        "API"
                      ],
                      "x-ms-enum": {
                        "name": "FlowType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "This type of flow is not set."
                          },
                          {
                            "name": "Complex",
                            "value": "Complex",
                            "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                          },
                          {
                            "name": "DevSecOps",
                            "value": "DevSecOps",
                            "description": "This flow sends source code files and artifacts."
                          },
                          {
                            "name": "Messaging",
                            "value": "Messaging",
                            "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                          },
                          {
                            "name": "Mission",
                            "value": "Mission",
                            "description": "This flow sends standard data but is subject to strict cloud owner approval."
                          },
                          {
                            "name": "MicrosoftInternal",
                            "value": "MicrosoftInternal",
                            "description": "This flow is assigned to internal Microsoft use cases."
                          },
                          {
                            "name": "BasicFiles",
                            "value": "BasicFiles",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "Data",
                            "value": "Data",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "Standard",
                            "value": "Standard",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "StreamingVideo",
                            "value": "StreamingVideo",
                            "description": "This flow sends video streams."
                          },
                          {
                            "name": "Opaque",
                            "value": "Opaque",
                            "description": "This flow sends blobs but is subject to cloud owner approval."
                          },
                          {
                            "name": "MissionOpaqueXML",
                            "value": "MissionOpaqueXML",
                            "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                          },
                          {
                            "name": "DiskImages",
                            "value": "DiskImages",
                            "description": "This flow sends blobs that can be used for Virtual Machines."
                          },
                          {
                            "name": "API",
                            "value": "API",
                            "description": "This flow sends data via an Application Programmer Interface."
                          }
                        ]
                      }
                    },
                    "dataType": {
                      "description": "Type of data to transfer via the flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "type": "string",
                      "enum": [
                        "Blob",
                        "Table"
                      ],
                      "x-ms-enum": {
                        "name": "DataType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Blob",
                            "value": "Blob",
                            "description": "The flow uses Azure Storage blobs to send or receive data."
                          },
                          {
                            "name": "Table",
                            "value": "Table",
                            "description": "The flow uses Azure Storage tables to send or receive data."
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the flow",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been accepted for creation."
                          }
                        ]
                      }
                    },
                    "policies": {
                      "type": "array",
                      "description": "The policies for this flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "schema": {
                      "type": "object",
                      "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "ID associated with this schema"
                        },
                        "connectionId": {
                          "type": "string",
                          "description": "Connection ID associated with this schema"
                        },
                        "status": {
                          "description": "Status of the schema",
                          "type": "string",
                          "enum": [
                            "New",
                            "Approved"
                          ],
                          "x-ms-enum": {
                            "name": "SchemaStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "New",
                                "value": "New",
                                "description": "A schema that has not been approved and is awaiting review."
                              },
                              {
                                "name": "Approved",
                                "value": "Approved",
                                "description": "A schema that has been approved and is ready for use."
                              }
                            ]
                          }
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the schema"
                        },
                        "content": {
                          "type": "string",
                          "description": "Content of the schema"
                        },
                        "direction": {
                          "description": "The direction of the schema.",
                          "type": "string",
                          "enum": [
                            "Send",
                            "Receive"
                          ],
                          "x-ms-enum": {
                            "name": "Direction",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Send",
                                "value": "Send",
                                "description": "The direction is on the sending side of a pipeline, connection, or flow."
                              },
                              {
                                "name": "Receive",
                                "value": "Receive",
                                "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                              }
                            ]
                          }
                        },
                        "schemaUri": {
                          "type": "string",
                          "format": "uri",
                          "description": "Uri containing SAS token for the zipped schema"
                        },
                        "schemaType": {
                          "description": "The Schema Type",
                          "type": "string",
                          "enum": [
                            "Xsd",
                            "Zip"
                          ],
                          "x-ms-enum": {
                            "name": "SchemaType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Xsd",
                                "value": "Xsd",
                                "description": "The schema represents a single XML schema definition file."
                              },
                              {
                                "name": "Zip",
                                "value": "Zip",
                                "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "messagingOptions": {
                      "description": "The messaging options for this flow",
                      "type": "object",
                      "properties": {
                        "billingTier": {
                          "description": "Billing tier for this messaging flow",
                          "type": "string",
                          "enum": [
                            "BlobTransport",
                            "Standard",
                            "Premium"
                          ],
                          "x-ms-enum": {
                            "name": "FlowBillingTier",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "BlobTransport",
                                "value": "BlobTransport",
                                "description": "Billing tier for messaging processing that charges based on how much data is transferred."
                              },
                              {
                                "name": "Standard",
                                "value": "Standard",
                                "description": "Billing tier for standard messaging processing that charges based on having the messaging resource allocated."
                              },
                              {
                                "name": "Premium",
                                "value": "Premium",
                                "description": "Billing tier for premium messaging processing that charges based on having the messaging resource allocated."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "apiFlowOptions": {
                      "description": "The API Flow configuration options for Azure Data Transfer API Flow type.",
                      "type": "object",
                      "properties": {
                        "remoteEndpoint": {
                          "type": "string",
                          "description": "Remote host to which communication needs to be made. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the remoteEndpointSettings.endpoint property instead."
                        },
                        "cname": {
                          "type": "string",
                          "description": "Unique CNAME to represent the Azure Data Transfer API Flow instance"
                        },
                        "apiMode": {
                          "description": "Remote Calling Mode in the Azure Data Transfer API Flow, which describes how the API Flow will be invoked",
                          "type": "string",
                          "enum": [
                            "SDK",
                            "Endpoint"
                          ],
                          "x-ms-enum": {
                            "name": "ApiMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "SDK",
                                "value": "SDK",
                                "description": "The API flow will forward calls to a custom Software Development Kit implementation."
                              },
                              {
                                "name": "Endpoint",
                                "value": "Endpoint",
                                "description": "The API flow will forward calls to a specified endpoint."
                              }
                            ]
                          }
                        },
                        "identityTranslation": {
                          "description": "Determines which identity to use for extracting the user token for Azure Data Transfer API Flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead.",
                          "type": "string",
                          "enum": [
                            "UserIdentity",
                            "ServiceIdentity"
                          ],
                          "x-ms-enum": {
                            "name": "IdentityTranslation",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "UserIdentity",
                                "value": "UserIdentity",
                                "description": "The API flow will make use of the user identity that called this API flow, and pass that token through the boundary."
                              },
                              {
                                "name": "ServiceIdentity",
                                "value": "ServiceIdentity",
                                "description": "The API flow will make use of the Azure Data Transfer Flow managed identity on the other side of the boundary."
                              }
                            ]
                          }
                        },
                        "senderClientId": {
                          "type": "string",
                          "description": "Sender's app user assigned Manage Identity client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        },
                        "remoteCallingModeClientId": {
                          "type": "string",
                          "description": "Remote stub app registration Client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        },
                        "audienceOverride": {
                          "type": "string",
                          "description": "Optional field to override the audience of the remote endpoint. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        }
                      }
                    },
                    "customerManagedKeyVaultUri": {
                      "type": "string",
                      "format": "uri",
                      "description": "The URI to the customer managed key for this flow"
                    },
                    "streamId": {
                      "type": "string",
                      "description": "The flow stream identifier"
                    },
                    "streamProtocol": {
                      "description": "The protocol of the stream",
                      "type": "string",
                      "enum": [
                        "UDP",
                        "SRT",
                        "RTP"
                      ],
                      "x-ms-enum": {
                        "name": "StreamProtocol",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "UDP",
                            "value": "UDP",
                            "description": "This Flow is using User Datagram Protocol for the video stream."
                          },
                          {
                            "name": "SRT",
                            "value": "SRT",
                            "description": "This Flow is using Secure Reliable Transfer for the video stream."
                          },
                          {
                            "name": "RTP",
                            "value": "RTP",
                            "description": "This Flow is using Real-time Transport Protocol for the video stream."
                          }
                        ]
                      }
                    },
                    "streamLatency": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The latency of the stream in milliseconds"
                    },
                    "passphrase": {
                      "type": "string",
                      "description": "The passphrase used for SRT streams"
                    },
                    "sourceAddresses": {
                      "description": "The source IP address and CIDR ranges of the stream",
                      "type": "object",
                      "properties": {
                        "sourceAddresses": {
                          "type": "array",
                          "description": "A source IP address or CIDR range",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "destinationEndpoints": {
                      "type": "array",
                      "description": "The destination endpoints of the stream",
                      "items": {
                        "type": "string"
                      }
                    },
                    "destinationEndpointPorts": {
                      "type": "array",
                      "description": "The destination endpoint ports of the stream",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "eventHubId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Event Hub ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.EventHub/namespaces/eventhubs"
                          }
                        ]
                      }
                    },
                    "consumerGroup": {
                      "type": "string",
                      "description": "Event Hub Consumer Group"
                    }
                  }
                },
                "plan": {
                  "description": "Details of the resource plan.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "A user defined name of the 3rd Party Artifact that is being procured."
                    },
                    "publisher": {
                      "type": "string",
                      "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
                    },
                    "product": {
                      "type": "string",
                      "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
                    },
                    "promotionCode": {
                      "type": "string",
                      "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
                    },
                    "version": {
                      "type": "string",
                      "description": "The version of the desired product/artifact."
                    }
                  },
                  "required": [
                    "name",
                    "publisher",
                    "product"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/connections/{connectionName}/flows/{flowName}/setSourceAddresses": {
      "post": {
        "operationId": "Flows_SetSourceAddresses",
        "tags": [
          "Flows"
        ],
        "description": "Set the source addresses for the specified flow.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectionName",
            "in": "path",
            "description": "The name for the connection to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          },
          {
            "name": "flowName",
            "in": "path",
            "description": "The name for the flow to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          },
          {
            "name": "sourceAddresses",
            "in": "body",
            "description": "Source addresses wanted",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Set the source addresses for the specified flow.",
              "properties": {
                "values": {
                  "type": "array",
                  "description": "Source addresses",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The flow resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of flow",
                  "type": "object",
                  "properties": {
                    "connection": {
                      "description": "The connection associated with this flow",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the connection"
                        },
                        "id": {
                          "type": "string",
                          "description": "Id of the connection"
                        },
                        "location": {
                          "type": "string",
                          "description": "Location of the connection",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "subscriptionName": {
                          "type": "string",
                          "description": "Name of the subscription with the connection"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "flowId": {
                      "type": "string",
                      "description": "Dataflow GUID associated with this flow",
                      "readOnly": true
                    },
                    "keyVaultUri": {
                      "type": "string",
                      "description": "URI to a Key Vault Secret containing a SAS token."
                    },
                    "linkStatus": {
                      "description": "Link status of the current flow",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Linked",
                        "Unlinked"
                      ],
                      "x-ms-enum": {
                        "name": "LinkStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Linked",
                            "value": "Linked",
                            "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                          },
                          {
                            "name": "Unlinked",
                            "value": "Unlinked",
                            "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                          }
                        ]
                      }
                    },
                    "linkedFlowId": {
                      "type": "string",
                      "description": "Resource ID of the linked flow",
                      "readOnly": true
                    },
                    "status": {
                      "description": "Status of the current flow",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "FlowStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "The flow is currently enabled and able to send or receive data."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "The flow is currently disabled and cannot send or receive data."
                          }
                        ]
                      }
                    },
                    "forceDisabledStatus": {
                      "type": "array",
                      "description": "Force disablement status of the current flow",
                      "items": {
                        "type": "string",
                        "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                        "enum": [
                          "ConnectionForceDisabled",
                          "FlowTypeForceDisabled"
                        ],
                        "x-ms-enum": {
                          "name": "ForceDisabledStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "ConnectionForceDisabled",
                              "value": "ConnectionForceDisabled",
                              "description": "Defines disablement of a Flow due to the parent connection being disabled."
                            },
                            {
                              "name": "FlowTypeForceDisabled",
                              "value": "FlowTypeForceDisabled",
                              "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                            }
                          ]
                        }
                      },
                      "readOnly": true
                    },
                    "storageAccountName": {
                      "type": "string",
                      "description": "Storage Account"
                    },
                    "storageAccountId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Storage Account ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Storage/storageAccounts"
                          }
                        ]
                      }
                    },
                    "storageContainerName": {
                      "type": "string",
                      "description": "Storage Container Name"
                    },
                    "storageTableName": {
                      "type": "string",
                      "description": "Storage Table Name"
                    },
                    "serviceBusQueueId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Service Bus Queue ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Storage/namespaces/queues"
                          }
                        ]
                      }
                    },
                    "flowType": {
                      "type": "string",
                      "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                      "enum": [
                        "Unknown",
                        "Complex",
                        "DevSecOps",
                        "Messaging",
                        "Mission",
                        "MicrosoftInternal",
                        "BasicFiles",
                        "Data",
                        "Standard",
                        "StreamingVideo",
                        "Opaque",
                        "MissionOpaqueXML",
                        "DiskImages",
                        "API"
                      ],
                      "x-ms-enum": {
                        "name": "FlowType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "This type of flow is not set."
                          },
                          {
                            "name": "Complex",
                            "value": "Complex",
                            "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                          },
                          {
                            "name": "DevSecOps",
                            "value": "DevSecOps",
                            "description": "This flow sends source code files and artifacts."
                          },
                          {
                            "name": "Messaging",
                            "value": "Messaging",
                            "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                          },
                          {
                            "name": "Mission",
                            "value": "Mission",
                            "description": "This flow sends standard data but is subject to strict cloud owner approval."
                          },
                          {
                            "name": "MicrosoftInternal",
                            "value": "MicrosoftInternal",
                            "description": "This flow is assigned to internal Microsoft use cases."
                          },
                          {
                            "name": "BasicFiles",
                            "value": "BasicFiles",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "Data",
                            "value": "Data",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "Standard",
                            "value": "Standard",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "StreamingVideo",
                            "value": "StreamingVideo",
                            "description": "This flow sends video streams."
                          },
                          {
                            "name": "Opaque",
                            "value": "Opaque",
                            "description": "This flow sends blobs but is subject to cloud owner approval."
                          },
                          {
                            "name": "MissionOpaqueXML",
                            "value": "MissionOpaqueXML",
                            "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                          },
                          {
                            "name": "DiskImages",
                            "value": "DiskImages",
                            "description": "This flow sends blobs that can be used for Virtual Machines."
                          },
                          {
                            "name": "API",
                            "value": "API",
                            "description": "This flow sends data via an Application Programmer Interface."
                          }
                        ]
                      }
                    },
                    "dataType": {
                      "description": "Type of data to transfer via the flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "type": "string",
                      "enum": [
                        "Blob",
                        "Table"
                      ],
                      "x-ms-enum": {
                        "name": "DataType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Blob",
                            "value": "Blob",
                            "description": "The flow uses Azure Storage blobs to send or receive data."
                          },
                          {
                            "name": "Table",
                            "value": "Table",
                            "description": "The flow uses Azure Storage tables to send or receive data."
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the flow",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been accepted for creation."
                          }
                        ]
                      }
                    },
                    "policies": {
                      "type": "array",
                      "description": "The policies for this flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "schema": {
                      "type": "object",
                      "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "ID associated with this schema"
                        },
                        "connectionId": {
                          "type": "string",
                          "description": "Connection ID associated with this schema"
                        },
                        "status": {
                          "description": "Status of the schema",
                          "type": "string",
                          "enum": [
                            "New",
                            "Approved"
                          ],
                          "x-ms-enum": {
                            "name": "SchemaStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "New",
                                "value": "New",
                                "description": "A schema that has not been approved and is awaiting review."
                              },
                              {
                                "name": "Approved",
                                "value": "Approved",
                                "description": "A schema that has been approved and is ready for use."
                              }
                            ]
                          }
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the schema"
                        },
                        "content": {
                          "type": "string",
                          "description": "Content of the schema"
                        },
                        "direction": {
                          "description": "The direction of the schema.",
                          "type": "string",
                          "enum": [
                            "Send",
                            "Receive"
                          ],
                          "x-ms-enum": {
                            "name": "Direction",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Send",
                                "value": "Send",
                                "description": "The direction is on the sending side of a pipeline, connection, or flow."
                              },
                              {
                                "name": "Receive",
                                "value": "Receive",
                                "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                              }
                            ]
                          }
                        },
                        "schemaUri": {
                          "type": "string",
                          "format": "uri",
                          "description": "Uri containing SAS token for the zipped schema"
                        },
                        "schemaType": {
                          "description": "The Schema Type",
                          "type": "string",
                          "enum": [
                            "Xsd",
                            "Zip"
                          ],
                          "x-ms-enum": {
                            "name": "SchemaType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Xsd",
                                "value": "Xsd",
                                "description": "The schema represents a single XML schema definition file."
                              },
                              {
                                "name": "Zip",
                                "value": "Zip",
                                "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "messagingOptions": {
                      "description": "The messaging options for this flow",
                      "type": "object",
                      "properties": {
                        "billingTier": {
                          "description": "Billing tier for this messaging flow",
                          "type": "string",
                          "enum": [
                            "BlobTransport",
                            "Standard",
                            "Premium"
                          ],
                          "x-ms-enum": {
                            "name": "FlowBillingTier",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "BlobTransport",
                                "value": "BlobTransport",
                                "description": "Billing tier for messaging processing that charges based on how much data is transferred."
                              },
                              {
                                "name": "Standard",
                                "value": "Standard",
                                "description": "Billing tier for standard messaging processing that charges based on having the messaging resource allocated."
                              },
                              {
                                "name": "Premium",
                                "value": "Premium",
                                "description": "Billing tier for premium messaging processing that charges based on having the messaging resource allocated."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "apiFlowOptions": {
                      "description": "The API Flow configuration options for Azure Data Transfer API Flow type.",
                      "type": "object",
                      "properties": {
                        "remoteEndpoint": {
                          "type": "string",
                          "description": "Remote host to which communication needs to be made. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the remoteEndpointSettings.endpoint property instead."
                        },
                        "cname": {
                          "type": "string",
                          "description": "Unique CNAME to represent the Azure Data Transfer API Flow instance"
                        },
                        "apiMode": {
                          "description": "Remote Calling Mode in the Azure Data Transfer API Flow, which describes how the API Flow will be invoked",
                          "type": "string",
                          "enum": [
                            "SDK",
                            "Endpoint"
                          ],
                          "x-ms-enum": {
                            "name": "ApiMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "SDK",
                                "value": "SDK",
                                "description": "The API flow will forward calls to a custom Software Development Kit implementation."
                              },
                              {
                                "name": "Endpoint",
                                "value": "Endpoint",
                                "description": "The API flow will forward calls to a specified endpoint."
                              }
                            ]
                          }
                        },
                        "identityTranslation": {
                          "description": "Determines which identity to use for extracting the user token for Azure Data Transfer API Flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead.",
                          "type": "string",
                          "enum": [
                            "UserIdentity",
                            "ServiceIdentity"
                          ],
                          "x-ms-enum": {
                            "name": "IdentityTranslation",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "UserIdentity",
                                "value": "UserIdentity",
                                "description": "The API flow will make use of the user identity that called this API flow, and pass that token through the boundary."
                              },
                              {
                                "name": "ServiceIdentity",
                                "value": "ServiceIdentity",
                                "description": "The API flow will make use of the Azure Data Transfer Flow managed identity on the other side of the boundary."
                              }
                            ]
                          }
                        },
                        "senderClientId": {
                          "type": "string",
                          "description": "Sender's app user assigned Manage Identity client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        },
                        "remoteCallingModeClientId": {
                          "type": "string",
                          "description": "Remote stub app registration Client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        },
                        "audienceOverride": {
                          "type": "string",
                          "description": "Optional field to override the audience of the remote endpoint. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                        }
                      }
                    },
                    "customerManagedKeyVaultUri": {
                      "type": "string",
                      "format": "uri",
                      "description": "The URI to the customer managed key for this flow"
                    },
                    "streamId": {
                      "type": "string",
                      "description": "The flow stream identifier"
                    },
                    "streamProtocol": {
                      "description": "The protocol of the stream",
                      "type": "string",
                      "enum": [
                        "UDP",
                        "SRT",
                        "RTP"
                      ],
                      "x-ms-enum": {
                        "name": "StreamProtocol",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "UDP",
                            "value": "UDP",
                            "description": "This Flow is using User Datagram Protocol for the video stream."
                          },
                          {
                            "name": "SRT",
                            "value": "SRT",
                            "description": "This Flow is using Secure Reliable Transfer for the video stream."
                          },
                          {
                            "name": "RTP",
                            "value": "RTP",
                            "description": "This Flow is using Real-time Transport Protocol for the video stream."
                          }
                        ]
                      }
                    },
                    "streamLatency": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The latency of the stream in milliseconds"
                    },
                    "passphrase": {
                      "type": "string",
                      "description": "The passphrase used for SRT streams"
                    },
                    "sourceAddresses": {
                      "description": "The source IP address and CIDR ranges of the stream",
                      "type": "object",
                      "properties": {
                        "sourceAddresses": {
                          "type": "array",
                          "description": "A source IP address or CIDR range",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "destinationEndpoints": {
                      "type": "array",
                      "description": "The destination endpoints of the stream",
                      "items": {
                        "type": "string"
                      }
                    },
                    "destinationEndpointPorts": {
                      "type": "array",
                      "description": "The destination endpoint ports of the stream",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "eventHubId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Event Hub ID",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.EventHub/namespaces/eventhubs"
                          }
                        ]
                      }
                    },
                    "consumerGroup": {
                      "type": "string",
                      "description": "Event Hub Consumer Group"
                    }
                  }
                },
                "plan": {
                  "description": "Details of the resource plan.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "A user defined name of the 3rd Party Artifact that is being procured."
                    },
                    "publisher": {
                      "type": "string",
                      "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
                    },
                    "product": {
                      "type": "string",
                      "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
                    },
                    "promotionCode": {
                      "type": "string",
                      "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
                    },
                    "version": {
                      "type": "string",
                      "description": "The version of the desired product/artifact."
                    }
                  },
                  "required": [
                    "name",
                    "publisher",
                    "product"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/connections/{connectionName}/link": {
      "post": {
        "operationId": "Connections_Link",
        "tags": [
          "Connections"
        ],
        "description": "Links the connection to its pending connection.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectionName",
            "in": "path",
            "description": "The name for the connection to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          },
          {
            "name": "connection",
            "in": "body",
            "description": "Connection body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The resource to reference.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "ID of the resource."
                },
                "statusReason": {
                  "type": "string",
                  "description": "Reason for resource operation."
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The connection resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of connection",
                  "type": "object",
                  "properties": {
                    "pipeline": {
                      "type": "string",
                      "description": "Pipeline to use to transfer data"
                    },
                    "direction": {
                      "description": "Direction of data movement",
                      "type": "string",
                      "enum": [
                        "Send",
                        "Receive"
                      ],
                      "x-ms-enum": {
                        "name": "Direction",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Send",
                            "value": "Send",
                            "description": "The direction is on the sending side of a pipeline, connection, or flow."
                          },
                          {
                            "name": "Receive",
                            "value": "Receive",
                            "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                          }
                        ]
                      }
                    },
                    "justification": {
                      "type": "string",
                      "description": "Justification for the connection request"
                    },
                    "status": {
                      "description": "Status of the connection",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "InReview",
                        "Approved",
                        "Rejected",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ConnectionStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "InReview",
                            "value": "InReview",
                            "description": "This connection has been created but is under review by the pipeline owner."
                          },
                          {
                            "name": "Approved",
                            "value": "Approved",
                            "description": "This connection has been approved by the pipeline owner and is ready for use."
                          },
                          {
                            "name": "Rejected",
                            "value": "Rejected",
                            "description": "This connection has been rejected by the pipeline owner and cannot be used."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Creation of the connection has been accepted."
                          }
                        ]
                      }
                    },
                    "forceDisabledStatus": {
                      "type": "array",
                      "description": "Force disablement status of the current connection",
                      "items": {
                        "type": "string",
                        "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                        "enum": [
                          "ConnectionForceDisabled",
                          "FlowTypeForceDisabled"
                        ],
                        "x-ms-enum": {
                          "name": "ForceDisabledStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "ConnectionForceDisabled",
                              "value": "ConnectionForceDisabled",
                              "description": "Defines disablement of a Flow due to the parent connection being disabled."
                            },
                            {
                              "name": "FlowTypeForceDisabled",
                              "value": "FlowTypeForceDisabled",
                              "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                            }
                          ]
                        }
                      },
                      "readOnly": true
                    },
                    "statusReason": {
                      "type": "string",
                      "description": "Reason for status",
                      "readOnly": true
                    },
                    "linkStatus": {
                      "description": "Link status of the current connection",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Linked",
                        "Unlinked"
                      ],
                      "x-ms-enum": {
                        "name": "LinkStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Linked",
                            "value": "Linked",
                            "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                          },
                          {
                            "name": "Unlinked",
                            "value": "Unlinked",
                            "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                          }
                        ]
                      }
                    },
                    "linkedConnectionId": {
                      "type": "string",
                      "description": "Resource ID of the linked connection",
                      "readOnly": true
                    },
                    "flowTypes": {
                      "type": "array",
                      "description": "The flow types being requested for this connection. This FlowType property has reached end of life support starting version 2025-05-30-preview. Please create a FlowProfile resource instead.",
                      "items": {
                        "type": "string",
                        "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                        "enum": [
                          "Unknown",
                          "Complex",
                          "DevSecOps",
                          "Messaging",
                          "Mission",
                          "MicrosoftInternal",
                          "BasicFiles",
                          "Data",
                          "Standard",
                          "StreamingVideo",
                          "Opaque",
                          "MissionOpaqueXML",
                          "DiskImages",
                          "API"
                        ],
                        "x-ms-enum": {
                          "name": "FlowType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Unknown",
                              "value": "Unknown",
                              "description": "This type of flow is not set."
                            },
                            {
                              "name": "Complex",
                              "value": "Complex",
                              "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                            },
                            {
                              "name": "DevSecOps",
                              "value": "DevSecOps",
                              "description": "This flow sends source code files and artifacts."
                            },
                            {
                              "name": "Messaging",
                              "value": "Messaging",
                              "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                            },
                            {
                              "name": "Mission",
                              "value": "Mission",
                              "description": "This flow sends standard data but is subject to strict cloud owner approval."
                            },
                            {
                              "name": "MicrosoftInternal",
                              "value": "MicrosoftInternal",
                              "description": "This flow is assigned to internal Microsoft use cases."
                            },
                            {
                              "name": "BasicFiles",
                              "value": "BasicFiles",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Data",
                              "value": "Data",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Standard",
                              "value": "Standard",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "StreamingVideo",
                              "value": "StreamingVideo",
                              "description": "This flow sends video streams."
                            },
                            {
                              "name": "Opaque",
                              "value": "Opaque",
                              "description": "This flow sends blobs but is subject to cloud owner approval."
                            },
                            {
                              "name": "MissionOpaqueXML",
                              "value": "MissionOpaqueXML",
                              "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                            },
                            {
                              "name": "DiskImages",
                              "value": "DiskImages",
                              "description": "This flow sends blobs that can be used for Virtual Machines."
                            },
                            {
                              "name": "API",
                              "value": "API",
                              "description": "This flow sends data via an Application Programmer Interface."
                            }
                          ]
                        }
                      }
                    },
                    "requirementId": {
                      "type": "string",
                      "description": "Requirement ID of the connection"
                    },
                    "remoteSubscriptionId": {
                      "type": "string",
                      "description": "Subscription ID to link cloud subscriptions together"
                    },
                    "approver": {
                      "type": "string",
                      "description": "Approver of this connection request",
                      "readOnly": true
                    },
                    "pin": {
                      "type": "string",
                      "description": "PIN to link requests together"
                    },
                    "dateSubmitted": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp that this connection request was submitted at",
                      "readOnly": true
                    },
                    "primaryContact": {
                      "type": "string",
                      "description": "The primary contact for this connection request"
                    },
                    "secondaryContacts": {
                      "type": "array",
                      "description": "The secondary contacts for this connection request",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the connection",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been accepted for creation."
                          }
                        ]
                      }
                    },
                    "policies": {
                      "type": "array",
                      "description": "The policies for this connection. The policies property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "schemas": {
                      "type": "array",
                      "description": "The schemas for this connection. The schemas property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "object",
                        "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "ID associated with this schema"
                          },
                          "connectionId": {
                            "type": "string",
                            "description": "Connection ID associated with this schema"
                          },
                          "status": {
                            "description": "Status of the schema",
                            "type": "string",
                            "enum": [
                              "New",
                              "Approved"
                            ],
                            "x-ms-enum": {
                              "name": "SchemaStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "New",
                                  "value": "New",
                                  "description": "A schema that has not been approved and is awaiting review."
                                },
                                {
                                  "name": "Approved",
                                  "value": "Approved",
                                  "description": "A schema that has been approved and is ready for use."
                                }
                              ]
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the schema"
                          },
                          "content": {
                            "type": "string",
                            "description": "Content of the schema"
                          },
                          "direction": {
                            "description": "The direction of the schema.",
                            "type": "string",
                            "enum": [
                              "Send",
                              "Receive"
                            ],
                            "x-ms-enum": {
                              "name": "Direction",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Send",
                                  "value": "Send",
                                  "description": "The direction is on the sending side of a pipeline, connection, or flow."
                                },
                                {
                                  "name": "Receive",
                                  "value": "Receive",
                                  "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                                }
                              ]
                            }
                          },
                          "schemaUri": {
                            "type": "string",
                            "format": "uri",
                            "description": "Uri containing SAS token for the zipped schema"
                          },
                          "schemaType": {
                            "description": "The Schema Type",
                            "type": "string",
                            "enum": [
                              "Xsd",
                              "Zip"
                            ],
                            "x-ms-enum": {
                              "name": "SchemaType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Xsd",
                                  "value": "Xsd",
                                  "description": "The schema represents a single XML schema definition file."
                                },
                                {
                                  "name": "Zip",
                                  "value": "Zip",
                                  "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "schemaUris": {
                      "type": "array",
                      "description": "The schema URIs for this connection. The schemaUris property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  },
                  "required": [
                    "pipeline"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/connections/{connectionName}/listPendingConnections": {
      "post": {
        "operationId": "ListPendingConnections_List",
        "tags": [
          "Connections"
        ],
        "description": "Lists all pending remote connections that are linkable to this connection.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectionName",
            "in": "path",
            "description": "The name for the connection to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The custom response of a list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The items on this page",
                  "items": {
                    "type": "object",
                    "description": "Pending connection object",
                    "properties": {
                      "subscriptionId": {
                        "type": "string",
                        "description": "Subscription ID of the pending connection.",
                        "readOnly": true
                      },
                      "pipeline": {
                        "type": "string",
                        "description": "Pipeline to use to transfer data"
                      },
                      "direction": {
                        "description": "Direction of data movement",
                        "type": "string",
                        "enum": [
                          "Send",
                          "Receive"
                        ],
                        "x-ms-enum": {
                          "name": "Direction",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Send",
                              "value": "Send",
                              "description": "The direction is on the sending side of a pipeline, connection, or flow."
                            },
                            {
                              "name": "Receive",
                              "value": "Receive",
                              "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                            }
                          ]
                        }
                      },
                      "justification": {
                        "type": "string",
                        "description": "Justification for the connection request"
                      },
                      "status": {
                        "description": "Status of the connection",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "InReview",
                          "Approved",
                          "Rejected",
                          "Accepted"
                        ],
                        "x-ms-enum": {
                          "name": "ConnectionStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "InReview",
                              "value": "InReview",
                              "description": "This connection has been created but is under review by the pipeline owner."
                            },
                            {
                              "name": "Approved",
                              "value": "Approved",
                              "description": "This connection has been approved by the pipeline owner and is ready for use."
                            },
                            {
                              "name": "Rejected",
                              "value": "Rejected",
                              "description": "This connection has been rejected by the pipeline owner and cannot be used."
                            },
                            {
                              "name": "Accepted",
                              "value": "Accepted",
                              "description": "Creation of the connection has been accepted."
                            }
                          ]
                        }
                      },
                      "forceDisabledStatus": {
                        "type": "array",
                        "description": "Force disablement status of the current connection",
                        "items": {
                          "type": "string",
                          "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                          "enum": [
                            "ConnectionForceDisabled",
                            "FlowTypeForceDisabled"
                          ],
                          "x-ms-enum": {
                            "name": "ForceDisabledStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "ConnectionForceDisabled",
                                "value": "ConnectionForceDisabled",
                                "description": "Defines disablement of a Flow due to the parent connection being disabled."
                              },
                              {
                                "name": "FlowTypeForceDisabled",
                                "value": "FlowTypeForceDisabled",
                                "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                              }
                            ]
                          }
                        },
                        "readOnly": true
                      },
                      "statusReason": {
                        "type": "string",
                        "description": "Reason for status",
                        "readOnly": true
                      },
                      "linkStatus": {
                        "description": "Link status of the current connection",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "Linked",
                          "Unlinked"
                        ],
                        "x-ms-enum": {
                          "name": "LinkStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Linked",
                              "value": "Linked",
                              "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                            },
                            {
                              "name": "Unlinked",
                              "value": "Unlinked",
                              "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                            }
                          ]
                        }
                      },
                      "linkedConnectionId": {
                        "type": "string",
                        "description": "Resource ID of the linked connection",
                        "readOnly": true
                      },
                      "flowTypes": {
                        "type": "array",
                        "description": "The flow types being requested for this connection. This FlowType property has reached end of life support starting version 2025-05-30-preview. Please create a FlowProfile resource instead.",
                        "items": {
                          "type": "string",
                          "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                          "enum": [
                            "Unknown",
                            "Complex",
                            "DevSecOps",
                            "Messaging",
                            "Mission",
                            "MicrosoftInternal",
                            "BasicFiles",
                            "Data",
                            "Standard",
                            "StreamingVideo",
                            "Opaque",
                            "MissionOpaqueXML",
                            "DiskImages",
                            "API"
                          ],
                          "x-ms-enum": {
                            "name": "FlowType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Unknown",
                                "value": "Unknown",
                                "description": "This type of flow is not set."
                              },
                              {
                                "name": "Complex",
                                "value": "Complex",
                                "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                              },
                              {
                                "name": "DevSecOps",
                                "value": "DevSecOps",
                                "description": "This flow sends source code files and artifacts."
                              },
                              {
                                "name": "Messaging",
                                "value": "Messaging",
                                "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                              },
                              {
                                "name": "Mission",
                                "value": "Mission",
                                "description": "This flow sends standard data but is subject to strict cloud owner approval."
                              },
                              {
                                "name": "MicrosoftInternal",
                                "value": "MicrosoftInternal",
                                "description": "This flow is assigned to internal Microsoft use cases."
                              },
                              {
                                "name": "BasicFiles",
                                "value": "BasicFiles",
                                "description": "This flow sends blobs that can be used for multiple use cases."
                              },
                              {
                                "name": "Data",
                                "value": "Data",
                                "description": "This flow sends blobs that can be used for multiple use cases."
                              },
                              {
                                "name": "Standard",
                                "value": "Standard",
                                "description": "This flow sends blobs that can be used for multiple use cases."
                              },
                              {
                                "name": "StreamingVideo",
                                "value": "StreamingVideo",
                                "description": "This flow sends video streams."
                              },
                              {
                                "name": "Opaque",
                                "value": "Opaque",
                                "description": "This flow sends blobs but is subject to cloud owner approval."
                              },
                              {
                                "name": "MissionOpaqueXML",
                                "value": "MissionOpaqueXML",
                                "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                              },
                              {
                                "name": "DiskImages",
                                "value": "DiskImages",
                                "description": "This flow sends blobs that can be used for Virtual Machines."
                              },
                              {
                                "name": "API",
                                "value": "API",
                                "description": "This flow sends data via an Application Programmer Interface."
                              }
                            ]
                          }
                        }
                      },
                      "requirementId": {
                        "type": "string",
                        "description": "Requirement ID of the connection"
                      },
                      "remoteSubscriptionId": {
                        "type": "string",
                        "description": "Subscription ID to link cloud subscriptions together"
                      },
                      "approver": {
                        "type": "string",
                        "description": "Approver of this connection request",
                        "readOnly": true
                      },
                      "pin": {
                        "type": "string",
                        "description": "PIN to link requests together"
                      },
                      "dateSubmitted": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp that this connection request was submitted at",
                        "readOnly": true
                      },
                      "primaryContact": {
                        "type": "string",
                        "description": "The primary contact for this connection request"
                      },
                      "secondaryContacts": {
                        "type": "array",
                        "description": "The secondary contacts for this connection request",
                        "items": {
                          "type": "string"
                        }
                      },
                      "provisioningState": {
                        "description": "Provisioning state of the connection",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "Succeeded",
                          "Failed",
                          "Canceled",
                          "Accepted"
                        ],
                        "x-ms-enum": {
                          "name": "ProvisioningState",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Succeeded",
                              "value": "Succeeded",
                              "description": "Resource has been created."
                            },
                            {
                              "name": "Failed",
                              "value": "Failed",
                              "description": "Resource creation failed."
                            },
                            {
                              "name": "Canceled",
                              "value": "Canceled",
                              "description": "Resource creation was canceled."
                            },
                            {
                              "name": "Accepted",
                              "value": "Accepted",
                              "description": "Resource has been accepted for creation."
                            }
                          ]
                        }
                      },
                      "policies": {
                        "type": "array",
                        "description": "The policies for this connection. The policies property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "schemas": {
                        "type": "array",
                        "description": "The schemas for this connection. The schemas property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                        "items": {
                          "type": "object",
                          "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "ID associated with this schema"
                            },
                            "connectionId": {
                              "type": "string",
                              "description": "Connection ID associated with this schema"
                            },
                            "status": {
                              "description": "Status of the schema",
                              "type": "string",
                              "enum": [
                                "New",
                                "Approved"
                              ],
                              "x-ms-enum": {
                                "name": "SchemaStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "New",
                                    "value": "New",
                                    "description": "A schema that has not been approved and is awaiting review."
                                  },
                                  {
                                    "name": "Approved",
                                    "value": "Approved",
                                    "description": "A schema that has been approved and is ready for use."
                                  }
                                ]
                              }
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the schema"
                            },
                            "content": {
                              "type": "string",
                              "description": "Content of the schema"
                            },
                            "direction": {
                              "description": "The direction of the schema.",
                              "type": "string",
                              "enum": [
                                "Send",
                                "Receive"
                              ],
                              "x-ms-enum": {
                                "name": "Direction",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Send",
                                    "value": "Send",
                                    "description": "The direction is on the sending side of a pipeline, connection, or flow."
                                  },
                                  {
                                    "name": "Receive",
                                    "value": "Receive",
                                    "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                                  }
                                ]
                              }
                            },
                            "schemaUri": {
                              "type": "string",
                              "format": "uri",
                              "description": "Uri containing SAS token for the zipped schema"
                            },
                            "schemaType": {
                              "description": "The Schema Type",
                              "type": "string",
                              "enum": [
                                "Xsd",
                                "Zip"
                              ],
                              "x-ms-enum": {
                                "name": "SchemaType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Xsd",
                                    "value": "Xsd",
                                    "description": "The schema represents a single XML schema definition file."
                                  },
                                  {
                                    "name": "Zip",
                                    "value": "Zip",
                                    "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                                  }
                                ]
                              }
                            }
                          }
                        }
                      },
                      "schemaUris": {
                        "type": "array",
                        "description": "The schema URIs for this connection. The schemaUris property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                        "items": {
                          "type": "string",
                          "format": "uri"
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true,
                        "type": "string"
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    },
                    "required": [
                      "pipeline",
                      "location"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/connections/{connectionName}/listPendingFlows": {
      "post": {
        "operationId": "ListPendingFlows_List",
        "tags": [
          "Connections"
        ],
        "description": "Lists all remote flows that have not yet been linked to local flows",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectionName",
            "in": "path",
            "description": "The name for the connection to perform the operation on.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The custom response of a list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The items on this page",
                  "items": {
                    "type": "object",
                    "description": "Pending flow object",
                    "properties": {
                      "subscriptionId": {
                        "type": "string",
                        "description": "Subscription ID of the pending flow.",
                        "readOnly": true
                      },
                      "connectionId": {
                        "type": "string",
                        "description": "Connection ID of the pending flow.",
                        "readOnly": true
                      },
                      "connection": {
                        "description": "The connection associated with this flow",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the connection"
                          },
                          "id": {
                            "type": "string",
                            "description": "Id of the connection"
                          },
                          "location": {
                            "type": "string",
                            "description": "Location of the connection",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "subscriptionName": {
                            "type": "string",
                            "description": "Name of the subscription with the connection"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "flowId": {
                        "type": "string",
                        "description": "Dataflow GUID associated with this flow",
                        "readOnly": true
                      },
                      "keyVaultUri": {
                        "type": "string",
                        "description": "URI to a Key Vault Secret containing a SAS token."
                      },
                      "linkStatus": {
                        "description": "Link status of the current flow",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "Linked",
                          "Unlinked"
                        ],
                        "x-ms-enum": {
                          "name": "LinkStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Linked",
                              "value": "Linked",
                              "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                            },
                            {
                              "name": "Unlinked",
                              "value": "Unlinked",
                              "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                            }
                          ]
                        }
                      },
                      "linkedFlowId": {
                        "type": "string",
                        "description": "Resource ID of the linked flow",
                        "readOnly": true
                      },
                      "status": {
                        "description": "Status of the current flow",
                        "type": "string",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "FlowStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Enabled",
                              "value": "Enabled",
                              "description": "The flow is currently enabled and able to send or receive data."
                            },
                            {
                              "name": "Disabled",
                              "value": "Disabled",
                              "description": "The flow is currently disabled and cannot send or receive data."
                            }
                          ]
                        }
                      },
                      "forceDisabledStatus": {
                        "type": "array",
                        "description": "Force disablement status of the current flow",
                        "items": {
                          "type": "string",
                          "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                          "enum": [
                            "ConnectionForceDisabled",
                            "FlowTypeForceDisabled"
                          ],
                          "x-ms-enum": {
                            "name": "ForceDisabledStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "ConnectionForceDisabled",
                                "value": "ConnectionForceDisabled",
                                "description": "Defines disablement of a Flow due to the parent connection being disabled."
                              },
                              {
                                "name": "FlowTypeForceDisabled",
                                "value": "FlowTypeForceDisabled",
                                "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                              }
                            ]
                          }
                        },
                        "readOnly": true
                      },
                      "storageAccountName": {
                        "type": "string",
                        "description": "Storage Account"
                      },
                      "storageAccountId": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Storage Account ID",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.Storage/storageAccounts"
                            }
                          ]
                        }
                      },
                      "storageContainerName": {
                        "type": "string",
                        "description": "Storage Container Name"
                      },
                      "storageTableName": {
                        "type": "string",
                        "description": "Storage Table Name"
                      },
                      "serviceBusQueueId": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Service Bus Queue ID",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.Storage/namespaces/queues"
                            }
                          ]
                        }
                      },
                      "flowType": {
                        "type": "string",
                        "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                        "enum": [
                          "Unknown",
                          "Complex",
                          "DevSecOps",
                          "Messaging",
                          "Mission",
                          "MicrosoftInternal",
                          "BasicFiles",
                          "Data",
                          "Standard",
                          "StreamingVideo",
                          "Opaque",
                          "MissionOpaqueXML",
                          "DiskImages",
                          "API"
                        ],
                        "x-ms-enum": {
                          "name": "FlowType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Unknown",
                              "value": "Unknown",
                              "description": "This type of flow is not set."
                            },
                            {
                              "name": "Complex",
                              "value": "Complex",
                              "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                            },
                            {
                              "name": "DevSecOps",
                              "value": "DevSecOps",
                              "description": "This flow sends source code files and artifacts."
                            },
                            {
                              "name": "Messaging",
                              "value": "Messaging",
                              "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                            },
                            {
                              "name": "Mission",
                              "value": "Mission",
                              "description": "This flow sends standard data but is subject to strict cloud owner approval."
                            },
                            {
                              "name": "MicrosoftInternal",
                              "value": "MicrosoftInternal",
                              "description": "This flow is assigned to internal Microsoft use cases."
                            },
                            {
                              "name": "BasicFiles",
                              "value": "BasicFiles",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Data",
                              "value": "Data",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Standard",
                              "value": "Standard",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "StreamingVideo",
                              "value": "StreamingVideo",
                              "description": "This flow sends video streams."
                            },
                            {
                              "name": "Opaque",
                              "value": "Opaque",
                              "description": "This flow sends blobs but is subject to cloud owner approval."
                            },
                            {
                              "name": "MissionOpaqueXML",
                              "value": "MissionOpaqueXML",
                              "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                            },
                            {
                              "name": "DiskImages",
                              "value": "DiskImages",
                              "description": "This flow sends blobs that can be used for Virtual Machines."
                            },
                            {
                              "name": "API",
                              "value": "API",
                              "description": "This flow sends data via an Application Programmer Interface."
                            }
                          ]
                        }
                      },
                      "dataType": {
                        "description": "Type of data to transfer via the flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                        "type": "string",
                        "enum": [
                          "Blob",
                          "Table"
                        ],
                        "x-ms-enum": {
                          "name": "DataType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Blob",
                              "value": "Blob",
                              "description": "The flow uses Azure Storage blobs to send or receive data."
                            },
                            {
                              "name": "Table",
                              "value": "Table",
                              "description": "The flow uses Azure Storage tables to send or receive data."
                            }
                          ]
                        }
                      },
                      "provisioningState": {
                        "description": "Provisioning state of the flow",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "Succeeded",
                          "Failed",
                          "Canceled",
                          "Accepted"
                        ],
                        "x-ms-enum": {
                          "name": "ProvisioningState",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Succeeded",
                              "value": "Succeeded",
                              "description": "Resource has been created."
                            },
                            {
                              "name": "Failed",
                              "value": "Failed",
                              "description": "Resource creation failed."
                            },
                            {
                              "name": "Canceled",
                              "value": "Canceled",
                              "description": "Resource creation was canceled."
                            },
                            {
                              "name": "Accepted",
                              "value": "Accepted",
                              "description": "Resource has been accepted for creation."
                            }
                          ]
                        }
                      },
                      "policies": {
                        "type": "array",
                        "description": "The policies for this flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "ID associated with this schema"
                          },
                          "connectionId": {
                            "type": "string",
                            "description": "Connection ID associated with this schema"
                          },
                          "status": {
                            "description": "Status of the schema",
                            "type": "string",
                            "enum": [
                              "New",
                              "Approved"
                            ],
                            "x-ms-enum": {
                              "name": "SchemaStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "New",
                                  "value": "New",
                                  "description": "A schema that has not been approved and is awaiting review."
                                },
                                {
                                  "name": "Approved",
                                  "value": "Approved",
                                  "description": "A schema that has been approved and is ready for use."
                                }
                              ]
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the schema"
                          },
                          "content": {
                            "type": "string",
                            "description": "Content of the schema"
                          },
                          "direction": {
                            "description": "The direction of the schema.",
                            "type": "string",
                            "enum": [
                              "Send",
                              "Receive"
                            ],
                            "x-ms-enum": {
                              "name": "Direction",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Send",
                                  "value": "Send",
                                  "description": "The direction is on the sending side of a pipeline, connection, or flow."
                                },
                                {
                                  "name": "Receive",
                                  "value": "Receive",
                                  "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                                }
                              ]
                            }
                          },
                          "schemaUri": {
                            "type": "string",
                            "format": "uri",
                            "description": "Uri containing SAS token for the zipped schema"
                          },
                          "schemaType": {
                            "description": "The Schema Type",
                            "type": "string",
                            "enum": [
                              "Xsd",
                              "Zip"
                            ],
                            "x-ms-enum": {
                              "name": "SchemaType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Xsd",
                                  "value": "Xsd",
                                  "description": "The schema represents a single XML schema definition file."
                                },
                                {
                                  "name": "Zip",
                                  "value": "Zip",
                                  "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                                }
                              ]
                            }
                          }
                        }
                      },
                      "messagingOptions": {
                        "description": "The messaging options for this flow",
                        "type": "object",
                        "properties": {
                          "billingTier": {
                            "description": "Billing tier for this messaging flow",
                            "type": "string",
                            "enum": [
                              "BlobTransport",
                              "Standard",
                              "Premium"
                            ],
                            "x-ms-enum": {
                              "name": "FlowBillingTier",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "BlobTransport",
                                  "value": "BlobTransport",
                                  "description": "Billing tier for messaging processing that charges based on how much data is transferred."
                                },
                                {
                                  "name": "Standard",
                                  "value": "Standard",
                                  "description": "Billing tier for standard messaging processing that charges based on having the messaging resource allocated."
                                },
                                {
                                  "name": "Premium",
                                  "value": "Premium",
                                  "description": "Billing tier for premium messaging processing that charges based on having the messaging resource allocated."
                                }
                              ]
                            }
                          }
                        }
                      },
                      "apiFlowOptions": {
                        "description": "The API Flow configuration options for Azure Data Transfer API Flow type.",
                        "type": "object",
                        "properties": {
                          "remoteEndpoint": {
                            "type": "string",
                            "description": "Remote host to which communication needs to be made. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the remoteEndpointSettings.endpoint property instead."
                          },
                          "cname": {
                            "type": "string",
                            "description": "Unique CNAME to represent the Azure Data Transfer API Flow instance"
                          },
                          "apiMode": {
                            "description": "Remote Calling Mode in the Azure Data Transfer API Flow, which describes how the API Flow will be invoked",
                            "type": "string",
                            "enum": [
                              "SDK",
                              "Endpoint"
                            ],
                            "x-ms-enum": {
                              "name": "ApiMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "SDK",
                                  "value": "SDK",
                                  "description": "The API flow will forward calls to a custom Software Development Kit implementation."
                                },
                                {
                                  "name": "Endpoint",
                                  "value": "Endpoint",
                                  "description": "The API flow will forward calls to a specified endpoint."
                                }
                              ]
                            }
                          },
                          "identityTranslation": {
                            "description": "Determines which identity to use for extracting the user token for Azure Data Transfer API Flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead.",
                            "type": "string",
                            "enum": [
                              "UserIdentity",
                              "ServiceIdentity"
                            ],
                            "x-ms-enum": {
                              "name": "IdentityTranslation",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "UserIdentity",
                                  "value": "UserIdentity",
                                  "description": "The API flow will make use of the user identity that called this API flow, and pass that token through the boundary."
                                },
                                {
                                  "name": "ServiceIdentity",
                                  "value": "ServiceIdentity",
                                  "description": "The API flow will make use of the Azure Data Transfer Flow managed identity on the other side of the boundary."
                                }
                              ]
                            }
                          },
                          "senderClientId": {
                            "type": "string",
                            "description": "Sender's app user assigned Manage Identity client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                          },
                          "remoteCallingModeClientId": {
                            "type": "string",
                            "description": "Remote stub app registration Client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                          },
                          "audienceOverride": {
                            "type": "string",
                            "description": "Optional field to override the audience of the remote endpoint. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                          }
                        }
                      },
                      "customerManagedKeyVaultUri": {
                        "type": "string",
                        "format": "uri",
                        "description": "The URI to the customer managed key for this flow"
                      },
                      "streamId": {
                        "type": "string",
                        "description": "The flow stream identifier"
                      },
                      "streamProtocol": {
                        "description": "The protocol of the stream",
                        "type": "string",
                        "enum": [
                          "UDP",
                          "SRT",
                          "RTP"
                        ],
                        "x-ms-enum": {
                          "name": "StreamProtocol",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "UDP",
                              "value": "UDP",
                              "description": "This Flow is using User Datagram Protocol for the video stream."
                            },
                            {
                              "name": "SRT",
                              "value": "SRT",
                              "description": "This Flow is using Secure Reliable Transfer for the video stream."
                            },
                            {
                              "name": "RTP",
                              "value": "RTP",
                              "description": "This Flow is using Real-time Transport Protocol for the video stream."
                            }
                          ]
                        }
                      },
                      "streamLatency": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The latency of the stream in milliseconds"
                      },
                      "passphrase": {
                        "type": "string",
                        "description": "The passphrase used for SRT streams"
                      },
                      "sourceAddresses": {
                        "type": "object",
                        "description": "The source IP address and CIDR ranges of the stream",
                        "properties": {
                          "sourceAddresses": {
                            "type": "array",
                            "description": "A source IP address or CIDR range",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "destinationEndpoints": {
                        "type": "array",
                        "description": "The destination endpoints of the stream",
                        "items": {
                          "type": "string"
                        }
                      },
                      "destinationEndpointPorts": {
                        "type": "array",
                        "description": "The destination endpoint ports of the stream",
                        "items": {
                          "type": "integer",
                          "format": "int64"
                        }
                      },
                      "eventHubId": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Event Hub ID",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.EventHub/namespaces/eventhubs"
                            }
                          ]
                        }
                      },
                      "consumerGroup": {
                        "type": "string",
                        "description": "Event Hub Consumer Group"
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true,
                        "type": "string"
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    },
                    "required": [
                      "location"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/pipelines": {
      "get": {
        "operationId": "Pipelines_ListByResourceGroup",
        "tags": [
          "Pipelines"
        ],
        "description": "Lists all Pipeline resources within the specified resource group.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Pipeline list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Pipeline items on this page",
                  "items": {
                    "type": "object",
                    "description": "The pipeline resource definition. A Pipeline defines the scope and identity under which data replication scenarios are managed.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The set of configurable properties for the Pipeline resource.",
                        "type": "object",
                        "properties": {
                          "remoteCloud": {
                            "type": "string",
                            "description": "Remote cloud of the data to be transferred or received"
                          },
                          "displayName": {
                            "type": "string",
                            "description": "Display name of this pipeline"
                          },
                          "connections": {
                            "type": "array",
                            "description": "Connections associated with pipeline",
                            "items": {
                              "type": "object",
                              "description": "The ReadPipelineconnection.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Connection id inside pipeline"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Connection name inside pipeline"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Connection type inside pipeline"
                                },
                                "location": {
                                  "type": "string",
                                  "description": "Connection location inside pipeline"
                                },
                                "etag": {
                                  "type": "string",
                                  "description": "Connection etag inside pipeline"
                                },
                                "systemData": {
                                  "description": "Metadata pertaining to creation and last modification of the resource.",
                                  "type": "object",
                                  "properties": {
                                    "createdBy": {
                                      "type": "string",
                                      "description": "The identity that created the resource."
                                    },
                                    "createdByType": {
                                      "type": "string",
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "createdAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource creation (UTC)."
                                    },
                                    "lastModifiedBy": {
                                      "type": "string",
                                      "description": "The identity that last modified the resource."
                                    },
                                    "lastModifiedByType": {
                                      "type": "string",
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource last modification (UTC)"
                                    }
                                  },
                                  "readOnly": true
                                },
                                "properties": {
                                  "description": "Connection properties inside pipeline",
                                  "type": "object",
                                  "properties": {
                                    "internalMetadata": {
                                      "description": "Internal metadata of the connection inside pipeline.",
                                      "readOnly": true,
                                      "type": "object",
                                      "properties": {
                                        "operationStatus": {
                                          "description": "Operation status associated with the last patch request",
                                          "readOnly": true,
                                          "type": "object",
                                          "properties": {
                                            "status": {
                                              "description": "Operation status for the last patch request for this connection.",
                                              "readOnly": true,
                                              "type": "string",
                                              "enum": [
                                                "Failed",
                                                "Succeeded"
                                              ],
                                              "x-ms-enum": {
                                                "name": "OperationStatusEnum",
                                                "modelAsString": true,
                                                "values": [
                                                  {
                                                    "name": "Failed",
                                                    "value": "Failed",
                                                    "description": "The last patch request for this connection completed with an error."
                                                  },
                                                  {
                                                    "name": "Succeeded",
                                                    "value": "Succeeded",
                                                    "description": "The last patch request for this connection completed."
                                                  }
                                                ]
                                              }
                                            },
                                            "id": {
                                              "type": "string",
                                              "description": "Operation status ID of the last patch request for this connection.",
                                              "readOnly": true
                                            },
                                            "message": {
                                              "type": "string",
                                              "description": "Message for the operation for the last patch request for this connection.",
                                              "readOnly": true
                                            }
                                          }
                                        },
                                        "statusSetBy": {
                                          "type": "string",
                                          "description": "User that last set the approved status for this connection",
                                          "readOnly": true
                                        }
                                      },
                                      "additionalProperties": {}
                                    }
                                  },
                                  "additionalProperties": {}
                                }
                              },
                              "required": [
                                "id"
                              ],
                              "additionalProperties": {}
                            },
                            "readOnly": true,
                            "x-ms-identifiers": [
                              "id"
                            ]
                          },
                          "subscribers": {
                            "type": "array",
                            "description": "Subscribers of this resource",
                            "items": {
                              "type": "object",
                              "description": "An individual that would like to subscribe to events that occur on a pipeline.",
                              "properties": {
                                "email": {
                                  "type": "string",
                                  "description": "Email of the subscriber"
                                },
                                "notifications": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "Number specifying what notifications to receive"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the pipeline",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Resource has been accepted for creation."
                                }
                              ]
                            }
                          },
                          "policies": {
                            "type": "array",
                            "description": "The policies for this pipeline. The policies property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "flowTypes": {
                            "type": "array",
                            "description": "The flow type for this flow. The flowTypes property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                            "items": {
                              "type": "string",
                              "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                              "enum": [
                                "Unknown",
                                "Complex",
                                "DevSecOps",
                                "Messaging",
                                "Mission",
                                "MicrosoftInternal",
                                "BasicFiles",
                                "Data",
                                "Standard",
                                "StreamingVideo",
                                "Opaque",
                                "MissionOpaqueXML",
                                "DiskImages",
                                "API"
                              ],
                              "x-ms-enum": {
                                "name": "FlowType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Unknown",
                                    "value": "Unknown",
                                    "description": "This type of flow is not set."
                                  },
                                  {
                                    "name": "Complex",
                                    "value": "Complex",
                                    "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                                  },
                                  {
                                    "name": "DevSecOps",
                                    "value": "DevSecOps",
                                    "description": "This flow sends source code files and artifacts."
                                  },
                                  {
                                    "name": "Messaging",
                                    "value": "Messaging",
                                    "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                                  },
                                  {
                                    "name": "Mission",
                                    "value": "Mission",
                                    "description": "This flow sends standard data but is subject to strict cloud owner approval."
                                  },
                                  {
                                    "name": "MicrosoftInternal",
                                    "value": "MicrosoftInternal",
                                    "description": "This flow is assigned to internal Microsoft use cases."
                                  },
                                  {
                                    "name": "BasicFiles",
                                    "value": "BasicFiles",
                                    "description": "This flow sends blobs that can be used for multiple use cases."
                                  },
                                  {
                                    "name": "Data",
                                    "value": "Data",
                                    "description": "This flow sends blobs that can be used for multiple use cases."
                                  },
                                  {
                                    "name": "Standard",
                                    "value": "Standard",
                                    "description": "This flow sends blobs that can be used for multiple use cases."
                                  },
                                  {
                                    "name": "StreamingVideo",
                                    "value": "StreamingVideo",
                                    "description": "This flow sends video streams."
                                  },
                                  {
                                    "name": "Opaque",
                                    "value": "Opaque",
                                    "description": "This flow sends blobs but is subject to cloud owner approval."
                                  },
                                  {
                                    "name": "MissionOpaqueXML",
                                    "value": "MissionOpaqueXML",
                                    "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                                  },
                                  {
                                    "name": "DiskImages",
                                    "value": "DiskImages",
                                    "description": "This flow sends blobs that can be used for Virtual Machines."
                                  },
                                  {
                                    "name": "API",
                                    "value": "API",
                                    "description": "This flow sends data via an Application Programmer Interface."
                                  }
                                ]
                              }
                            }
                          },
                          "disabledFlowTypes": {
                            "type": "array",
                            "description": "The flow types that are disabled for this pipeline",
                            "items": {
                              "type": "string",
                              "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                              "enum": [
                                "Unknown",
                                "Complex",
                                "DevSecOps",
                                "Messaging",
                                "Mission",
                                "MicrosoftInternal",
                                "BasicFiles",
                                "Data",
                                "Standard",
                                "StreamingVideo",
                                "Opaque",
                                "MissionOpaqueXML",
                                "DiskImages",
                                "API"
                              ],
                              "x-ms-enum": {
                                "name": "FlowType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Unknown",
                                    "value": "Unknown",
                                    "description": "This type of flow is not set."
                                  },
                                  {
                                    "name": "Complex",
                                    "value": "Complex",
                                    "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                                  },
                                  {
                                    "name": "DevSecOps",
                                    "value": "DevSecOps",
                                    "description": "This flow sends source code files and artifacts."
                                  },
                                  {
                                    "name": "Messaging",
                                    "value": "Messaging",
                                    "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                                  },
                                  {
                                    "name": "Mission",
                                    "value": "Mission",
                                    "description": "This flow sends standard data but is subject to strict cloud owner approval."
                                  },
                                  {
                                    "name": "MicrosoftInternal",
                                    "value": "MicrosoftInternal",
                                    "description": "This flow is assigned to internal Microsoft use cases."
                                  },
                                  {
                                    "name": "BasicFiles",
                                    "value": "BasicFiles",
                                    "description": "This flow sends blobs that can be used for multiple use cases."
                                  },
                                  {
                                    "name": "Data",
                                    "value": "Data",
                                    "description": "This flow sends blobs that can be used for multiple use cases."
                                  },
                                  {
                                    "name": "Standard",
                                    "value": "Standard",
                                    "description": "This flow sends blobs that can be used for multiple use cases."
                                  },
                                  {
                                    "name": "StreamingVideo",
                                    "value": "StreamingVideo",
                                    "description": "This flow sends video streams."
                                  },
                                  {
                                    "name": "Opaque",
                                    "value": "Opaque",
                                    "description": "This flow sends blobs but is subject to cloud owner approval."
                                  },
                                  {
                                    "name": "MissionOpaqueXML",
                                    "value": "MissionOpaqueXML",
                                    "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                                  },
                                  {
                                    "name": "DiskImages",
                                    "value": "DiskImages",
                                    "description": "This flow sends blobs that can be used for Virtual Machines."
                                  },
                                  {
                                    "name": "API",
                                    "value": "API",
                                    "description": "This flow sends data via an Application Programmer Interface."
                                  }
                                ]
                              }
                            }
                          },
                          "quarantineDownloadStorageAccount": {
                            "type": "string",
                            "description": "Quarantine Download Storage Account"
                          },
                          "quarantineDownloadStorageContainer": {
                            "type": "string",
                            "description": "Quarantine Download Storage Container"
                          },
                          "status": {
                            "description": "Status of the current pipeline",
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "PipelineStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled",
                                  "description": "The pipeline is currently enabled and all child connection and flow resources below able to send or receive data."
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "The pipeline is currently disabled and all child connection and flow resources below are unable to send or receive data."
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "remoteCloud"
                        ]
                      },
                      "identity": {
                        "description": "The managed service identities assigned to this resource.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "title": "User-Assigned Identities",
                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                            "additionalProperties": {
                              "x-nullable": true,
                              "type": "object",
                              "description": "User assigned identity properties",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID of the assigned identity.",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID of the assigned identity.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/pipelines/{pipelineName}": {
      "get": {
        "operationId": "Pipelines_Get",
        "tags": [
          "Pipelines"
        ],
        "description": "Retrieves the specified Pipeline resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "pipelineName",
            "in": "path",
            "description": "The name of the pipeline on which to operate.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The pipeline resource definition. A Pipeline defines the scope and identity under which data replication scenarios are managed.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The set of configurable properties for the Pipeline resource.",
                  "type": "object",
                  "properties": {
                    "remoteCloud": {
                      "type": "string",
                      "description": "Remote cloud of the data to be transferred or received"
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of this pipeline"
                    },
                    "connections": {
                      "type": "array",
                      "description": "Connections associated with pipeline",
                      "items": {
                        "type": "object",
                        "description": "The ReadPipelineconnection.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Connection id inside pipeline"
                          },
                          "name": {
                            "type": "string",
                            "description": "Connection name inside pipeline"
                          },
                          "type": {
                            "type": "string",
                            "description": "Connection type inside pipeline"
                          },
                          "location": {
                            "type": "string",
                            "description": "Connection location inside pipeline"
                          },
                          "etag": {
                            "type": "string",
                            "description": "Connection etag inside pipeline"
                          },
                          "systemData": {
                            "description": "Metadata pertaining to creation and last modification of the resource.",
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            },
                            "readOnly": true
                          },
                          "properties": {
                            "description": "Connection properties inside pipeline",
                            "type": "object",
                            "properties": {
                              "internalMetadata": {
                                "description": "Internal metadata of the connection inside pipeline.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "operationStatus": {
                                    "description": "Operation status associated with the last patch request",
                                    "readOnly": true,
                                    "type": "object",
                                    "properties": {
                                      "status": {
                                        "description": "Operation status for the last patch request for this connection.",
                                        "readOnly": true,
                                        "type": "string",
                                        "enum": [
                                          "Failed",
                                          "Succeeded"
                                        ],
                                        "x-ms-enum": {
                                          "name": "OperationStatusEnum",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Failed",
                                              "value": "Failed",
                                              "description": "The last patch request for this connection completed with an error."
                                            },
                                            {
                                              "name": "Succeeded",
                                              "value": "Succeeded",
                                              "description": "The last patch request for this connection completed."
                                            }
                                          ]
                                        }
                                      },
                                      "id": {
                                        "type": "string",
                                        "description": "Operation status ID of the last patch request for this connection.",
                                        "readOnly": true
                                      },
                                      "message": {
                                        "type": "string",
                                        "description": "Message for the operation for the last patch request for this connection.",
                                        "readOnly": true
                                      }
                                    }
                                  },
                                  "statusSetBy": {
                                    "type": "string",
                                    "description": "User that last set the approved status for this connection",
                                    "readOnly": true
                                  }
                                },
                                "additionalProperties": {}
                              }
                            },
                            "additionalProperties": {}
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "additionalProperties": {}
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "id"
                      ]
                    },
                    "subscribers": {
                      "type": "array",
                      "description": "Subscribers of this resource",
                      "items": {
                        "type": "object",
                        "description": "An individual that would like to subscribe to events that occur on a pipeline.",
                        "properties": {
                          "email": {
                            "type": "string",
                            "description": "Email of the subscriber"
                          },
                          "notifications": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Number specifying what notifications to receive"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the pipeline",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been accepted for creation."
                          }
                        ]
                      }
                    },
                    "policies": {
                      "type": "array",
                      "description": "The policies for this pipeline. The policies property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "flowTypes": {
                      "type": "array",
                      "description": "The flow type for this flow. The flowTypes property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string",
                        "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                        "enum": [
                          "Unknown",
                          "Complex",
                          "DevSecOps",
                          "Messaging",
                          "Mission",
                          "MicrosoftInternal",
                          "BasicFiles",
                          "Data",
                          "Standard",
                          "StreamingVideo",
                          "Opaque",
                          "MissionOpaqueXML",
                          "DiskImages",
                          "API"
                        ],
                        "x-ms-enum": {
                          "name": "FlowType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Unknown",
                              "value": "Unknown",
                              "description": "This type of flow is not set."
                            },
                            {
                              "name": "Complex",
                              "value": "Complex",
                              "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                            },
                            {
                              "name": "DevSecOps",
                              "value": "DevSecOps",
                              "description": "This flow sends source code files and artifacts."
                            },
                            {
                              "name": "Messaging",
                              "value": "Messaging",
                              "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                            },
                            {
                              "name": "Mission",
                              "value": "Mission",
                              "description": "This flow sends standard data but is subject to strict cloud owner approval."
                            },
                            {
                              "name": "MicrosoftInternal",
                              "value": "MicrosoftInternal",
                              "description": "This flow is assigned to internal Microsoft use cases."
                            },
                            {
                              "name": "BasicFiles",
                              "value": "BasicFiles",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Data",
                              "value": "Data",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Standard",
                              "value": "Standard",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "StreamingVideo",
                              "value": "StreamingVideo",
                              "description": "This flow sends video streams."
                            },
                            {
                              "name": "Opaque",
                              "value": "Opaque",
                              "description": "This flow sends blobs but is subject to cloud owner approval."
                            },
                            {
                              "name": "MissionOpaqueXML",
                              "value": "MissionOpaqueXML",
                              "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                            },
                            {
                              "name": "DiskImages",
                              "value": "DiskImages",
                              "description": "This flow sends blobs that can be used for Virtual Machines."
                            },
                            {
                              "name": "API",
                              "value": "API",
                              "description": "This flow sends data via an Application Programmer Interface."
                            }
                          ]
                        }
                      }
                    },
                    "disabledFlowTypes": {
                      "type": "array",
                      "description": "The flow types that are disabled for this pipeline",
                      "items": {
                        "type": "string",
                        "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                        "enum": [
                          "Unknown",
                          "Complex",
                          "DevSecOps",
                          "Messaging",
                          "Mission",
                          "MicrosoftInternal",
                          "BasicFiles",
                          "Data",
                          "Standard",
                          "StreamingVideo",
                          "Opaque",
                          "MissionOpaqueXML",
                          "DiskImages",
                          "API"
                        ],
                        "x-ms-enum": {
                          "name": "FlowType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Unknown",
                              "value": "Unknown",
                              "description": "This type of flow is not set."
                            },
                            {
                              "name": "Complex",
                              "value": "Complex",
                              "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                            },
                            {
                              "name": "DevSecOps",
                              "value": "DevSecOps",
                              "description": "This flow sends source code files and artifacts."
                            },
                            {
                              "name": "Messaging",
                              "value": "Messaging",
                              "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                            },
                            {
                              "name": "Mission",
                              "value": "Mission",
                              "description": "This flow sends standard data but is subject to strict cloud owner approval."
                            },
                            {
                              "name": "MicrosoftInternal",
                              "value": "MicrosoftInternal",
                              "description": "This flow is assigned to internal Microsoft use cases."
                            },
                            {
                              "name": "BasicFiles",
                              "value": "BasicFiles",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Data",
                              "value": "Data",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Standard",
                              "value": "Standard",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "StreamingVideo",
                              "value": "StreamingVideo",
                              "description": "This flow sends video streams."
                            },
                            {
                              "name": "Opaque",
                              "value": "Opaque",
                              "description": "This flow sends blobs but is subject to cloud owner approval."
                            },
                            {
                              "name": "MissionOpaqueXML",
                              "value": "MissionOpaqueXML",
                              "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                            },
                            {
                              "name": "DiskImages",
                              "value": "DiskImages",
                              "description": "This flow sends blobs that can be used for Virtual Machines."
                            },
                            {
                              "name": "API",
                              "value": "API",
                              "description": "This flow sends data via an Application Programmer Interface."
                            }
                          ]
                        }
                      }
                    },
                    "quarantineDownloadStorageAccount": {
                      "type": "string",
                      "description": "Quarantine Download Storage Account"
                    },
                    "quarantineDownloadStorageContainer": {
                      "type": "string",
                      "description": "Quarantine Download Storage Container"
                    },
                    "status": {
                      "description": "Status of the current pipeline",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PipelineStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "The pipeline is currently enabled and all child connection and flow resources below able to send or receive data."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "The pipeline is currently disabled and all child connection and flow resources below are unable to send or receive data."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "remoteCloud"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Pipelines_CreateOrUpdate",
        "tags": [
          "Pipelines"
        ],
        "description": "Creates a new Pipeline resource or updates an existing one. This operation is asynchronous and returns the resulting Pipeline.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "pipelineName",
            "in": "path",
            "description": "The name of the pipeline on which to operate.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          },
          {
            "name": "pipeline",
            "in": "body",
            "description": "The request body containing the Pipeline definition.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The pipeline resource definition. A Pipeline defines the scope and identity under which data replication scenarios are managed.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The set of configurable properties for the Pipeline resource.",
                  "type": "object",
                  "properties": {
                    "remoteCloud": {
                      "type": "string",
                      "description": "Remote cloud of the data to be transferred or received"
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of this pipeline"
                    },
                    "connections": {
                      "type": "array",
                      "description": "Connections associated with pipeline",
                      "items": {
                        "type": "object",
                        "description": "The ReadPipelineconnection.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Connection id inside pipeline"
                          },
                          "name": {
                            "type": "string",
                            "description": "Connection name inside pipeline"
                          },
                          "type": {
                            "type": "string",
                            "description": "Connection type inside pipeline"
                          },
                          "location": {
                            "type": "string",
                            "description": "Connection location inside pipeline"
                          },
                          "etag": {
                            "type": "string",
                            "description": "Connection etag inside pipeline"
                          },
                          "systemData": {
                            "description": "Metadata pertaining to creation and last modification of the resource.",
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            },
                            "readOnly": true
                          },
                          "properties": {
                            "description": "Connection properties inside pipeline",
                            "type": "object",
                            "properties": {
                              "internalMetadata": {
                                "description": "Internal metadata of the connection inside pipeline.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "operationStatus": {
                                    "description": "Operation status associated with the last patch request",
                                    "readOnly": true,
                                    "type": "object",
                                    "properties": {
                                      "status": {
                                        "description": "Operation status for the last patch request for this connection.",
                                        "readOnly": true,
                                        "type": "string",
                                        "enum": [
                                          "Failed",
                                          "Succeeded"
                                        ],
                                        "x-ms-enum": {
                                          "name": "OperationStatusEnum",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Failed",
                                              "value": "Failed",
                                              "description": "The last patch request for this connection completed with an error."
                                            },
                                            {
                                              "name": "Succeeded",
                                              "value": "Succeeded",
                                              "description": "The last patch request for this connection completed."
                                            }
                                          ]
                                        }
                                      },
                                      "id": {
                                        "type": "string",
                                        "description": "Operation status ID of the last patch request for this connection.",
                                        "readOnly": true
                                      },
                                      "message": {
                                        "type": "string",
                                        "description": "Message for the operation for the last patch request for this connection.",
                                        "readOnly": true
                                      }
                                    }
                                  },
                                  "statusSetBy": {
                                    "type": "string",
                                    "description": "User that last set the approved status for this connection",
                                    "readOnly": true
                                  }
                                },
                                "additionalProperties": {}
                              }
                            },
                            "additionalProperties": {}
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "additionalProperties": {}
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "id"
                      ]
                    },
                    "subscribers": {
                      "type": "array",
                      "description": "Subscribers of this resource",
                      "items": {
                        "type": "object",
                        "description": "An individual that would like to subscribe to events that occur on a pipeline.",
                        "properties": {
                          "email": {
                            "type": "string",
                            "description": "Email of the subscriber"
                          },
                          "notifications": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Number specifying what notifications to receive"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the pipeline",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been accepted for creation."
                          }
                        ]
                      }
                    },
                    "policies": {
                      "type": "array",
                      "description": "The policies for this pipeline. The policies property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "flowTypes": {
                      "type": "array",
                      "description": "The flow type for this flow. The flowTypes property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string",
                        "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                        "enum": [
                          "Unknown",
                          "Complex",
                          "DevSecOps",
                          "Messaging",
                          "Mission",
                          "MicrosoftInternal",
                          "BasicFiles",
                          "Data",
                          "Standard",
                          "StreamingVideo",
                          "Opaque",
                          "MissionOpaqueXML",
                          "DiskImages",
                          "API"
                        ],
                        "x-ms-enum": {
                          "name": "FlowType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Unknown",
                              "value": "Unknown",
                              "description": "This type of flow is not set."
                            },
                            {
                              "name": "Complex",
                              "value": "Complex",
                              "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                            },
                            {
                              "name": "DevSecOps",
                              "value": "DevSecOps",
                              "description": "This flow sends source code files and artifacts."
                            },
                            {
                              "name": "Messaging",
                              "value": "Messaging",
                              "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                            },
                            {
                              "name": "Mission",
                              "value": "Mission",
                              "description": "This flow sends standard data but is subject to strict cloud owner approval."
                            },
                            {
                              "name": "MicrosoftInternal",
                              "value": "MicrosoftInternal",
                              "description": "This flow is assigned to internal Microsoft use cases."
                            },
                            {
                              "name": "BasicFiles",
                              "value": "BasicFiles",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Data",
                              "value": "Data",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Standard",
                              "value": "Standard",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "StreamingVideo",
                              "value": "StreamingVideo",
                              "description": "This flow sends video streams."
                            },
                            {
                              "name": "Opaque",
                              "value": "Opaque",
                              "description": "This flow sends blobs but is subject to cloud owner approval."
                            },
                            {
                              "name": "MissionOpaqueXML",
                              "value": "MissionOpaqueXML",
                              "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                            },
                            {
                              "name": "DiskImages",
                              "value": "DiskImages",
                              "description": "This flow sends blobs that can be used for Virtual Machines."
                            },
                            {
                              "name": "API",
                              "value": "API",
                              "description": "This flow sends data via an Application Programmer Interface."
                            }
                          ]
                        }
                      }
                    },
                    "disabledFlowTypes": {
                      "type": "array",
                      "description": "The flow types that are disabled for this pipeline",
                      "items": {
                        "type": "string",
                        "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                        "enum": [
                          "Unknown",
                          "Complex",
                          "DevSecOps",
                          "Messaging",
                          "Mission",
                          "MicrosoftInternal",
                          "BasicFiles",
                          "Data",
                          "Standard",
                          "StreamingVideo",
                          "Opaque",
                          "MissionOpaqueXML",
                          "DiskImages",
                          "API"
                        ],
                        "x-ms-enum": {
                          "name": "FlowType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Unknown",
                              "value": "Unknown",
                              "description": "This type of flow is not set."
                            },
                            {
                              "name": "Complex",
                              "value": "Complex",
                              "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                            },
                            {
                              "name": "DevSecOps",
                              "value": "DevSecOps",
                              "description": "This flow sends source code files and artifacts."
                            },
                            {
                              "name": "Messaging",
                              "value": "Messaging",
                              "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                            },
                            {
                              "name": "Mission",
                              "value": "Mission",
                              "description": "This flow sends standard data but is subject to strict cloud owner approval."
                            },
                            {
                              "name": "MicrosoftInternal",
                              "value": "MicrosoftInternal",
                              "description": "This flow is assigned to internal Microsoft use cases."
                            },
                            {
                              "name": "BasicFiles",
                              "value": "BasicFiles",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Data",
                              "value": "Data",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Standard",
                              "value": "Standard",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "StreamingVideo",
                              "value": "StreamingVideo",
                              "description": "This flow sends video streams."
                            },
                            {
                              "name": "Opaque",
                              "value": "Opaque",
                              "description": "This flow sends blobs but is subject to cloud owner approval."
                            },
                            {
                              "name": "MissionOpaqueXML",
                              "value": "MissionOpaqueXML",
                              "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                            },
                            {
                              "name": "DiskImages",
                              "value": "DiskImages",
                              "description": "This flow sends blobs that can be used for Virtual Machines."
                            },
                            {
                              "name": "API",
                              "value": "API",
                              "description": "This flow sends data via an Application Programmer Interface."
                            }
                          ]
                        }
                      }
                    },
                    "quarantineDownloadStorageAccount": {
                      "type": "string",
                      "description": "Quarantine Download Storage Account"
                    },
                    "quarantineDownloadStorageContainer": {
                      "type": "string",
                      "description": "Quarantine Download Storage Container"
                    },
                    "status": {
                      "description": "Status of the current pipeline",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PipelineStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "The pipeline is currently enabled and all child connection and flow resources below able to send or receive data."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "The pipeline is currently disabled and all child connection and flow resources below are unable to send or receive data."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "remoteCloud"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Pipeline' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "The pipeline resource definition. A Pipeline defines the scope and identity under which data replication scenarios are managed.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The set of configurable properties for the Pipeline resource.",
                  "type": "object",
                  "properties": {
                    "remoteCloud": {
                      "type": "string",
                      "description": "Remote cloud of the data to be transferred or received"
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of this pipeline"
                    },
                    "connections": {
                      "type": "array",
                      "description": "Connections associated with pipeline",
                      "items": {
                        "type": "object",
                        "description": "The ReadPipelineconnection.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Connection id inside pipeline"
                          },
                          "name": {
                            "type": "string",
                            "description": "Connection name inside pipeline"
                          },
                          "type": {
                            "type": "string",
                            "description": "Connection type inside pipeline"
                          },
                          "location": {
                            "type": "string",
                            "description": "Connection location inside pipeline"
                          },
                          "etag": {
                            "type": "string",
                            "description": "Connection etag inside pipeline"
                          },
                          "systemData": {
                            "description": "Metadata pertaining to creation and last modification of the resource.",
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            },
                            "readOnly": true
                          },
                          "properties": {
                            "description": "Connection properties inside pipeline",
                            "type": "object",
                            "properties": {
                              "internalMetadata": {
                                "description": "Internal metadata of the connection inside pipeline.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "operationStatus": {
                                    "description": "Operation status associated with the last patch request",
                                    "readOnly": true,
                                    "type": "object",
                                    "properties": {
                                      "status": {
                                        "description": "Operation status for the last patch request for this connection.",
                                        "readOnly": true,
                                        "type": "string",
                                        "enum": [
                                          "Failed",
                                          "Succeeded"
                                        ],
                                        "x-ms-enum": {
                                          "name": "OperationStatusEnum",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Failed",
                                              "value": "Failed",
                                              "description": "The last patch request for this connection completed with an error."
                                            },
                                            {
                                              "name": "Succeeded",
                                              "value": "Succeeded",
                                              "description": "The last patch request for this connection completed."
                                            }
                                          ]
                                        }
                                      },
                                      "id": {
                                        "type": "string",
                                        "description": "Operation status ID of the last patch request for this connection.",
                                        "readOnly": true
                                      },
                                      "message": {
                                        "type": "string",
                                        "description": "Message for the operation for the last patch request for this connection.",
                                        "readOnly": true
                                      }
                                    }
                                  },
                                  "statusSetBy": {
                                    "type": "string",
                                    "description": "User that last set the approved status for this connection",
                                    "readOnly": true
                                  }
                                },
                                "additionalProperties": {}
                              }
                            },
                            "additionalProperties": {}
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "additionalProperties": {}
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "id"
                      ]
                    },
                    "subscribers": {
                      "type": "array",
                      "description": "Subscribers of this resource",
                      "items": {
                        "type": "object",
                        "description": "An individual that would like to subscribe to events that occur on a pipeline.",
                        "properties": {
                          "email": {
                            "type": "string",
                            "description": "Email of the subscriber"
                          },
                          "notifications": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Number specifying what notifications to receive"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the pipeline",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been accepted for creation."
                          }
                        ]
                      }
                    },
                    "policies": {
                      "type": "array",
                      "description": "The policies for this pipeline. The policies property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "flowTypes": {
                      "type": "array",
                      "description": "The flow type for this flow. The flowTypes property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string",
                        "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                        "enum": [
                          "Unknown",
                          "Complex",
                          "DevSecOps",
                          "Messaging",
                          "Mission",
                          "MicrosoftInternal",
                          "BasicFiles",
                          "Data",
                          "Standard",
                          "StreamingVideo",
                          "Opaque",
                          "MissionOpaqueXML",
                          "DiskImages",
                          "API"
                        ],
                        "x-ms-enum": {
                          "name": "FlowType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Unknown",
                              "value": "Unknown",
                              "description": "This type of flow is not set."
                            },
                            {
                              "name": "Complex",
                              "value": "Complex",
                              "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                            },
                            {
                              "name": "DevSecOps",
                              "value": "DevSecOps",
                              "description": "This flow sends source code files and artifacts."
                            },
                            {
                              "name": "Messaging",
                              "value": "Messaging",
                              "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                            },
                            {
                              "name": "Mission",
                              "value": "Mission",
                              "description": "This flow sends standard data but is subject to strict cloud owner approval."
                            },
                            {
                              "name": "MicrosoftInternal",
                              "value": "MicrosoftInternal",
                              "description": "This flow is assigned to internal Microsoft use cases."
                            },
                            {
                              "name": "BasicFiles",
                              "value": "BasicFiles",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Data",
                              "value": "Data",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Standard",
                              "value": "Standard",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "StreamingVideo",
                              "value": "StreamingVideo",
                              "description": "This flow sends video streams."
                            },
                            {
                              "name": "Opaque",
                              "value": "Opaque",
                              "description": "This flow sends blobs but is subject to cloud owner approval."
                            },
                            {
                              "name": "MissionOpaqueXML",
                              "value": "MissionOpaqueXML",
                              "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                            },
                            {
                              "name": "DiskImages",
                              "value": "DiskImages",
                              "description": "This flow sends blobs that can be used for Virtual Machines."
                            },
                            {
                              "name": "API",
                              "value": "API",
                              "description": "This flow sends data via an Application Programmer Interface."
                            }
                          ]
                        }
                      }
                    },
                    "disabledFlowTypes": {
                      "type": "array",
                      "description": "The flow types that are disabled for this pipeline",
                      "items": {
                        "type": "string",
                        "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                        "enum": [
                          "Unknown",
                          "Complex",
                          "DevSecOps",
                          "Messaging",
                          "Mission",
                          "MicrosoftInternal",
                          "BasicFiles",
                          "Data",
                          "Standard",
                          "StreamingVideo",
                          "Opaque",
                          "MissionOpaqueXML",
                          "DiskImages",
                          "API"
                        ],
                        "x-ms-enum": {
                          "name": "FlowType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Unknown",
                              "value": "Unknown",
                              "description": "This type of flow is not set."
                            },
                            {
                              "name": "Complex",
                              "value": "Complex",
                              "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                            },
                            {
                              "name": "DevSecOps",
                              "value": "DevSecOps",
                              "description": "This flow sends source code files and artifacts."
                            },
                            {
                              "name": "Messaging",
                              "value": "Messaging",
                              "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                            },
                            {
                              "name": "Mission",
                              "value": "Mission",
                              "description": "This flow sends standard data but is subject to strict cloud owner approval."
                            },
                            {
                              "name": "MicrosoftInternal",
                              "value": "MicrosoftInternal",
                              "description": "This flow is assigned to internal Microsoft use cases."
                            },
                            {
                              "name": "BasicFiles",
                              "value": "BasicFiles",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Data",
                              "value": "Data",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Standard",
                              "value": "Standard",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "StreamingVideo",
                              "value": "StreamingVideo",
                              "description": "This flow sends video streams."
                            },
                            {
                              "name": "Opaque",
                              "value": "Opaque",
                              "description": "This flow sends blobs but is subject to cloud owner approval."
                            },
                            {
                              "name": "MissionOpaqueXML",
                              "value": "MissionOpaqueXML",
                              "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                            },
                            {
                              "name": "DiskImages",
                              "value": "DiskImages",
                              "description": "This flow sends blobs that can be used for Virtual Machines."
                            },
                            {
                              "name": "API",
                              "value": "API",
                              "description": "This flow sends data via an Application Programmer Interface."
                            }
                          ]
                        }
                      }
                    },
                    "quarantineDownloadStorageAccount": {
                      "type": "string",
                      "description": "Quarantine Download Storage Account"
                    },
                    "quarantineDownloadStorageContainer": {
                      "type": "string",
                      "description": "Quarantine Download Storage Container"
                    },
                    "status": {
                      "description": "Status of the current pipeline",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PipelineStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "The pipeline is currently enabled and all child connection and flow resources below able to send or receive data."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "The pipeline is currently disabled and all child connection and flow resources below are unable to send or receive data."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "remoteCloud"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'Pipeline' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "The pipeline resource definition. A Pipeline defines the scope and identity under which data replication scenarios are managed.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The set of configurable properties for the Pipeline resource.",
                  "type": "object",
                  "properties": {
                    "remoteCloud": {
                      "type": "string",
                      "description": "Remote cloud of the data to be transferred or received"
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of this pipeline"
                    },
                    "connections": {
                      "type": "array",
                      "description": "Connections associated with pipeline",
                      "items": {
                        "type": "object",
                        "description": "The ReadPipelineconnection.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Connection id inside pipeline"
                          },
                          "name": {
                            "type": "string",
                            "description": "Connection name inside pipeline"
                          },
                          "type": {
                            "type": "string",
                            "description": "Connection type inside pipeline"
                          },
                          "location": {
                            "type": "string",
                            "description": "Connection location inside pipeline"
                          },
                          "etag": {
                            "type": "string",
                            "description": "Connection etag inside pipeline"
                          },
                          "systemData": {
                            "description": "Metadata pertaining to creation and last modification of the resource.",
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            },
                            "readOnly": true
                          },
                          "properties": {
                            "description": "Connection properties inside pipeline",
                            "type": "object",
                            "properties": {
                              "internalMetadata": {
                                "description": "Internal metadata of the connection inside pipeline.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "operationStatus": {
                                    "description": "Operation status associated with the last patch request",
                                    "readOnly": true,
                                    "type": "object",
                                    "properties": {
                                      "status": {
                                        "description": "Operation status for the last patch request for this connection.",
                                        "readOnly": true,
                                        "type": "string",
                                        "enum": [
                                          "Failed",
                                          "Succeeded"
                                        ],
                                        "x-ms-enum": {
                                          "name": "OperationStatusEnum",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Failed",
                                              "value": "Failed",
                                              "description": "The last patch request for this connection completed with an error."
                                            },
                                            {
                                              "name": "Succeeded",
                                              "value": "Succeeded",
                                              "description": "The last patch request for this connection completed."
                                            }
                                          ]
                                        }
                                      },
                                      "id": {
                                        "type": "string",
                                        "description": "Operation status ID of the last patch request for this connection.",
                                        "readOnly": true
                                      },
                                      "message": {
                                        "type": "string",
                                        "description": "Message for the operation for the last patch request for this connection.",
                                        "readOnly": true
                                      }
                                    }
                                  },
                                  "statusSetBy": {
                                    "type": "string",
                                    "description": "User that last set the approved status for this connection",
                                    "readOnly": true
                                  }
                                },
                                "additionalProperties": {}
                              }
                            },
                            "additionalProperties": {}
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "additionalProperties": {}
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "id"
                      ]
                    },
                    "subscribers": {
                      "type": "array",
                      "description": "Subscribers of this resource",
                      "items": {
                        "type": "object",
                        "description": "An individual that would like to subscribe to events that occur on a pipeline.",
                        "properties": {
                          "email": {
                            "type": "string",
                            "description": "Email of the subscriber"
                          },
                          "notifications": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Number specifying what notifications to receive"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the pipeline",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been accepted for creation."
                          }
                        ]
                      }
                    },
                    "policies": {
                      "type": "array",
                      "description": "The policies for this pipeline. The policies property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "flowTypes": {
                      "type": "array",
                      "description": "The flow type for this flow. The flowTypes property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string",
                        "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                        "enum": [
                          "Unknown",
                          "Complex",
                          "DevSecOps",
                          "Messaging",
                          "Mission",
                          "MicrosoftInternal",
                          "BasicFiles",
                          "Data",
                          "Standard",
                          "StreamingVideo",
                          "Opaque",
                          "MissionOpaqueXML",
                          "DiskImages",
                          "API"
                        ],
                        "x-ms-enum": {
                          "name": "FlowType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Unknown",
                              "value": "Unknown",
                              "description": "This type of flow is not set."
                            },
                            {
                              "name": "Complex",
                              "value": "Complex",
                              "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                            },
                            {
                              "name": "DevSecOps",
                              "value": "DevSecOps",
                              "description": "This flow sends source code files and artifacts."
                            },
                            {
                              "name": "Messaging",
                              "value": "Messaging",
                              "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                            },
                            {
                              "name": "Mission",
                              "value": "Mission",
                              "description": "This flow sends standard data but is subject to strict cloud owner approval."
                            },
                            {
                              "name": "MicrosoftInternal",
                              "value": "MicrosoftInternal",
                              "description": "This flow is assigned to internal Microsoft use cases."
                            },
                            {
                              "name": "BasicFiles",
                              "value": "BasicFiles",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Data",
                              "value": "Data",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Standard",
                              "value": "Standard",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "StreamingVideo",
                              "value": "StreamingVideo",
                              "description": "This flow sends video streams."
                            },
                            {
                              "name": "Opaque",
                              "value": "Opaque",
                              "description": "This flow sends blobs but is subject to cloud owner approval."
                            },
                            {
                              "name": "MissionOpaqueXML",
                              "value": "MissionOpaqueXML",
                              "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                            },
                            {
                              "name": "DiskImages",
                              "value": "DiskImages",
                              "description": "This flow sends blobs that can be used for Virtual Machines."
                            },
                            {
                              "name": "API",
                              "value": "API",
                              "description": "This flow sends data via an Application Programmer Interface."
                            }
                          ]
                        }
                      }
                    },
                    "disabledFlowTypes": {
                      "type": "array",
                      "description": "The flow types that are disabled for this pipeline",
                      "items": {
                        "type": "string",
                        "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                        "enum": [
                          "Unknown",
                          "Complex",
                          "DevSecOps",
                          "Messaging",
                          "Mission",
                          "MicrosoftInternal",
                          "BasicFiles",
                          "Data",
                          "Standard",
                          "StreamingVideo",
                          "Opaque",
                          "MissionOpaqueXML",
                          "DiskImages",
                          "API"
                        ],
                        "x-ms-enum": {
                          "name": "FlowType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Unknown",
                              "value": "Unknown",
                              "description": "This type of flow is not set."
                            },
                            {
                              "name": "Complex",
                              "value": "Complex",
                              "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                            },
                            {
                              "name": "DevSecOps",
                              "value": "DevSecOps",
                              "description": "This flow sends source code files and artifacts."
                            },
                            {
                              "name": "Messaging",
                              "value": "Messaging",
                              "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                            },
                            {
                              "name": "Mission",
                              "value": "Mission",
                              "description": "This flow sends standard data but is subject to strict cloud owner approval."
                            },
                            {
                              "name": "MicrosoftInternal",
                              "value": "MicrosoftInternal",
                              "description": "This flow is assigned to internal Microsoft use cases."
                            },
                            {
                              "name": "BasicFiles",
                              "value": "BasicFiles",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Data",
                              "value": "Data",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Standard",
                              "value": "Standard",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "StreamingVideo",
                              "value": "StreamingVideo",
                              "description": "This flow sends video streams."
                            },
                            {
                              "name": "Opaque",
                              "value": "Opaque",
                              "description": "This flow sends blobs but is subject to cloud owner approval."
                            },
                            {
                              "name": "MissionOpaqueXML",
                              "value": "MissionOpaqueXML",
                              "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                            },
                            {
                              "name": "DiskImages",
                              "value": "DiskImages",
                              "description": "This flow sends blobs that can be used for Virtual Machines."
                            },
                            {
                              "name": "API",
                              "value": "API",
                              "description": "This flow sends data via an Application Programmer Interface."
                            }
                          ]
                        }
                      }
                    },
                    "quarantineDownloadStorageAccount": {
                      "type": "string",
                      "description": "Quarantine Download Storage Account"
                    },
                    "quarantineDownloadStorageContainer": {
                      "type": "string",
                      "description": "Quarantine Download Storage Container"
                    },
                    "status": {
                      "description": "Status of the current pipeline",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PipelineStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "The pipeline is currently enabled and all child connection and flow resources below able to send or receive data."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "The pipeline is currently disabled and all child connection and flow resources below are unable to send or receive data."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "remoteCloud"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Pipelines_Update",
        "tags": [
          "Pipelines"
        ],
        "description": "Applies partial updates to an existing Pipeline resource. This operation supports patch semantics and returns the updated Pipeline.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "pipelineName",
            "in": "path",
            "description": "The name of the pipeline on which to operate.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          },
          {
            "name": "pipeline",
            "in": "body",
            "description": "The request body containing the updated Pipeline properties.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The pipelines resource patch definition.",
              "properties": {
                "properties": {
                  "description": "Properties of pipelines patch body.",
                  "type": "object",
                  "properties": {
                    "flowTypes": {
                      "type": "array",
                      "description": "The flow types allowed for this pipeline. FlowTypes has reached end of life support starting version 2025-05-30-preview. Please create and use the FlowProfile property instead.",
                      "items": {
                        "type": "string",
                        "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                        "enum": [
                          "Unknown",
                          "Complex",
                          "DevSecOps",
                          "Messaging",
                          "Mission",
                          "MicrosoftInternal",
                          "BasicFiles",
                          "Data",
                          "Standard",
                          "StreamingVideo",
                          "Opaque",
                          "MissionOpaqueXML",
                          "DiskImages",
                          "API"
                        ],
                        "x-ms-enum": {
                          "name": "FlowType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Unknown",
                              "value": "Unknown",
                              "description": "This type of flow is not set."
                            },
                            {
                              "name": "Complex",
                              "value": "Complex",
                              "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                            },
                            {
                              "name": "DevSecOps",
                              "value": "DevSecOps",
                              "description": "This flow sends source code files and artifacts."
                            },
                            {
                              "name": "Messaging",
                              "value": "Messaging",
                              "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                            },
                            {
                              "name": "Mission",
                              "value": "Mission",
                              "description": "This flow sends standard data but is subject to strict cloud owner approval."
                            },
                            {
                              "name": "MicrosoftInternal",
                              "value": "MicrosoftInternal",
                              "description": "This flow is assigned to internal Microsoft use cases."
                            },
                            {
                              "name": "BasicFiles",
                              "value": "BasicFiles",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Data",
                              "value": "Data",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Standard",
                              "value": "Standard",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "StreamingVideo",
                              "value": "StreamingVideo",
                              "description": "This flow sends video streams."
                            },
                            {
                              "name": "Opaque",
                              "value": "Opaque",
                              "description": "This flow sends blobs but is subject to cloud owner approval."
                            },
                            {
                              "name": "MissionOpaqueXML",
                              "value": "MissionOpaqueXML",
                              "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                            },
                            {
                              "name": "DiskImages",
                              "value": "DiskImages",
                              "description": "This flow sends blobs that can be used for Virtual Machines."
                            },
                            {
                              "name": "API",
                              "value": "API",
                              "description": "This flow sends data via an Application Programmer Interface."
                            }
                          ]
                        }
                      }
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The pipeline resource definition. A Pipeline defines the scope and identity under which data replication scenarios are managed.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The set of configurable properties for the Pipeline resource.",
                  "type": "object",
                  "properties": {
                    "remoteCloud": {
                      "type": "string",
                      "description": "Remote cloud of the data to be transferred or received"
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of this pipeline"
                    },
                    "connections": {
                      "type": "array",
                      "description": "Connections associated with pipeline",
                      "items": {
                        "type": "object",
                        "description": "The ReadPipelineconnection.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Connection id inside pipeline"
                          },
                          "name": {
                            "type": "string",
                            "description": "Connection name inside pipeline"
                          },
                          "type": {
                            "type": "string",
                            "description": "Connection type inside pipeline"
                          },
                          "location": {
                            "type": "string",
                            "description": "Connection location inside pipeline"
                          },
                          "etag": {
                            "type": "string",
                            "description": "Connection etag inside pipeline"
                          },
                          "systemData": {
                            "description": "Metadata pertaining to creation and last modification of the resource.",
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            },
                            "readOnly": true
                          },
                          "properties": {
                            "description": "Connection properties inside pipeline",
                            "type": "object",
                            "properties": {
                              "internalMetadata": {
                                "description": "Internal metadata of the connection inside pipeline.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "operationStatus": {
                                    "description": "Operation status associated with the last patch request",
                                    "readOnly": true,
                                    "type": "object",
                                    "properties": {
                                      "status": {
                                        "description": "Operation status for the last patch request for this connection.",
                                        "readOnly": true,
                                        "type": "string",
                                        "enum": [
                                          "Failed",
                                          "Succeeded"
                                        ],
                                        "x-ms-enum": {
                                          "name": "OperationStatusEnum",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Failed",
                                              "value": "Failed",
                                              "description": "The last patch request for this connection completed with an error."
                                            },
                                            {
                                              "name": "Succeeded",
                                              "value": "Succeeded",
                                              "description": "The last patch request for this connection completed."
                                            }
                                          ]
                                        }
                                      },
                                      "id": {
                                        "type": "string",
                                        "description": "Operation status ID of the last patch request for this connection.",
                                        "readOnly": true
                                      },
                                      "message": {
                                        "type": "string",
                                        "description": "Message for the operation for the last patch request for this connection.",
                                        "readOnly": true
                                      }
                                    }
                                  },
                                  "statusSetBy": {
                                    "type": "string",
                                    "description": "User that last set the approved status for this connection",
                                    "readOnly": true
                                  }
                                },
                                "additionalProperties": {}
                              }
                            },
                            "additionalProperties": {}
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "additionalProperties": {}
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "id"
                      ]
                    },
                    "subscribers": {
                      "type": "array",
                      "description": "Subscribers of this resource",
                      "items": {
                        "type": "object",
                        "description": "An individual that would like to subscribe to events that occur on a pipeline.",
                        "properties": {
                          "email": {
                            "type": "string",
                            "description": "Email of the subscriber"
                          },
                          "notifications": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Number specifying what notifications to receive"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the pipeline",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been accepted for creation."
                          }
                        ]
                      }
                    },
                    "policies": {
                      "type": "array",
                      "description": "The policies for this pipeline. The policies property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "flowTypes": {
                      "type": "array",
                      "description": "The flow type for this flow. The flowTypes property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string",
                        "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                        "enum": [
                          "Unknown",
                          "Complex",
                          "DevSecOps",
                          "Messaging",
                          "Mission",
                          "MicrosoftInternal",
                          "BasicFiles",
                          "Data",
                          "Standard",
                          "StreamingVideo",
                          "Opaque",
                          "MissionOpaqueXML",
                          "DiskImages",
                          "API"
                        ],
                        "x-ms-enum": {
                          "name": "FlowType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Unknown",
                              "value": "Unknown",
                              "description": "This type of flow is not set."
                            },
                            {
                              "name": "Complex",
                              "value": "Complex",
                              "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                            },
                            {
                              "name": "DevSecOps",
                              "value": "DevSecOps",
                              "description": "This flow sends source code files and artifacts."
                            },
                            {
                              "name": "Messaging",
                              "value": "Messaging",
                              "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                            },
                            {
                              "name": "Mission",
                              "value": "Mission",
                              "description": "This flow sends standard data but is subject to strict cloud owner approval."
                            },
                            {
                              "name": "MicrosoftInternal",
                              "value": "MicrosoftInternal",
                              "description": "This flow is assigned to internal Microsoft use cases."
                            },
                            {
                              "name": "BasicFiles",
                              "value": "BasicFiles",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Data",
                              "value": "Data",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Standard",
                              "value": "Standard",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "StreamingVideo",
                              "value": "StreamingVideo",
                              "description": "This flow sends video streams."
                            },
                            {
                              "name": "Opaque",
                              "value": "Opaque",
                              "description": "This flow sends blobs but is subject to cloud owner approval."
                            },
                            {
                              "name": "MissionOpaqueXML",
                              "value": "MissionOpaqueXML",
                              "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                            },
                            {
                              "name": "DiskImages",
                              "value": "DiskImages",
                              "description": "This flow sends blobs that can be used for Virtual Machines."
                            },
                            {
                              "name": "API",
                              "value": "API",
                              "description": "This flow sends data via an Application Programmer Interface."
                            }
                          ]
                        }
                      }
                    },
                    "disabledFlowTypes": {
                      "type": "array",
                      "description": "The flow types that are disabled for this pipeline",
                      "items": {
                        "type": "string",
                        "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                        "enum": [
                          "Unknown",
                          "Complex",
                          "DevSecOps",
                          "Messaging",
                          "Mission",
                          "MicrosoftInternal",
                          "BasicFiles",
                          "Data",
                          "Standard",
                          "StreamingVideo",
                          "Opaque",
                          "MissionOpaqueXML",
                          "DiskImages",
                          "API"
                        ],
                        "x-ms-enum": {
                          "name": "FlowType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Unknown",
                              "value": "Unknown",
                              "description": "This type of flow is not set."
                            },
                            {
                              "name": "Complex",
                              "value": "Complex",
                              "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                            },
                            {
                              "name": "DevSecOps",
                              "value": "DevSecOps",
                              "description": "This flow sends source code files and artifacts."
                            },
                            {
                              "name": "Messaging",
                              "value": "Messaging",
                              "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                            },
                            {
                              "name": "Mission",
                              "value": "Mission",
                              "description": "This flow sends standard data but is subject to strict cloud owner approval."
                            },
                            {
                              "name": "MicrosoftInternal",
                              "value": "MicrosoftInternal",
                              "description": "This flow is assigned to internal Microsoft use cases."
                            },
                            {
                              "name": "BasicFiles",
                              "value": "BasicFiles",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Data",
                              "value": "Data",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Standard",
                              "value": "Standard",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "StreamingVideo",
                              "value": "StreamingVideo",
                              "description": "This flow sends video streams."
                            },
                            {
                              "name": "Opaque",
                              "value": "Opaque",
                              "description": "This flow sends blobs but is subject to cloud owner approval."
                            },
                            {
                              "name": "MissionOpaqueXML",
                              "value": "MissionOpaqueXML",
                              "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                            },
                            {
                              "name": "DiskImages",
                              "value": "DiskImages",
                              "description": "This flow sends blobs that can be used for Virtual Machines."
                            },
                            {
                              "name": "API",
                              "value": "API",
                              "description": "This flow sends data via an Application Programmer Interface."
                            }
                          ]
                        }
                      }
                    },
                    "quarantineDownloadStorageAccount": {
                      "type": "string",
                      "description": "Quarantine Download Storage Account"
                    },
                    "quarantineDownloadStorageContainer": {
                      "type": "string",
                      "description": "Quarantine Download Storage Container"
                    },
                    "status": {
                      "description": "Status of the current pipeline",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PipelineStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "The pipeline is currently enabled and all child connection and flow resources below able to send or receive data."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "The pipeline is currently disabled and all child connection and flow resources below are unable to send or receive data."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "remoteCloud"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "type": "object",
              "description": "The pipeline resource definition. A Pipeline defines the scope and identity under which data replication scenarios are managed.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The set of configurable properties for the Pipeline resource.",
                  "type": "object",
                  "properties": {
                    "remoteCloud": {
                      "type": "string",
                      "description": "Remote cloud of the data to be transferred or received"
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of this pipeline"
                    },
                    "connections": {
                      "type": "array",
                      "description": "Connections associated with pipeline",
                      "items": {
                        "type": "object",
                        "description": "The ReadPipelineconnection.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Connection id inside pipeline"
                          },
                          "name": {
                            "type": "string",
                            "description": "Connection name inside pipeline"
                          },
                          "type": {
                            "type": "string",
                            "description": "Connection type inside pipeline"
                          },
                          "location": {
                            "type": "string",
                            "description": "Connection location inside pipeline"
                          },
                          "etag": {
                            "type": "string",
                            "description": "Connection etag inside pipeline"
                          },
                          "systemData": {
                            "description": "Metadata pertaining to creation and last modification of the resource.",
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            },
                            "readOnly": true
                          },
                          "properties": {
                            "description": "Connection properties inside pipeline",
                            "type": "object",
                            "properties": {
                              "internalMetadata": {
                                "description": "Internal metadata of the connection inside pipeline.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "operationStatus": {
                                    "description": "Operation status associated with the last patch request",
                                    "readOnly": true,
                                    "type": "object",
                                    "properties": {
                                      "status": {
                                        "description": "Operation status for the last patch request for this connection.",
                                        "readOnly": true,
                                        "type": "string",
                                        "enum": [
                                          "Failed",
                                          "Succeeded"
                                        ],
                                        "x-ms-enum": {
                                          "name": "OperationStatusEnum",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Failed",
                                              "value": "Failed",
                                              "description": "The last patch request for this connection completed with an error."
                                            },
                                            {
                                              "name": "Succeeded",
                                              "value": "Succeeded",
                                              "description": "The last patch request for this connection completed."
                                            }
                                          ]
                                        }
                                      },
                                      "id": {
                                        "type": "string",
                                        "description": "Operation status ID of the last patch request for this connection.",
                                        "readOnly": true
                                      },
                                      "message": {
                                        "type": "string",
                                        "description": "Message for the operation for the last patch request for this connection.",
                                        "readOnly": true
                                      }
                                    }
                                  },
                                  "statusSetBy": {
                                    "type": "string",
                                    "description": "User that last set the approved status for this connection",
                                    "readOnly": true
                                  }
                                },
                                "additionalProperties": {}
                              }
                            },
                            "additionalProperties": {}
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "additionalProperties": {}
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "id"
                      ]
                    },
                    "subscribers": {
                      "type": "array",
                      "description": "Subscribers of this resource",
                      "items": {
                        "type": "object",
                        "description": "An individual that would like to subscribe to events that occur on a pipeline.",
                        "properties": {
                          "email": {
                            "type": "string",
                            "description": "Email of the subscriber"
                          },
                          "notifications": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Number specifying what notifications to receive"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the pipeline",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been accepted for creation."
                          }
                        ]
                      }
                    },
                    "policies": {
                      "type": "array",
                      "description": "The policies for this pipeline. The policies property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "flowTypes": {
                      "type": "array",
                      "description": "The flow type for this flow. The flowTypes property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string",
                        "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                        "enum": [
                          "Unknown",
                          "Complex",
                          "DevSecOps",
                          "Messaging",
                          "Mission",
                          "MicrosoftInternal",
                          "BasicFiles",
                          "Data",
                          "Standard",
                          "StreamingVideo",
                          "Opaque",
                          "MissionOpaqueXML",
                          "DiskImages",
                          "API"
                        ],
                        "x-ms-enum": {
                          "name": "FlowType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Unknown",
                              "value": "Unknown",
                              "description": "This type of flow is not set."
                            },
                            {
                              "name": "Complex",
                              "value": "Complex",
                              "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                            },
                            {
                              "name": "DevSecOps",
                              "value": "DevSecOps",
                              "description": "This flow sends source code files and artifacts."
                            },
                            {
                              "name": "Messaging",
                              "value": "Messaging",
                              "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                            },
                            {
                              "name": "Mission",
                              "value": "Mission",
                              "description": "This flow sends standard data but is subject to strict cloud owner approval."
                            },
                            {
                              "name": "MicrosoftInternal",
                              "value": "MicrosoftInternal",
                              "description": "This flow is assigned to internal Microsoft use cases."
                            },
                            {
                              "name": "BasicFiles",
                              "value": "BasicFiles",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Data",
                              "value": "Data",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Standard",
                              "value": "Standard",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "StreamingVideo",
                              "value": "StreamingVideo",
                              "description": "This flow sends video streams."
                            },
                            {
                              "name": "Opaque",
                              "value": "Opaque",
                              "description": "This flow sends blobs but is subject to cloud owner approval."
                            },
                            {
                              "name": "MissionOpaqueXML",
                              "value": "MissionOpaqueXML",
                              "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                            },
                            {
                              "name": "DiskImages",
                              "value": "DiskImages",
                              "description": "This flow sends blobs that can be used for Virtual Machines."
                            },
                            {
                              "name": "API",
                              "value": "API",
                              "description": "This flow sends data via an Application Programmer Interface."
                            }
                          ]
                        }
                      }
                    },
                    "disabledFlowTypes": {
                      "type": "array",
                      "description": "The flow types that are disabled for this pipeline",
                      "items": {
                        "type": "string",
                        "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                        "enum": [
                          "Unknown",
                          "Complex",
                          "DevSecOps",
                          "Messaging",
                          "Mission",
                          "MicrosoftInternal",
                          "BasicFiles",
                          "Data",
                          "Standard",
                          "StreamingVideo",
                          "Opaque",
                          "MissionOpaqueXML",
                          "DiskImages",
                          "API"
                        ],
                        "x-ms-enum": {
                          "name": "FlowType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Unknown",
                              "value": "Unknown",
                              "description": "This type of flow is not set."
                            },
                            {
                              "name": "Complex",
                              "value": "Complex",
                              "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                            },
                            {
                              "name": "DevSecOps",
                              "value": "DevSecOps",
                              "description": "This flow sends source code files and artifacts."
                            },
                            {
                              "name": "Messaging",
                              "value": "Messaging",
                              "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                            },
                            {
                              "name": "Mission",
                              "value": "Mission",
                              "description": "This flow sends standard data but is subject to strict cloud owner approval."
                            },
                            {
                              "name": "MicrosoftInternal",
                              "value": "MicrosoftInternal",
                              "description": "This flow is assigned to internal Microsoft use cases."
                            },
                            {
                              "name": "BasicFiles",
                              "value": "BasicFiles",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Data",
                              "value": "Data",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Standard",
                              "value": "Standard",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "StreamingVideo",
                              "value": "StreamingVideo",
                              "description": "This flow sends video streams."
                            },
                            {
                              "name": "Opaque",
                              "value": "Opaque",
                              "description": "This flow sends blobs but is subject to cloud owner approval."
                            },
                            {
                              "name": "MissionOpaqueXML",
                              "value": "MissionOpaqueXML",
                              "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                            },
                            {
                              "name": "DiskImages",
                              "value": "DiskImages",
                              "description": "This flow sends blobs that can be used for Virtual Machines."
                            },
                            {
                              "name": "API",
                              "value": "API",
                              "description": "This flow sends data via an Application Programmer Interface."
                            }
                          ]
                        }
                      }
                    },
                    "quarantineDownloadStorageAccount": {
                      "type": "string",
                      "description": "Quarantine Download Storage Account"
                    },
                    "quarantineDownloadStorageContainer": {
                      "type": "string",
                      "description": "Quarantine Download Storage Container"
                    },
                    "status": {
                      "description": "Status of the current pipeline",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PipelineStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "The pipeline is currently enabled and all child connection and flow resources below able to send or receive data."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "The pipeline is currently disabled and all child connection and flow resources below are unable to send or receive data."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "remoteCloud"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Pipelines_Delete",
        "tags": [
          "Pipelines"
        ],
        "description": "Deletes the specified Pipeline resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "pipelineName",
            "in": "path",
            "description": "The name of the pipeline on which to operate.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/pipelines/{pipelineName}/approveConnection": {
      "post": {
        "operationId": "Pipelines_ApproveConnection",
        "tags": [
          "Pipelines"
        ],
        "description": "Approves a pending connection request associated with the specified Pipeline.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "pipelineName",
            "in": "path",
            "description": "The name of the pipeline on which to operate.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          },
          {
            "name": "connection",
            "in": "body",
            "description": "The request body containing the connection to approve.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The resource to reference.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "ID of the resource."
                },
                "statusReason": {
                  "type": "string",
                  "description": "Reason for resource operation."
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The connection resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of connection",
                  "type": "object",
                  "properties": {
                    "pipeline": {
                      "type": "string",
                      "description": "Pipeline to use to transfer data"
                    },
                    "direction": {
                      "description": "Direction of data movement",
                      "type": "string",
                      "enum": [
                        "Send",
                        "Receive"
                      ],
                      "x-ms-enum": {
                        "name": "Direction",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Send",
                            "value": "Send",
                            "description": "The direction is on the sending side of a pipeline, connection, or flow."
                          },
                          {
                            "name": "Receive",
                            "value": "Receive",
                            "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                          }
                        ]
                      }
                    },
                    "justification": {
                      "type": "string",
                      "description": "Justification for the connection request"
                    },
                    "status": {
                      "description": "Status of the connection",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "InReview",
                        "Approved",
                        "Rejected",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ConnectionStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "InReview",
                            "value": "InReview",
                            "description": "This connection has been created but is under review by the pipeline owner."
                          },
                          {
                            "name": "Approved",
                            "value": "Approved",
                            "description": "This connection has been approved by the pipeline owner and is ready for use."
                          },
                          {
                            "name": "Rejected",
                            "value": "Rejected",
                            "description": "This connection has been rejected by the pipeline owner and cannot be used."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Creation of the connection has been accepted."
                          }
                        ]
                      }
                    },
                    "forceDisabledStatus": {
                      "type": "array",
                      "description": "Force disablement status of the current connection",
                      "items": {
                        "type": "string",
                        "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                        "enum": [
                          "ConnectionForceDisabled",
                          "FlowTypeForceDisabled"
                        ],
                        "x-ms-enum": {
                          "name": "ForceDisabledStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "ConnectionForceDisabled",
                              "value": "ConnectionForceDisabled",
                              "description": "Defines disablement of a Flow due to the parent connection being disabled."
                            },
                            {
                              "name": "FlowTypeForceDisabled",
                              "value": "FlowTypeForceDisabled",
                              "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                            }
                          ]
                        }
                      },
                      "readOnly": true
                    },
                    "statusReason": {
                      "type": "string",
                      "description": "Reason for status",
                      "readOnly": true
                    },
                    "linkStatus": {
                      "description": "Link status of the current connection",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Linked",
                        "Unlinked"
                      ],
                      "x-ms-enum": {
                        "name": "LinkStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Linked",
                            "value": "Linked",
                            "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                          },
                          {
                            "name": "Unlinked",
                            "value": "Unlinked",
                            "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                          }
                        ]
                      }
                    },
                    "linkedConnectionId": {
                      "type": "string",
                      "description": "Resource ID of the linked connection",
                      "readOnly": true
                    },
                    "flowTypes": {
                      "type": "array",
                      "description": "The flow types being requested for this connection. This FlowType property has reached end of life support starting version 2025-05-30-preview. Please create a FlowProfile resource instead.",
                      "items": {
                        "type": "string",
                        "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                        "enum": [
                          "Unknown",
                          "Complex",
                          "DevSecOps",
                          "Messaging",
                          "Mission",
                          "MicrosoftInternal",
                          "BasicFiles",
                          "Data",
                          "Standard",
                          "StreamingVideo",
                          "Opaque",
                          "MissionOpaqueXML",
                          "DiskImages",
                          "API"
                        ],
                        "x-ms-enum": {
                          "name": "FlowType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Unknown",
                              "value": "Unknown",
                              "description": "This type of flow is not set."
                            },
                            {
                              "name": "Complex",
                              "value": "Complex",
                              "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                            },
                            {
                              "name": "DevSecOps",
                              "value": "DevSecOps",
                              "description": "This flow sends source code files and artifacts."
                            },
                            {
                              "name": "Messaging",
                              "value": "Messaging",
                              "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                            },
                            {
                              "name": "Mission",
                              "value": "Mission",
                              "description": "This flow sends standard data but is subject to strict cloud owner approval."
                            },
                            {
                              "name": "MicrosoftInternal",
                              "value": "MicrosoftInternal",
                              "description": "This flow is assigned to internal Microsoft use cases."
                            },
                            {
                              "name": "BasicFiles",
                              "value": "BasicFiles",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Data",
                              "value": "Data",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Standard",
                              "value": "Standard",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "StreamingVideo",
                              "value": "StreamingVideo",
                              "description": "This flow sends video streams."
                            },
                            {
                              "name": "Opaque",
                              "value": "Opaque",
                              "description": "This flow sends blobs but is subject to cloud owner approval."
                            },
                            {
                              "name": "MissionOpaqueXML",
                              "value": "MissionOpaqueXML",
                              "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                            },
                            {
                              "name": "DiskImages",
                              "value": "DiskImages",
                              "description": "This flow sends blobs that can be used for Virtual Machines."
                            },
                            {
                              "name": "API",
                              "value": "API",
                              "description": "This flow sends data via an Application Programmer Interface."
                            }
                          ]
                        }
                      }
                    },
                    "requirementId": {
                      "type": "string",
                      "description": "Requirement ID of the connection"
                    },
                    "remoteSubscriptionId": {
                      "type": "string",
                      "description": "Subscription ID to link cloud subscriptions together"
                    },
                    "approver": {
                      "type": "string",
                      "description": "Approver of this connection request",
                      "readOnly": true
                    },
                    "pin": {
                      "type": "string",
                      "description": "PIN to link requests together"
                    },
                    "dateSubmitted": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp that this connection request was submitted at",
                      "readOnly": true
                    },
                    "primaryContact": {
                      "type": "string",
                      "description": "The primary contact for this connection request"
                    },
                    "secondaryContacts": {
                      "type": "array",
                      "description": "The secondary contacts for this connection request",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the connection",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been accepted for creation."
                          }
                        ]
                      }
                    },
                    "policies": {
                      "type": "array",
                      "description": "The policies for this connection. The policies property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "schemas": {
                      "type": "array",
                      "description": "The schemas for this connection. The schemas property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "object",
                        "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "ID associated with this schema"
                          },
                          "connectionId": {
                            "type": "string",
                            "description": "Connection ID associated with this schema"
                          },
                          "status": {
                            "description": "Status of the schema",
                            "type": "string",
                            "enum": [
                              "New",
                              "Approved"
                            ],
                            "x-ms-enum": {
                              "name": "SchemaStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "New",
                                  "value": "New",
                                  "description": "A schema that has not been approved and is awaiting review."
                                },
                                {
                                  "name": "Approved",
                                  "value": "Approved",
                                  "description": "A schema that has been approved and is ready for use."
                                }
                              ]
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the schema"
                          },
                          "content": {
                            "type": "string",
                            "description": "Content of the schema"
                          },
                          "direction": {
                            "description": "The direction of the schema.",
                            "type": "string",
                            "enum": [
                              "Send",
                              "Receive"
                            ],
                            "x-ms-enum": {
                              "name": "Direction",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Send",
                                  "value": "Send",
                                  "description": "The direction is on the sending side of a pipeline, connection, or flow."
                                },
                                {
                                  "name": "Receive",
                                  "value": "Receive",
                                  "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                                }
                              ]
                            }
                          },
                          "schemaUri": {
                            "type": "string",
                            "format": "uri",
                            "description": "Uri containing SAS token for the zipped schema"
                          },
                          "schemaType": {
                            "description": "The Schema Type",
                            "type": "string",
                            "enum": [
                              "Xsd",
                              "Zip"
                            ],
                            "x-ms-enum": {
                              "name": "SchemaType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Xsd",
                                  "value": "Xsd",
                                  "description": "The schema represents a single XML schema definition file."
                                },
                                {
                                  "name": "Zip",
                                  "value": "Zip",
                                  "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "schemaUris": {
                      "type": "array",
                      "description": "The schema URIs for this connection. The schemaUris property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  },
                  "required": [
                    "pipeline"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/pipelines/{pipelineName}/executeAction": {
      "post": {
        "operationId": "Pipelines_ExecuteAction",
        "tags": [
          "Pipelines"
        ],
        "description": "Executes a privileged or administrative action on the specified Pipeline.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "pipelineName",
            "in": "path",
            "description": "The name of the pipeline on which to operate.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          },
          {
            "name": "action",
            "in": "body",
            "description": "The action to be executed on the Pipeline.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The action to be executed.",
              "properties": {
                "actionType": {
                  "description": "Type of action to be executed",
                  "type": "string",
                  "enum": [
                    "AllowUpdates",
                    "ForceDisable"
                  ],
                  "x-ms-enum": {
                    "name": "ActionType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "AllowUpdates",
                        "value": "AllowUpdates",
                        "description": "Allow a pipeline, connection, or flow to be updated."
                      },
                      {
                        "name": "ForceDisable",
                        "value": "ForceDisable",
                        "description": "Force disable a pipeline, connection, or flow."
                      }
                    ]
                  }
                },
                "targetType": {
                  "description": "Type of target to execute the action on",
                  "type": "string",
                  "enum": [
                    "Pipeline",
                    "Connection",
                    "FlowType"
                  ],
                  "x-ms-enum": {
                    "name": "TargetType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Pipeline",
                        "value": "Pipeline",
                        "description": "The action executing is targeting a pipeline."
                      },
                      {
                        "name": "Connection",
                        "value": "Connection",
                        "description": "The action executing is targeting a connection."
                      },
                      {
                        "name": "FlowType",
                        "value": "FlowType",
                        "description": "The action executing is targeting a flow type."
                      }
                    ]
                  }
                },
                "targets": {
                  "type": "array",
                  "description": "Targets for the action",
                  "items": {
                    "type": "string"
                  }
                },
                "justification": {
                  "type": "string",
                  "description": "Business justification for the action"
                }
              },
              "required": [
                "actionType",
                "targetType",
                "targets"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The pipeline resource definition. A Pipeline defines the scope and identity under which data replication scenarios are managed.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The set of configurable properties for the Pipeline resource.",
                  "type": "object",
                  "properties": {
                    "remoteCloud": {
                      "type": "string",
                      "description": "Remote cloud of the data to be transferred or received"
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of this pipeline"
                    },
                    "connections": {
                      "type": "array",
                      "description": "Connections associated with pipeline",
                      "items": {
                        "type": "object",
                        "description": "The ReadPipelineconnection.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Connection id inside pipeline"
                          },
                          "name": {
                            "type": "string",
                            "description": "Connection name inside pipeline"
                          },
                          "type": {
                            "type": "string",
                            "description": "Connection type inside pipeline"
                          },
                          "location": {
                            "type": "string",
                            "description": "Connection location inside pipeline"
                          },
                          "etag": {
                            "type": "string",
                            "description": "Connection etag inside pipeline"
                          },
                          "systemData": {
                            "description": "Metadata pertaining to creation and last modification of the resource.",
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            },
                            "readOnly": true
                          },
                          "properties": {
                            "description": "Connection properties inside pipeline",
                            "type": "object",
                            "properties": {
                              "internalMetadata": {
                                "description": "Internal metadata of the connection inside pipeline.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "operationStatus": {
                                    "description": "Operation status associated with the last patch request",
                                    "readOnly": true,
                                    "type": "object",
                                    "properties": {
                                      "status": {
                                        "description": "Operation status for the last patch request for this connection.",
                                        "readOnly": true,
                                        "type": "string",
                                        "enum": [
                                          "Failed",
                                          "Succeeded"
                                        ],
                                        "x-ms-enum": {
                                          "name": "OperationStatusEnum",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Failed",
                                              "value": "Failed",
                                              "description": "The last patch request for this connection completed with an error."
                                            },
                                            {
                                              "name": "Succeeded",
                                              "value": "Succeeded",
                                              "description": "The last patch request for this connection completed."
                                            }
                                          ]
                                        }
                                      },
                                      "id": {
                                        "type": "string",
                                        "description": "Operation status ID of the last patch request for this connection.",
                                        "readOnly": true
                                      },
                                      "message": {
                                        "type": "string",
                                        "description": "Message for the operation for the last patch request for this connection.",
                                        "readOnly": true
                                      }
                                    }
                                  },
                                  "statusSetBy": {
                                    "type": "string",
                                    "description": "User that last set the approved status for this connection",
                                    "readOnly": true
                                  }
                                },
                                "additionalProperties": {}
                              }
                            },
                            "additionalProperties": {}
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "additionalProperties": {}
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "id"
                      ]
                    },
                    "subscribers": {
                      "type": "array",
                      "description": "Subscribers of this resource",
                      "items": {
                        "type": "object",
                        "description": "An individual that would like to subscribe to events that occur on a pipeline.",
                        "properties": {
                          "email": {
                            "type": "string",
                            "description": "Email of the subscriber"
                          },
                          "notifications": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Number specifying what notifications to receive"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the pipeline",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been accepted for creation."
                          }
                        ]
                      }
                    },
                    "policies": {
                      "type": "array",
                      "description": "The policies for this pipeline. The policies property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "flowTypes": {
                      "type": "array",
                      "description": "The flow type for this flow. The flowTypes property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string",
                        "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                        "enum": [
                          "Unknown",
                          "Complex",
                          "DevSecOps",
                          "Messaging",
                          "Mission",
                          "MicrosoftInternal",
                          "BasicFiles",
                          "Data",
                          "Standard",
                          "StreamingVideo",
                          "Opaque",
                          "MissionOpaqueXML",
                          "DiskImages",
                          "API"
                        ],
                        "x-ms-enum": {
                          "name": "FlowType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Unknown",
                              "value": "Unknown",
                              "description": "This type of flow is not set."
                            },
                            {
                              "name": "Complex",
                              "value": "Complex",
                              "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                            },
                            {
                              "name": "DevSecOps",
                              "value": "DevSecOps",
                              "description": "This flow sends source code files and artifacts."
                            },
                            {
                              "name": "Messaging",
                              "value": "Messaging",
                              "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                            },
                            {
                              "name": "Mission",
                              "value": "Mission",
                              "description": "This flow sends standard data but is subject to strict cloud owner approval."
                            },
                            {
                              "name": "MicrosoftInternal",
                              "value": "MicrosoftInternal",
                              "description": "This flow is assigned to internal Microsoft use cases."
                            },
                            {
                              "name": "BasicFiles",
                              "value": "BasicFiles",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Data",
                              "value": "Data",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Standard",
                              "value": "Standard",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "StreamingVideo",
                              "value": "StreamingVideo",
                              "description": "This flow sends video streams."
                            },
                            {
                              "name": "Opaque",
                              "value": "Opaque",
                              "description": "This flow sends blobs but is subject to cloud owner approval."
                            },
                            {
                              "name": "MissionOpaqueXML",
                              "value": "MissionOpaqueXML",
                              "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                            },
                            {
                              "name": "DiskImages",
                              "value": "DiskImages",
                              "description": "This flow sends blobs that can be used for Virtual Machines."
                            },
                            {
                              "name": "API",
                              "value": "API",
                              "description": "This flow sends data via an Application Programmer Interface."
                            }
                          ]
                        }
                      }
                    },
                    "disabledFlowTypes": {
                      "type": "array",
                      "description": "The flow types that are disabled for this pipeline",
                      "items": {
                        "type": "string",
                        "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                        "enum": [
                          "Unknown",
                          "Complex",
                          "DevSecOps",
                          "Messaging",
                          "Mission",
                          "MicrosoftInternal",
                          "BasicFiles",
                          "Data",
                          "Standard",
                          "StreamingVideo",
                          "Opaque",
                          "MissionOpaqueXML",
                          "DiskImages",
                          "API"
                        ],
                        "x-ms-enum": {
                          "name": "FlowType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Unknown",
                              "value": "Unknown",
                              "description": "This type of flow is not set."
                            },
                            {
                              "name": "Complex",
                              "value": "Complex",
                              "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                            },
                            {
                              "name": "DevSecOps",
                              "value": "DevSecOps",
                              "description": "This flow sends source code files and artifacts."
                            },
                            {
                              "name": "Messaging",
                              "value": "Messaging",
                              "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                            },
                            {
                              "name": "Mission",
                              "value": "Mission",
                              "description": "This flow sends standard data but is subject to strict cloud owner approval."
                            },
                            {
                              "name": "MicrosoftInternal",
                              "value": "MicrosoftInternal",
                              "description": "This flow is assigned to internal Microsoft use cases."
                            },
                            {
                              "name": "BasicFiles",
                              "value": "BasicFiles",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Data",
                              "value": "Data",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Standard",
                              "value": "Standard",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "StreamingVideo",
                              "value": "StreamingVideo",
                              "description": "This flow sends video streams."
                            },
                            {
                              "name": "Opaque",
                              "value": "Opaque",
                              "description": "This flow sends blobs but is subject to cloud owner approval."
                            },
                            {
                              "name": "MissionOpaqueXML",
                              "value": "MissionOpaqueXML",
                              "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                            },
                            {
                              "name": "DiskImages",
                              "value": "DiskImages",
                              "description": "This flow sends blobs that can be used for Virtual Machines."
                            },
                            {
                              "name": "API",
                              "value": "API",
                              "description": "This flow sends data via an Application Programmer Interface."
                            }
                          ]
                        }
                      }
                    },
                    "quarantineDownloadStorageAccount": {
                      "type": "string",
                      "description": "Quarantine Download Storage Account"
                    },
                    "quarantineDownloadStorageContainer": {
                      "type": "string",
                      "description": "Quarantine Download Storage Container"
                    },
                    "status": {
                      "description": "Status of the current pipeline",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PipelineStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "The pipeline is currently enabled and all child connection and flow resources below able to send or receive data."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "The pipeline is currently disabled and all child connection and flow resources below are unable to send or receive data."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "remoteCloud"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/pipelines/{pipelineName}/listFlows": {
      "post": {
        "operationId": "ListFlowsByPipeline_List",
        "tags": [
          "Pipelines"
        ],
        "description": "Lists all Flows associated with the specified Pipeline.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "pipelineName",
            "in": "path",
            "description": "The name of the pipeline on which to operate.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          },
          {
            "name": "connections",
            "in": "body",
            "description": "A list of connection identifiers used to filter the Flows to be retrieved.",
            "required": false,
            "schema": {
              "type": "object",
              "description": "An array of connection id resources.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "Connection ID to target",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "An array of flow resources.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List flows by pipeline result by connection",
                  "items": {
                    "type": "object",
                    "description": "A connection resource id in addition to all child flow resources under this connection.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "ID of the connection."
                      },
                      "flows": {
                        "type": "array",
                        "description": "List of flows associated with the connection.",
                        "items": {
                          "type": "object",
                          "description": "The flow resource definition.",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "arm-id",
                              "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                              "readOnly": true
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the resource",
                              "readOnly": true
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                              "readOnly": true
                            },
                            "systemData": {
                              "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                              "readOnly": true,
                              "type": "object",
                              "properties": {
                                "createdBy": {
                                  "type": "string",
                                  "description": "The identity that created the resource."
                                },
                                "createdByType": {
                                  "type": "string",
                                  "description": "The type of identity that created the resource.",
                                  "enum": [
                                    "User",
                                    "Application",
                                    "ManagedIdentity",
                                    "Key"
                                  ],
                                  "x-ms-enum": {
                                    "name": "createdByType",
                                    "modelAsString": true
                                  }
                                },
                                "createdAt": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The timestamp of resource creation (UTC)."
                                },
                                "lastModifiedBy": {
                                  "type": "string",
                                  "description": "The identity that last modified the resource."
                                },
                                "lastModifiedByType": {
                                  "type": "string",
                                  "description": "The type of identity that last modified the resource.",
                                  "enum": [
                                    "User",
                                    "Application",
                                    "ManagedIdentity",
                                    "Key"
                                  ],
                                  "x-ms-enum": {
                                    "name": "createdByType",
                                    "modelAsString": true
                                  }
                                },
                                "lastModifiedAt": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The timestamp of resource last modification (UTC)"
                                }
                              }
                            },
                            "tags": {
                              "type": "object",
                              "description": "Resource tags.",
                              "additionalProperties": {
                                "type": "string"
                              },
                              "x-ms-mutability": [
                                "read",
                                "create",
                                "update"
                              ]
                            },
                            "location": {
                              "type": "string",
                              "description": "The geo-location where the resource lives",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ]
                            },
                            "properties": {
                              "description": "Properties of flow",
                              "type": "object",
                              "properties": {
                                "connection": {
                                  "description": "The connection associated with this flow",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Name of the connection"
                                    },
                                    "id": {
                                      "type": "string",
                                      "description": "Id of the connection"
                                    },
                                    "location": {
                                      "type": "string",
                                      "description": "Location of the connection",
                                      "x-ms-mutability": [
                                        "read",
                                        "create"
                                      ]
                                    },
                                    "subscriptionName": {
                                      "type": "string",
                                      "description": "Name of the subscription with the connection"
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                },
                                "flowId": {
                                  "type": "string",
                                  "description": "Dataflow GUID associated with this flow",
                                  "readOnly": true
                                },
                                "keyVaultUri": {
                                  "type": "string",
                                  "description": "URI to a Key Vault Secret containing a SAS token."
                                },
                                "linkStatus": {
                                  "description": "Link status of the current flow",
                                  "readOnly": true,
                                  "type": "string",
                                  "enum": [
                                    "Linked",
                                    "Unlinked"
                                  ],
                                  "x-ms-enum": {
                                    "name": "LinkStatus",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Linked",
                                        "value": "Linked",
                                        "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                                      },
                                      {
                                        "name": "Unlinked",
                                        "value": "Unlinked",
                                        "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                                      }
                                    ]
                                  }
                                },
                                "linkedFlowId": {
                                  "type": "string",
                                  "description": "Resource ID of the linked flow",
                                  "readOnly": true
                                },
                                "status": {
                                  "description": "Status of the current flow",
                                  "type": "string",
                                  "enum": [
                                    "Enabled",
                                    "Disabled"
                                  ],
                                  "x-ms-enum": {
                                    "name": "FlowStatus",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Enabled",
                                        "value": "Enabled",
                                        "description": "The flow is currently enabled and able to send or receive data."
                                      },
                                      {
                                        "name": "Disabled",
                                        "value": "Disabled",
                                        "description": "The flow is currently disabled and cannot send or receive data."
                                      }
                                    ]
                                  }
                                },
                                "forceDisabledStatus": {
                                  "type": "array",
                                  "description": "Force disablement status of the current flow",
                                  "items": {
                                    "type": "string",
                                    "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                                    "enum": [
                                      "ConnectionForceDisabled",
                                      "FlowTypeForceDisabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ForceDisabledStatus",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "ConnectionForceDisabled",
                                          "value": "ConnectionForceDisabled",
                                          "description": "Defines disablement of a Flow due to the parent connection being disabled."
                                        },
                                        {
                                          "name": "FlowTypeForceDisabled",
                                          "value": "FlowTypeForceDisabled",
                                          "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                                        }
                                      ]
                                    }
                                  },
                                  "readOnly": true
                                },
                                "storageAccountName": {
                                  "type": "string",
                                  "description": "Storage Account"
                                },
                                "storageAccountId": {
                                  "type": "string",
                                  "format": "arm-id",
                                  "description": "Storage Account ID",
                                  "x-ms-arm-id-details": {
                                    "allowedResources": [
                                      {
                                        "type": "Microsoft.Storage/storageAccounts"
                                      }
                                    ]
                                  }
                                },
                                "storageContainerName": {
                                  "type": "string",
                                  "description": "Storage Container Name"
                                },
                                "storageTableName": {
                                  "type": "string",
                                  "description": "Storage Table Name"
                                },
                                "serviceBusQueueId": {
                                  "type": "string",
                                  "format": "arm-id",
                                  "description": "Service Bus Queue ID",
                                  "x-ms-arm-id-details": {
                                    "allowedResources": [
                                      {
                                        "type": "Microsoft.Storage/namespaces/queues"
                                      }
                                    ]
                                  }
                                },
                                "flowType": {
                                  "type": "string",
                                  "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                                  "enum": [
                                    "Unknown",
                                    "Complex",
                                    "DevSecOps",
                                    "Messaging",
                                    "Mission",
                                    "MicrosoftInternal",
                                    "BasicFiles",
                                    "Data",
                                    "Standard",
                                    "StreamingVideo",
                                    "Opaque",
                                    "MissionOpaqueXML",
                                    "DiskImages",
                                    "API"
                                  ],
                                  "x-ms-enum": {
                                    "name": "FlowType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Unknown",
                                        "value": "Unknown",
                                        "description": "This type of flow is not set."
                                      },
                                      {
                                        "name": "Complex",
                                        "value": "Complex",
                                        "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                                      },
                                      {
                                        "name": "DevSecOps",
                                        "value": "DevSecOps",
                                        "description": "This flow sends source code files and artifacts."
                                      },
                                      {
                                        "name": "Messaging",
                                        "value": "Messaging",
                                        "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                                      },
                                      {
                                        "name": "Mission",
                                        "value": "Mission",
                                        "description": "This flow sends standard data but is subject to strict cloud owner approval."
                                      },
                                      {
                                        "name": "MicrosoftInternal",
                                        "value": "MicrosoftInternal",
                                        "description": "This flow is assigned to internal Microsoft use cases."
                                      },
                                      {
                                        "name": "BasicFiles",
                                        "value": "BasicFiles",
                                        "description": "This flow sends blobs that can be used for multiple use cases."
                                      },
                                      {
                                        "name": "Data",
                                        "value": "Data",
                                        "description": "This flow sends blobs that can be used for multiple use cases."
                                      },
                                      {
                                        "name": "Standard",
                                        "value": "Standard",
                                        "description": "This flow sends blobs that can be used for multiple use cases."
                                      },
                                      {
                                        "name": "StreamingVideo",
                                        "value": "StreamingVideo",
                                        "description": "This flow sends video streams."
                                      },
                                      {
                                        "name": "Opaque",
                                        "value": "Opaque",
                                        "description": "This flow sends blobs but is subject to cloud owner approval."
                                      },
                                      {
                                        "name": "MissionOpaqueXML",
                                        "value": "MissionOpaqueXML",
                                        "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                                      },
                                      {
                                        "name": "DiskImages",
                                        "value": "DiskImages",
                                        "description": "This flow sends blobs that can be used for Virtual Machines."
                                      },
                                      {
                                        "name": "API",
                                        "value": "API",
                                        "description": "This flow sends data via an Application Programmer Interface."
                                      }
                                    ]
                                  }
                                },
                                "dataType": {
                                  "description": "Type of data to transfer via the flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                                  "type": "string",
                                  "enum": [
                                    "Blob",
                                    "Table"
                                  ],
                                  "x-ms-enum": {
                                    "name": "DataType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Blob",
                                        "value": "Blob",
                                        "description": "The flow uses Azure Storage blobs to send or receive data."
                                      },
                                      {
                                        "name": "Table",
                                        "value": "Table",
                                        "description": "The flow uses Azure Storage tables to send or receive data."
                                      }
                                    ]
                                  }
                                },
                                "provisioningState": {
                                  "description": "Provisioning state of the flow",
                                  "readOnly": true,
                                  "type": "string",
                                  "enum": [
                                    "Succeeded",
                                    "Failed",
                                    "Canceled",
                                    "Accepted"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ProvisioningState",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Succeeded",
                                        "value": "Succeeded",
                                        "description": "Resource has been created."
                                      },
                                      {
                                        "name": "Failed",
                                        "value": "Failed",
                                        "description": "Resource creation failed."
                                      },
                                      {
                                        "name": "Canceled",
                                        "value": "Canceled",
                                        "description": "Resource creation was canceled."
                                      },
                                      {
                                        "name": "Accepted",
                                        "value": "Accepted",
                                        "description": "Resource has been accepted for creation."
                                      }
                                    ]
                                  }
                                },
                                "policies": {
                                  "type": "array",
                                  "description": "The policies for this flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "schema": {
                                  "type": "object",
                                  "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "ID associated with this schema"
                                    },
                                    "connectionId": {
                                      "type": "string",
                                      "description": "Connection ID associated with this schema"
                                    },
                                    "status": {
                                      "description": "Status of the schema",
                                      "type": "string",
                                      "enum": [
                                        "New",
                                        "Approved"
                                      ],
                                      "x-ms-enum": {
                                        "name": "SchemaStatus",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "New",
                                            "value": "New",
                                            "description": "A schema that has not been approved and is awaiting review."
                                          },
                                          {
                                            "name": "Approved",
                                            "value": "Approved",
                                            "description": "A schema that has been approved and is ready for use."
                                          }
                                        ]
                                      }
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "Name of the schema"
                                    },
                                    "content": {
                                      "type": "string",
                                      "description": "Content of the schema"
                                    },
                                    "direction": {
                                      "description": "The direction of the schema.",
                                      "type": "string",
                                      "enum": [
                                        "Send",
                                        "Receive"
                                      ],
                                      "x-ms-enum": {
                                        "name": "Direction",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Send",
                                            "value": "Send",
                                            "description": "The direction is on the sending side of a pipeline, connection, or flow."
                                          },
                                          {
                                            "name": "Receive",
                                            "value": "Receive",
                                            "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                                          }
                                        ]
                                      }
                                    },
                                    "schemaUri": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "Uri containing SAS token for the zipped schema"
                                    },
                                    "schemaType": {
                                      "description": "The Schema Type",
                                      "type": "string",
                                      "enum": [
                                        "Xsd",
                                        "Zip"
                                      ],
                                      "x-ms-enum": {
                                        "name": "SchemaType",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Xsd",
                                            "value": "Xsd",
                                            "description": "The schema represents a single XML schema definition file."
                                          },
                                          {
                                            "name": "Zip",
                                            "value": "Zip",
                                            "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                                          }
                                        ]
                                      }
                                    }
                                  }
                                },
                                "messagingOptions": {
                                  "description": "The messaging options for this flow",
                                  "type": "object",
                                  "properties": {
                                    "billingTier": {
                                      "description": "Billing tier for this messaging flow",
                                      "type": "string",
                                      "enum": [
                                        "BlobTransport",
                                        "Standard",
                                        "Premium"
                                      ],
                                      "x-ms-enum": {
                                        "name": "FlowBillingTier",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "BlobTransport",
                                            "value": "BlobTransport",
                                            "description": "Billing tier for messaging processing that charges based on how much data is transferred."
                                          },
                                          {
                                            "name": "Standard",
                                            "value": "Standard",
                                            "description": "Billing tier for standard messaging processing that charges based on having the messaging resource allocated."
                                          },
                                          {
                                            "name": "Premium",
                                            "value": "Premium",
                                            "description": "Billing tier for premium messaging processing that charges based on having the messaging resource allocated."
                                          }
                                        ]
                                      }
                                    }
                                  }
                                },
                                "apiFlowOptions": {
                                  "description": "The API Flow configuration options for Azure Data Transfer API Flow type.",
                                  "type": "object",
                                  "properties": {
                                    "remoteEndpoint": {
                                      "type": "string",
                                      "description": "Remote host to which communication needs to be made. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the remoteEndpointSettings.endpoint property instead."
                                    },
                                    "cname": {
                                      "type": "string",
                                      "description": "Unique CNAME to represent the Azure Data Transfer API Flow instance"
                                    },
                                    "apiMode": {
                                      "description": "Remote Calling Mode in the Azure Data Transfer API Flow, which describes how the API Flow will be invoked",
                                      "type": "string",
                                      "enum": [
                                        "SDK",
                                        "Endpoint"
                                      ],
                                      "x-ms-enum": {
                                        "name": "ApiMode",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "SDK",
                                            "value": "SDK",
                                            "description": "The API flow will forward calls to a custom Software Development Kit implementation."
                                          },
                                          {
                                            "name": "Endpoint",
                                            "value": "Endpoint",
                                            "description": "The API flow will forward calls to a specified endpoint."
                                          }
                                        ]
                                      }
                                    },
                                    "identityTranslation": {
                                      "description": "Determines which identity to use for extracting the user token for Azure Data Transfer API Flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead.",
                                      "type": "string",
                                      "enum": [
                                        "UserIdentity",
                                        "ServiceIdentity"
                                      ],
                                      "x-ms-enum": {
                                        "name": "IdentityTranslation",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "UserIdentity",
                                            "value": "UserIdentity",
                                            "description": "The API flow will make use of the user identity that called this API flow, and pass that token through the boundary."
                                          },
                                          {
                                            "name": "ServiceIdentity",
                                            "value": "ServiceIdentity",
                                            "description": "The API flow will make use of the Azure Data Transfer Flow managed identity on the other side of the boundary."
                                          }
                                        ]
                                      }
                                    },
                                    "senderClientId": {
                                      "type": "string",
                                      "description": "Sender's app user assigned Manage Identity client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                                    },
                                    "remoteCallingModeClientId": {
                                      "type": "string",
                                      "description": "Remote stub app registration Client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                                    },
                                    "audienceOverride": {
                                      "type": "string",
                                      "description": "Optional field to override the audience of the remote endpoint. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                                    }
                                  }
                                },
                                "customerManagedKeyVaultUri": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "The URI to the customer managed key for this flow"
                                },
                                "streamId": {
                                  "type": "string",
                                  "description": "The flow stream identifier"
                                },
                                "streamProtocol": {
                                  "description": "The protocol of the stream",
                                  "type": "string",
                                  "enum": [
                                    "UDP",
                                    "SRT",
                                    "RTP"
                                  ],
                                  "x-ms-enum": {
                                    "name": "StreamProtocol",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "UDP",
                                        "value": "UDP",
                                        "description": "This Flow is using User Datagram Protocol for the video stream."
                                      },
                                      {
                                        "name": "SRT",
                                        "value": "SRT",
                                        "description": "This Flow is using Secure Reliable Transfer for the video stream."
                                      },
                                      {
                                        "name": "RTP",
                                        "value": "RTP",
                                        "description": "This Flow is using Real-time Transport Protocol for the video stream."
                                      }
                                    ]
                                  }
                                },
                                "streamLatency": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The latency of the stream in milliseconds"
                                },
                                "passphrase": {
                                  "type": "string",
                                  "description": "The passphrase used for SRT streams"
                                },
                                "sourceAddresses": {
                                  "description": "The source IP address and CIDR ranges of the stream",
                                  "type": "object",
                                  "properties": {
                                    "sourceAddresses": {
                                      "type": "array",
                                      "description": "A source IP address or CIDR range",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "destinationEndpoints": {
                                  "type": "array",
                                  "description": "The destination endpoints of the stream",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "destinationEndpointPorts": {
                                  "type": "array",
                                  "description": "The destination endpoint ports of the stream",
                                  "items": {
                                    "type": "integer",
                                    "format": "int64"
                                  }
                                },
                                "eventHubId": {
                                  "type": "string",
                                  "format": "arm-id",
                                  "description": "Event Hub ID",
                                  "x-ms-arm-id-details": {
                                    "allowedResources": [
                                      {
                                        "type": "Microsoft.EventHub/namespaces/eventhubs"
                                      }
                                    ]
                                  }
                                },
                                "consumerGroup": {
                                  "type": "string",
                                  "description": "Event Hub Consumer Group"
                                }
                              }
                            },
                            "plan": {
                              "description": "Details of the resource plan.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "A user defined name of the 3rd Party Artifact that is being procured."
                                },
                                "publisher": {
                                  "type": "string",
                                  "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
                                },
                                "product": {
                                  "type": "string",
                                  "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
                                },
                                "promotionCode": {
                                  "type": "string",
                                  "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
                                },
                                "version": {
                                  "type": "string",
                                  "description": "The version of the desired product/artifact."
                                }
                              },
                              "required": [
                                "name",
                                "publisher",
                                "product"
                              ]
                            },
                            "identity": {
                              "description": "The managed service identities assigned to this resource.",
                              "type": "object",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                                  "readOnly": true
                                },
                                "tenantId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                                  "enum": [
                                    "None",
                                    "SystemAssigned",
                                    "UserAssigned",
                                    "SystemAssigned,UserAssigned"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ManagedServiceIdentityType",
                                    "modelAsString": true
                                  }
                                },
                                "userAssignedIdentities": {
                                  "type": "object",
                                  "title": "User-Assigned Identities",
                                  "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                                  "additionalProperties": {
                                    "x-nullable": true,
                                    "type": "object",
                                    "description": "User assigned identity properties",
                                    "properties": {
                                      "principalId": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "The principal ID of the assigned identity.",
                                        "readOnly": true
                                      },
                                      "clientId": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "The client ID of the assigned identity.",
                                        "readOnly": true
                                      }
                                    }
                                  }
                                }
                              },
                              "required": [
                                "type"
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "id"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/pipelines/{pipelineName}/listSchemas": {
      "post": {
        "operationId": "ListSchemas_List",
        "tags": [
          "Pipelines"
        ],
        "description": "Lists the schemas associated with a specific connection in the Pipeline. This operation has reached end of life support starting version 2025-05-30-preview. For schema support please create and use a FlowProfile resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "pipelineName",
            "in": "path",
            "description": "The name of the pipeline on which to operate.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          },
          {
            "name": "schema",
            "in": "body",
            "description": "The schema(s) to retrieve for the specified connection.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "ID associated with this schema"
                },
                "connectionId": {
                  "type": "string",
                  "description": "Connection ID associated with this schema"
                },
                "status": {
                  "description": "Status of the schema",
                  "type": "string",
                  "enum": [
                    "New",
                    "Approved"
                  ],
                  "x-ms-enum": {
                    "name": "SchemaStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "New",
                        "value": "New",
                        "description": "A schema that has not been approved and is awaiting review."
                      },
                      {
                        "name": "Approved",
                        "value": "Approved",
                        "description": "A schema that has been approved and is ready for use."
                      }
                    ]
                  }
                },
                "name": {
                  "type": "string",
                  "description": "Name of the schema"
                },
                "content": {
                  "type": "string",
                  "description": "Content of the schema"
                },
                "direction": {
                  "description": "The direction of the schema.",
                  "type": "string",
                  "enum": [
                    "Send",
                    "Receive"
                  ],
                  "x-ms-enum": {
                    "name": "Direction",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Send",
                        "value": "Send",
                        "description": "The direction is on the sending side of a pipeline, connection, or flow."
                      },
                      {
                        "name": "Receive",
                        "value": "Receive",
                        "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                      }
                    ]
                  }
                },
                "schemaUri": {
                  "type": "string",
                  "format": "uri",
                  "description": "Uri containing SAS token for the zipped schema"
                },
                "schemaType": {
                  "description": "The Schema Type",
                  "type": "string",
                  "enum": [
                    "Xsd",
                    "Zip"
                  ],
                  "x-ms-enum": {
                    "name": "SchemaType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Xsd",
                        "value": "Xsd",
                        "description": "The schema represents a single XML schema definition file."
                      },
                      {
                        "name": "Zip",
                        "value": "Zip",
                        "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                      }
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The schemas list result. SchemaListResults has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "Schemas array.",
                  "items": {
                    "type": "object",
                    "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "ID associated with this schema"
                      },
                      "connectionId": {
                        "type": "string",
                        "description": "Connection ID associated with this schema"
                      },
                      "status": {
                        "description": "Status of the schema",
                        "type": "string",
                        "enum": [
                          "New",
                          "Approved"
                        ],
                        "x-ms-enum": {
                          "name": "SchemaStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "New",
                              "value": "New",
                              "description": "A schema that has not been approved and is awaiting review."
                            },
                            {
                              "name": "Approved",
                              "value": "Approved",
                              "description": "A schema that has been approved and is ready for use."
                            }
                          ]
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the schema"
                      },
                      "content": {
                        "type": "string",
                        "description": "Content of the schema"
                      },
                      "direction": {
                        "description": "The direction of the schema.",
                        "type": "string",
                        "enum": [
                          "Send",
                          "Receive"
                        ],
                        "x-ms-enum": {
                          "name": "Direction",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Send",
                              "value": "Send",
                              "description": "The direction is on the sending side of a pipeline, connection, or flow."
                            },
                            {
                              "name": "Receive",
                              "value": "Receive",
                              "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                            }
                          ]
                        }
                      },
                      "schemaUri": {
                        "type": "string",
                        "format": "uri",
                        "description": "Uri containing SAS token for the zipped schema"
                      },
                      "schemaType": {
                        "description": "The Schema Type",
                        "type": "string",
                        "enum": [
                          "Xsd",
                          "Zip"
                        ],
                        "x-ms-enum": {
                          "name": "SchemaType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Xsd",
                              "value": "Xsd",
                              "description": "The schema represents a single XML schema definition file."
                            },
                            {
                              "name": "Zip",
                              "value": "Zip",
                              "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/pipelines/{pipelineName}/rejectConnection": {
      "post": {
        "operationId": "Pipelines_RejectConnection",
        "tags": [
          "Pipelines"
        ],
        "description": "Rejects a pending connection request associated with the specified Pipeline.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "pipelineName",
            "in": "path",
            "description": "The name of the pipeline on which to operate.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9-]{3,64}$"
          },
          {
            "name": "connection",
            "in": "body",
            "description": "The request body containing the connection to reject.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The resource to reference.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "ID of the resource."
                },
                "statusReason": {
                  "type": "string",
                  "description": "Reason for resource operation."
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The connection resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of connection",
                  "type": "object",
                  "properties": {
                    "pipeline": {
                      "type": "string",
                      "description": "Pipeline to use to transfer data"
                    },
                    "direction": {
                      "description": "Direction of data movement",
                      "type": "string",
                      "enum": [
                        "Send",
                        "Receive"
                      ],
                      "x-ms-enum": {
                        "name": "Direction",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Send",
                            "value": "Send",
                            "description": "The direction is on the sending side of a pipeline, connection, or flow."
                          },
                          {
                            "name": "Receive",
                            "value": "Receive",
                            "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                          }
                        ]
                      }
                    },
                    "justification": {
                      "type": "string",
                      "description": "Justification for the connection request"
                    },
                    "status": {
                      "description": "Status of the connection",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "InReview",
                        "Approved",
                        "Rejected",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ConnectionStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "InReview",
                            "value": "InReview",
                            "description": "This connection has been created but is under review by the pipeline owner."
                          },
                          {
                            "name": "Approved",
                            "value": "Approved",
                            "description": "This connection has been approved by the pipeline owner and is ready for use."
                          },
                          {
                            "name": "Rejected",
                            "value": "Rejected",
                            "description": "This connection has been rejected by the pipeline owner and cannot be used."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Creation of the connection has been accepted."
                          }
                        ]
                      }
                    },
                    "forceDisabledStatus": {
                      "type": "array",
                      "description": "Force disablement status of the current connection",
                      "items": {
                        "type": "string",
                        "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                        "enum": [
                          "ConnectionForceDisabled",
                          "FlowTypeForceDisabled"
                        ],
                        "x-ms-enum": {
                          "name": "ForceDisabledStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "ConnectionForceDisabled",
                              "value": "ConnectionForceDisabled",
                              "description": "Defines disablement of a Flow due to the parent connection being disabled."
                            },
                            {
                              "name": "FlowTypeForceDisabled",
                              "value": "FlowTypeForceDisabled",
                              "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                            }
                          ]
                        }
                      },
                      "readOnly": true
                    },
                    "statusReason": {
                      "type": "string",
                      "description": "Reason for status",
                      "readOnly": true
                    },
                    "linkStatus": {
                      "description": "Link status of the current connection",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Linked",
                        "Unlinked"
                      ],
                      "x-ms-enum": {
                        "name": "LinkStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Linked",
                            "value": "Linked",
                            "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                          },
                          {
                            "name": "Unlinked",
                            "value": "Unlinked",
                            "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                          }
                        ]
                      }
                    },
                    "linkedConnectionId": {
                      "type": "string",
                      "description": "Resource ID of the linked connection",
                      "readOnly": true
                    },
                    "flowTypes": {
                      "type": "array",
                      "description": "The flow types being requested for this connection. This FlowType property has reached end of life support starting version 2025-05-30-preview. Please create a FlowProfile resource instead.",
                      "items": {
                        "type": "string",
                        "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                        "enum": [
                          "Unknown",
                          "Complex",
                          "DevSecOps",
                          "Messaging",
                          "Mission",
                          "MicrosoftInternal",
                          "BasicFiles",
                          "Data",
                          "Standard",
                          "StreamingVideo",
                          "Opaque",
                          "MissionOpaqueXML",
                          "DiskImages",
                          "API"
                        ],
                        "x-ms-enum": {
                          "name": "FlowType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Unknown",
                              "value": "Unknown",
                              "description": "This type of flow is not set."
                            },
                            {
                              "name": "Complex",
                              "value": "Complex",
                              "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                            },
                            {
                              "name": "DevSecOps",
                              "value": "DevSecOps",
                              "description": "This flow sends source code files and artifacts."
                            },
                            {
                              "name": "Messaging",
                              "value": "Messaging",
                              "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                            },
                            {
                              "name": "Mission",
                              "value": "Mission",
                              "description": "This flow sends standard data but is subject to strict cloud owner approval."
                            },
                            {
                              "name": "MicrosoftInternal",
                              "value": "MicrosoftInternal",
                              "description": "This flow is assigned to internal Microsoft use cases."
                            },
                            {
                              "name": "BasicFiles",
                              "value": "BasicFiles",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Data",
                              "value": "Data",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "Standard",
                              "value": "Standard",
                              "description": "This flow sends blobs that can be used for multiple use cases."
                            },
                            {
                              "name": "StreamingVideo",
                              "value": "StreamingVideo",
                              "description": "This flow sends video streams."
                            },
                            {
                              "name": "Opaque",
                              "value": "Opaque",
                              "description": "This flow sends blobs but is subject to cloud owner approval."
                            },
                            {
                              "name": "MissionOpaqueXML",
                              "value": "MissionOpaqueXML",
                              "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                            },
                            {
                              "name": "DiskImages",
                              "value": "DiskImages",
                              "description": "This flow sends blobs that can be used for Virtual Machines."
                            },
                            {
                              "name": "API",
                              "value": "API",
                              "description": "This flow sends data via an Application Programmer Interface."
                            }
                          ]
                        }
                      }
                    },
                    "requirementId": {
                      "type": "string",
                      "description": "Requirement ID of the connection"
                    },
                    "remoteSubscriptionId": {
                      "type": "string",
                      "description": "Subscription ID to link cloud subscriptions together"
                    },
                    "approver": {
                      "type": "string",
                      "description": "Approver of this connection request",
                      "readOnly": true
                    },
                    "pin": {
                      "type": "string",
                      "description": "PIN to link requests together"
                    },
                    "dateSubmitted": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp that this connection request was submitted at",
                      "readOnly": true
                    },
                    "primaryContact": {
                      "type": "string",
                      "description": "The primary contact for this connection request"
                    },
                    "secondaryContacts": {
                      "type": "array",
                      "description": "The secondary contacts for this connection request",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the connection",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been accepted for creation."
                          }
                        ]
                      }
                    },
                    "policies": {
                      "type": "array",
                      "description": "The policies for this connection. The policies property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "schemas": {
                      "type": "array",
                      "description": "The schemas for this connection. The schemas property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "object",
                        "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "ID associated with this schema"
                          },
                          "connectionId": {
                            "type": "string",
                            "description": "Connection ID associated with this schema"
                          },
                          "status": {
                            "description": "Status of the schema",
                            "type": "string",
                            "enum": [
                              "New",
                              "Approved"
                            ],
                            "x-ms-enum": {
                              "name": "SchemaStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "New",
                                  "value": "New",
                                  "description": "A schema that has not been approved and is awaiting review."
                                },
                                {
                                  "name": "Approved",
                                  "value": "Approved",
                                  "description": "A schema that has been approved and is ready for use."
                                }
                              ]
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the schema"
                          },
                          "content": {
                            "type": "string",
                            "description": "Content of the schema"
                          },
                          "direction": {
                            "description": "The direction of the schema.",
                            "type": "string",
                            "enum": [
                              "Send",
                              "Receive"
                            ],
                            "x-ms-enum": {
                              "name": "Direction",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Send",
                                  "value": "Send",
                                  "description": "The direction is on the sending side of a pipeline, connection, or flow."
                                },
                                {
                                  "name": "Receive",
                                  "value": "Receive",
                                  "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                                }
                              ]
                            }
                          },
                          "schemaUri": {
                            "type": "string",
                            "format": "uri",
                            "description": "Uri containing SAS token for the zipped schema"
                          },
                          "schemaType": {
                            "description": "The Schema Type",
                            "type": "string",
                            "enum": [
                              "Xsd",
                              "Zip"
                            ],
                            "x-ms-enum": {
                              "name": "SchemaType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Xsd",
                                  "value": "Xsd",
                                  "description": "The schema represents a single XML schema definition file."
                                },
                                {
                                  "name": "Zip",
                                  "value": "Zip",
                                  "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "schemaUris": {
                      "type": "array",
                      "description": "The schema URIs for this connection. The schemaUris property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  },
                  "required": [
                    "pipeline"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Action": {
      "type": "object",
      "description": "The action to be executed.",
      "properties": {
        "actionType": {
          "description": "Type of action to be executed",
          "type": "string",
          "enum": [
            "AllowUpdates",
            "ForceDisable"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true,
            "values": [
              {
                "name": "AllowUpdates",
                "value": "AllowUpdates",
                "description": "Allow a pipeline, connection, or flow to be updated."
              },
              {
                "name": "ForceDisable",
                "value": "ForceDisable",
                "description": "Force disable a pipeline, connection, or flow."
              }
            ]
          }
        },
        "targetType": {
          "description": "Type of target to execute the action on",
          "type": "string",
          "enum": [
            "Pipeline",
            "Connection",
            "FlowType"
          ],
          "x-ms-enum": {
            "name": "TargetType",
            "modelAsString": true,
            "values": [
              {
                "name": "Pipeline",
                "value": "Pipeline",
                "description": "The action executing is targeting a pipeline."
              },
              {
                "name": "Connection",
                "value": "Connection",
                "description": "The action executing is targeting a connection."
              },
              {
                "name": "FlowType",
                "value": "FlowType",
                "description": "The action executing is targeting a flow type."
              }
            ]
          }
        },
        "targets": {
          "type": "array",
          "description": "Targets for the action",
          "items": {
            "type": "string"
          }
        },
        "justification": {
          "type": "string",
          "description": "Business justification for the action"
        }
      },
      "required": [
        "actionType",
        "targetType",
        "targets"
      ]
    },
    "ActionType": {
      "type": "string",
      "description": "The type of action to be executed.",
      "enum": [
        "AllowUpdates",
        "ForceDisable"
      ],
      "x-ms-enum": {
        "name": "ActionType",
        "modelAsString": true,
        "values": [
          {
            "name": "AllowUpdates",
            "value": "AllowUpdates",
            "description": "Allow a pipeline, connection, or flow to be updated."
          },
          {
            "name": "ForceDisable",
            "value": "ForceDisable",
            "description": "Force disable a pipeline, connection, or flow."
          }
        ]
      }
    },
    "ApiFlowOptions": {
      "type": "object",
      "description": "Properties specific to API Flow Type",
      "properties": {
        "remoteEndpoint": {
          "type": "string",
          "description": "Remote host to which communication needs to be made. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the remoteEndpointSettings.endpoint property instead."
        },
        "cname": {
          "type": "string",
          "description": "Unique CNAME to represent the Azure Data Transfer API Flow instance"
        },
        "apiMode": {
          "description": "Remote Calling Mode in the Azure Data Transfer API Flow, which describes how the API Flow will be invoked",
          "type": "string",
          "enum": [
            "SDK",
            "Endpoint"
          ],
          "x-ms-enum": {
            "name": "ApiMode",
            "modelAsString": true,
            "values": [
              {
                "name": "SDK",
                "value": "SDK",
                "description": "The API flow will forward calls to a custom Software Development Kit implementation."
              },
              {
                "name": "Endpoint",
                "value": "Endpoint",
                "description": "The API flow will forward calls to a specified endpoint."
              }
            ]
          }
        },
        "identityTranslation": {
          "description": "Determines which identity to use for extracting the user token for Azure Data Transfer API Flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead.",
          "type": "string",
          "enum": [
            "UserIdentity",
            "ServiceIdentity"
          ],
          "x-ms-enum": {
            "name": "IdentityTranslation",
            "modelAsString": true,
            "values": [
              {
                "name": "UserIdentity",
                "value": "UserIdentity",
                "description": "The API flow will make use of the user identity that called this API flow, and pass that token through the boundary."
              },
              {
                "name": "ServiceIdentity",
                "value": "ServiceIdentity",
                "description": "The API flow will make use of the Azure Data Transfer Flow managed identity on the other side of the boundary."
              }
            ]
          }
        },
        "senderClientId": {
          "type": "string",
          "description": "Sender's app user assigned Manage Identity client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
        },
        "remoteCallingModeClientId": {
          "type": "string",
          "description": "Remote stub app registration Client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
        },
        "audienceOverride": {
          "type": "string",
          "description": "Optional field to override the audience of the remote endpoint. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
        }
      }
    },
    "ApiMode": {
      "type": "string",
      "description": "Remote Calling Mode in the Azure Data Transfer API Flow, which describes how the API Flow will be invoked",
      "enum": [
        "SDK",
        "Endpoint"
      ],
      "x-ms-enum": {
        "name": "ApiMode",
        "modelAsString": true,
        "values": [
          {
            "name": "SDK",
            "value": "SDK",
            "description": "The API flow will forward calls to a custom Software Development Kit implementation."
          },
          {
            "name": "Endpoint",
            "value": "Endpoint",
            "description": "The API flow will forward calls to a specified endpoint."
          }
        ]
      }
    },
    "ArmConnectionResponse": {
      "type": "object",
      "description": "Azure operation completed successfully.",
      "properties": {
        "body": {
          "type": "object",
          "description": "The connection resource definition.",
          "properties": {
            "id": {
              "type": "string",
              "format": "arm-id",
              "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
              "readOnly": true
            },
            "name": {
              "type": "string",
              "description": "The name of the resource",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
              "readOnly": true
            },
            "systemData": {
              "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "createdBy": {
                  "type": "string",
                  "description": "The identity that created the resource."
                },
                "createdByType": {
                  "type": "string",
                  "description": "The type of identity that created the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource creation (UTC)."
                },
                "lastModifiedBy": {
                  "type": "string",
                  "description": "The identity that last modified the resource."
                },
                "lastModifiedByType": {
                  "type": "string",
                  "description": "The type of identity that last modified the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "lastModifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource last modification (UTC)"
                }
              }
            },
            "tags": {
              "type": "object",
              "description": "Resource tags.",
              "additionalProperties": {
                "type": "string"
              },
              "x-ms-mutability": [
                "read",
                "create",
                "update"
              ]
            },
            "location": {
              "type": "string",
              "description": "The geo-location where the resource lives",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "properties": {
              "description": "Properties of connection",
              "type": "object",
              "properties": {
                "pipeline": {
                  "type": "string",
                  "description": "Pipeline to use to transfer data"
                },
                "direction": {
                  "description": "Direction of data movement",
                  "type": "string",
                  "enum": [
                    "Send",
                    "Receive"
                  ],
                  "x-ms-enum": {
                    "name": "Direction",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Send",
                        "value": "Send",
                        "description": "The direction is on the sending side of a pipeline, connection, or flow."
                      },
                      {
                        "name": "Receive",
                        "value": "Receive",
                        "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                      }
                    ]
                  }
                },
                "justification": {
                  "type": "string",
                  "description": "Justification for the connection request"
                },
                "status": {
                  "description": "Status of the connection",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "InReview",
                    "Approved",
                    "Rejected",
                    "Accepted"
                  ],
                  "x-ms-enum": {
                    "name": "ConnectionStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "InReview",
                        "value": "InReview",
                        "description": "This connection has been created but is under review by the pipeline owner."
                      },
                      {
                        "name": "Approved",
                        "value": "Approved",
                        "description": "This connection has been approved by the pipeline owner and is ready for use."
                      },
                      {
                        "name": "Rejected",
                        "value": "Rejected",
                        "description": "This connection has been rejected by the pipeline owner and cannot be used."
                      },
                      {
                        "name": "Accepted",
                        "value": "Accepted",
                        "description": "Creation of the connection has been accepted."
                      }
                    ]
                  }
                },
                "forceDisabledStatus": {
                  "type": "array",
                  "description": "Force disablement status of the current connection",
                  "items": {
                    "type": "string",
                    "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                    "enum": [
                      "ConnectionForceDisabled",
                      "FlowTypeForceDisabled"
                    ],
                    "x-ms-enum": {
                      "name": "ForceDisabledStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "ConnectionForceDisabled",
                          "value": "ConnectionForceDisabled",
                          "description": "Defines disablement of a Flow due to the parent connection being disabled."
                        },
                        {
                          "name": "FlowTypeForceDisabled",
                          "value": "FlowTypeForceDisabled",
                          "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                        }
                      ]
                    }
                  },
                  "readOnly": true
                },
                "statusReason": {
                  "type": "string",
                  "description": "Reason for status",
                  "readOnly": true
                },
                "linkStatus": {
                  "description": "Link status of the current connection",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Linked",
                    "Unlinked"
                  ],
                  "x-ms-enum": {
                    "name": "LinkStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Linked",
                        "value": "Linked",
                        "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                      },
                      {
                        "name": "Unlinked",
                        "value": "Unlinked",
                        "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                      }
                    ]
                  }
                },
                "linkedConnectionId": {
                  "type": "string",
                  "description": "Resource ID of the linked connection",
                  "readOnly": true
                },
                "flowTypes": {
                  "type": "array",
                  "description": "The flow types being requested for this connection. This FlowType property has reached end of life support starting version 2025-05-30-preview. Please create a FlowProfile resource instead.",
                  "items": {
                    "type": "string",
                    "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                    "enum": [
                      "Unknown",
                      "Complex",
                      "DevSecOps",
                      "Messaging",
                      "Mission",
                      "MicrosoftInternal",
                      "BasicFiles",
                      "Data",
                      "Standard",
                      "StreamingVideo",
                      "Opaque",
                      "MissionOpaqueXML",
                      "DiskImages",
                      "API"
                    ],
                    "x-ms-enum": {
                      "name": "FlowType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Unknown",
                          "value": "Unknown",
                          "description": "This type of flow is not set."
                        },
                        {
                          "name": "Complex",
                          "value": "Complex",
                          "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                        },
                        {
                          "name": "DevSecOps",
                          "value": "DevSecOps",
                          "description": "This flow sends source code files and artifacts."
                        },
                        {
                          "name": "Messaging",
                          "value": "Messaging",
                          "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                        },
                        {
                          "name": "Mission",
                          "value": "Mission",
                          "description": "This flow sends standard data but is subject to strict cloud owner approval."
                        },
                        {
                          "name": "MicrosoftInternal",
                          "value": "MicrosoftInternal",
                          "description": "This flow is assigned to internal Microsoft use cases."
                        },
                        {
                          "name": "BasicFiles",
                          "value": "BasicFiles",
                          "description": "This flow sends blobs that can be used for multiple use cases."
                        },
                        {
                          "name": "Data",
                          "value": "Data",
                          "description": "This flow sends blobs that can be used for multiple use cases."
                        },
                        {
                          "name": "Standard",
                          "value": "Standard",
                          "description": "This flow sends blobs that can be used for multiple use cases."
                        },
                        {
                          "name": "StreamingVideo",
                          "value": "StreamingVideo",
                          "description": "This flow sends video streams."
                        },
                        {
                          "name": "Opaque",
                          "value": "Opaque",
                          "description": "This flow sends blobs but is subject to cloud owner approval."
                        },
                        {
                          "name": "MissionOpaqueXML",
                          "value": "MissionOpaqueXML",
                          "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                        },
                        {
                          "name": "DiskImages",
                          "value": "DiskImages",
                          "description": "This flow sends blobs that can be used for Virtual Machines."
                        },
                        {
                          "name": "API",
                          "value": "API",
                          "description": "This flow sends data via an Application Programmer Interface."
                        }
                      ]
                    }
                  }
                },
                "requirementId": {
                  "type": "string",
                  "description": "Requirement ID of the connection"
                },
                "remoteSubscriptionId": {
                  "type": "string",
                  "description": "Subscription ID to link cloud subscriptions together"
                },
                "approver": {
                  "type": "string",
                  "description": "Approver of this connection request",
                  "readOnly": true
                },
                "pin": {
                  "type": "string",
                  "description": "PIN to link requests together"
                },
                "dateSubmitted": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp that this connection request was submitted at",
                  "readOnly": true
                },
                "primaryContact": {
                  "type": "string",
                  "description": "The primary contact for this connection request"
                },
                "secondaryContacts": {
                  "type": "array",
                  "description": "The secondary contacts for this connection request",
                  "items": {
                    "type": "string"
                  }
                },
                "provisioningState": {
                  "description": "Provisioning state of the connection",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Succeeded",
                    "Failed",
                    "Canceled",
                    "Accepted"
                  ],
                  "x-ms-enum": {
                    "name": "ProvisioningState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Succeeded",
                        "value": "Succeeded",
                        "description": "Resource has been created."
                      },
                      {
                        "name": "Failed",
                        "value": "Failed",
                        "description": "Resource creation failed."
                      },
                      {
                        "name": "Canceled",
                        "value": "Canceled",
                        "description": "Resource creation was canceled."
                      },
                      {
                        "name": "Accepted",
                        "value": "Accepted",
                        "description": "Resource has been accepted for creation."
                      }
                    ]
                  }
                },
                "policies": {
                  "type": "array",
                  "description": "The policies for this connection. The policies property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                  "items": {
                    "type": "string"
                  }
                },
                "schemas": {
                  "type": "array",
                  "description": "The schemas for this connection. The schemas property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                  "items": {
                    "type": "object",
                    "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "ID associated with this schema"
                      },
                      "connectionId": {
                        "type": "string",
                        "description": "Connection ID associated with this schema"
                      },
                      "status": {
                        "description": "Status of the schema",
                        "type": "string",
                        "enum": [
                          "New",
                          "Approved"
                        ],
                        "x-ms-enum": {
                          "name": "SchemaStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "New",
                              "value": "New",
                              "description": "A schema that has not been approved and is awaiting review."
                            },
                            {
                              "name": "Approved",
                              "value": "Approved",
                              "description": "A schema that has been approved and is ready for use."
                            }
                          ]
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the schema"
                      },
                      "content": {
                        "type": "string",
                        "description": "Content of the schema"
                      },
                      "direction": {
                        "description": "The direction of the schema.",
                        "type": "string",
                        "enum": [
                          "Send",
                          "Receive"
                        ],
                        "x-ms-enum": {
                          "name": "Direction",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Send",
                              "value": "Send",
                              "description": "The direction is on the sending side of a pipeline, connection, or flow."
                            },
                            {
                              "name": "Receive",
                              "value": "Receive",
                              "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                            }
                          ]
                        }
                      },
                      "schemaUri": {
                        "type": "string",
                        "format": "uri",
                        "description": "Uri containing SAS token for the zipped schema"
                      },
                      "schemaType": {
                        "description": "The Schema Type",
                        "type": "string",
                        "enum": [
                          "Xsd",
                          "Zip"
                        ],
                        "x-ms-enum": {
                          "name": "SchemaType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Xsd",
                              "value": "Xsd",
                              "description": "The schema represents a single XML schema definition file."
                            },
                            {
                              "name": "Zip",
                              "value": "Zip",
                              "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                            }
                          ]
                        }
                      }
                    }
                  }
                },
                "schemaUris": {
                  "type": "array",
                  "description": "The schema URIs for this connection. The schemaUris property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                  "items": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              },
              "required": [
                "pipeline"
              ]
            },
            "identity": {
              "description": "The managed service identities assigned to this resource.",
              "type": "object",
              "properties": {
                "principalId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                  "readOnly": true
                },
                "tenantId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                  "enum": [
                    "None",
                    "SystemAssigned",
                    "UserAssigned",
                    "SystemAssigned,UserAssigned"
                  ],
                  "x-ms-enum": {
                    "name": "ManagedServiceIdentityType",
                    "modelAsString": true
                  }
                },
                "userAssignedIdentities": {
                  "type": "object",
                  "title": "User-Assigned Identities",
                  "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                  "additionalProperties": {
                    "x-nullable": true,
                    "type": "object",
                    "description": "User assigned identity properties",
                    "properties": {
                      "principalId": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The principal ID of the assigned identity.",
                        "readOnly": true
                      },
                      "clientId": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The client ID of the assigned identity.",
                        "readOnly": true
                      }
                    }
                  }
                }
              },
              "required": [
                "type"
              ]
            }
          }
        }
      },
      "required": [
        "body"
      ]
    },
    "ArmFlowResponse": {
      "type": "object",
      "description": "Azure operation completed successfully.",
      "properties": {
        "body": {
          "type": "object",
          "description": "The flow resource definition.",
          "properties": {
            "id": {
              "type": "string",
              "format": "arm-id",
              "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
              "readOnly": true
            },
            "name": {
              "type": "string",
              "description": "The name of the resource",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
              "readOnly": true
            },
            "systemData": {
              "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "createdBy": {
                  "type": "string",
                  "description": "The identity that created the resource."
                },
                "createdByType": {
                  "type": "string",
                  "description": "The type of identity that created the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource creation (UTC)."
                },
                "lastModifiedBy": {
                  "type": "string",
                  "description": "The identity that last modified the resource."
                },
                "lastModifiedByType": {
                  "type": "string",
                  "description": "The type of identity that last modified the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "lastModifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource last modification (UTC)"
                }
              }
            },
            "tags": {
              "type": "object",
              "description": "Resource tags.",
              "additionalProperties": {
                "type": "string"
              },
              "x-ms-mutability": [
                "read",
                "create",
                "update"
              ]
            },
            "location": {
              "type": "string",
              "description": "The geo-location where the resource lives",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "properties": {
              "description": "Properties of flow",
              "type": "object",
              "properties": {
                "connection": {
                  "description": "The connection associated with this flow",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the connection"
                    },
                    "id": {
                      "type": "string",
                      "description": "Id of the connection"
                    },
                    "location": {
                      "type": "string",
                      "description": "Location of the connection",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "subscriptionName": {
                      "type": "string",
                      "description": "Name of the subscription with the connection"
                    }
                  },
                  "required": [
                    "id"
                  ]
                },
                "flowId": {
                  "type": "string",
                  "description": "Dataflow GUID associated with this flow",
                  "readOnly": true
                },
                "keyVaultUri": {
                  "type": "string",
                  "description": "URI to a Key Vault Secret containing a SAS token."
                },
                "linkStatus": {
                  "description": "Link status of the current flow",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Linked",
                    "Unlinked"
                  ],
                  "x-ms-enum": {
                    "name": "LinkStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Linked",
                        "value": "Linked",
                        "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                      },
                      {
                        "name": "Unlinked",
                        "value": "Unlinked",
                        "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                      }
                    ]
                  }
                },
                "linkedFlowId": {
                  "type": "string",
                  "description": "Resource ID of the linked flow",
                  "readOnly": true
                },
                "status": {
                  "description": "Status of the current flow",
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "FlowStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled",
                        "description": "The flow is currently enabled and able to send or receive data."
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "The flow is currently disabled and cannot send or receive data."
                      }
                    ]
                  }
                },
                "forceDisabledStatus": {
                  "type": "array",
                  "description": "Force disablement status of the current flow",
                  "items": {
                    "type": "string",
                    "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                    "enum": [
                      "ConnectionForceDisabled",
                      "FlowTypeForceDisabled"
                    ],
                    "x-ms-enum": {
                      "name": "ForceDisabledStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "ConnectionForceDisabled",
                          "value": "ConnectionForceDisabled",
                          "description": "Defines disablement of a Flow due to the parent connection being disabled."
                        },
                        {
                          "name": "FlowTypeForceDisabled",
                          "value": "FlowTypeForceDisabled",
                          "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                        }
                      ]
                    }
                  },
                  "readOnly": true
                },
                "storageAccountName": {
                  "type": "string",
                  "description": "Storage Account"
                },
                "storageAccountId": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Storage Account ID",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.Storage/storageAccounts"
                      }
                    ]
                  }
                },
                "storageContainerName": {
                  "type": "string",
                  "description": "Storage Container Name"
                },
                "storageTableName": {
                  "type": "string",
                  "description": "Storage Table Name"
                },
                "serviceBusQueueId": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Service Bus Queue ID",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.Storage/namespaces/queues"
                      }
                    ]
                  }
                },
                "flowType": {
                  "type": "string",
                  "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                  "enum": [
                    "Unknown",
                    "Complex",
                    "DevSecOps",
                    "Messaging",
                    "Mission",
                    "MicrosoftInternal",
                    "BasicFiles",
                    "Data",
                    "Standard",
                    "StreamingVideo",
                    "Opaque",
                    "MissionOpaqueXML",
                    "DiskImages",
                    "API"
                  ],
                  "x-ms-enum": {
                    "name": "FlowType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Unknown",
                        "value": "Unknown",
                        "description": "This type of flow is not set."
                      },
                      {
                        "name": "Complex",
                        "value": "Complex",
                        "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                      },
                      {
                        "name": "DevSecOps",
                        "value": "DevSecOps",
                        "description": "This flow sends source code files and artifacts."
                      },
                      {
                        "name": "Messaging",
                        "value": "Messaging",
                        "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                      },
                      {
                        "name": "Mission",
                        "value": "Mission",
                        "description": "This flow sends standard data but is subject to strict cloud owner approval."
                      },
                      {
                        "name": "MicrosoftInternal",
                        "value": "MicrosoftInternal",
                        "description": "This flow is assigned to internal Microsoft use cases."
                      },
                      {
                        "name": "BasicFiles",
                        "value": "BasicFiles",
                        "description": "This flow sends blobs that can be used for multiple use cases."
                      },
                      {
                        "name": "Data",
                        "value": "Data",
                        "description": "This flow sends blobs that can be used for multiple use cases."
                      },
                      {
                        "name": "Standard",
                        "value": "Standard",
                        "description": "This flow sends blobs that can be used for multiple use cases."
                      },
                      {
                        "name": "StreamingVideo",
                        "value": "StreamingVideo",
                        "description": "This flow sends video streams."
                      },
                      {
                        "name": "Opaque",
                        "value": "Opaque",
                        "description": "This flow sends blobs but is subject to cloud owner approval."
                      },
                      {
                        "name": "MissionOpaqueXML",
                        "value": "MissionOpaqueXML",
                        "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                      },
                      {
                        "name": "DiskImages",
                        "value": "DiskImages",
                        "description": "This flow sends blobs that can be used for Virtual Machines."
                      },
                      {
                        "name": "API",
                        "value": "API",
                        "description": "This flow sends data via an Application Programmer Interface."
                      }
                    ]
                  }
                },
                "dataType": {
                  "description": "Type of data to transfer via the flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                  "type": "string",
                  "enum": [
                    "Blob",
                    "Table"
                  ],
                  "x-ms-enum": {
                    "name": "DataType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Blob",
                        "value": "Blob",
                        "description": "The flow uses Azure Storage blobs to send or receive data."
                      },
                      {
                        "name": "Table",
                        "value": "Table",
                        "description": "The flow uses Azure Storage tables to send or receive data."
                      }
                    ]
                  }
                },
                "provisioningState": {
                  "description": "Provisioning state of the flow",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Succeeded",
                    "Failed",
                    "Canceled",
                    "Accepted"
                  ],
                  "x-ms-enum": {
                    "name": "ProvisioningState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Succeeded",
                        "value": "Succeeded",
                        "description": "Resource has been created."
                      },
                      {
                        "name": "Failed",
                        "value": "Failed",
                        "description": "Resource creation failed."
                      },
                      {
                        "name": "Canceled",
                        "value": "Canceled",
                        "description": "Resource creation was canceled."
                      },
                      {
                        "name": "Accepted",
                        "value": "Accepted",
                        "description": "Resource has been accepted for creation."
                      }
                    ]
                  }
                },
                "policies": {
                  "type": "array",
                  "description": "The policies for this flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                  "items": {
                    "type": "string"
                  }
                },
                "schema": {
                  "type": "object",
                  "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID associated with this schema"
                    },
                    "connectionId": {
                      "type": "string",
                      "description": "Connection ID associated with this schema"
                    },
                    "status": {
                      "description": "Status of the schema",
                      "type": "string",
                      "enum": [
                        "New",
                        "Approved"
                      ],
                      "x-ms-enum": {
                        "name": "SchemaStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "New",
                            "value": "New",
                            "description": "A schema that has not been approved and is awaiting review."
                          },
                          {
                            "name": "Approved",
                            "value": "Approved",
                            "description": "A schema that has been approved and is ready for use."
                          }
                        ]
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the schema"
                    },
                    "content": {
                      "type": "string",
                      "description": "Content of the schema"
                    },
                    "direction": {
                      "description": "The direction of the schema.",
                      "type": "string",
                      "enum": [
                        "Send",
                        "Receive"
                      ],
                      "x-ms-enum": {
                        "name": "Direction",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Send",
                            "value": "Send",
                            "description": "The direction is on the sending side of a pipeline, connection, or flow."
                          },
                          {
                            "name": "Receive",
                            "value": "Receive",
                            "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                          }
                        ]
                      }
                    },
                    "schemaUri": {
                      "type": "string",
                      "format": "uri",
                      "description": "Uri containing SAS token for the zipped schema"
                    },
                    "schemaType": {
                      "description": "The Schema Type",
                      "type": "string",
                      "enum": [
                        "Xsd",
                        "Zip"
                      ],
                      "x-ms-enum": {
                        "name": "SchemaType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Xsd",
                            "value": "Xsd",
                            "description": "The schema represents a single XML schema definition file."
                          },
                          {
                            "name": "Zip",
                            "value": "Zip",
                            "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                          }
                        ]
                      }
                    }
                  }
                },
                "messagingOptions": {
                  "description": "The messaging options for this flow",
                  "type": "object",
                  "properties": {
                    "billingTier": {
                      "description": "Billing tier for this messaging flow",
                      "type": "string",
                      "enum": [
                        "BlobTransport",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "FlowBillingTier",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "BlobTransport",
                            "value": "BlobTransport",
                            "description": "Billing tier for messaging processing that charges based on how much data is transferred."
                          },
                          {
                            "name": "Standard",
                            "value": "Standard",
                            "description": "Billing tier for standard messaging processing that charges based on having the messaging resource allocated."
                          },
                          {
                            "name": "Premium",
                            "value": "Premium",
                            "description": "Billing tier for premium messaging processing that charges based on having the messaging resource allocated."
                          }
                        ]
                      }
                    }
                  }
                },
                "apiFlowOptions": {
                  "description": "The API Flow configuration options for Azure Data Transfer API Flow type.",
                  "type": "object",
                  "properties": {
                    "remoteEndpoint": {
                      "type": "string",
                      "description": "Remote host to which communication needs to be made. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the remoteEndpointSettings.endpoint property instead."
                    },
                    "cname": {
                      "type": "string",
                      "description": "Unique CNAME to represent the Azure Data Transfer API Flow instance"
                    },
                    "apiMode": {
                      "description": "Remote Calling Mode in the Azure Data Transfer API Flow, which describes how the API Flow will be invoked",
                      "type": "string",
                      "enum": [
                        "SDK",
                        "Endpoint"
                      ],
                      "x-ms-enum": {
                        "name": "ApiMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SDK",
                            "value": "SDK",
                            "description": "The API flow will forward calls to a custom Software Development Kit implementation."
                          },
                          {
                            "name": "Endpoint",
                            "value": "Endpoint",
                            "description": "The API flow will forward calls to a specified endpoint."
                          }
                        ]
                      }
                    },
                    "identityTranslation": {
                      "description": "Determines which identity to use for extracting the user token for Azure Data Transfer API Flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead.",
                      "type": "string",
                      "enum": [
                        "UserIdentity",
                        "ServiceIdentity"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityTranslation",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "UserIdentity",
                            "value": "UserIdentity",
                            "description": "The API flow will make use of the user identity that called this API flow, and pass that token through the boundary."
                          },
                          {
                            "name": "ServiceIdentity",
                            "value": "ServiceIdentity",
                            "description": "The API flow will make use of the Azure Data Transfer Flow managed identity on the other side of the boundary."
                          }
                        ]
                      }
                    },
                    "senderClientId": {
                      "type": "string",
                      "description": "Sender's app user assigned Manage Identity client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                    },
                    "remoteCallingModeClientId": {
                      "type": "string",
                      "description": "Remote stub app registration Client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                    },
                    "audienceOverride": {
                      "type": "string",
                      "description": "Optional field to override the audience of the remote endpoint. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                    }
                  }
                },
                "customerManagedKeyVaultUri": {
                  "type": "string",
                  "format": "uri",
                  "description": "The URI to the customer managed key for this flow"
                },
                "streamId": {
                  "type": "string",
                  "description": "The flow stream identifier"
                },
                "streamProtocol": {
                  "description": "The protocol of the stream",
                  "type": "string",
                  "enum": [
                    "UDP",
                    "SRT",
                    "RTP"
                  ],
                  "x-ms-enum": {
                    "name": "StreamProtocol",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "UDP",
                        "value": "UDP",
                        "description": "This Flow is using User Datagram Protocol for the video stream."
                      },
                      {
                        "name": "SRT",
                        "value": "SRT",
                        "description": "This Flow is using Secure Reliable Transfer for the video stream."
                      },
                      {
                        "name": "RTP",
                        "value": "RTP",
                        "description": "This Flow is using Real-time Transport Protocol for the video stream."
                      }
                    ]
                  }
                },
                "streamLatency": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The latency of the stream in milliseconds"
                },
                "passphrase": {
                  "type": "string",
                  "description": "The passphrase used for SRT streams"
                },
                "sourceAddresses": {
                  "description": "The source IP address and CIDR ranges of the stream",
                  "type": "object",
                  "properties": {
                    "sourceAddresses": {
                      "type": "array",
                      "description": "A source IP address or CIDR range",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "destinationEndpoints": {
                  "type": "array",
                  "description": "The destination endpoints of the stream",
                  "items": {
                    "type": "string"
                  }
                },
                "destinationEndpointPorts": {
                  "type": "array",
                  "description": "The destination endpoint ports of the stream",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "eventHubId": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Event Hub ID",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.EventHub/namespaces/eventhubs"
                      }
                    ]
                  }
                },
                "consumerGroup": {
                  "type": "string",
                  "description": "Event Hub Consumer Group"
                }
              }
            },
            "plan": {
              "description": "Details of the resource plan.",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "A user defined name of the 3rd Party Artifact that is being procured."
                },
                "publisher": {
                  "type": "string",
                  "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
                },
                "product": {
                  "type": "string",
                  "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
                },
                "promotionCode": {
                  "type": "string",
                  "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
                },
                "version": {
                  "type": "string",
                  "description": "The version of the desired product/artifact."
                }
              },
              "required": [
                "name",
                "publisher",
                "product"
              ]
            },
            "identity": {
              "description": "The managed service identities assigned to this resource.",
              "type": "object",
              "properties": {
                "principalId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                  "readOnly": true
                },
                "tenantId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                  "enum": [
                    "None",
                    "SystemAssigned",
                    "UserAssigned",
                    "SystemAssigned,UserAssigned"
                  ],
                  "x-ms-enum": {
                    "name": "ManagedServiceIdentityType",
                    "modelAsString": true
                  }
                },
                "userAssignedIdentities": {
                  "type": "object",
                  "title": "User-Assigned Identities",
                  "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                  "additionalProperties": {
                    "x-nullable": true,
                    "type": "object",
                    "description": "User assigned identity properties",
                    "properties": {
                      "principalId": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The principal ID of the assigned identity.",
                        "readOnly": true
                      },
                      "clientId": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The client ID of the assigned identity.",
                        "readOnly": true
                      }
                    }
                  }
                }
              },
              "required": [
                "type"
              ]
            }
          }
        }
      },
      "required": [
        "body"
      ]
    },
    "ArmPipelineResponse": {
      "type": "object",
      "description": "Azure operation completed successfully.",
      "properties": {
        "body": {
          "type": "object",
          "description": "The pipeline resource definition. A Pipeline defines the scope and identity under which data replication scenarios are managed.",
          "properties": {
            "id": {
              "type": "string",
              "format": "arm-id",
              "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
              "readOnly": true
            },
            "name": {
              "type": "string",
              "description": "The name of the resource",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
              "readOnly": true
            },
            "systemData": {
              "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "createdBy": {
                  "type": "string",
                  "description": "The identity that created the resource."
                },
                "createdByType": {
                  "type": "string",
                  "description": "The type of identity that created the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource creation (UTC)."
                },
                "lastModifiedBy": {
                  "type": "string",
                  "description": "The identity that last modified the resource."
                },
                "lastModifiedByType": {
                  "type": "string",
                  "description": "The type of identity that last modified the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "lastModifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource last modification (UTC)"
                }
              }
            },
            "tags": {
              "type": "object",
              "description": "Resource tags.",
              "additionalProperties": {
                "type": "string"
              },
              "x-ms-mutability": [
                "read",
                "create",
                "update"
              ]
            },
            "location": {
              "type": "string",
              "description": "The geo-location where the resource lives",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "properties": {
              "description": "The set of configurable properties for the Pipeline resource.",
              "type": "object",
              "properties": {
                "remoteCloud": {
                  "type": "string",
                  "description": "Remote cloud of the data to be transferred or received"
                },
                "displayName": {
                  "type": "string",
                  "description": "Display name of this pipeline"
                },
                "connections": {
                  "type": "array",
                  "description": "Connections associated with pipeline",
                  "items": {
                    "type": "object",
                    "description": "The ReadPipelineconnection.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Connection id inside pipeline"
                      },
                      "name": {
                        "type": "string",
                        "description": "Connection name inside pipeline"
                      },
                      "type": {
                        "type": "string",
                        "description": "Connection type inside pipeline"
                      },
                      "location": {
                        "type": "string",
                        "description": "Connection location inside pipeline"
                      },
                      "etag": {
                        "type": "string",
                        "description": "Connection etag inside pipeline"
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        },
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Connection properties inside pipeline",
                        "type": "object",
                        "properties": {
                          "internalMetadata": {
                            "description": "Internal metadata of the connection inside pipeline.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "operationStatus": {
                                "description": "Operation status associated with the last patch request",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Operation status for the last patch request for this connection.",
                                    "readOnly": true,
                                    "type": "string",
                                    "enum": [
                                      "Failed",
                                      "Succeeded"
                                    ],
                                    "x-ms-enum": {
                                      "name": "OperationStatusEnum",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Failed",
                                          "value": "Failed",
                                          "description": "The last patch request for this connection completed with an error."
                                        },
                                        {
                                          "name": "Succeeded",
                                          "value": "Succeeded",
                                          "description": "The last patch request for this connection completed."
                                        }
                                      ]
                                    }
                                  },
                                  "id": {
                                    "type": "string",
                                    "description": "Operation status ID of the last patch request for this connection.",
                                    "readOnly": true
                                  },
                                  "message": {
                                    "type": "string",
                                    "description": "Message for the operation for the last patch request for this connection.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "statusSetBy": {
                                "type": "string",
                                "description": "User that last set the approved status for this connection",
                                "readOnly": true
                              }
                            },
                            "additionalProperties": {}
                          }
                        },
                        "additionalProperties": {}
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "additionalProperties": {}
                  },
                  "readOnly": true,
                  "x-ms-identifiers": [
                    "id"
                  ]
                },
                "subscribers": {
                  "type": "array",
                  "description": "Subscribers of this resource",
                  "items": {
                    "type": "object",
                    "description": "An individual that would like to subscribe to events that occur on a pipeline.",
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "Email of the subscriber"
                      },
                      "notifications": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Number specifying what notifications to receive"
                      }
                    }
                  },
                  "x-ms-identifiers": []
                },
                "provisioningState": {
                  "description": "Provisioning state of the pipeline",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Succeeded",
                    "Failed",
                    "Canceled",
                    "Accepted"
                  ],
                  "x-ms-enum": {
                    "name": "ProvisioningState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Succeeded",
                        "value": "Succeeded",
                        "description": "Resource has been created."
                      },
                      {
                        "name": "Failed",
                        "value": "Failed",
                        "description": "Resource creation failed."
                      },
                      {
                        "name": "Canceled",
                        "value": "Canceled",
                        "description": "Resource creation was canceled."
                      },
                      {
                        "name": "Accepted",
                        "value": "Accepted",
                        "description": "Resource has been accepted for creation."
                      }
                    ]
                  }
                },
                "policies": {
                  "type": "array",
                  "description": "The policies for this pipeline. The policies property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                  "items": {
                    "type": "string"
                  }
                },
                "flowTypes": {
                  "type": "array",
                  "description": "The flow type for this flow. The flowTypes property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                  "items": {
                    "type": "string",
                    "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                    "enum": [
                      "Unknown",
                      "Complex",
                      "DevSecOps",
                      "Messaging",
                      "Mission",
                      "MicrosoftInternal",
                      "BasicFiles",
                      "Data",
                      "Standard",
                      "StreamingVideo",
                      "Opaque",
                      "MissionOpaqueXML",
                      "DiskImages",
                      "API"
                    ],
                    "x-ms-enum": {
                      "name": "FlowType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Unknown",
                          "value": "Unknown",
                          "description": "This type of flow is not set."
                        },
                        {
                          "name": "Complex",
                          "value": "Complex",
                          "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                        },
                        {
                          "name": "DevSecOps",
                          "value": "DevSecOps",
                          "description": "This flow sends source code files and artifacts."
                        },
                        {
                          "name": "Messaging",
                          "value": "Messaging",
                          "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                        },
                        {
                          "name": "Mission",
                          "value": "Mission",
                          "description": "This flow sends standard data but is subject to strict cloud owner approval."
                        },
                        {
                          "name": "MicrosoftInternal",
                          "value": "MicrosoftInternal",
                          "description": "This flow is assigned to internal Microsoft use cases."
                        },
                        {
                          "name": "BasicFiles",
                          "value": "BasicFiles",
                          "description": "This flow sends blobs that can be used for multiple use cases."
                        },
                        {
                          "name": "Data",
                          "value": "Data",
                          "description": "This flow sends blobs that can be used for multiple use cases."
                        },
                        {
                          "name": "Standard",
                          "value": "Standard",
                          "description": "This flow sends blobs that can be used for multiple use cases."
                        },
                        {
                          "name": "StreamingVideo",
                          "value": "StreamingVideo",
                          "description": "This flow sends video streams."
                        },
                        {
                          "name": "Opaque",
                          "value": "Opaque",
                          "description": "This flow sends blobs but is subject to cloud owner approval."
                        },
                        {
                          "name": "MissionOpaqueXML",
                          "value": "MissionOpaqueXML",
                          "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                        },
                        {
                          "name": "DiskImages",
                          "value": "DiskImages",
                          "description": "This flow sends blobs that can be used for Virtual Machines."
                        },
                        {
                          "name": "API",
                          "value": "API",
                          "description": "This flow sends data via an Application Programmer Interface."
                        }
                      ]
                    }
                  }
                },
                "disabledFlowTypes": {
                  "type": "array",
                  "description": "The flow types that are disabled for this pipeline",
                  "items": {
                    "type": "string",
                    "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                    "enum": [
                      "Unknown",
                      "Complex",
                      "DevSecOps",
                      "Messaging",
                      "Mission",
                      "MicrosoftInternal",
                      "BasicFiles",
                      "Data",
                      "Standard",
                      "StreamingVideo",
                      "Opaque",
                      "MissionOpaqueXML",
                      "DiskImages",
                      "API"
                    ],
                    "x-ms-enum": {
                      "name": "FlowType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Unknown",
                          "value": "Unknown",
                          "description": "This type of flow is not set."
                        },
                        {
                          "name": "Complex",
                          "value": "Complex",
                          "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                        },
                        {
                          "name": "DevSecOps",
                          "value": "DevSecOps",
                          "description": "This flow sends source code files and artifacts."
                        },
                        {
                          "name": "Messaging",
                          "value": "Messaging",
                          "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                        },
                        {
                          "name": "Mission",
                          "value": "Mission",
                          "description": "This flow sends standard data but is subject to strict cloud owner approval."
                        },
                        {
                          "name": "MicrosoftInternal",
                          "value": "MicrosoftInternal",
                          "description": "This flow is assigned to internal Microsoft use cases."
                        },
                        {
                          "name": "BasicFiles",
                          "value": "BasicFiles",
                          "description": "This flow sends blobs that can be used for multiple use cases."
                        },
                        {
                          "name": "Data",
                          "value": "Data",
                          "description": "This flow sends blobs that can be used for multiple use cases."
                        },
                        {
                          "name": "Standard",
                          "value": "Standard",
                          "description": "This flow sends blobs that can be used for multiple use cases."
                        },
                        {
                          "name": "StreamingVideo",
                          "value": "StreamingVideo",
                          "description": "This flow sends video streams."
                        },
                        {
                          "name": "Opaque",
                          "value": "Opaque",
                          "description": "This flow sends blobs but is subject to cloud owner approval."
                        },
                        {
                          "name": "MissionOpaqueXML",
                          "value": "MissionOpaqueXML",
                          "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                        },
                        {
                          "name": "DiskImages",
                          "value": "DiskImages",
                          "description": "This flow sends blobs that can be used for Virtual Machines."
                        },
                        {
                          "name": "API",
                          "value": "API",
                          "description": "This flow sends data via an Application Programmer Interface."
                        }
                      ]
                    }
                  }
                },
                "quarantineDownloadStorageAccount": {
                  "type": "string",
                  "description": "Quarantine Download Storage Account"
                },
                "quarantineDownloadStorageContainer": {
                  "type": "string",
                  "description": "Quarantine Download Storage Container"
                },
                "status": {
                  "description": "Status of the current pipeline",
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "PipelineStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled",
                        "description": "The pipeline is currently enabled and all child connection and flow resources below able to send or receive data."
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "The pipeline is currently disabled and all child connection and flow resources below are unable to send or receive data."
                      }
                    ]
                  }
                }
              },
              "required": [
                "remoteCloud"
              ]
            },
            "identity": {
              "description": "The managed service identities assigned to this resource.",
              "type": "object",
              "properties": {
                "principalId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                  "readOnly": true
                },
                "tenantId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                  "enum": [
                    "None",
                    "SystemAssigned",
                    "UserAssigned",
                    "SystemAssigned,UserAssigned"
                  ],
                  "x-ms-enum": {
                    "name": "ManagedServiceIdentityType",
                    "modelAsString": true
                  }
                },
                "userAssignedIdentities": {
                  "type": "object",
                  "title": "User-Assigned Identities",
                  "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                  "additionalProperties": {
                    "x-nullable": true,
                    "type": "object",
                    "description": "User assigned identity properties",
                    "properties": {
                      "principalId": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The principal ID of the assigned identity.",
                        "readOnly": true
                      },
                      "clientId": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The client ID of the assigned identity.",
                        "readOnly": true
                      }
                    }
                  }
                }
              },
              "required": [
                "type"
              ]
            }
          }
        }
      },
      "required": [
        "body"
      ]
    },
    "Azure.Core.armResourceType": {
      "type": "string",
      "description": "Represents an Azure Resource Type."
    },
    "Connection": {
      "type": "object",
      "description": "The connection resource definition.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "Properties of connection",
          "type": "object",
          "properties": {
            "pipeline": {
              "type": "string",
              "description": "Pipeline to use to transfer data"
            },
            "direction": {
              "description": "Direction of data movement",
              "type": "string",
              "enum": [
                "Send",
                "Receive"
              ],
              "x-ms-enum": {
                "name": "Direction",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Send",
                    "value": "Send",
                    "description": "The direction is on the sending side of a pipeline, connection, or flow."
                  },
                  {
                    "name": "Receive",
                    "value": "Receive",
                    "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                  }
                ]
              }
            },
            "justification": {
              "type": "string",
              "description": "Justification for the connection request"
            },
            "status": {
              "description": "Status of the connection",
              "readOnly": true,
              "type": "string",
              "enum": [
                "InReview",
                "Approved",
                "Rejected",
                "Accepted"
              ],
              "x-ms-enum": {
                "name": "ConnectionStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "InReview",
                    "value": "InReview",
                    "description": "This connection has been created but is under review by the pipeline owner."
                  },
                  {
                    "name": "Approved",
                    "value": "Approved",
                    "description": "This connection has been approved by the pipeline owner and is ready for use."
                  },
                  {
                    "name": "Rejected",
                    "value": "Rejected",
                    "description": "This connection has been rejected by the pipeline owner and cannot be used."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "Creation of the connection has been accepted."
                  }
                ]
              }
            },
            "forceDisabledStatus": {
              "type": "array",
              "description": "Force disablement status of the current connection",
              "items": {
                "type": "string",
                "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                "enum": [
                  "ConnectionForceDisabled",
                  "FlowTypeForceDisabled"
                ],
                "x-ms-enum": {
                  "name": "ForceDisabledStatus",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "ConnectionForceDisabled",
                      "value": "ConnectionForceDisabled",
                      "description": "Defines disablement of a Flow due to the parent connection being disabled."
                    },
                    {
                      "name": "FlowTypeForceDisabled",
                      "value": "FlowTypeForceDisabled",
                      "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                    }
                  ]
                }
              },
              "readOnly": true
            },
            "statusReason": {
              "type": "string",
              "description": "Reason for status",
              "readOnly": true
            },
            "linkStatus": {
              "description": "Link status of the current connection",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Linked",
                "Unlinked"
              ],
              "x-ms-enum": {
                "name": "LinkStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Linked",
                    "value": "Linked",
                    "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                  },
                  {
                    "name": "Unlinked",
                    "value": "Unlinked",
                    "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                  }
                ]
              }
            },
            "linkedConnectionId": {
              "type": "string",
              "description": "Resource ID of the linked connection",
              "readOnly": true
            },
            "flowTypes": {
              "type": "array",
              "description": "The flow types being requested for this connection. This FlowType property has reached end of life support starting version 2025-05-30-preview. Please create a FlowProfile resource instead.",
              "items": {
                "type": "string",
                "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                "enum": [
                  "Unknown",
                  "Complex",
                  "DevSecOps",
                  "Messaging",
                  "Mission",
                  "MicrosoftInternal",
                  "BasicFiles",
                  "Data",
                  "Standard",
                  "StreamingVideo",
                  "Opaque",
                  "MissionOpaqueXML",
                  "DiskImages",
                  "API"
                ],
                "x-ms-enum": {
                  "name": "FlowType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Unknown",
                      "value": "Unknown",
                      "description": "This type of flow is not set."
                    },
                    {
                      "name": "Complex",
                      "value": "Complex",
                      "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                    },
                    {
                      "name": "DevSecOps",
                      "value": "DevSecOps",
                      "description": "This flow sends source code files and artifacts."
                    },
                    {
                      "name": "Messaging",
                      "value": "Messaging",
                      "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                    },
                    {
                      "name": "Mission",
                      "value": "Mission",
                      "description": "This flow sends standard data but is subject to strict cloud owner approval."
                    },
                    {
                      "name": "MicrosoftInternal",
                      "value": "MicrosoftInternal",
                      "description": "This flow is assigned to internal Microsoft use cases."
                    },
                    {
                      "name": "BasicFiles",
                      "value": "BasicFiles",
                      "description": "This flow sends blobs that can be used for multiple use cases."
                    },
                    {
                      "name": "Data",
                      "value": "Data",
                      "description": "This flow sends blobs that can be used for multiple use cases."
                    },
                    {
                      "name": "Standard",
                      "value": "Standard",
                      "description": "This flow sends blobs that can be used for multiple use cases."
                    },
                    {
                      "name": "StreamingVideo",
                      "value": "StreamingVideo",
                      "description": "This flow sends video streams."
                    },
                    {
                      "name": "Opaque",
                      "value": "Opaque",
                      "description": "This flow sends blobs but is subject to cloud owner approval."
                    },
                    {
                      "name": "MissionOpaqueXML",
                      "value": "MissionOpaqueXML",
                      "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                    },
                    {
                      "name": "DiskImages",
                      "value": "DiskImages",
                      "description": "This flow sends blobs that can be used for Virtual Machines."
                    },
                    {
                      "name": "API",
                      "value": "API",
                      "description": "This flow sends data via an Application Programmer Interface."
                    }
                  ]
                }
              }
            },
            "requirementId": {
              "type": "string",
              "description": "Requirement ID of the connection"
            },
            "remoteSubscriptionId": {
              "type": "string",
              "description": "Subscription ID to link cloud subscriptions together"
            },
            "approver": {
              "type": "string",
              "description": "Approver of this connection request",
              "readOnly": true
            },
            "pin": {
              "type": "string",
              "description": "PIN to link requests together"
            },
            "dateSubmitted": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp that this connection request was submitted at",
              "readOnly": true
            },
            "primaryContact": {
              "type": "string",
              "description": "The primary contact for this connection request"
            },
            "secondaryContacts": {
              "type": "array",
              "description": "The secondary contacts for this connection request",
              "items": {
                "type": "string"
              }
            },
            "provisioningState": {
              "description": "Provisioning state of the connection",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Accepted"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "Resource has been accepted for creation."
                  }
                ]
              }
            },
            "policies": {
              "type": "array",
              "description": "The policies for this connection. The policies property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
              "items": {
                "type": "string"
              }
            },
            "schemas": {
              "type": "array",
              "description": "The schemas for this connection. The schemas property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
              "items": {
                "type": "object",
                "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "ID associated with this schema"
                  },
                  "connectionId": {
                    "type": "string",
                    "description": "Connection ID associated with this schema"
                  },
                  "status": {
                    "description": "Status of the schema",
                    "type": "string",
                    "enum": [
                      "New",
                      "Approved"
                    ],
                    "x-ms-enum": {
                      "name": "SchemaStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "New",
                          "value": "New",
                          "description": "A schema that has not been approved and is awaiting review."
                        },
                        {
                          "name": "Approved",
                          "value": "Approved",
                          "description": "A schema that has been approved and is ready for use."
                        }
                      ]
                    }
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the schema"
                  },
                  "content": {
                    "type": "string",
                    "description": "Content of the schema"
                  },
                  "direction": {
                    "description": "The direction of the schema.",
                    "type": "string",
                    "enum": [
                      "Send",
                      "Receive"
                    ],
                    "x-ms-enum": {
                      "name": "Direction",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Send",
                          "value": "Send",
                          "description": "The direction is on the sending side of a pipeline, connection, or flow."
                        },
                        {
                          "name": "Receive",
                          "value": "Receive",
                          "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                        }
                      ]
                    }
                  },
                  "schemaUri": {
                    "type": "string",
                    "format": "uri",
                    "description": "Uri containing SAS token for the zipped schema"
                  },
                  "schemaType": {
                    "description": "The Schema Type",
                    "type": "string",
                    "enum": [
                      "Xsd",
                      "Zip"
                    ],
                    "x-ms-enum": {
                      "name": "SchemaType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Xsd",
                          "value": "Xsd",
                          "description": "The schema represents a single XML schema definition file."
                        },
                        {
                          "name": "Zip",
                          "value": "Zip",
                          "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                        }
                      ]
                    }
                  }
                }
              }
            },
            "schemaUris": {
              "type": "array",
              "description": "The schema URIs for this connection. The schemaUris property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
              "items": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "required": [
            "pipeline"
          ]
        },
        "identity": {
          "description": "The managed service identities assigned to this resource.",
          "type": "object",
          "properties": {
            "principalId": {
              "type": "string",
              "format": "uuid",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "format": "uuid",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "title": "User-Assigned Identities",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "additionalProperties": {
                "x-nullable": true,
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        }
      }
    },
    "ConnectionIdList": {
      "type": "object",
      "description": "An array of connection id resources.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Connection ID to target",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ConnectionListResult": {
      "type": "object",
      "description": "The response of a Connection list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Connection items on this page",
          "items": {
            "type": "object",
            "description": "The connection resource definition.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "Properties of connection",
                "type": "object",
                "properties": {
                  "pipeline": {
                    "type": "string",
                    "description": "Pipeline to use to transfer data"
                  },
                  "direction": {
                    "description": "Direction of data movement",
                    "type": "string",
                    "enum": [
                      "Send",
                      "Receive"
                    ],
                    "x-ms-enum": {
                      "name": "Direction",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Send",
                          "value": "Send",
                          "description": "The direction is on the sending side of a pipeline, connection, or flow."
                        },
                        {
                          "name": "Receive",
                          "value": "Receive",
                          "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                        }
                      ]
                    }
                  },
                  "justification": {
                    "type": "string",
                    "description": "Justification for the connection request"
                  },
                  "status": {
                    "description": "Status of the connection",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "InReview",
                      "Approved",
                      "Rejected",
                      "Accepted"
                    ],
                    "x-ms-enum": {
                      "name": "ConnectionStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "InReview",
                          "value": "InReview",
                          "description": "This connection has been created but is under review by the pipeline owner."
                        },
                        {
                          "name": "Approved",
                          "value": "Approved",
                          "description": "This connection has been approved by the pipeline owner and is ready for use."
                        },
                        {
                          "name": "Rejected",
                          "value": "Rejected",
                          "description": "This connection has been rejected by the pipeline owner and cannot be used."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "Creation of the connection has been accepted."
                        }
                      ]
                    }
                  },
                  "forceDisabledStatus": {
                    "type": "array",
                    "description": "Force disablement status of the current connection",
                    "items": {
                      "type": "string",
                      "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                      "enum": [
                        "ConnectionForceDisabled",
                        "FlowTypeForceDisabled"
                      ],
                      "x-ms-enum": {
                        "name": "ForceDisabledStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "ConnectionForceDisabled",
                            "value": "ConnectionForceDisabled",
                            "description": "Defines disablement of a Flow due to the parent connection being disabled."
                          },
                          {
                            "name": "FlowTypeForceDisabled",
                            "value": "FlowTypeForceDisabled",
                            "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                          }
                        ]
                      }
                    },
                    "readOnly": true
                  },
                  "statusReason": {
                    "type": "string",
                    "description": "Reason for status",
                    "readOnly": true
                  },
                  "linkStatus": {
                    "description": "Link status of the current connection",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Linked",
                      "Unlinked"
                    ],
                    "x-ms-enum": {
                      "name": "LinkStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Linked",
                          "value": "Linked",
                          "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                        },
                        {
                          "name": "Unlinked",
                          "value": "Unlinked",
                          "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                        }
                      ]
                    }
                  },
                  "linkedConnectionId": {
                    "type": "string",
                    "description": "Resource ID of the linked connection",
                    "readOnly": true
                  },
                  "flowTypes": {
                    "type": "array",
                    "description": "The flow types being requested for this connection. This FlowType property has reached end of life support starting version 2025-05-30-preview. Please create a FlowProfile resource instead.",
                    "items": {
                      "type": "string",
                      "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                      "enum": [
                        "Unknown",
                        "Complex",
                        "DevSecOps",
                        "Messaging",
                        "Mission",
                        "MicrosoftInternal",
                        "BasicFiles",
                        "Data",
                        "Standard",
                        "StreamingVideo",
                        "Opaque",
                        "MissionOpaqueXML",
                        "DiskImages",
                        "API"
                      ],
                      "x-ms-enum": {
                        "name": "FlowType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "This type of flow is not set."
                          },
                          {
                            "name": "Complex",
                            "value": "Complex",
                            "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                          },
                          {
                            "name": "DevSecOps",
                            "value": "DevSecOps",
                            "description": "This flow sends source code files and artifacts."
                          },
                          {
                            "name": "Messaging",
                            "value": "Messaging",
                            "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                          },
                          {
                            "name": "Mission",
                            "value": "Mission",
                            "description": "This flow sends standard data but is subject to strict cloud owner approval."
                          },
                          {
                            "name": "MicrosoftInternal",
                            "value": "MicrosoftInternal",
                            "description": "This flow is assigned to internal Microsoft use cases."
                          },
                          {
                            "name": "BasicFiles",
                            "value": "BasicFiles",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "Data",
                            "value": "Data",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "Standard",
                            "value": "Standard",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "StreamingVideo",
                            "value": "StreamingVideo",
                            "description": "This flow sends video streams."
                          },
                          {
                            "name": "Opaque",
                            "value": "Opaque",
                            "description": "This flow sends blobs but is subject to cloud owner approval."
                          },
                          {
                            "name": "MissionOpaqueXML",
                            "value": "MissionOpaqueXML",
                            "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                          },
                          {
                            "name": "DiskImages",
                            "value": "DiskImages",
                            "description": "This flow sends blobs that can be used for Virtual Machines."
                          },
                          {
                            "name": "API",
                            "value": "API",
                            "description": "This flow sends data via an Application Programmer Interface."
                          }
                        ]
                      }
                    }
                  },
                  "requirementId": {
                    "type": "string",
                    "description": "Requirement ID of the connection"
                  },
                  "remoteSubscriptionId": {
                    "type": "string",
                    "description": "Subscription ID to link cloud subscriptions together"
                  },
                  "approver": {
                    "type": "string",
                    "description": "Approver of this connection request",
                    "readOnly": true
                  },
                  "pin": {
                    "type": "string",
                    "description": "PIN to link requests together"
                  },
                  "dateSubmitted": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp that this connection request was submitted at",
                    "readOnly": true
                  },
                  "primaryContact": {
                    "type": "string",
                    "description": "The primary contact for this connection request"
                  },
                  "secondaryContacts": {
                    "type": "array",
                    "description": "The secondary contacts for this connection request",
                    "items": {
                      "type": "string"
                    }
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the connection",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Accepted"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "Resource has been accepted for creation."
                        }
                      ]
                    }
                  },
                  "policies": {
                    "type": "array",
                    "description": "The policies for this connection. The policies property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "schemas": {
                    "type": "array",
                    "description": "The schemas for this connection. The schemas property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                    "items": {
                      "type": "object",
                      "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "ID associated with this schema"
                        },
                        "connectionId": {
                          "type": "string",
                          "description": "Connection ID associated with this schema"
                        },
                        "status": {
                          "description": "Status of the schema",
                          "type": "string",
                          "enum": [
                            "New",
                            "Approved"
                          ],
                          "x-ms-enum": {
                            "name": "SchemaStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "New",
                                "value": "New",
                                "description": "A schema that has not been approved and is awaiting review."
                              },
                              {
                                "name": "Approved",
                                "value": "Approved",
                                "description": "A schema that has been approved and is ready for use."
                              }
                            ]
                          }
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the schema"
                        },
                        "content": {
                          "type": "string",
                          "description": "Content of the schema"
                        },
                        "direction": {
                          "description": "The direction of the schema.",
                          "type": "string",
                          "enum": [
                            "Send",
                            "Receive"
                          ],
                          "x-ms-enum": {
                            "name": "Direction",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Send",
                                "value": "Send",
                                "description": "The direction is on the sending side of a pipeline, connection, or flow."
                              },
                              {
                                "name": "Receive",
                                "value": "Receive",
                                "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                              }
                            ]
                          }
                        },
                        "schemaUri": {
                          "type": "string",
                          "format": "uri",
                          "description": "Uri containing SAS token for the zipped schema"
                        },
                        "schemaType": {
                          "description": "The Schema Type",
                          "type": "string",
                          "enum": [
                            "Xsd",
                            "Zip"
                          ],
                          "x-ms-enum": {
                            "name": "SchemaType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Xsd",
                                "value": "Xsd",
                                "description": "The schema represents a single XML schema definition file."
                              },
                              {
                                "name": "Zip",
                                "value": "Zip",
                                "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "schemaUris": {
                    "type": "array",
                    "description": "The schema URIs for this connection. The schemaUris property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                },
                "required": [
                  "pipeline"
                ]
              },
              "identity": {
                "description": "The managed service identities assigned to this resource.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "tenantId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                    "enum": [
                      "None",
                      "SystemAssigned",
                      "UserAssigned",
                      "SystemAssigned,UserAssigned"
                    ],
                    "x-ms-enum": {
                      "name": "ManagedServiceIdentityType",
                      "modelAsString": true
                    }
                  },
                  "userAssignedIdentities": {
                    "type": "object",
                    "title": "User-Assigned Identities",
                    "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                    "additionalProperties": {
                      "x-nullable": true,
                      "type": "object",
                      "description": "User assigned identity properties",
                      "properties": {
                        "principalId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The principal ID of the assigned identity.",
                          "readOnly": true
                        },
                        "clientId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The client ID of the assigned identity.",
                          "readOnly": true
                        }
                      }
                    }
                  }
                },
                "required": [
                  "type"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ConnectionProperties": {
      "type": "object",
      "description": "Properties of connection",
      "properties": {
        "pipeline": {
          "type": "string",
          "description": "Pipeline to use to transfer data"
        },
        "direction": {
          "description": "Direction of data movement",
          "type": "string",
          "enum": [
            "Send",
            "Receive"
          ],
          "x-ms-enum": {
            "name": "Direction",
            "modelAsString": true,
            "values": [
              {
                "name": "Send",
                "value": "Send",
                "description": "The direction is on the sending side of a pipeline, connection, or flow."
              },
              {
                "name": "Receive",
                "value": "Receive",
                "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
              }
            ]
          }
        },
        "justification": {
          "type": "string",
          "description": "Justification for the connection request"
        },
        "status": {
          "description": "Status of the connection",
          "readOnly": true,
          "type": "string",
          "enum": [
            "InReview",
            "Approved",
            "Rejected",
            "Accepted"
          ],
          "x-ms-enum": {
            "name": "ConnectionStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "InReview",
                "value": "InReview",
                "description": "This connection has been created but is under review by the pipeline owner."
              },
              {
                "name": "Approved",
                "value": "Approved",
                "description": "This connection has been approved by the pipeline owner and is ready for use."
              },
              {
                "name": "Rejected",
                "value": "Rejected",
                "description": "This connection has been rejected by the pipeline owner and cannot be used."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Creation of the connection has been accepted."
              }
            ]
          }
        },
        "forceDisabledStatus": {
          "type": "array",
          "description": "Force disablement status of the current connection",
          "items": {
            "type": "string",
            "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
            "enum": [
              "ConnectionForceDisabled",
              "FlowTypeForceDisabled"
            ],
            "x-ms-enum": {
              "name": "ForceDisabledStatus",
              "modelAsString": true,
              "values": [
                {
                  "name": "ConnectionForceDisabled",
                  "value": "ConnectionForceDisabled",
                  "description": "Defines disablement of a Flow due to the parent connection being disabled."
                },
                {
                  "name": "FlowTypeForceDisabled",
                  "value": "FlowTypeForceDisabled",
                  "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                }
              ]
            }
          },
          "readOnly": true
        },
        "statusReason": {
          "type": "string",
          "description": "Reason for status",
          "readOnly": true
        },
        "linkStatus": {
          "description": "Link status of the current connection",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Linked",
            "Unlinked"
          ],
          "x-ms-enum": {
            "name": "LinkStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Linked",
                "value": "Linked",
                "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
              },
              {
                "name": "Unlinked",
                "value": "Unlinked",
                "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
              }
            ]
          }
        },
        "linkedConnectionId": {
          "type": "string",
          "description": "Resource ID of the linked connection",
          "readOnly": true
        },
        "flowTypes": {
          "type": "array",
          "description": "The flow types being requested for this connection. This FlowType property has reached end of life support starting version 2025-05-30-preview. Please create a FlowProfile resource instead.",
          "items": {
            "type": "string",
            "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
            "enum": [
              "Unknown",
              "Complex",
              "DevSecOps",
              "Messaging",
              "Mission",
              "MicrosoftInternal",
              "BasicFiles",
              "Data",
              "Standard",
              "StreamingVideo",
              "Opaque",
              "MissionOpaqueXML",
              "DiskImages",
              "API"
            ],
            "x-ms-enum": {
              "name": "FlowType",
              "modelAsString": true,
              "values": [
                {
                  "name": "Unknown",
                  "value": "Unknown",
                  "description": "This type of flow is not set."
                },
                {
                  "name": "Complex",
                  "value": "Complex",
                  "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                },
                {
                  "name": "DevSecOps",
                  "value": "DevSecOps",
                  "description": "This flow sends source code files and artifacts."
                },
                {
                  "name": "Messaging",
                  "value": "Messaging",
                  "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                },
                {
                  "name": "Mission",
                  "value": "Mission",
                  "description": "This flow sends standard data but is subject to strict cloud owner approval."
                },
                {
                  "name": "MicrosoftInternal",
                  "value": "MicrosoftInternal",
                  "description": "This flow is assigned to internal Microsoft use cases."
                },
                {
                  "name": "BasicFiles",
                  "value": "BasicFiles",
                  "description": "This flow sends blobs that can be used for multiple use cases."
                },
                {
                  "name": "Data",
                  "value": "Data",
                  "description": "This flow sends blobs that can be used for multiple use cases."
                },
                {
                  "name": "Standard",
                  "value": "Standard",
                  "description": "This flow sends blobs that can be used for multiple use cases."
                },
                {
                  "name": "StreamingVideo",
                  "value": "StreamingVideo",
                  "description": "This flow sends video streams."
                },
                {
                  "name": "Opaque",
                  "value": "Opaque",
                  "description": "This flow sends blobs but is subject to cloud owner approval."
                },
                {
                  "name": "MissionOpaqueXML",
                  "value": "MissionOpaqueXML",
                  "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                },
                {
                  "name": "DiskImages",
                  "value": "DiskImages",
                  "description": "This flow sends blobs that can be used for Virtual Machines."
                },
                {
                  "name": "API",
                  "value": "API",
                  "description": "This flow sends data via an Application Programmer Interface."
                }
              ]
            }
          }
        },
        "requirementId": {
          "type": "string",
          "description": "Requirement ID of the connection"
        },
        "remoteSubscriptionId": {
          "type": "string",
          "description": "Subscription ID to link cloud subscriptions together"
        },
        "approver": {
          "type": "string",
          "description": "Approver of this connection request",
          "readOnly": true
        },
        "pin": {
          "type": "string",
          "description": "PIN to link requests together"
        },
        "dateSubmitted": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp that this connection request was submitted at",
          "readOnly": true
        },
        "primaryContact": {
          "type": "string",
          "description": "The primary contact for this connection request"
        },
        "secondaryContacts": {
          "type": "array",
          "description": "The secondary contacts for this connection request",
          "items": {
            "type": "string"
          }
        },
        "provisioningState": {
          "description": "Provisioning state of the connection",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Accepted"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Resource has been accepted for creation."
              }
            ]
          }
        },
        "policies": {
          "type": "array",
          "description": "The policies for this connection. The policies property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
          "items": {
            "type": "string"
          }
        },
        "schemas": {
          "type": "array",
          "description": "The schemas for this connection. The schemas property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
          "items": {
            "type": "object",
            "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID associated with this schema"
              },
              "connectionId": {
                "type": "string",
                "description": "Connection ID associated with this schema"
              },
              "status": {
                "description": "Status of the schema",
                "type": "string",
                "enum": [
                  "New",
                  "Approved"
                ],
                "x-ms-enum": {
                  "name": "SchemaStatus",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "New",
                      "value": "New",
                      "description": "A schema that has not been approved and is awaiting review."
                    },
                    {
                      "name": "Approved",
                      "value": "Approved",
                      "description": "A schema that has been approved and is ready for use."
                    }
                  ]
                }
              },
              "name": {
                "type": "string",
                "description": "Name of the schema"
              },
              "content": {
                "type": "string",
                "description": "Content of the schema"
              },
              "direction": {
                "description": "The direction of the schema.",
                "type": "string",
                "enum": [
                  "Send",
                  "Receive"
                ],
                "x-ms-enum": {
                  "name": "Direction",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Send",
                      "value": "Send",
                      "description": "The direction is on the sending side of a pipeline, connection, or flow."
                    },
                    {
                      "name": "Receive",
                      "value": "Receive",
                      "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                    }
                  ]
                }
              },
              "schemaUri": {
                "type": "string",
                "format": "uri",
                "description": "Uri containing SAS token for the zipped schema"
              },
              "schemaType": {
                "description": "The Schema Type",
                "type": "string",
                "enum": [
                  "Xsd",
                  "Zip"
                ],
                "x-ms-enum": {
                  "name": "SchemaType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Xsd",
                      "value": "Xsd",
                      "description": "The schema represents a single XML schema definition file."
                    },
                    {
                      "name": "Zip",
                      "value": "Zip",
                      "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                    }
                  ]
                }
              }
            }
          }
        },
        "schemaUris": {
          "type": "array",
          "description": "The schema URIs for this connection. The schemaUris property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
          "items": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "required": [
        "pipeline"
      ]
    },
    "ConnectionStatus": {
      "type": "string",
      "description": "Status of the connection",
      "enum": [
        "InReview",
        "Approved",
        "Rejected",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "ConnectionStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "InReview",
            "value": "InReview",
            "description": "This connection has been created but is under review by the pipeline owner."
          },
          {
            "name": "Approved",
            "value": "Approved",
            "description": "This connection has been approved by the pipeline owner and is ready for use."
          },
          {
            "name": "Rejected",
            "value": "Rejected",
            "description": "This connection has been rejected by the pipeline owner and cannot be used."
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "Creation of the connection has been accepted."
          }
        ]
      }
    },
    "ConnectionsPatch": {
      "type": "object",
      "description": "The connections resource patch definition.",
      "properties": {
        "identity": {
          "description": "The managed service identities assigned to this resource.",
          "type": "object",
          "properties": {
            "principalId": {
              "type": "string",
              "format": "uuid",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "format": "uuid",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "title": "User-Assigned Identities",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "additionalProperties": {
                "x-nullable": true,
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "DataType": {
      "type": "string",
      "description": "Transfer Storage Blobs or Tables",
      "enum": [
        "Blob",
        "Table"
      ],
      "x-ms-enum": {
        "name": "DataType",
        "modelAsString": true,
        "values": [
          {
            "name": "Blob",
            "value": "Blob",
            "description": "The flow uses Azure Storage blobs to send or receive data."
          },
          {
            "name": "Table",
            "value": "Table",
            "description": "The flow uses Azure Storage tables to send or receive data."
          }
        ]
      }
    },
    "Direction": {
      "type": "string",
      "description": "Direction of data movement",
      "enum": [
        "Send",
        "Receive"
      ],
      "x-ms-enum": {
        "name": "Direction",
        "modelAsString": true,
        "values": [
          {
            "name": "Send",
            "value": "Send",
            "description": "The direction is on the sending side of a pipeline, connection, or flow."
          },
          {
            "name": "Receive",
            "value": "Receive",
            "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
          }
        ]
      }
    },
    "Flow": {
      "type": "object",
      "description": "The flow resource definition.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "Properties of flow",
          "type": "object",
          "properties": {
            "connection": {
              "description": "The connection associated with this flow",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the connection"
                },
                "id": {
                  "type": "string",
                  "description": "Id of the connection"
                },
                "location": {
                  "type": "string",
                  "description": "Location of the connection",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "subscriptionName": {
                  "type": "string",
                  "description": "Name of the subscription with the connection"
                }
              },
              "required": [
                "id"
              ]
            },
            "flowId": {
              "type": "string",
              "description": "Dataflow GUID associated with this flow",
              "readOnly": true
            },
            "keyVaultUri": {
              "type": "string",
              "description": "URI to a Key Vault Secret containing a SAS token."
            },
            "linkStatus": {
              "description": "Link status of the current flow",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Linked",
                "Unlinked"
              ],
              "x-ms-enum": {
                "name": "LinkStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Linked",
                    "value": "Linked",
                    "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                  },
                  {
                    "name": "Unlinked",
                    "value": "Unlinked",
                    "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                  }
                ]
              }
            },
            "linkedFlowId": {
              "type": "string",
              "description": "Resource ID of the linked flow",
              "readOnly": true
            },
            "status": {
              "description": "Status of the current flow",
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "FlowStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "The flow is currently enabled and able to send or receive data."
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "The flow is currently disabled and cannot send or receive data."
                  }
                ]
              }
            },
            "forceDisabledStatus": {
              "type": "array",
              "description": "Force disablement status of the current flow",
              "items": {
                "type": "string",
                "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                "enum": [
                  "ConnectionForceDisabled",
                  "FlowTypeForceDisabled"
                ],
                "x-ms-enum": {
                  "name": "ForceDisabledStatus",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "ConnectionForceDisabled",
                      "value": "ConnectionForceDisabled",
                      "description": "Defines disablement of a Flow due to the parent connection being disabled."
                    },
                    {
                      "name": "FlowTypeForceDisabled",
                      "value": "FlowTypeForceDisabled",
                      "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                    }
                  ]
                }
              },
              "readOnly": true
            },
            "storageAccountName": {
              "type": "string",
              "description": "Storage Account"
            },
            "storageAccountId": {
              "type": "string",
              "format": "arm-id",
              "description": "Storage Account ID",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.Storage/storageAccounts"
                  }
                ]
              }
            },
            "storageContainerName": {
              "type": "string",
              "description": "Storage Container Name"
            },
            "storageTableName": {
              "type": "string",
              "description": "Storage Table Name"
            },
            "serviceBusQueueId": {
              "type": "string",
              "format": "arm-id",
              "description": "Service Bus Queue ID",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.Storage/namespaces/queues"
                  }
                ]
              }
            },
            "flowType": {
              "type": "string",
              "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
              "enum": [
                "Unknown",
                "Complex",
                "DevSecOps",
                "Messaging",
                "Mission",
                "MicrosoftInternal",
                "BasicFiles",
                "Data",
                "Standard",
                "StreamingVideo",
                "Opaque",
                "MissionOpaqueXML",
                "DiskImages",
                "API"
              ],
              "x-ms-enum": {
                "name": "FlowType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Unknown",
                    "value": "Unknown",
                    "description": "This type of flow is not set."
                  },
                  {
                    "name": "Complex",
                    "value": "Complex",
                    "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                  },
                  {
                    "name": "DevSecOps",
                    "value": "DevSecOps",
                    "description": "This flow sends source code files and artifacts."
                  },
                  {
                    "name": "Messaging",
                    "value": "Messaging",
                    "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                  },
                  {
                    "name": "Mission",
                    "value": "Mission",
                    "description": "This flow sends standard data but is subject to strict cloud owner approval."
                  },
                  {
                    "name": "MicrosoftInternal",
                    "value": "MicrosoftInternal",
                    "description": "This flow is assigned to internal Microsoft use cases."
                  },
                  {
                    "name": "BasicFiles",
                    "value": "BasicFiles",
                    "description": "This flow sends blobs that can be used for multiple use cases."
                  },
                  {
                    "name": "Data",
                    "value": "Data",
                    "description": "This flow sends blobs that can be used for multiple use cases."
                  },
                  {
                    "name": "Standard",
                    "value": "Standard",
                    "description": "This flow sends blobs that can be used for multiple use cases."
                  },
                  {
                    "name": "StreamingVideo",
                    "value": "StreamingVideo",
                    "description": "This flow sends video streams."
                  },
                  {
                    "name": "Opaque",
                    "value": "Opaque",
                    "description": "This flow sends blobs but is subject to cloud owner approval."
                  },
                  {
                    "name": "MissionOpaqueXML",
                    "value": "MissionOpaqueXML",
                    "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                  },
                  {
                    "name": "DiskImages",
                    "value": "DiskImages",
                    "description": "This flow sends blobs that can be used for Virtual Machines."
                  },
                  {
                    "name": "API",
                    "value": "API",
                    "description": "This flow sends data via an Application Programmer Interface."
                  }
                ]
              }
            },
            "dataType": {
              "description": "Type of data to transfer via the flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
              "type": "string",
              "enum": [
                "Blob",
                "Table"
              ],
              "x-ms-enum": {
                "name": "DataType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Blob",
                    "value": "Blob",
                    "description": "The flow uses Azure Storage blobs to send or receive data."
                  },
                  {
                    "name": "Table",
                    "value": "Table",
                    "description": "The flow uses Azure Storage tables to send or receive data."
                  }
                ]
              }
            },
            "provisioningState": {
              "description": "Provisioning state of the flow",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Accepted"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "Resource has been accepted for creation."
                  }
                ]
              }
            },
            "policies": {
              "type": "array",
              "description": "The policies for this flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
              "items": {
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "ID associated with this schema"
                },
                "connectionId": {
                  "type": "string",
                  "description": "Connection ID associated with this schema"
                },
                "status": {
                  "description": "Status of the schema",
                  "type": "string",
                  "enum": [
                    "New",
                    "Approved"
                  ],
                  "x-ms-enum": {
                    "name": "SchemaStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "New",
                        "value": "New",
                        "description": "A schema that has not been approved and is awaiting review."
                      },
                      {
                        "name": "Approved",
                        "value": "Approved",
                        "description": "A schema that has been approved and is ready for use."
                      }
                    ]
                  }
                },
                "name": {
                  "type": "string",
                  "description": "Name of the schema"
                },
                "content": {
                  "type": "string",
                  "description": "Content of the schema"
                },
                "direction": {
                  "description": "The direction of the schema.",
                  "type": "string",
                  "enum": [
                    "Send",
                    "Receive"
                  ],
                  "x-ms-enum": {
                    "name": "Direction",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Send",
                        "value": "Send",
                        "description": "The direction is on the sending side of a pipeline, connection, or flow."
                      },
                      {
                        "name": "Receive",
                        "value": "Receive",
                        "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                      }
                    ]
                  }
                },
                "schemaUri": {
                  "type": "string",
                  "format": "uri",
                  "description": "Uri containing SAS token for the zipped schema"
                },
                "schemaType": {
                  "description": "The Schema Type",
                  "type": "string",
                  "enum": [
                    "Xsd",
                    "Zip"
                  ],
                  "x-ms-enum": {
                    "name": "SchemaType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Xsd",
                        "value": "Xsd",
                        "description": "The schema represents a single XML schema definition file."
                      },
                      {
                        "name": "Zip",
                        "value": "Zip",
                        "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                      }
                    ]
                  }
                }
              }
            },
            "messagingOptions": {
              "description": "The messaging options for this flow",
              "type": "object",
              "properties": {
                "billingTier": {
                  "description": "Billing tier for this messaging flow",
                  "type": "string",
                  "enum": [
                    "BlobTransport",
                    "Standard",
                    "Premium"
                  ],
                  "x-ms-enum": {
                    "name": "FlowBillingTier",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "BlobTransport",
                        "value": "BlobTransport",
                        "description": "Billing tier for messaging processing that charges based on how much data is transferred."
                      },
                      {
                        "name": "Standard",
                        "value": "Standard",
                        "description": "Billing tier for standard messaging processing that charges based on having the messaging resource allocated."
                      },
                      {
                        "name": "Premium",
                        "value": "Premium",
                        "description": "Billing tier for premium messaging processing that charges based on having the messaging resource allocated."
                      }
                    ]
                  }
                }
              }
            },
            "apiFlowOptions": {
              "description": "The API Flow configuration options for Azure Data Transfer API Flow type.",
              "type": "object",
              "properties": {
                "remoteEndpoint": {
                  "type": "string",
                  "description": "Remote host to which communication needs to be made. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the remoteEndpointSettings.endpoint property instead."
                },
                "cname": {
                  "type": "string",
                  "description": "Unique CNAME to represent the Azure Data Transfer API Flow instance"
                },
                "apiMode": {
                  "description": "Remote Calling Mode in the Azure Data Transfer API Flow, which describes how the API Flow will be invoked",
                  "type": "string",
                  "enum": [
                    "SDK",
                    "Endpoint"
                  ],
                  "x-ms-enum": {
                    "name": "ApiMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "SDK",
                        "value": "SDK",
                        "description": "The API flow will forward calls to a custom Software Development Kit implementation."
                      },
                      {
                        "name": "Endpoint",
                        "value": "Endpoint",
                        "description": "The API flow will forward calls to a specified endpoint."
                      }
                    ]
                  }
                },
                "identityTranslation": {
                  "description": "Determines which identity to use for extracting the user token for Azure Data Transfer API Flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead.",
                  "type": "string",
                  "enum": [
                    "UserIdentity",
                    "ServiceIdentity"
                  ],
                  "x-ms-enum": {
                    "name": "IdentityTranslation",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "UserIdentity",
                        "value": "UserIdentity",
                        "description": "The API flow will make use of the user identity that called this API flow, and pass that token through the boundary."
                      },
                      {
                        "name": "ServiceIdentity",
                        "value": "ServiceIdentity",
                        "description": "The API flow will make use of the Azure Data Transfer Flow managed identity on the other side of the boundary."
                      }
                    ]
                  }
                },
                "senderClientId": {
                  "type": "string",
                  "description": "Sender's app user assigned Manage Identity client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                },
                "remoteCallingModeClientId": {
                  "type": "string",
                  "description": "Remote stub app registration Client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                },
                "audienceOverride": {
                  "type": "string",
                  "description": "Optional field to override the audience of the remote endpoint. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                }
              }
            },
            "customerManagedKeyVaultUri": {
              "type": "string",
              "format": "uri",
              "description": "The URI to the customer managed key for this flow"
            },
            "streamId": {
              "type": "string",
              "description": "The flow stream identifier"
            },
            "streamProtocol": {
              "description": "The protocol of the stream",
              "type": "string",
              "enum": [
                "UDP",
                "SRT",
                "RTP"
              ],
              "x-ms-enum": {
                "name": "StreamProtocol",
                "modelAsString": true,
                "values": [
                  {
                    "name": "UDP",
                    "value": "UDP",
                    "description": "This Flow is using User Datagram Protocol for the video stream."
                  },
                  {
                    "name": "SRT",
                    "value": "SRT",
                    "description": "This Flow is using Secure Reliable Transfer for the video stream."
                  },
                  {
                    "name": "RTP",
                    "value": "RTP",
                    "description": "This Flow is using Real-time Transport Protocol for the video stream."
                  }
                ]
              }
            },
            "streamLatency": {
              "type": "integer",
              "format": "int64",
              "description": "The latency of the stream in milliseconds"
            },
            "passphrase": {
              "type": "string",
              "description": "The passphrase used for SRT streams"
            },
            "sourceAddresses": {
              "description": "The source IP address and CIDR ranges of the stream",
              "type": "object",
              "properties": {
                "sourceAddresses": {
                  "type": "array",
                  "description": "A source IP address or CIDR range",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "destinationEndpoints": {
              "type": "array",
              "description": "The destination endpoints of the stream",
              "items": {
                "type": "string"
              }
            },
            "destinationEndpointPorts": {
              "type": "array",
              "description": "The destination endpoint ports of the stream",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            },
            "eventHubId": {
              "type": "string",
              "format": "arm-id",
              "description": "Event Hub ID",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.EventHub/namespaces/eventhubs"
                  }
                ]
              }
            },
            "consumerGroup": {
              "type": "string",
              "description": "Event Hub Consumer Group"
            }
          }
        },
        "plan": {
          "description": "Details of the resource plan.",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "A user defined name of the 3rd Party Artifact that is being procured."
            },
            "publisher": {
              "type": "string",
              "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
            },
            "product": {
              "type": "string",
              "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
            },
            "promotionCode": {
              "type": "string",
              "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
            },
            "version": {
              "type": "string",
              "description": "The version of the desired product/artifact."
            }
          },
          "required": [
            "name",
            "publisher",
            "product"
          ]
        },
        "identity": {
          "description": "The managed service identities assigned to this resource.",
          "type": "object",
          "properties": {
            "principalId": {
              "type": "string",
              "format": "uuid",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "format": "uuid",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "title": "User-Assigned Identities",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "additionalProperties": {
                "x-nullable": true,
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        }
      }
    },
    "FlowBillingTier": {
      "type": "string",
      "description": "Billing tier for this messaging flow.",
      "enum": [
        "BlobTransport",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "FlowBillingTier",
        "modelAsString": true,
        "values": [
          {
            "name": "BlobTransport",
            "value": "BlobTransport",
            "description": "Billing tier for messaging processing that charges based on how much data is transferred."
          },
          {
            "name": "Standard",
            "value": "Standard",
            "description": "Billing tier for standard messaging processing that charges based on having the messaging resource allocated."
          },
          {
            "name": "Premium",
            "value": "Premium",
            "description": "Billing tier for premium messaging processing that charges based on having the messaging resource allocated."
          }
        ]
      }
    },
    "FlowListResult": {
      "type": "object",
      "description": "The response of a Flow list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Flow items on this page",
          "items": {
            "type": "object",
            "description": "The flow resource definition.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "Properties of flow",
                "type": "object",
                "properties": {
                  "connection": {
                    "description": "The connection associated with this flow",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the connection"
                      },
                      "id": {
                        "type": "string",
                        "description": "Id of the connection"
                      },
                      "location": {
                        "type": "string",
                        "description": "Location of the connection",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "subscriptionName": {
                        "type": "string",
                        "description": "Name of the subscription with the connection"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  },
                  "flowId": {
                    "type": "string",
                    "description": "Dataflow GUID associated with this flow",
                    "readOnly": true
                  },
                  "keyVaultUri": {
                    "type": "string",
                    "description": "URI to a Key Vault Secret containing a SAS token."
                  },
                  "linkStatus": {
                    "description": "Link status of the current flow",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Linked",
                      "Unlinked"
                    ],
                    "x-ms-enum": {
                      "name": "LinkStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Linked",
                          "value": "Linked",
                          "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                        },
                        {
                          "name": "Unlinked",
                          "value": "Unlinked",
                          "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                        }
                      ]
                    }
                  },
                  "linkedFlowId": {
                    "type": "string",
                    "description": "Resource ID of the linked flow",
                    "readOnly": true
                  },
                  "status": {
                    "description": "Status of the current flow",
                    "type": "string",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "FlowStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Enabled",
                          "value": "Enabled",
                          "description": "The flow is currently enabled and able to send or receive data."
                        },
                        {
                          "name": "Disabled",
                          "value": "Disabled",
                          "description": "The flow is currently disabled and cannot send or receive data."
                        }
                      ]
                    }
                  },
                  "forceDisabledStatus": {
                    "type": "array",
                    "description": "Force disablement status of the current flow",
                    "items": {
                      "type": "string",
                      "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                      "enum": [
                        "ConnectionForceDisabled",
                        "FlowTypeForceDisabled"
                      ],
                      "x-ms-enum": {
                        "name": "ForceDisabledStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "ConnectionForceDisabled",
                            "value": "ConnectionForceDisabled",
                            "description": "Defines disablement of a Flow due to the parent connection being disabled."
                          },
                          {
                            "name": "FlowTypeForceDisabled",
                            "value": "FlowTypeForceDisabled",
                            "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                          }
                        ]
                      }
                    },
                    "readOnly": true
                  },
                  "storageAccountName": {
                    "type": "string",
                    "description": "Storage Account"
                  },
                  "storageAccountId": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "Storage Account ID",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Storage/storageAccounts"
                        }
                      ]
                    }
                  },
                  "storageContainerName": {
                    "type": "string",
                    "description": "Storage Container Name"
                  },
                  "storageTableName": {
                    "type": "string",
                    "description": "Storage Table Name"
                  },
                  "serviceBusQueueId": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "Service Bus Queue ID",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Storage/namespaces/queues"
                        }
                      ]
                    }
                  },
                  "flowType": {
                    "type": "string",
                    "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                    "enum": [
                      "Unknown",
                      "Complex",
                      "DevSecOps",
                      "Messaging",
                      "Mission",
                      "MicrosoftInternal",
                      "BasicFiles",
                      "Data",
                      "Standard",
                      "StreamingVideo",
                      "Opaque",
                      "MissionOpaqueXML",
                      "DiskImages",
                      "API"
                    ],
                    "x-ms-enum": {
                      "name": "FlowType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Unknown",
                          "value": "Unknown",
                          "description": "This type of flow is not set."
                        },
                        {
                          "name": "Complex",
                          "value": "Complex",
                          "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                        },
                        {
                          "name": "DevSecOps",
                          "value": "DevSecOps",
                          "description": "This flow sends source code files and artifacts."
                        },
                        {
                          "name": "Messaging",
                          "value": "Messaging",
                          "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                        },
                        {
                          "name": "Mission",
                          "value": "Mission",
                          "description": "This flow sends standard data but is subject to strict cloud owner approval."
                        },
                        {
                          "name": "MicrosoftInternal",
                          "value": "MicrosoftInternal",
                          "description": "This flow is assigned to internal Microsoft use cases."
                        },
                        {
                          "name": "BasicFiles",
                          "value": "BasicFiles",
                          "description": "This flow sends blobs that can be used for multiple use cases."
                        },
                        {
                          "name": "Data",
                          "value": "Data",
                          "description": "This flow sends blobs that can be used for multiple use cases."
                        },
                        {
                          "name": "Standard",
                          "value": "Standard",
                          "description": "This flow sends blobs that can be used for multiple use cases."
                        },
                        {
                          "name": "StreamingVideo",
                          "value": "StreamingVideo",
                          "description": "This flow sends video streams."
                        },
                        {
                          "name": "Opaque",
                          "value": "Opaque",
                          "description": "This flow sends blobs but is subject to cloud owner approval."
                        },
                        {
                          "name": "MissionOpaqueXML",
                          "value": "MissionOpaqueXML",
                          "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                        },
                        {
                          "name": "DiskImages",
                          "value": "DiskImages",
                          "description": "This flow sends blobs that can be used for Virtual Machines."
                        },
                        {
                          "name": "API",
                          "value": "API",
                          "description": "This flow sends data via an Application Programmer Interface."
                        }
                      ]
                    }
                  },
                  "dataType": {
                    "description": "Type of data to transfer via the flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                    "type": "string",
                    "enum": [
                      "Blob",
                      "Table"
                    ],
                    "x-ms-enum": {
                      "name": "DataType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Blob",
                          "value": "Blob",
                          "description": "The flow uses Azure Storage blobs to send or receive data."
                        },
                        {
                          "name": "Table",
                          "value": "Table",
                          "description": "The flow uses Azure Storage tables to send or receive data."
                        }
                      ]
                    }
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the flow",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Accepted"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "Resource has been accepted for creation."
                        }
                      ]
                    }
                  },
                  "policies": {
                    "type": "array",
                    "description": "The policies for this flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "schema": {
                    "type": "object",
                    "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "ID associated with this schema"
                      },
                      "connectionId": {
                        "type": "string",
                        "description": "Connection ID associated with this schema"
                      },
                      "status": {
                        "description": "Status of the schema",
                        "type": "string",
                        "enum": [
                          "New",
                          "Approved"
                        ],
                        "x-ms-enum": {
                          "name": "SchemaStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "New",
                              "value": "New",
                              "description": "A schema that has not been approved and is awaiting review."
                            },
                            {
                              "name": "Approved",
                              "value": "Approved",
                              "description": "A schema that has been approved and is ready for use."
                            }
                          ]
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the schema"
                      },
                      "content": {
                        "type": "string",
                        "description": "Content of the schema"
                      },
                      "direction": {
                        "description": "The direction of the schema.",
                        "type": "string",
                        "enum": [
                          "Send",
                          "Receive"
                        ],
                        "x-ms-enum": {
                          "name": "Direction",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Send",
                              "value": "Send",
                              "description": "The direction is on the sending side of a pipeline, connection, or flow."
                            },
                            {
                              "name": "Receive",
                              "value": "Receive",
                              "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                            }
                          ]
                        }
                      },
                      "schemaUri": {
                        "type": "string",
                        "format": "uri",
                        "description": "Uri containing SAS token for the zipped schema"
                      },
                      "schemaType": {
                        "description": "The Schema Type",
                        "type": "string",
                        "enum": [
                          "Xsd",
                          "Zip"
                        ],
                        "x-ms-enum": {
                          "name": "SchemaType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Xsd",
                              "value": "Xsd",
                              "description": "The schema represents a single XML schema definition file."
                            },
                            {
                              "name": "Zip",
                              "value": "Zip",
                              "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                            }
                          ]
                        }
                      }
                    }
                  },
                  "messagingOptions": {
                    "description": "The messaging options for this flow",
                    "type": "object",
                    "properties": {
                      "billingTier": {
                        "description": "Billing tier for this messaging flow",
                        "type": "string",
                        "enum": [
                          "BlobTransport",
                          "Standard",
                          "Premium"
                        ],
                        "x-ms-enum": {
                          "name": "FlowBillingTier",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "BlobTransport",
                              "value": "BlobTransport",
                              "description": "Billing tier for messaging processing that charges based on how much data is transferred."
                            },
                            {
                              "name": "Standard",
                              "value": "Standard",
                              "description": "Billing tier for standard messaging processing that charges based on having the messaging resource allocated."
                            },
                            {
                              "name": "Premium",
                              "value": "Premium",
                              "description": "Billing tier for premium messaging processing that charges based on having the messaging resource allocated."
                            }
                          ]
                        }
                      }
                    }
                  },
                  "apiFlowOptions": {
                    "description": "The API Flow configuration options for Azure Data Transfer API Flow type.",
                    "type": "object",
                    "properties": {
                      "remoteEndpoint": {
                        "type": "string",
                        "description": "Remote host to which communication needs to be made. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the remoteEndpointSettings.endpoint property instead."
                      },
                      "cname": {
                        "type": "string",
                        "description": "Unique CNAME to represent the Azure Data Transfer API Flow instance"
                      },
                      "apiMode": {
                        "description": "Remote Calling Mode in the Azure Data Transfer API Flow, which describes how the API Flow will be invoked",
                        "type": "string",
                        "enum": [
                          "SDK",
                          "Endpoint"
                        ],
                        "x-ms-enum": {
                          "name": "ApiMode",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "SDK",
                              "value": "SDK",
                              "description": "The API flow will forward calls to a custom Software Development Kit implementation."
                            },
                            {
                              "name": "Endpoint",
                              "value": "Endpoint",
                              "description": "The API flow will forward calls to a specified endpoint."
                            }
                          ]
                        }
                      },
                      "identityTranslation": {
                        "description": "Determines which identity to use for extracting the user token for Azure Data Transfer API Flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead.",
                        "type": "string",
                        "enum": [
                          "UserIdentity",
                          "ServiceIdentity"
                        ],
                        "x-ms-enum": {
                          "name": "IdentityTranslation",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "UserIdentity",
                              "value": "UserIdentity",
                              "description": "The API flow will make use of the user identity that called this API flow, and pass that token through the boundary."
                            },
                            {
                              "name": "ServiceIdentity",
                              "value": "ServiceIdentity",
                              "description": "The API flow will make use of the Azure Data Transfer Flow managed identity on the other side of the boundary."
                            }
                          ]
                        }
                      },
                      "senderClientId": {
                        "type": "string",
                        "description": "Sender's app user assigned Manage Identity client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                      },
                      "remoteCallingModeClientId": {
                        "type": "string",
                        "description": "Remote stub app registration Client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                      },
                      "audienceOverride": {
                        "type": "string",
                        "description": "Optional field to override the audience of the remote endpoint. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                      }
                    }
                  },
                  "customerManagedKeyVaultUri": {
                    "type": "string",
                    "format": "uri",
                    "description": "The URI to the customer managed key for this flow"
                  },
                  "streamId": {
                    "type": "string",
                    "description": "The flow stream identifier"
                  },
                  "streamProtocol": {
                    "description": "The protocol of the stream",
                    "type": "string",
                    "enum": [
                      "UDP",
                      "SRT",
                      "RTP"
                    ],
                    "x-ms-enum": {
                      "name": "StreamProtocol",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "UDP",
                          "value": "UDP",
                          "description": "This Flow is using User Datagram Protocol for the video stream."
                        },
                        {
                          "name": "SRT",
                          "value": "SRT",
                          "description": "This Flow is using Secure Reliable Transfer for the video stream."
                        },
                        {
                          "name": "RTP",
                          "value": "RTP",
                          "description": "This Flow is using Real-time Transport Protocol for the video stream."
                        }
                      ]
                    }
                  },
                  "streamLatency": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The latency of the stream in milliseconds"
                  },
                  "passphrase": {
                    "type": "string",
                    "description": "The passphrase used for SRT streams"
                  },
                  "sourceAddresses": {
                    "description": "The source IP address and CIDR ranges of the stream",
                    "type": "object",
                    "properties": {
                      "sourceAddresses": {
                        "type": "array",
                        "description": "A source IP address or CIDR range",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "destinationEndpoints": {
                    "type": "array",
                    "description": "The destination endpoints of the stream",
                    "items": {
                      "type": "string"
                    }
                  },
                  "destinationEndpointPorts": {
                    "type": "array",
                    "description": "The destination endpoint ports of the stream",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  },
                  "eventHubId": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "Event Hub ID",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.EventHub/namespaces/eventhubs"
                        }
                      ]
                    }
                  },
                  "consumerGroup": {
                    "type": "string",
                    "description": "Event Hub Consumer Group"
                  }
                }
              },
              "plan": {
                "description": "Details of the resource plan.",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "A user defined name of the 3rd Party Artifact that is being procured."
                  },
                  "publisher": {
                    "type": "string",
                    "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
                  },
                  "product": {
                    "type": "string",
                    "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
                  },
                  "promotionCode": {
                    "type": "string",
                    "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
                  },
                  "version": {
                    "type": "string",
                    "description": "The version of the desired product/artifact."
                  }
                },
                "required": [
                  "name",
                  "publisher",
                  "product"
                ]
              },
              "identity": {
                "description": "The managed service identities assigned to this resource.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "tenantId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                    "enum": [
                      "None",
                      "SystemAssigned",
                      "UserAssigned",
                      "SystemAssigned,UserAssigned"
                    ],
                    "x-ms-enum": {
                      "name": "ManagedServiceIdentityType",
                      "modelAsString": true
                    }
                  },
                  "userAssignedIdentities": {
                    "type": "object",
                    "title": "User-Assigned Identities",
                    "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                    "additionalProperties": {
                      "x-nullable": true,
                      "type": "object",
                      "description": "User assigned identity properties",
                      "properties": {
                        "principalId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The principal ID of the assigned identity.",
                          "readOnly": true
                        },
                        "clientId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The client ID of the assigned identity.",
                          "readOnly": true
                        }
                      }
                    }
                  }
                },
                "required": [
                  "type"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FlowProperties": {
      "type": "object",
      "description": "Properties of flow",
      "properties": {
        "connection": {
          "description": "The connection associated with this flow",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the connection"
            },
            "id": {
              "type": "string",
              "description": "Id of the connection"
            },
            "location": {
              "type": "string",
              "description": "Location of the connection",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "subscriptionName": {
              "type": "string",
              "description": "Name of the subscription with the connection"
            }
          },
          "required": [
            "id"
          ]
        },
        "flowId": {
          "type": "string",
          "description": "Dataflow GUID associated with this flow",
          "readOnly": true
        },
        "keyVaultUri": {
          "type": "string",
          "description": "URI to a Key Vault Secret containing a SAS token."
        },
        "linkStatus": {
          "description": "Link status of the current flow",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Linked",
            "Unlinked"
          ],
          "x-ms-enum": {
            "name": "LinkStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Linked",
                "value": "Linked",
                "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
              },
              {
                "name": "Unlinked",
                "value": "Unlinked",
                "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
              }
            ]
          }
        },
        "linkedFlowId": {
          "type": "string",
          "description": "Resource ID of the linked flow",
          "readOnly": true
        },
        "status": {
          "description": "Status of the current flow",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "FlowStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "The flow is currently enabled and able to send or receive data."
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "The flow is currently disabled and cannot send or receive data."
              }
            ]
          }
        },
        "forceDisabledStatus": {
          "type": "array",
          "description": "Force disablement status of the current flow",
          "items": {
            "type": "string",
            "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
            "enum": [
              "ConnectionForceDisabled",
              "FlowTypeForceDisabled"
            ],
            "x-ms-enum": {
              "name": "ForceDisabledStatus",
              "modelAsString": true,
              "values": [
                {
                  "name": "ConnectionForceDisabled",
                  "value": "ConnectionForceDisabled",
                  "description": "Defines disablement of a Flow due to the parent connection being disabled."
                },
                {
                  "name": "FlowTypeForceDisabled",
                  "value": "FlowTypeForceDisabled",
                  "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                }
              ]
            }
          },
          "readOnly": true
        },
        "storageAccountName": {
          "type": "string",
          "description": "Storage Account"
        },
        "storageAccountId": {
          "type": "string",
          "format": "arm-id",
          "description": "Storage Account ID",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Storage/storageAccounts"
              }
            ]
          }
        },
        "storageContainerName": {
          "type": "string",
          "description": "Storage Container Name"
        },
        "storageTableName": {
          "type": "string",
          "description": "Storage Table Name"
        },
        "serviceBusQueueId": {
          "type": "string",
          "format": "arm-id",
          "description": "Service Bus Queue ID",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Storage/namespaces/queues"
              }
            ]
          }
        },
        "flowType": {
          "type": "string",
          "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
          "enum": [
            "Unknown",
            "Complex",
            "DevSecOps",
            "Messaging",
            "Mission",
            "MicrosoftInternal",
            "BasicFiles",
            "Data",
            "Standard",
            "StreamingVideo",
            "Opaque",
            "MissionOpaqueXML",
            "DiskImages",
            "API"
          ],
          "x-ms-enum": {
            "name": "FlowType",
            "modelAsString": true,
            "values": [
              {
                "name": "Unknown",
                "value": "Unknown",
                "description": "This type of flow is not set."
              },
              {
                "name": "Complex",
                "value": "Complex",
                "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
              },
              {
                "name": "DevSecOps",
                "value": "DevSecOps",
                "description": "This flow sends source code files and artifacts."
              },
              {
                "name": "Messaging",
                "value": "Messaging",
                "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
              },
              {
                "name": "Mission",
                "value": "Mission",
                "description": "This flow sends standard data but is subject to strict cloud owner approval."
              },
              {
                "name": "MicrosoftInternal",
                "value": "MicrosoftInternal",
                "description": "This flow is assigned to internal Microsoft use cases."
              },
              {
                "name": "BasicFiles",
                "value": "BasicFiles",
                "description": "This flow sends blobs that can be used for multiple use cases."
              },
              {
                "name": "Data",
                "value": "Data",
                "description": "This flow sends blobs that can be used for multiple use cases."
              },
              {
                "name": "Standard",
                "value": "Standard",
                "description": "This flow sends blobs that can be used for multiple use cases."
              },
              {
                "name": "StreamingVideo",
                "value": "StreamingVideo",
                "description": "This flow sends video streams."
              },
              {
                "name": "Opaque",
                "value": "Opaque",
                "description": "This flow sends blobs but is subject to cloud owner approval."
              },
              {
                "name": "MissionOpaqueXML",
                "value": "MissionOpaqueXML",
                "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
              },
              {
                "name": "DiskImages",
                "value": "DiskImages",
                "description": "This flow sends blobs that can be used for Virtual Machines."
              },
              {
                "name": "API",
                "value": "API",
                "description": "This flow sends data via an Application Programmer Interface."
              }
            ]
          }
        },
        "dataType": {
          "description": "Type of data to transfer via the flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
          "type": "string",
          "enum": [
            "Blob",
            "Table"
          ],
          "x-ms-enum": {
            "name": "DataType",
            "modelAsString": true,
            "values": [
              {
                "name": "Blob",
                "value": "Blob",
                "description": "The flow uses Azure Storage blobs to send or receive data."
              },
              {
                "name": "Table",
                "value": "Table",
                "description": "The flow uses Azure Storage tables to send or receive data."
              }
            ]
          }
        },
        "provisioningState": {
          "description": "Provisioning state of the flow",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Accepted"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Resource has been accepted for creation."
              }
            ]
          }
        },
        "policies": {
          "type": "array",
          "description": "The policies for this flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
          "items": {
            "type": "string"
          }
        },
        "schema": {
          "type": "object",
          "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
          "properties": {
            "id": {
              "type": "string",
              "description": "ID associated with this schema"
            },
            "connectionId": {
              "type": "string",
              "description": "Connection ID associated with this schema"
            },
            "status": {
              "description": "Status of the schema",
              "type": "string",
              "enum": [
                "New",
                "Approved"
              ],
              "x-ms-enum": {
                "name": "SchemaStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "New",
                    "value": "New",
                    "description": "A schema that has not been approved and is awaiting review."
                  },
                  {
                    "name": "Approved",
                    "value": "Approved",
                    "description": "A schema that has been approved and is ready for use."
                  }
                ]
              }
            },
            "name": {
              "type": "string",
              "description": "Name of the schema"
            },
            "content": {
              "type": "string",
              "description": "Content of the schema"
            },
            "direction": {
              "description": "The direction of the schema.",
              "type": "string",
              "enum": [
                "Send",
                "Receive"
              ],
              "x-ms-enum": {
                "name": "Direction",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Send",
                    "value": "Send",
                    "description": "The direction is on the sending side of a pipeline, connection, or flow."
                  },
                  {
                    "name": "Receive",
                    "value": "Receive",
                    "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                  }
                ]
              }
            },
            "schemaUri": {
              "type": "string",
              "format": "uri",
              "description": "Uri containing SAS token for the zipped schema"
            },
            "schemaType": {
              "description": "The Schema Type",
              "type": "string",
              "enum": [
                "Xsd",
                "Zip"
              ],
              "x-ms-enum": {
                "name": "SchemaType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Xsd",
                    "value": "Xsd",
                    "description": "The schema represents a single XML schema definition file."
                  },
                  {
                    "name": "Zip",
                    "value": "Zip",
                    "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                  }
                ]
              }
            }
          }
        },
        "messagingOptions": {
          "description": "The messaging options for this flow",
          "type": "object",
          "properties": {
            "billingTier": {
              "description": "Billing tier for this messaging flow",
              "type": "string",
              "enum": [
                "BlobTransport",
                "Standard",
                "Premium"
              ],
              "x-ms-enum": {
                "name": "FlowBillingTier",
                "modelAsString": true,
                "values": [
                  {
                    "name": "BlobTransport",
                    "value": "BlobTransport",
                    "description": "Billing tier for messaging processing that charges based on how much data is transferred."
                  },
                  {
                    "name": "Standard",
                    "value": "Standard",
                    "description": "Billing tier for standard messaging processing that charges based on having the messaging resource allocated."
                  },
                  {
                    "name": "Premium",
                    "value": "Premium",
                    "description": "Billing tier for premium messaging processing that charges based on having the messaging resource allocated."
                  }
                ]
              }
            }
          }
        },
        "apiFlowOptions": {
          "description": "The API Flow configuration options for Azure Data Transfer API Flow type.",
          "type": "object",
          "properties": {
            "remoteEndpoint": {
              "type": "string",
              "description": "Remote host to which communication needs to be made. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the remoteEndpointSettings.endpoint property instead."
            },
            "cname": {
              "type": "string",
              "description": "Unique CNAME to represent the Azure Data Transfer API Flow instance"
            },
            "apiMode": {
              "description": "Remote Calling Mode in the Azure Data Transfer API Flow, which describes how the API Flow will be invoked",
              "type": "string",
              "enum": [
                "SDK",
                "Endpoint"
              ],
              "x-ms-enum": {
                "name": "ApiMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "SDK",
                    "value": "SDK",
                    "description": "The API flow will forward calls to a custom Software Development Kit implementation."
                  },
                  {
                    "name": "Endpoint",
                    "value": "Endpoint",
                    "description": "The API flow will forward calls to a specified endpoint."
                  }
                ]
              }
            },
            "identityTranslation": {
              "description": "Determines which identity to use for extracting the user token for Azure Data Transfer API Flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead.",
              "type": "string",
              "enum": [
                "UserIdentity",
                "ServiceIdentity"
              ],
              "x-ms-enum": {
                "name": "IdentityTranslation",
                "modelAsString": true,
                "values": [
                  {
                    "name": "UserIdentity",
                    "value": "UserIdentity",
                    "description": "The API flow will make use of the user identity that called this API flow, and pass that token through the boundary."
                  },
                  {
                    "name": "ServiceIdentity",
                    "value": "ServiceIdentity",
                    "description": "The API flow will make use of the Azure Data Transfer Flow managed identity on the other side of the boundary."
                  }
                ]
              }
            },
            "senderClientId": {
              "type": "string",
              "description": "Sender's app user assigned Manage Identity client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
            },
            "remoteCallingModeClientId": {
              "type": "string",
              "description": "Remote stub app registration Client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
            },
            "audienceOverride": {
              "type": "string",
              "description": "Optional field to override the audience of the remote endpoint. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
            }
          }
        },
        "customerManagedKeyVaultUri": {
          "type": "string",
          "format": "uri",
          "description": "The URI to the customer managed key for this flow"
        },
        "streamId": {
          "type": "string",
          "description": "The flow stream identifier"
        },
        "streamProtocol": {
          "description": "The protocol of the stream",
          "type": "string",
          "enum": [
            "UDP",
            "SRT",
            "RTP"
          ],
          "x-ms-enum": {
            "name": "StreamProtocol",
            "modelAsString": true,
            "values": [
              {
                "name": "UDP",
                "value": "UDP",
                "description": "This Flow is using User Datagram Protocol for the video stream."
              },
              {
                "name": "SRT",
                "value": "SRT",
                "description": "This Flow is using Secure Reliable Transfer for the video stream."
              },
              {
                "name": "RTP",
                "value": "RTP",
                "description": "This Flow is using Real-time Transport Protocol for the video stream."
              }
            ]
          }
        },
        "streamLatency": {
          "type": "integer",
          "format": "int64",
          "description": "The latency of the stream in milliseconds"
        },
        "passphrase": {
          "type": "string",
          "description": "The passphrase used for SRT streams"
        },
        "sourceAddresses": {
          "description": "The source IP address and CIDR ranges of the stream",
          "type": "object",
          "properties": {
            "sourceAddresses": {
              "type": "array",
              "description": "A source IP address or CIDR range",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "destinationEndpoints": {
          "type": "array",
          "description": "The destination endpoints of the stream",
          "items": {
            "type": "string"
          }
        },
        "destinationEndpointPorts": {
          "type": "array",
          "description": "The destination endpoint ports of the stream",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "eventHubId": {
          "type": "string",
          "format": "arm-id",
          "description": "Event Hub ID",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.EventHub/namespaces/eventhubs"
              }
            ]
          }
        },
        "consumerGroup": {
          "type": "string",
          "description": "Event Hub Consumer Group"
        }
      }
    },
    "FlowStatus": {
      "type": "string",
      "description": "Status of the current flow.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "FlowStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "The flow is currently enabled and able to send or receive data."
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "The flow is currently disabled and cannot send or receive data."
          }
        ]
      }
    },
    "FlowType": {
      "type": "string",
      "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
      "enum": [
        "Unknown",
        "Complex",
        "DevSecOps",
        "Messaging",
        "Mission",
        "MicrosoftInternal",
        "BasicFiles",
        "Data",
        "Standard",
        "StreamingVideo",
        "Opaque",
        "MissionOpaqueXML",
        "DiskImages",
        "API"
      ],
      "x-ms-enum": {
        "name": "FlowType",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown",
            "description": "This type of flow is not set."
          },
          {
            "name": "Complex",
            "value": "Complex",
            "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
          },
          {
            "name": "DevSecOps",
            "value": "DevSecOps",
            "description": "This flow sends source code files and artifacts."
          },
          {
            "name": "Messaging",
            "value": "Messaging",
            "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
          },
          {
            "name": "Mission",
            "value": "Mission",
            "description": "This flow sends standard data but is subject to strict cloud owner approval."
          },
          {
            "name": "MicrosoftInternal",
            "value": "MicrosoftInternal",
            "description": "This flow is assigned to internal Microsoft use cases."
          },
          {
            "name": "BasicFiles",
            "value": "BasicFiles",
            "description": "This flow sends blobs that can be used for multiple use cases."
          },
          {
            "name": "Data",
            "value": "Data",
            "description": "This flow sends blobs that can be used for multiple use cases."
          },
          {
            "name": "Standard",
            "value": "Standard",
            "description": "This flow sends blobs that can be used for multiple use cases."
          },
          {
            "name": "StreamingVideo",
            "value": "StreamingVideo",
            "description": "This flow sends video streams."
          },
          {
            "name": "Opaque",
            "value": "Opaque",
            "description": "This flow sends blobs but is subject to cloud owner approval."
          },
          {
            "name": "MissionOpaqueXML",
            "value": "MissionOpaqueXML",
            "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
          },
          {
            "name": "DiskImages",
            "value": "DiskImages",
            "description": "This flow sends blobs that can be used for Virtual Machines."
          },
          {
            "name": "API",
            "value": "API",
            "description": "This flow sends data via an Application Programmer Interface."
          }
        ]
      }
    },
    "FlowsPatch": {
      "type": "object",
      "description": "The flows resource patch definition.",
      "properties": {
        "identity": {
          "description": "The managed service identities assigned to this resource.",
          "type": "object",
          "properties": {
            "principalId": {
              "type": "string",
              "format": "uuid",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "format": "uuid",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "title": "User-Assigned Identities",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "additionalProperties": {
                "x-nullable": true,
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ForceDisabledStatus": {
      "type": "string",
      "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
      "enum": [
        "ConnectionForceDisabled",
        "FlowTypeForceDisabled"
      ],
      "x-ms-enum": {
        "name": "ForceDisabledStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "ConnectionForceDisabled",
            "value": "ConnectionForceDisabled",
            "description": "Defines disablement of a Flow due to the parent connection being disabled."
          },
          {
            "name": "FlowTypeForceDisabled",
            "value": "FlowTypeForceDisabled",
            "description": "Defines disablement of a Flow due to the linked flow type being disabled."
          }
        ]
      }
    },
    "GetDestinationEndpointPortsResult": {
      "type": "object",
      "description": "List of destination endpoint ports for the flow stream",
      "properties": {
        "ports": {
          "type": "array",
          "description": "The destination endpoint port for the flow stream",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    },
    "GetDestinationEndpointsResult": {
      "type": "object",
      "description": "List of destination endpoints for the flow stream",
      "properties": {
        "endpoints": {
          "type": "array",
          "description": "The destination endpoints for the flow stream",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GetStreamConnectionStringResult": {
      "type": "object",
      "description": "The connection string for the specified streaming flow",
      "properties": {
        "connectionString": {
          "type": "string",
          "description": "The connection string for the specified streaming flow"
        }
      }
    },
    "IdentityTranslation": {
      "type": "string",
      "description": "Flag for if Azure Data Transfer API Flow should extract the user token",
      "enum": [
        "UserIdentity",
        "ServiceIdentity"
      ],
      "x-ms-enum": {
        "name": "IdentityTranslation",
        "modelAsString": true,
        "values": [
          {
            "name": "UserIdentity",
            "value": "UserIdentity",
            "description": "The API flow will make use of the user identity that called this API flow, and pass that token through the boundary."
          },
          {
            "name": "ServiceIdentity",
            "value": "ServiceIdentity",
            "description": "The API flow will make use of the Azure Data Transfer Flow managed identity on the other side of the boundary."
          }
        ]
      }
    },
    "InternalMetadataProperties": {
      "type": "object",
      "description": "Internal metadata of the connection inside pipeline.",
      "properties": {
        "operationStatus": {
          "description": "Operation status associated with the last patch request",
          "readOnly": true,
          "type": "object",
          "properties": {
            "status": {
              "description": "Operation status for the last patch request for this connection.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Failed",
                "Succeeded"
              ],
              "x-ms-enum": {
                "name": "OperationStatusEnum",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "The last patch request for this connection completed with an error."
                  },
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "The last patch request for this connection completed."
                  }
                ]
              }
            },
            "id": {
              "type": "string",
              "description": "Operation status ID of the last patch request for this connection.",
              "readOnly": true
            },
            "message": {
              "type": "string",
              "description": "Message for the operation for the last patch request for this connection.",
              "readOnly": true
            }
          }
        },
        "statusSetBy": {
          "type": "string",
          "description": "User that last set the approved status for this connection",
          "readOnly": true
        }
      },
      "additionalProperties": {}
    },
    "LinkStatus": {
      "type": "string",
      "description": "Link status of the current pipeline, connection, flow.",
      "enum": [
        "Linked",
        "Unlinked"
      ],
      "x-ms-enum": {
        "name": "LinkStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Linked",
            "value": "Linked",
            "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
          },
          {
            "name": "Unlinked",
            "value": "Unlinked",
            "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
          }
        ]
      }
    },
    "ListApprovedSchemasRequest": {
      "type": "object",
      "description": "The request used to list approved schemas within the resource provider. ListApprovedSchemaRequest has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
      "properties": {
        "pipeline": {
          "type": "string",
          "description": "The name of the pipeline to filter approved schemas."
        },
        "direction": {
          "description": "The direction pipeline to filter approved schemas.",
          "type": "string",
          "enum": [
            "Send",
            "Receive"
          ],
          "x-ms-enum": {
            "name": "Direction",
            "modelAsString": true,
            "values": [
              {
                "name": "Send",
                "value": "Send",
                "description": "The direction is on the sending side of a pipeline, connection, or flow."
              },
              {
                "name": "Receive",
                "value": "Receive",
                "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
              }
            ]
          }
        }
      }
    },
    "ListFlowsByPipelineConnection": {
      "type": "object",
      "description": "A connection resource id in addition to all child flow resources under this connection.",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the connection."
        },
        "flows": {
          "type": "array",
          "description": "List of flows associated with the connection.",
          "items": {
            "type": "object",
            "description": "The flow resource definition.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "Properties of flow",
                "type": "object",
                "properties": {
                  "connection": {
                    "description": "The connection associated with this flow",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the connection"
                      },
                      "id": {
                        "type": "string",
                        "description": "Id of the connection"
                      },
                      "location": {
                        "type": "string",
                        "description": "Location of the connection",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "subscriptionName": {
                        "type": "string",
                        "description": "Name of the subscription with the connection"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  },
                  "flowId": {
                    "type": "string",
                    "description": "Dataflow GUID associated with this flow",
                    "readOnly": true
                  },
                  "keyVaultUri": {
                    "type": "string",
                    "description": "URI to a Key Vault Secret containing a SAS token."
                  },
                  "linkStatus": {
                    "description": "Link status of the current flow",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Linked",
                      "Unlinked"
                    ],
                    "x-ms-enum": {
                      "name": "LinkStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Linked",
                          "value": "Linked",
                          "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                        },
                        {
                          "name": "Unlinked",
                          "value": "Unlinked",
                          "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                        }
                      ]
                    }
                  },
                  "linkedFlowId": {
                    "type": "string",
                    "description": "Resource ID of the linked flow",
                    "readOnly": true
                  },
                  "status": {
                    "description": "Status of the current flow",
                    "type": "string",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "FlowStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Enabled",
                          "value": "Enabled",
                          "description": "The flow is currently enabled and able to send or receive data."
                        },
                        {
                          "name": "Disabled",
                          "value": "Disabled",
                          "description": "The flow is currently disabled and cannot send or receive data."
                        }
                      ]
                    }
                  },
                  "forceDisabledStatus": {
                    "type": "array",
                    "description": "Force disablement status of the current flow",
                    "items": {
                      "type": "string",
                      "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                      "enum": [
                        "ConnectionForceDisabled",
                        "FlowTypeForceDisabled"
                      ],
                      "x-ms-enum": {
                        "name": "ForceDisabledStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "ConnectionForceDisabled",
                            "value": "ConnectionForceDisabled",
                            "description": "Defines disablement of a Flow due to the parent connection being disabled."
                          },
                          {
                            "name": "FlowTypeForceDisabled",
                            "value": "FlowTypeForceDisabled",
                            "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                          }
                        ]
                      }
                    },
                    "readOnly": true
                  },
                  "storageAccountName": {
                    "type": "string",
                    "description": "Storage Account"
                  },
                  "storageAccountId": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "Storage Account ID",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Storage/storageAccounts"
                        }
                      ]
                    }
                  },
                  "storageContainerName": {
                    "type": "string",
                    "description": "Storage Container Name"
                  },
                  "storageTableName": {
                    "type": "string",
                    "description": "Storage Table Name"
                  },
                  "serviceBusQueueId": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "Service Bus Queue ID",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Storage/namespaces/queues"
                        }
                      ]
                    }
                  },
                  "flowType": {
                    "type": "string",
                    "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                    "enum": [
                      "Unknown",
                      "Complex",
                      "DevSecOps",
                      "Messaging",
                      "Mission",
                      "MicrosoftInternal",
                      "BasicFiles",
                      "Data",
                      "Standard",
                      "StreamingVideo",
                      "Opaque",
                      "MissionOpaqueXML",
                      "DiskImages",
                      "API"
                    ],
                    "x-ms-enum": {
                      "name": "FlowType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Unknown",
                          "value": "Unknown",
                          "description": "This type of flow is not set."
                        },
                        {
                          "name": "Complex",
                          "value": "Complex",
                          "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                        },
                        {
                          "name": "DevSecOps",
                          "value": "DevSecOps",
                          "description": "This flow sends source code files and artifacts."
                        },
                        {
                          "name": "Messaging",
                          "value": "Messaging",
                          "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                        },
                        {
                          "name": "Mission",
                          "value": "Mission",
                          "description": "This flow sends standard data but is subject to strict cloud owner approval."
                        },
                        {
                          "name": "MicrosoftInternal",
                          "value": "MicrosoftInternal",
                          "description": "This flow is assigned to internal Microsoft use cases."
                        },
                        {
                          "name": "BasicFiles",
                          "value": "BasicFiles",
                          "description": "This flow sends blobs that can be used for multiple use cases."
                        },
                        {
                          "name": "Data",
                          "value": "Data",
                          "description": "This flow sends blobs that can be used for multiple use cases."
                        },
                        {
                          "name": "Standard",
                          "value": "Standard",
                          "description": "This flow sends blobs that can be used for multiple use cases."
                        },
                        {
                          "name": "StreamingVideo",
                          "value": "StreamingVideo",
                          "description": "This flow sends video streams."
                        },
                        {
                          "name": "Opaque",
                          "value": "Opaque",
                          "description": "This flow sends blobs but is subject to cloud owner approval."
                        },
                        {
                          "name": "MissionOpaqueXML",
                          "value": "MissionOpaqueXML",
                          "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                        },
                        {
                          "name": "DiskImages",
                          "value": "DiskImages",
                          "description": "This flow sends blobs that can be used for Virtual Machines."
                        },
                        {
                          "name": "API",
                          "value": "API",
                          "description": "This flow sends data via an Application Programmer Interface."
                        }
                      ]
                    }
                  },
                  "dataType": {
                    "description": "Type of data to transfer via the flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                    "type": "string",
                    "enum": [
                      "Blob",
                      "Table"
                    ],
                    "x-ms-enum": {
                      "name": "DataType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Blob",
                          "value": "Blob",
                          "description": "The flow uses Azure Storage blobs to send or receive data."
                        },
                        {
                          "name": "Table",
                          "value": "Table",
                          "description": "The flow uses Azure Storage tables to send or receive data."
                        }
                      ]
                    }
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the flow",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Accepted"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "Resource has been accepted for creation."
                        }
                      ]
                    }
                  },
                  "policies": {
                    "type": "array",
                    "description": "The policies for this flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "schema": {
                    "type": "object",
                    "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "ID associated with this schema"
                      },
                      "connectionId": {
                        "type": "string",
                        "description": "Connection ID associated with this schema"
                      },
                      "status": {
                        "description": "Status of the schema",
                        "type": "string",
                        "enum": [
                          "New",
                          "Approved"
                        ],
                        "x-ms-enum": {
                          "name": "SchemaStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "New",
                              "value": "New",
                              "description": "A schema that has not been approved and is awaiting review."
                            },
                            {
                              "name": "Approved",
                              "value": "Approved",
                              "description": "A schema that has been approved and is ready for use."
                            }
                          ]
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the schema"
                      },
                      "content": {
                        "type": "string",
                        "description": "Content of the schema"
                      },
                      "direction": {
                        "description": "The direction of the schema.",
                        "type": "string",
                        "enum": [
                          "Send",
                          "Receive"
                        ],
                        "x-ms-enum": {
                          "name": "Direction",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Send",
                              "value": "Send",
                              "description": "The direction is on the sending side of a pipeline, connection, or flow."
                            },
                            {
                              "name": "Receive",
                              "value": "Receive",
                              "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                            }
                          ]
                        }
                      },
                      "schemaUri": {
                        "type": "string",
                        "format": "uri",
                        "description": "Uri containing SAS token for the zipped schema"
                      },
                      "schemaType": {
                        "description": "The Schema Type",
                        "type": "string",
                        "enum": [
                          "Xsd",
                          "Zip"
                        ],
                        "x-ms-enum": {
                          "name": "SchemaType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Xsd",
                              "value": "Xsd",
                              "description": "The schema represents a single XML schema definition file."
                            },
                            {
                              "name": "Zip",
                              "value": "Zip",
                              "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                            }
                          ]
                        }
                      }
                    }
                  },
                  "messagingOptions": {
                    "description": "The messaging options for this flow",
                    "type": "object",
                    "properties": {
                      "billingTier": {
                        "description": "Billing tier for this messaging flow",
                        "type": "string",
                        "enum": [
                          "BlobTransport",
                          "Standard",
                          "Premium"
                        ],
                        "x-ms-enum": {
                          "name": "FlowBillingTier",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "BlobTransport",
                              "value": "BlobTransport",
                              "description": "Billing tier for messaging processing that charges based on how much data is transferred."
                            },
                            {
                              "name": "Standard",
                              "value": "Standard",
                              "description": "Billing tier for standard messaging processing that charges based on having the messaging resource allocated."
                            },
                            {
                              "name": "Premium",
                              "value": "Premium",
                              "description": "Billing tier for premium messaging processing that charges based on having the messaging resource allocated."
                            }
                          ]
                        }
                      }
                    }
                  },
                  "apiFlowOptions": {
                    "description": "The API Flow configuration options for Azure Data Transfer API Flow type.",
                    "type": "object",
                    "properties": {
                      "remoteEndpoint": {
                        "type": "string",
                        "description": "Remote host to which communication needs to be made. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the remoteEndpointSettings.endpoint property instead."
                      },
                      "cname": {
                        "type": "string",
                        "description": "Unique CNAME to represent the Azure Data Transfer API Flow instance"
                      },
                      "apiMode": {
                        "description": "Remote Calling Mode in the Azure Data Transfer API Flow, which describes how the API Flow will be invoked",
                        "type": "string",
                        "enum": [
                          "SDK",
                          "Endpoint"
                        ],
                        "x-ms-enum": {
                          "name": "ApiMode",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "SDK",
                              "value": "SDK",
                              "description": "The API flow will forward calls to a custom Software Development Kit implementation."
                            },
                            {
                              "name": "Endpoint",
                              "value": "Endpoint",
                              "description": "The API flow will forward calls to a specified endpoint."
                            }
                          ]
                        }
                      },
                      "identityTranslation": {
                        "description": "Determines which identity to use for extracting the user token for Azure Data Transfer API Flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead.",
                        "type": "string",
                        "enum": [
                          "UserIdentity",
                          "ServiceIdentity"
                        ],
                        "x-ms-enum": {
                          "name": "IdentityTranslation",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "UserIdentity",
                              "value": "UserIdentity",
                              "description": "The API flow will make use of the user identity that called this API flow, and pass that token through the boundary."
                            },
                            {
                              "name": "ServiceIdentity",
                              "value": "ServiceIdentity",
                              "description": "The API flow will make use of the Azure Data Transfer Flow managed identity on the other side of the boundary."
                            }
                          ]
                        }
                      },
                      "senderClientId": {
                        "type": "string",
                        "description": "Sender's app user assigned Manage Identity client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                      },
                      "remoteCallingModeClientId": {
                        "type": "string",
                        "description": "Remote stub app registration Client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                      },
                      "audienceOverride": {
                        "type": "string",
                        "description": "Optional field to override the audience of the remote endpoint. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                      }
                    }
                  },
                  "customerManagedKeyVaultUri": {
                    "type": "string",
                    "format": "uri",
                    "description": "The URI to the customer managed key for this flow"
                  },
                  "streamId": {
                    "type": "string",
                    "description": "The flow stream identifier"
                  },
                  "streamProtocol": {
                    "description": "The protocol of the stream",
                    "type": "string",
                    "enum": [
                      "UDP",
                      "SRT",
                      "RTP"
                    ],
                    "x-ms-enum": {
                      "name": "StreamProtocol",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "UDP",
                          "value": "UDP",
                          "description": "This Flow is using User Datagram Protocol for the video stream."
                        },
                        {
                          "name": "SRT",
                          "value": "SRT",
                          "description": "This Flow is using Secure Reliable Transfer for the video stream."
                        },
                        {
                          "name": "RTP",
                          "value": "RTP",
                          "description": "This Flow is using Real-time Transport Protocol for the video stream."
                        }
                      ]
                    }
                  },
                  "streamLatency": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The latency of the stream in milliseconds"
                  },
                  "passphrase": {
                    "type": "string",
                    "description": "The passphrase used for SRT streams"
                  },
                  "sourceAddresses": {
                    "description": "The source IP address and CIDR ranges of the stream",
                    "type": "object",
                    "properties": {
                      "sourceAddresses": {
                        "type": "array",
                        "description": "A source IP address or CIDR range",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "destinationEndpoints": {
                    "type": "array",
                    "description": "The destination endpoints of the stream",
                    "items": {
                      "type": "string"
                    }
                  },
                  "destinationEndpointPorts": {
                    "type": "array",
                    "description": "The destination endpoint ports of the stream",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  },
                  "eventHubId": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "Event Hub ID",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.EventHub/namespaces/eventhubs"
                        }
                      ]
                    }
                  },
                  "consumerGroup": {
                    "type": "string",
                    "description": "Event Hub Consumer Group"
                  }
                }
              },
              "plan": {
                "description": "Details of the resource plan.",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "A user defined name of the 3rd Party Artifact that is being procured."
                  },
                  "publisher": {
                    "type": "string",
                    "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
                  },
                  "product": {
                    "type": "string",
                    "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
                  },
                  "promotionCode": {
                    "type": "string",
                    "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
                  },
                  "version": {
                    "type": "string",
                    "description": "The version of the desired product/artifact."
                  }
                },
                "required": [
                  "name",
                  "publisher",
                  "product"
                ]
              },
              "identity": {
                "description": "The managed service identities assigned to this resource.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "tenantId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                    "enum": [
                      "None",
                      "SystemAssigned",
                      "UserAssigned",
                      "SystemAssigned,UserAssigned"
                    ],
                    "x-ms-enum": {
                      "name": "ManagedServiceIdentityType",
                      "modelAsString": true
                    }
                  },
                  "userAssignedIdentities": {
                    "type": "object",
                    "title": "User-Assigned Identities",
                    "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                    "additionalProperties": {
                      "x-nullable": true,
                      "type": "object",
                      "description": "User assigned identity properties",
                      "properties": {
                        "principalId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The principal ID of the assigned identity.",
                          "readOnly": true
                        },
                        "clientId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The client ID of the assigned identity.",
                          "readOnly": true
                        }
                      }
                    }
                  }
                },
                "required": [
                  "type"
                ]
              }
            }
          }
        }
      }
    },
    "ListFlowsByPipelineResult": {
      "type": "object",
      "description": "An array of flow resources.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List flows by pipeline result by connection",
          "items": {
            "type": "object",
            "description": "A connection resource id in addition to all child flow resources under this connection.",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID of the connection."
              },
              "flows": {
                "type": "array",
                "description": "List of flows associated with the connection.",
                "items": {
                  "type": "object",
                  "description": "The flow resource definition.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the resource",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                      "readOnly": true
                    },
                    "systemData": {
                      "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "createdBy": {
                          "type": "string",
                          "description": "The identity that created the resource."
                        },
                        "createdByType": {
                          "type": "string",
                          "description": "The type of identity that created the resource.",
                          "enum": [
                            "User",
                            "Application",
                            "ManagedIdentity",
                            "Key"
                          ],
                          "x-ms-enum": {
                            "name": "createdByType",
                            "modelAsString": true
                          }
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The timestamp of resource creation (UTC)."
                        },
                        "lastModifiedBy": {
                          "type": "string",
                          "description": "The identity that last modified the resource."
                        },
                        "lastModifiedByType": {
                          "type": "string",
                          "description": "The type of identity that last modified the resource.",
                          "enum": [
                            "User",
                            "Application",
                            "ManagedIdentity",
                            "Key"
                          ],
                          "x-ms-enum": {
                            "name": "createdByType",
                            "modelAsString": true
                          }
                        },
                        "lastModifiedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The timestamp of resource last modification (UTC)"
                        }
                      }
                    },
                    "tags": {
                      "type": "object",
                      "description": "Resource tags.",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "read",
                        "create",
                        "update"
                      ]
                    },
                    "location": {
                      "type": "string",
                      "description": "The geo-location where the resource lives",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "properties": {
                      "description": "Properties of flow",
                      "type": "object",
                      "properties": {
                        "connection": {
                          "description": "The connection associated with this flow",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the connection"
                            },
                            "id": {
                              "type": "string",
                              "description": "Id of the connection"
                            },
                            "location": {
                              "type": "string",
                              "description": "Location of the connection",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ]
                            },
                            "subscriptionName": {
                              "type": "string",
                              "description": "Name of the subscription with the connection"
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        "flowId": {
                          "type": "string",
                          "description": "Dataflow GUID associated with this flow",
                          "readOnly": true
                        },
                        "keyVaultUri": {
                          "type": "string",
                          "description": "URI to a Key Vault Secret containing a SAS token."
                        },
                        "linkStatus": {
                          "description": "Link status of the current flow",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Linked",
                            "Unlinked"
                          ],
                          "x-ms-enum": {
                            "name": "LinkStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Linked",
                                "value": "Linked",
                                "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                              },
                              {
                                "name": "Unlinked",
                                "value": "Unlinked",
                                "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                              }
                            ]
                          }
                        },
                        "linkedFlowId": {
                          "type": "string",
                          "description": "Resource ID of the linked flow",
                          "readOnly": true
                        },
                        "status": {
                          "description": "Status of the current flow",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "FlowStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "The flow is currently enabled and able to send or receive data."
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "The flow is currently disabled and cannot send or receive data."
                              }
                            ]
                          }
                        },
                        "forceDisabledStatus": {
                          "type": "array",
                          "description": "Force disablement status of the current flow",
                          "items": {
                            "type": "string",
                            "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                            "enum": [
                              "ConnectionForceDisabled",
                              "FlowTypeForceDisabled"
                            ],
                            "x-ms-enum": {
                              "name": "ForceDisabledStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "ConnectionForceDisabled",
                                  "value": "ConnectionForceDisabled",
                                  "description": "Defines disablement of a Flow due to the parent connection being disabled."
                                },
                                {
                                  "name": "FlowTypeForceDisabled",
                                  "value": "FlowTypeForceDisabled",
                                  "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                                }
                              ]
                            }
                          },
                          "readOnly": true
                        },
                        "storageAccountName": {
                          "type": "string",
                          "description": "Storage Account"
                        },
                        "storageAccountId": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "Storage Account ID",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.Storage/storageAccounts"
                              }
                            ]
                          }
                        },
                        "storageContainerName": {
                          "type": "string",
                          "description": "Storage Container Name"
                        },
                        "storageTableName": {
                          "type": "string",
                          "description": "Storage Table Name"
                        },
                        "serviceBusQueueId": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "Service Bus Queue ID",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.Storage/namespaces/queues"
                              }
                            ]
                          }
                        },
                        "flowType": {
                          "type": "string",
                          "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                          "enum": [
                            "Unknown",
                            "Complex",
                            "DevSecOps",
                            "Messaging",
                            "Mission",
                            "MicrosoftInternal",
                            "BasicFiles",
                            "Data",
                            "Standard",
                            "StreamingVideo",
                            "Opaque",
                            "MissionOpaqueXML",
                            "DiskImages",
                            "API"
                          ],
                          "x-ms-enum": {
                            "name": "FlowType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Unknown",
                                "value": "Unknown",
                                "description": "This type of flow is not set."
                              },
                              {
                                "name": "Complex",
                                "value": "Complex",
                                "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                              },
                              {
                                "name": "DevSecOps",
                                "value": "DevSecOps",
                                "description": "This flow sends source code files and artifacts."
                              },
                              {
                                "name": "Messaging",
                                "value": "Messaging",
                                "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                              },
                              {
                                "name": "Mission",
                                "value": "Mission",
                                "description": "This flow sends standard data but is subject to strict cloud owner approval."
                              },
                              {
                                "name": "MicrosoftInternal",
                                "value": "MicrosoftInternal",
                                "description": "This flow is assigned to internal Microsoft use cases."
                              },
                              {
                                "name": "BasicFiles",
                                "value": "BasicFiles",
                                "description": "This flow sends blobs that can be used for multiple use cases."
                              },
                              {
                                "name": "Data",
                                "value": "Data",
                                "description": "This flow sends blobs that can be used for multiple use cases."
                              },
                              {
                                "name": "Standard",
                                "value": "Standard",
                                "description": "This flow sends blobs that can be used for multiple use cases."
                              },
                              {
                                "name": "StreamingVideo",
                                "value": "StreamingVideo",
                                "description": "This flow sends video streams."
                              },
                              {
                                "name": "Opaque",
                                "value": "Opaque",
                                "description": "This flow sends blobs but is subject to cloud owner approval."
                              },
                              {
                                "name": "MissionOpaqueXML",
                                "value": "MissionOpaqueXML",
                                "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                              },
                              {
                                "name": "DiskImages",
                                "value": "DiskImages",
                                "description": "This flow sends blobs that can be used for Virtual Machines."
                              },
                              {
                                "name": "API",
                                "value": "API",
                                "description": "This flow sends data via an Application Programmer Interface."
                              }
                            ]
                          }
                        },
                        "dataType": {
                          "description": "Type of data to transfer via the flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                          "type": "string",
                          "enum": [
                            "Blob",
                            "Table"
                          ],
                          "x-ms-enum": {
                            "name": "DataType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Blob",
                                "value": "Blob",
                                "description": "The flow uses Azure Storage blobs to send or receive data."
                              },
                              {
                                "name": "Table",
                                "value": "Table",
                                "description": "The flow uses Azure Storage tables to send or receive data."
                              }
                            ]
                          }
                        },
                        "provisioningState": {
                          "description": "Provisioning state of the flow",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Succeeded",
                            "Failed",
                            "Canceled",
                            "Accepted"
                          ],
                          "x-ms-enum": {
                            "name": "ProvisioningState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Succeeded",
                                "value": "Succeeded",
                                "description": "Resource has been created."
                              },
                              {
                                "name": "Failed",
                                "value": "Failed",
                                "description": "Resource creation failed."
                              },
                              {
                                "name": "Canceled",
                                "value": "Canceled",
                                "description": "Resource creation was canceled."
                              },
                              {
                                "name": "Accepted",
                                "value": "Accepted",
                                "description": "Resource has been accepted for creation."
                              }
                            ]
                          }
                        },
                        "policies": {
                          "type": "array",
                          "description": "The policies for this flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "schema": {
                          "type": "object",
                          "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "ID associated with this schema"
                            },
                            "connectionId": {
                              "type": "string",
                              "description": "Connection ID associated with this schema"
                            },
                            "status": {
                              "description": "Status of the schema",
                              "type": "string",
                              "enum": [
                                "New",
                                "Approved"
                              ],
                              "x-ms-enum": {
                                "name": "SchemaStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "New",
                                    "value": "New",
                                    "description": "A schema that has not been approved and is awaiting review."
                                  },
                                  {
                                    "name": "Approved",
                                    "value": "Approved",
                                    "description": "A schema that has been approved and is ready for use."
                                  }
                                ]
                              }
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the schema"
                            },
                            "content": {
                              "type": "string",
                              "description": "Content of the schema"
                            },
                            "direction": {
                              "description": "The direction of the schema.",
                              "type": "string",
                              "enum": [
                                "Send",
                                "Receive"
                              ],
                              "x-ms-enum": {
                                "name": "Direction",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Send",
                                    "value": "Send",
                                    "description": "The direction is on the sending side of a pipeline, connection, or flow."
                                  },
                                  {
                                    "name": "Receive",
                                    "value": "Receive",
                                    "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                                  }
                                ]
                              }
                            },
                            "schemaUri": {
                              "type": "string",
                              "format": "uri",
                              "description": "Uri containing SAS token for the zipped schema"
                            },
                            "schemaType": {
                              "description": "The Schema Type",
                              "type": "string",
                              "enum": [
                                "Xsd",
                                "Zip"
                              ],
                              "x-ms-enum": {
                                "name": "SchemaType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Xsd",
                                    "value": "Xsd",
                                    "description": "The schema represents a single XML schema definition file."
                                  },
                                  {
                                    "name": "Zip",
                                    "value": "Zip",
                                    "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "messagingOptions": {
                          "description": "The messaging options for this flow",
                          "type": "object",
                          "properties": {
                            "billingTier": {
                              "description": "Billing tier for this messaging flow",
                              "type": "string",
                              "enum": [
                                "BlobTransport",
                                "Standard",
                                "Premium"
                              ],
                              "x-ms-enum": {
                                "name": "FlowBillingTier",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "BlobTransport",
                                    "value": "BlobTransport",
                                    "description": "Billing tier for messaging processing that charges based on how much data is transferred."
                                  },
                                  {
                                    "name": "Standard",
                                    "value": "Standard",
                                    "description": "Billing tier for standard messaging processing that charges based on having the messaging resource allocated."
                                  },
                                  {
                                    "name": "Premium",
                                    "value": "Premium",
                                    "description": "Billing tier for premium messaging processing that charges based on having the messaging resource allocated."
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "apiFlowOptions": {
                          "description": "The API Flow configuration options for Azure Data Transfer API Flow type.",
                          "type": "object",
                          "properties": {
                            "remoteEndpoint": {
                              "type": "string",
                              "description": "Remote host to which communication needs to be made. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the remoteEndpointSettings.endpoint property instead."
                            },
                            "cname": {
                              "type": "string",
                              "description": "Unique CNAME to represent the Azure Data Transfer API Flow instance"
                            },
                            "apiMode": {
                              "description": "Remote Calling Mode in the Azure Data Transfer API Flow, which describes how the API Flow will be invoked",
                              "type": "string",
                              "enum": [
                                "SDK",
                                "Endpoint"
                              ],
                              "x-ms-enum": {
                                "name": "ApiMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "SDK",
                                    "value": "SDK",
                                    "description": "The API flow will forward calls to a custom Software Development Kit implementation."
                                  },
                                  {
                                    "name": "Endpoint",
                                    "value": "Endpoint",
                                    "description": "The API flow will forward calls to a specified endpoint."
                                  }
                                ]
                              }
                            },
                            "identityTranslation": {
                              "description": "Determines which identity to use for extracting the user token for Azure Data Transfer API Flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead.",
                              "type": "string",
                              "enum": [
                                "UserIdentity",
                                "ServiceIdentity"
                              ],
                              "x-ms-enum": {
                                "name": "IdentityTranslation",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "UserIdentity",
                                    "value": "UserIdentity",
                                    "description": "The API flow will make use of the user identity that called this API flow, and pass that token through the boundary."
                                  },
                                  {
                                    "name": "ServiceIdentity",
                                    "value": "ServiceIdentity",
                                    "description": "The API flow will make use of the Azure Data Transfer Flow managed identity on the other side of the boundary."
                                  }
                                ]
                              }
                            },
                            "senderClientId": {
                              "type": "string",
                              "description": "Sender's app user assigned Manage Identity client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                            },
                            "remoteCallingModeClientId": {
                              "type": "string",
                              "description": "Remote stub app registration Client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                            },
                            "audienceOverride": {
                              "type": "string",
                              "description": "Optional field to override the audience of the remote endpoint. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                            }
                          }
                        },
                        "customerManagedKeyVaultUri": {
                          "type": "string",
                          "format": "uri",
                          "description": "The URI to the customer managed key for this flow"
                        },
                        "streamId": {
                          "type": "string",
                          "description": "The flow stream identifier"
                        },
                        "streamProtocol": {
                          "description": "The protocol of the stream",
                          "type": "string",
                          "enum": [
                            "UDP",
                            "SRT",
                            "RTP"
                          ],
                          "x-ms-enum": {
                            "name": "StreamProtocol",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "UDP",
                                "value": "UDP",
                                "description": "This Flow is using User Datagram Protocol for the video stream."
                              },
                              {
                                "name": "SRT",
                                "value": "SRT",
                                "description": "This Flow is using Secure Reliable Transfer for the video stream."
                              },
                              {
                                "name": "RTP",
                                "value": "RTP",
                                "description": "This Flow is using Real-time Transport Protocol for the video stream."
                              }
                            ]
                          }
                        },
                        "streamLatency": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The latency of the stream in milliseconds"
                        },
                        "passphrase": {
                          "type": "string",
                          "description": "The passphrase used for SRT streams"
                        },
                        "sourceAddresses": {
                          "description": "The source IP address and CIDR ranges of the stream",
                          "type": "object",
                          "properties": {
                            "sourceAddresses": {
                              "type": "array",
                              "description": "A source IP address or CIDR range",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "destinationEndpoints": {
                          "type": "array",
                          "description": "The destination endpoints of the stream",
                          "items": {
                            "type": "string"
                          }
                        },
                        "destinationEndpointPorts": {
                          "type": "array",
                          "description": "The destination endpoint ports of the stream",
                          "items": {
                            "type": "integer",
                            "format": "int64"
                          }
                        },
                        "eventHubId": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "Event Hub ID",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.EventHub/namespaces/eventhubs"
                              }
                            ]
                          }
                        },
                        "consumerGroup": {
                          "type": "string",
                          "description": "Event Hub Consumer Group"
                        }
                      }
                    },
                    "plan": {
                      "description": "Details of the resource plan.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "A user defined name of the 3rd Party Artifact that is being procured."
                        },
                        "publisher": {
                          "type": "string",
                          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
                        },
                        "product": {
                          "type": "string",
                          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
                        },
                        "promotionCode": {
                          "type": "string",
                          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
                        },
                        "version": {
                          "type": "string",
                          "description": "The version of the desired product/artifact."
                        }
                      },
                      "required": [
                        "name",
                        "publisher",
                        "product"
                      ]
                    },
                    "identity": {
                      "description": "The managed service identities assigned to this resource.",
                      "type": "object",
                      "properties": {
                        "principalId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                          "readOnly": true
                        },
                        "tenantId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                          "enum": [
                            "None",
                            "SystemAssigned",
                            "UserAssigned",
                            "SystemAssigned,UserAssigned"
                          ],
                          "x-ms-enum": {
                            "name": "ManagedServiceIdentityType",
                            "modelAsString": true
                          }
                        },
                        "userAssignedIdentities": {
                          "type": "object",
                          "title": "User-Assigned Identities",
                          "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                          "additionalProperties": {
                            "x-nullable": true,
                            "type": "object",
                            "description": "User assigned identity properties",
                            "properties": {
                              "principalId": {
                                "type": "string",
                                "format": "uuid",
                                "description": "The principal ID of the assigned identity.",
                                "readOnly": true
                              },
                              "clientId": {
                                "type": "string",
                                "format": "uuid",
                                "description": "The client ID of the assigned identity.",
                                "readOnly": true
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "x-ms-identifiers": [
            "id"
          ]
        }
      }
    },
    "MessagingOptions": {
      "type": "object",
      "description": "The option associated with messaging flows.",
      "properties": {
        "billingTier": {
          "description": "Billing tier for this messaging flow",
          "type": "string",
          "enum": [
            "BlobTransport",
            "Standard",
            "Premium"
          ],
          "x-ms-enum": {
            "name": "FlowBillingTier",
            "modelAsString": true,
            "values": [
              {
                "name": "BlobTransport",
                "value": "BlobTransport",
                "description": "Billing tier for messaging processing that charges based on how much data is transferred."
              },
              {
                "name": "Standard",
                "value": "Standard",
                "description": "Billing tier for standard messaging processing that charges based on having the messaging resource allocated."
              },
              {
                "name": "Premium",
                "value": "Premium",
                "description": "Billing tier for premium messaging processing that charges based on having the messaging resource allocated."
              }
            ]
          }
        }
      }
    },
    "OperationStatusEnum": {
      "type": "string",
      "description": "Operation status for the last patch request for this connection.",
      "enum": [
        "Failed",
        "Succeeded"
      ],
      "x-ms-enum": {
        "name": "OperationStatusEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The last patch request for this connection completed with an error."
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "The last patch request for this connection completed."
          }
        ]
      },
      "readOnly": true
    },
    "OperationStatusProperties": {
      "type": "object",
      "description": "Operation status associated with the last patch request",
      "properties": {
        "status": {
          "description": "Operation status for the last patch request for this connection.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Failed",
            "Succeeded"
          ],
          "x-ms-enum": {
            "name": "OperationStatusEnum",
            "modelAsString": true,
            "values": [
              {
                "name": "Failed",
                "value": "Failed",
                "description": "The last patch request for this connection completed with an error."
              },
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "The last patch request for this connection completed."
              }
            ]
          }
        },
        "id": {
          "type": "string",
          "description": "Operation status ID of the last patch request for this connection.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Message for the operation for the last patch request for this connection.",
          "readOnly": true
        }
      }
    },
    "PendingConnection": {
      "type": "object",
      "description": "Pending connection object",
      "properties": {
        "subscriptionId": {
          "type": "string",
          "description": "Subscription ID of the pending connection.",
          "readOnly": true
        },
        "pipeline": {
          "type": "string",
          "description": "Pipeline to use to transfer data"
        },
        "direction": {
          "description": "Direction of data movement",
          "type": "string",
          "enum": [
            "Send",
            "Receive"
          ],
          "x-ms-enum": {
            "name": "Direction",
            "modelAsString": true,
            "values": [
              {
                "name": "Send",
                "value": "Send",
                "description": "The direction is on the sending side of a pipeline, connection, or flow."
              },
              {
                "name": "Receive",
                "value": "Receive",
                "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
              }
            ]
          }
        },
        "justification": {
          "type": "string",
          "description": "Justification for the connection request"
        },
        "status": {
          "description": "Status of the connection",
          "readOnly": true,
          "type": "string",
          "enum": [
            "InReview",
            "Approved",
            "Rejected",
            "Accepted"
          ],
          "x-ms-enum": {
            "name": "ConnectionStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "InReview",
                "value": "InReview",
                "description": "This connection has been created but is under review by the pipeline owner."
              },
              {
                "name": "Approved",
                "value": "Approved",
                "description": "This connection has been approved by the pipeline owner and is ready for use."
              },
              {
                "name": "Rejected",
                "value": "Rejected",
                "description": "This connection has been rejected by the pipeline owner and cannot be used."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Creation of the connection has been accepted."
              }
            ]
          }
        },
        "forceDisabledStatus": {
          "type": "array",
          "description": "Force disablement status of the current connection",
          "items": {
            "type": "string",
            "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
            "enum": [
              "ConnectionForceDisabled",
              "FlowTypeForceDisabled"
            ],
            "x-ms-enum": {
              "name": "ForceDisabledStatus",
              "modelAsString": true,
              "values": [
                {
                  "name": "ConnectionForceDisabled",
                  "value": "ConnectionForceDisabled",
                  "description": "Defines disablement of a Flow due to the parent connection being disabled."
                },
                {
                  "name": "FlowTypeForceDisabled",
                  "value": "FlowTypeForceDisabled",
                  "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                }
              ]
            }
          },
          "readOnly": true
        },
        "statusReason": {
          "type": "string",
          "description": "Reason for status",
          "readOnly": true
        },
        "linkStatus": {
          "description": "Link status of the current connection",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Linked",
            "Unlinked"
          ],
          "x-ms-enum": {
            "name": "LinkStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Linked",
                "value": "Linked",
                "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
              },
              {
                "name": "Unlinked",
                "value": "Unlinked",
                "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
              }
            ]
          }
        },
        "linkedConnectionId": {
          "type": "string",
          "description": "Resource ID of the linked connection",
          "readOnly": true
        },
        "flowTypes": {
          "type": "array",
          "description": "The flow types being requested for this connection. This FlowType property has reached end of life support starting version 2025-05-30-preview. Please create a FlowProfile resource instead.",
          "items": {
            "type": "string",
            "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
            "enum": [
              "Unknown",
              "Complex",
              "DevSecOps",
              "Messaging",
              "Mission",
              "MicrosoftInternal",
              "BasicFiles",
              "Data",
              "Standard",
              "StreamingVideo",
              "Opaque",
              "MissionOpaqueXML",
              "DiskImages",
              "API"
            ],
            "x-ms-enum": {
              "name": "FlowType",
              "modelAsString": true,
              "values": [
                {
                  "name": "Unknown",
                  "value": "Unknown",
                  "description": "This type of flow is not set."
                },
                {
                  "name": "Complex",
                  "value": "Complex",
                  "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                },
                {
                  "name": "DevSecOps",
                  "value": "DevSecOps",
                  "description": "This flow sends source code files and artifacts."
                },
                {
                  "name": "Messaging",
                  "value": "Messaging",
                  "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                },
                {
                  "name": "Mission",
                  "value": "Mission",
                  "description": "This flow sends standard data but is subject to strict cloud owner approval."
                },
                {
                  "name": "MicrosoftInternal",
                  "value": "MicrosoftInternal",
                  "description": "This flow is assigned to internal Microsoft use cases."
                },
                {
                  "name": "BasicFiles",
                  "value": "BasicFiles",
                  "description": "This flow sends blobs that can be used for multiple use cases."
                },
                {
                  "name": "Data",
                  "value": "Data",
                  "description": "This flow sends blobs that can be used for multiple use cases."
                },
                {
                  "name": "Standard",
                  "value": "Standard",
                  "description": "This flow sends blobs that can be used for multiple use cases."
                },
                {
                  "name": "StreamingVideo",
                  "value": "StreamingVideo",
                  "description": "This flow sends video streams."
                },
                {
                  "name": "Opaque",
                  "value": "Opaque",
                  "description": "This flow sends blobs but is subject to cloud owner approval."
                },
                {
                  "name": "MissionOpaqueXML",
                  "value": "MissionOpaqueXML",
                  "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                },
                {
                  "name": "DiskImages",
                  "value": "DiskImages",
                  "description": "This flow sends blobs that can be used for Virtual Machines."
                },
                {
                  "name": "API",
                  "value": "API",
                  "description": "This flow sends data via an Application Programmer Interface."
                }
              ]
            }
          }
        },
        "requirementId": {
          "type": "string",
          "description": "Requirement ID of the connection"
        },
        "remoteSubscriptionId": {
          "type": "string",
          "description": "Subscription ID to link cloud subscriptions together"
        },
        "approver": {
          "type": "string",
          "description": "Approver of this connection request",
          "readOnly": true
        },
        "pin": {
          "type": "string",
          "description": "PIN to link requests together"
        },
        "dateSubmitted": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp that this connection request was submitted at",
          "readOnly": true
        },
        "primaryContact": {
          "type": "string",
          "description": "The primary contact for this connection request"
        },
        "secondaryContacts": {
          "type": "array",
          "description": "The secondary contacts for this connection request",
          "items": {
            "type": "string"
          }
        },
        "provisioningState": {
          "description": "Provisioning state of the connection",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Accepted"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Resource has been accepted for creation."
              }
            ]
          }
        },
        "policies": {
          "type": "array",
          "description": "The policies for this connection. The policies property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
          "items": {
            "type": "string"
          }
        },
        "schemas": {
          "type": "array",
          "description": "The schemas for this connection. The schemas property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
          "items": {
            "type": "object",
            "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID associated with this schema"
              },
              "connectionId": {
                "type": "string",
                "description": "Connection ID associated with this schema"
              },
              "status": {
                "description": "Status of the schema",
                "type": "string",
                "enum": [
                  "New",
                  "Approved"
                ],
                "x-ms-enum": {
                  "name": "SchemaStatus",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "New",
                      "value": "New",
                      "description": "A schema that has not been approved and is awaiting review."
                    },
                    {
                      "name": "Approved",
                      "value": "Approved",
                      "description": "A schema that has been approved and is ready for use."
                    }
                  ]
                }
              },
              "name": {
                "type": "string",
                "description": "Name of the schema"
              },
              "content": {
                "type": "string",
                "description": "Content of the schema"
              },
              "direction": {
                "description": "The direction of the schema.",
                "type": "string",
                "enum": [
                  "Send",
                  "Receive"
                ],
                "x-ms-enum": {
                  "name": "Direction",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Send",
                      "value": "Send",
                      "description": "The direction is on the sending side of a pipeline, connection, or flow."
                    },
                    {
                      "name": "Receive",
                      "value": "Receive",
                      "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                    }
                  ]
                }
              },
              "schemaUri": {
                "type": "string",
                "format": "uri",
                "description": "Uri containing SAS token for the zipped schema"
              },
              "schemaType": {
                "description": "The Schema Type",
                "type": "string",
                "enum": [
                  "Xsd",
                  "Zip"
                ],
                "x-ms-enum": {
                  "name": "SchemaType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Xsd",
                      "value": "Xsd",
                      "description": "The schema represents a single XML schema definition file."
                    },
                    {
                      "name": "Zip",
                      "value": "Zip",
                      "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                    }
                  ]
                }
              }
            }
          }
        },
        "schemaUris": {
          "type": "array",
          "description": "The schema URIs for this connection. The schemaUris property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
          "items": {
            "type": "string",
            "format": "uri"
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true,
          "type": "string"
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      },
      "required": [
        "pipeline",
        "location"
      ]
    },
    "PendingConnectionListResult": {
      "type": "object",
      "description": "The custom response of a list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The items on this page",
          "items": {
            "type": "object",
            "description": "Pending connection object",
            "properties": {
              "subscriptionId": {
                "type": "string",
                "description": "Subscription ID of the pending connection.",
                "readOnly": true
              },
              "pipeline": {
                "type": "string",
                "description": "Pipeline to use to transfer data"
              },
              "direction": {
                "description": "Direction of data movement",
                "type": "string",
                "enum": [
                  "Send",
                  "Receive"
                ],
                "x-ms-enum": {
                  "name": "Direction",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Send",
                      "value": "Send",
                      "description": "The direction is on the sending side of a pipeline, connection, or flow."
                    },
                    {
                      "name": "Receive",
                      "value": "Receive",
                      "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                    }
                  ]
                }
              },
              "justification": {
                "type": "string",
                "description": "Justification for the connection request"
              },
              "status": {
                "description": "Status of the connection",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "InReview",
                  "Approved",
                  "Rejected",
                  "Accepted"
                ],
                "x-ms-enum": {
                  "name": "ConnectionStatus",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "InReview",
                      "value": "InReview",
                      "description": "This connection has been created but is under review by the pipeline owner."
                    },
                    {
                      "name": "Approved",
                      "value": "Approved",
                      "description": "This connection has been approved by the pipeline owner and is ready for use."
                    },
                    {
                      "name": "Rejected",
                      "value": "Rejected",
                      "description": "This connection has been rejected by the pipeline owner and cannot be used."
                    },
                    {
                      "name": "Accepted",
                      "value": "Accepted",
                      "description": "Creation of the connection has been accepted."
                    }
                  ]
                }
              },
              "forceDisabledStatus": {
                "type": "array",
                "description": "Force disablement status of the current connection",
                "items": {
                  "type": "string",
                  "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                  "enum": [
                    "ConnectionForceDisabled",
                    "FlowTypeForceDisabled"
                  ],
                  "x-ms-enum": {
                    "name": "ForceDisabledStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "ConnectionForceDisabled",
                        "value": "ConnectionForceDisabled",
                        "description": "Defines disablement of a Flow due to the parent connection being disabled."
                      },
                      {
                        "name": "FlowTypeForceDisabled",
                        "value": "FlowTypeForceDisabled",
                        "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                      }
                    ]
                  }
                },
                "readOnly": true
              },
              "statusReason": {
                "type": "string",
                "description": "Reason for status",
                "readOnly": true
              },
              "linkStatus": {
                "description": "Link status of the current connection",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "Linked",
                  "Unlinked"
                ],
                "x-ms-enum": {
                  "name": "LinkStatus",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Linked",
                      "value": "Linked",
                      "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                    },
                    {
                      "name": "Unlinked",
                      "value": "Unlinked",
                      "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                    }
                  ]
                }
              },
              "linkedConnectionId": {
                "type": "string",
                "description": "Resource ID of the linked connection",
                "readOnly": true
              },
              "flowTypes": {
                "type": "array",
                "description": "The flow types being requested for this connection. This FlowType property has reached end of life support starting version 2025-05-30-preview. Please create a FlowProfile resource instead.",
                "items": {
                  "type": "string",
                  "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                  "enum": [
                    "Unknown",
                    "Complex",
                    "DevSecOps",
                    "Messaging",
                    "Mission",
                    "MicrosoftInternal",
                    "BasicFiles",
                    "Data",
                    "Standard",
                    "StreamingVideo",
                    "Opaque",
                    "MissionOpaqueXML",
                    "DiskImages",
                    "API"
                  ],
                  "x-ms-enum": {
                    "name": "FlowType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Unknown",
                        "value": "Unknown",
                        "description": "This type of flow is not set."
                      },
                      {
                        "name": "Complex",
                        "value": "Complex",
                        "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                      },
                      {
                        "name": "DevSecOps",
                        "value": "DevSecOps",
                        "description": "This flow sends source code files and artifacts."
                      },
                      {
                        "name": "Messaging",
                        "value": "Messaging",
                        "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                      },
                      {
                        "name": "Mission",
                        "value": "Mission",
                        "description": "This flow sends standard data but is subject to strict cloud owner approval."
                      },
                      {
                        "name": "MicrosoftInternal",
                        "value": "MicrosoftInternal",
                        "description": "This flow is assigned to internal Microsoft use cases."
                      },
                      {
                        "name": "BasicFiles",
                        "value": "BasicFiles",
                        "description": "This flow sends blobs that can be used for multiple use cases."
                      },
                      {
                        "name": "Data",
                        "value": "Data",
                        "description": "This flow sends blobs that can be used for multiple use cases."
                      },
                      {
                        "name": "Standard",
                        "value": "Standard",
                        "description": "This flow sends blobs that can be used for multiple use cases."
                      },
                      {
                        "name": "StreamingVideo",
                        "value": "StreamingVideo",
                        "description": "This flow sends video streams."
                      },
                      {
                        "name": "Opaque",
                        "value": "Opaque",
                        "description": "This flow sends blobs but is subject to cloud owner approval."
                      },
                      {
                        "name": "MissionOpaqueXML",
                        "value": "MissionOpaqueXML",
                        "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                      },
                      {
                        "name": "DiskImages",
                        "value": "DiskImages",
                        "description": "This flow sends blobs that can be used for Virtual Machines."
                      },
                      {
                        "name": "API",
                        "value": "API",
                        "description": "This flow sends data via an Application Programmer Interface."
                      }
                    ]
                  }
                }
              },
              "requirementId": {
                "type": "string",
                "description": "Requirement ID of the connection"
              },
              "remoteSubscriptionId": {
                "type": "string",
                "description": "Subscription ID to link cloud subscriptions together"
              },
              "approver": {
                "type": "string",
                "description": "Approver of this connection request",
                "readOnly": true
              },
              "pin": {
                "type": "string",
                "description": "PIN to link requests together"
              },
              "dateSubmitted": {
                "type": "string",
                "format": "date-time",
                "description": "The timestamp that this connection request was submitted at",
                "readOnly": true
              },
              "primaryContact": {
                "type": "string",
                "description": "The primary contact for this connection request"
              },
              "secondaryContacts": {
                "type": "array",
                "description": "The secondary contacts for this connection request",
                "items": {
                  "type": "string"
                }
              },
              "provisioningState": {
                "description": "Provisioning state of the connection",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "Succeeded",
                  "Failed",
                  "Canceled",
                  "Accepted"
                ],
                "x-ms-enum": {
                  "name": "ProvisioningState",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Succeeded",
                      "value": "Succeeded",
                      "description": "Resource has been created."
                    },
                    {
                      "name": "Failed",
                      "value": "Failed",
                      "description": "Resource creation failed."
                    },
                    {
                      "name": "Canceled",
                      "value": "Canceled",
                      "description": "Resource creation was canceled."
                    },
                    {
                      "name": "Accepted",
                      "value": "Accepted",
                      "description": "Resource has been accepted for creation."
                    }
                  ]
                }
              },
              "policies": {
                "type": "array",
                "description": "The policies for this connection. The policies property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                "items": {
                  "type": "string"
                }
              },
              "schemas": {
                "type": "array",
                "description": "The schemas for this connection. The schemas property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                "items": {
                  "type": "object",
                  "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID associated with this schema"
                    },
                    "connectionId": {
                      "type": "string",
                      "description": "Connection ID associated with this schema"
                    },
                    "status": {
                      "description": "Status of the schema",
                      "type": "string",
                      "enum": [
                        "New",
                        "Approved"
                      ],
                      "x-ms-enum": {
                        "name": "SchemaStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "New",
                            "value": "New",
                            "description": "A schema that has not been approved and is awaiting review."
                          },
                          {
                            "name": "Approved",
                            "value": "Approved",
                            "description": "A schema that has been approved and is ready for use."
                          }
                        ]
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the schema"
                    },
                    "content": {
                      "type": "string",
                      "description": "Content of the schema"
                    },
                    "direction": {
                      "description": "The direction of the schema.",
                      "type": "string",
                      "enum": [
                        "Send",
                        "Receive"
                      ],
                      "x-ms-enum": {
                        "name": "Direction",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Send",
                            "value": "Send",
                            "description": "The direction is on the sending side of a pipeline, connection, or flow."
                          },
                          {
                            "name": "Receive",
                            "value": "Receive",
                            "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                          }
                        ]
                      }
                    },
                    "schemaUri": {
                      "type": "string",
                      "format": "uri",
                      "description": "Uri containing SAS token for the zipped schema"
                    },
                    "schemaType": {
                      "description": "The Schema Type",
                      "type": "string",
                      "enum": [
                        "Xsd",
                        "Zip"
                      ],
                      "x-ms-enum": {
                        "name": "SchemaType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Xsd",
                            "value": "Xsd",
                            "description": "The schema represents a single XML schema definition file."
                          },
                          {
                            "name": "Zip",
                            "value": "Zip",
                            "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "schemaUris": {
                "type": "array",
                "description": "The schema URIs for this connection. The schemaUris property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                "items": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true,
                "type": "string"
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            },
            "required": [
              "pipeline",
              "location"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PendingFlow": {
      "type": "object",
      "description": "Pending flow object",
      "properties": {
        "subscriptionId": {
          "type": "string",
          "description": "Subscription ID of the pending flow.",
          "readOnly": true
        },
        "connectionId": {
          "type": "string",
          "description": "Connection ID of the pending flow.",
          "readOnly": true
        },
        "connection": {
          "description": "The connection associated with this flow",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the connection"
            },
            "id": {
              "type": "string",
              "description": "Id of the connection"
            },
            "location": {
              "type": "string",
              "description": "Location of the connection",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "subscriptionName": {
              "type": "string",
              "description": "Name of the subscription with the connection"
            }
          },
          "required": [
            "id"
          ]
        },
        "flowId": {
          "type": "string",
          "description": "Dataflow GUID associated with this flow",
          "readOnly": true
        },
        "keyVaultUri": {
          "type": "string",
          "description": "URI to a Key Vault Secret containing a SAS token."
        },
        "linkStatus": {
          "description": "Link status of the current flow",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Linked",
            "Unlinked"
          ],
          "x-ms-enum": {
            "name": "LinkStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Linked",
                "value": "Linked",
                "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
              },
              {
                "name": "Unlinked",
                "value": "Unlinked",
                "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
              }
            ]
          }
        },
        "linkedFlowId": {
          "type": "string",
          "description": "Resource ID of the linked flow",
          "readOnly": true
        },
        "status": {
          "description": "Status of the current flow",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "FlowStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "The flow is currently enabled and able to send or receive data."
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "The flow is currently disabled and cannot send or receive data."
              }
            ]
          }
        },
        "forceDisabledStatus": {
          "type": "array",
          "description": "Force disablement status of the current flow",
          "items": {
            "type": "string",
            "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
            "enum": [
              "ConnectionForceDisabled",
              "FlowTypeForceDisabled"
            ],
            "x-ms-enum": {
              "name": "ForceDisabledStatus",
              "modelAsString": true,
              "values": [
                {
                  "name": "ConnectionForceDisabled",
                  "value": "ConnectionForceDisabled",
                  "description": "Defines disablement of a Flow due to the parent connection being disabled."
                },
                {
                  "name": "FlowTypeForceDisabled",
                  "value": "FlowTypeForceDisabled",
                  "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                }
              ]
            }
          },
          "readOnly": true
        },
        "storageAccountName": {
          "type": "string",
          "description": "Storage Account"
        },
        "storageAccountId": {
          "type": "string",
          "format": "arm-id",
          "description": "Storage Account ID",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Storage/storageAccounts"
              }
            ]
          }
        },
        "storageContainerName": {
          "type": "string",
          "description": "Storage Container Name"
        },
        "storageTableName": {
          "type": "string",
          "description": "Storage Table Name"
        },
        "serviceBusQueueId": {
          "type": "string",
          "format": "arm-id",
          "description": "Service Bus Queue ID",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Storage/namespaces/queues"
              }
            ]
          }
        },
        "flowType": {
          "type": "string",
          "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
          "enum": [
            "Unknown",
            "Complex",
            "DevSecOps",
            "Messaging",
            "Mission",
            "MicrosoftInternal",
            "BasicFiles",
            "Data",
            "Standard",
            "StreamingVideo",
            "Opaque",
            "MissionOpaqueXML",
            "DiskImages",
            "API"
          ],
          "x-ms-enum": {
            "name": "FlowType",
            "modelAsString": true,
            "values": [
              {
                "name": "Unknown",
                "value": "Unknown",
                "description": "This type of flow is not set."
              },
              {
                "name": "Complex",
                "value": "Complex",
                "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
              },
              {
                "name": "DevSecOps",
                "value": "DevSecOps",
                "description": "This flow sends source code files and artifacts."
              },
              {
                "name": "Messaging",
                "value": "Messaging",
                "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
              },
              {
                "name": "Mission",
                "value": "Mission",
                "description": "This flow sends standard data but is subject to strict cloud owner approval."
              },
              {
                "name": "MicrosoftInternal",
                "value": "MicrosoftInternal",
                "description": "This flow is assigned to internal Microsoft use cases."
              },
              {
                "name": "BasicFiles",
                "value": "BasicFiles",
                "description": "This flow sends blobs that can be used for multiple use cases."
              },
              {
                "name": "Data",
                "value": "Data",
                "description": "This flow sends blobs that can be used for multiple use cases."
              },
              {
                "name": "Standard",
                "value": "Standard",
                "description": "This flow sends blobs that can be used for multiple use cases."
              },
              {
                "name": "StreamingVideo",
                "value": "StreamingVideo",
                "description": "This flow sends video streams."
              },
              {
                "name": "Opaque",
                "value": "Opaque",
                "description": "This flow sends blobs but is subject to cloud owner approval."
              },
              {
                "name": "MissionOpaqueXML",
                "value": "MissionOpaqueXML",
                "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
              },
              {
                "name": "DiskImages",
                "value": "DiskImages",
                "description": "This flow sends blobs that can be used for Virtual Machines."
              },
              {
                "name": "API",
                "value": "API",
                "description": "This flow sends data via an Application Programmer Interface."
              }
            ]
          }
        },
        "dataType": {
          "description": "Type of data to transfer via the flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
          "type": "string",
          "enum": [
            "Blob",
            "Table"
          ],
          "x-ms-enum": {
            "name": "DataType",
            "modelAsString": true,
            "values": [
              {
                "name": "Blob",
                "value": "Blob",
                "description": "The flow uses Azure Storage blobs to send or receive data."
              },
              {
                "name": "Table",
                "value": "Table",
                "description": "The flow uses Azure Storage tables to send or receive data."
              }
            ]
          }
        },
        "provisioningState": {
          "description": "Provisioning state of the flow",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Accepted"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Resource has been accepted for creation."
              }
            ]
          }
        },
        "policies": {
          "type": "array",
          "description": "The policies for this flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
          "items": {
            "type": "string"
          }
        },
        "schema": {
          "type": "object",
          "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
          "properties": {
            "id": {
              "type": "string",
              "description": "ID associated with this schema"
            },
            "connectionId": {
              "type": "string",
              "description": "Connection ID associated with this schema"
            },
            "status": {
              "description": "Status of the schema",
              "type": "string",
              "enum": [
                "New",
                "Approved"
              ],
              "x-ms-enum": {
                "name": "SchemaStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "New",
                    "value": "New",
                    "description": "A schema that has not been approved and is awaiting review."
                  },
                  {
                    "name": "Approved",
                    "value": "Approved",
                    "description": "A schema that has been approved and is ready for use."
                  }
                ]
              }
            },
            "name": {
              "type": "string",
              "description": "Name of the schema"
            },
            "content": {
              "type": "string",
              "description": "Content of the schema"
            },
            "direction": {
              "description": "The direction of the schema.",
              "type": "string",
              "enum": [
                "Send",
                "Receive"
              ],
              "x-ms-enum": {
                "name": "Direction",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Send",
                    "value": "Send",
                    "description": "The direction is on the sending side of a pipeline, connection, or flow."
                  },
                  {
                    "name": "Receive",
                    "value": "Receive",
                    "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                  }
                ]
              }
            },
            "schemaUri": {
              "type": "string",
              "format": "uri",
              "description": "Uri containing SAS token for the zipped schema"
            },
            "schemaType": {
              "description": "The Schema Type",
              "type": "string",
              "enum": [
                "Xsd",
                "Zip"
              ],
              "x-ms-enum": {
                "name": "SchemaType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Xsd",
                    "value": "Xsd",
                    "description": "The schema represents a single XML schema definition file."
                  },
                  {
                    "name": "Zip",
                    "value": "Zip",
                    "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                  }
                ]
              }
            }
          }
        },
        "messagingOptions": {
          "description": "The messaging options for this flow",
          "type": "object",
          "properties": {
            "billingTier": {
              "description": "Billing tier for this messaging flow",
              "type": "string",
              "enum": [
                "BlobTransport",
                "Standard",
                "Premium"
              ],
              "x-ms-enum": {
                "name": "FlowBillingTier",
                "modelAsString": true,
                "values": [
                  {
                    "name": "BlobTransport",
                    "value": "BlobTransport",
                    "description": "Billing tier for messaging processing that charges based on how much data is transferred."
                  },
                  {
                    "name": "Standard",
                    "value": "Standard",
                    "description": "Billing tier for standard messaging processing that charges based on having the messaging resource allocated."
                  },
                  {
                    "name": "Premium",
                    "value": "Premium",
                    "description": "Billing tier for premium messaging processing that charges based on having the messaging resource allocated."
                  }
                ]
              }
            }
          }
        },
        "apiFlowOptions": {
          "description": "The API Flow configuration options for Azure Data Transfer API Flow type.",
          "type": "object",
          "properties": {
            "remoteEndpoint": {
              "type": "string",
              "description": "Remote host to which communication needs to be made. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the remoteEndpointSettings.endpoint property instead."
            },
            "cname": {
              "type": "string",
              "description": "Unique CNAME to represent the Azure Data Transfer API Flow instance"
            },
            "apiMode": {
              "description": "Remote Calling Mode in the Azure Data Transfer API Flow, which describes how the API Flow will be invoked",
              "type": "string",
              "enum": [
                "SDK",
                "Endpoint"
              ],
              "x-ms-enum": {
                "name": "ApiMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "SDK",
                    "value": "SDK",
                    "description": "The API flow will forward calls to a custom Software Development Kit implementation."
                  },
                  {
                    "name": "Endpoint",
                    "value": "Endpoint",
                    "description": "The API flow will forward calls to a specified endpoint."
                  }
                ]
              }
            },
            "identityTranslation": {
              "description": "Determines which identity to use for extracting the user token for Azure Data Transfer API Flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead.",
              "type": "string",
              "enum": [
                "UserIdentity",
                "ServiceIdentity"
              ],
              "x-ms-enum": {
                "name": "IdentityTranslation",
                "modelAsString": true,
                "values": [
                  {
                    "name": "UserIdentity",
                    "value": "UserIdentity",
                    "description": "The API flow will make use of the user identity that called this API flow, and pass that token through the boundary."
                  },
                  {
                    "name": "ServiceIdentity",
                    "value": "ServiceIdentity",
                    "description": "The API flow will make use of the Azure Data Transfer Flow managed identity on the other side of the boundary."
                  }
                ]
              }
            },
            "senderClientId": {
              "type": "string",
              "description": "Sender's app user assigned Manage Identity client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
            },
            "remoteCallingModeClientId": {
              "type": "string",
              "description": "Remote stub app registration Client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
            },
            "audienceOverride": {
              "type": "string",
              "description": "Optional field to override the audience of the remote endpoint. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
            }
          }
        },
        "customerManagedKeyVaultUri": {
          "type": "string",
          "format": "uri",
          "description": "The URI to the customer managed key for this flow"
        },
        "streamId": {
          "type": "string",
          "description": "The flow stream identifier"
        },
        "streamProtocol": {
          "description": "The protocol of the stream",
          "type": "string",
          "enum": [
            "UDP",
            "SRT",
            "RTP"
          ],
          "x-ms-enum": {
            "name": "StreamProtocol",
            "modelAsString": true,
            "values": [
              {
                "name": "UDP",
                "value": "UDP",
                "description": "This Flow is using User Datagram Protocol for the video stream."
              },
              {
                "name": "SRT",
                "value": "SRT",
                "description": "This Flow is using Secure Reliable Transfer for the video stream."
              },
              {
                "name": "RTP",
                "value": "RTP",
                "description": "This Flow is using Real-time Transport Protocol for the video stream."
              }
            ]
          }
        },
        "streamLatency": {
          "type": "integer",
          "format": "int64",
          "description": "The latency of the stream in milliseconds"
        },
        "passphrase": {
          "type": "string",
          "description": "The passphrase used for SRT streams"
        },
        "sourceAddresses": {
          "type": "object",
          "description": "The source IP address and CIDR ranges of the stream",
          "properties": {
            "sourceAddresses": {
              "type": "array",
              "description": "A source IP address or CIDR range",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "destinationEndpoints": {
          "type": "array",
          "description": "The destination endpoints of the stream",
          "items": {
            "type": "string"
          }
        },
        "destinationEndpointPorts": {
          "type": "array",
          "description": "The destination endpoint ports of the stream",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "eventHubId": {
          "type": "string",
          "format": "arm-id",
          "description": "Event Hub ID",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.EventHub/namespaces/eventhubs"
              }
            ]
          }
        },
        "consumerGroup": {
          "type": "string",
          "description": "Event Hub Consumer Group"
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true,
          "type": "string"
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      },
      "required": [
        "location"
      ]
    },
    "PendingFlowListResult": {
      "type": "object",
      "description": "The custom response of a list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The items on this page",
          "items": {
            "type": "object",
            "description": "Pending flow object",
            "properties": {
              "subscriptionId": {
                "type": "string",
                "description": "Subscription ID of the pending flow.",
                "readOnly": true
              },
              "connectionId": {
                "type": "string",
                "description": "Connection ID of the pending flow.",
                "readOnly": true
              },
              "connection": {
                "description": "The connection associated with this flow",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the connection"
                  },
                  "id": {
                    "type": "string",
                    "description": "Id of the connection"
                  },
                  "location": {
                    "type": "string",
                    "description": "Location of the connection",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "subscriptionName": {
                    "type": "string",
                    "description": "Name of the subscription with the connection"
                  }
                },
                "required": [
                  "id"
                ]
              },
              "flowId": {
                "type": "string",
                "description": "Dataflow GUID associated with this flow",
                "readOnly": true
              },
              "keyVaultUri": {
                "type": "string",
                "description": "URI to a Key Vault Secret containing a SAS token."
              },
              "linkStatus": {
                "description": "Link status of the current flow",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "Linked",
                  "Unlinked"
                ],
                "x-ms-enum": {
                  "name": "LinkStatus",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Linked",
                      "value": "Linked",
                      "description": "The pipeline, connection, or flow is currently linked with another corresponding pipeline, connection, or flow, and can be used."
                    },
                    {
                      "name": "Unlinked",
                      "value": "Unlinked",
                      "description": "The pipeline, connection, or flow is not linked with another corresponding pipeline, connection, or flow, and cannot be used."
                    }
                  ]
                }
              },
              "linkedFlowId": {
                "type": "string",
                "description": "Resource ID of the linked flow",
                "readOnly": true
              },
              "status": {
                "description": "Status of the current flow",
                "type": "string",
                "enum": [
                  "Enabled",
                  "Disabled"
                ],
                "x-ms-enum": {
                  "name": "FlowStatus",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Enabled",
                      "value": "Enabled",
                      "description": "The flow is currently enabled and able to send or receive data."
                    },
                    {
                      "name": "Disabled",
                      "value": "Disabled",
                      "description": "The flow is currently disabled and cannot send or receive data."
                    }
                  ]
                }
              },
              "forceDisabledStatus": {
                "type": "array",
                "description": "Force disablement status of the current flow",
                "items": {
                  "type": "string",
                  "description": "Defines different disablement statuses and the circumstances in why they were disabled.",
                  "enum": [
                    "ConnectionForceDisabled",
                    "FlowTypeForceDisabled"
                  ],
                  "x-ms-enum": {
                    "name": "ForceDisabledStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "ConnectionForceDisabled",
                        "value": "ConnectionForceDisabled",
                        "description": "Defines disablement of a Flow due to the parent connection being disabled."
                      },
                      {
                        "name": "FlowTypeForceDisabled",
                        "value": "FlowTypeForceDisabled",
                        "description": "Defines disablement of a Flow due to the linked flow type being disabled."
                      }
                    ]
                  }
                },
                "readOnly": true
              },
              "storageAccountName": {
                "type": "string",
                "description": "Storage Account"
              },
              "storageAccountId": {
                "type": "string",
                "format": "arm-id",
                "description": "Storage Account ID",
                "x-ms-arm-id-details": {
                  "allowedResources": [
                    {
                      "type": "Microsoft.Storage/storageAccounts"
                    }
                  ]
                }
              },
              "storageContainerName": {
                "type": "string",
                "description": "Storage Container Name"
              },
              "storageTableName": {
                "type": "string",
                "description": "Storage Table Name"
              },
              "serviceBusQueueId": {
                "type": "string",
                "format": "arm-id",
                "description": "Service Bus Queue ID",
                "x-ms-arm-id-details": {
                  "allowedResources": [
                    {
                      "type": "Microsoft.Storage/namespaces/queues"
                    }
                  ]
                }
              },
              "flowType": {
                "type": "string",
                "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                "enum": [
                  "Unknown",
                  "Complex",
                  "DevSecOps",
                  "Messaging",
                  "Mission",
                  "MicrosoftInternal",
                  "BasicFiles",
                  "Data",
                  "Standard",
                  "StreamingVideo",
                  "Opaque",
                  "MissionOpaqueXML",
                  "DiskImages",
                  "API"
                ],
                "x-ms-enum": {
                  "name": "FlowType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Unknown",
                      "value": "Unknown",
                      "description": "This type of flow is not set."
                    },
                    {
                      "name": "Complex",
                      "value": "Complex",
                      "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                    },
                    {
                      "name": "DevSecOps",
                      "value": "DevSecOps",
                      "description": "This flow sends source code files and artifacts."
                    },
                    {
                      "name": "Messaging",
                      "value": "Messaging",
                      "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                    },
                    {
                      "name": "Mission",
                      "value": "Mission",
                      "description": "This flow sends standard data but is subject to strict cloud owner approval."
                    },
                    {
                      "name": "MicrosoftInternal",
                      "value": "MicrosoftInternal",
                      "description": "This flow is assigned to internal Microsoft use cases."
                    },
                    {
                      "name": "BasicFiles",
                      "value": "BasicFiles",
                      "description": "This flow sends blobs that can be used for multiple use cases."
                    },
                    {
                      "name": "Data",
                      "value": "Data",
                      "description": "This flow sends blobs that can be used for multiple use cases."
                    },
                    {
                      "name": "Standard",
                      "value": "Standard",
                      "description": "This flow sends blobs that can be used for multiple use cases."
                    },
                    {
                      "name": "StreamingVideo",
                      "value": "StreamingVideo",
                      "description": "This flow sends video streams."
                    },
                    {
                      "name": "Opaque",
                      "value": "Opaque",
                      "description": "This flow sends blobs but is subject to cloud owner approval."
                    },
                    {
                      "name": "MissionOpaqueXML",
                      "value": "MissionOpaqueXML",
                      "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                    },
                    {
                      "name": "DiskImages",
                      "value": "DiskImages",
                      "description": "This flow sends blobs that can be used for Virtual Machines."
                    },
                    {
                      "name": "API",
                      "value": "API",
                      "description": "This flow sends data via an Application Programmer Interface."
                    }
                  ]
                }
              },
              "dataType": {
                "description": "Type of data to transfer via the flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                "type": "string",
                "enum": [
                  "Blob",
                  "Table"
                ],
                "x-ms-enum": {
                  "name": "DataType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Blob",
                      "value": "Blob",
                      "description": "The flow uses Azure Storage blobs to send or receive data."
                    },
                    {
                      "name": "Table",
                      "value": "Table",
                      "description": "The flow uses Azure Storage tables to send or receive data."
                    }
                  ]
                }
              },
              "provisioningState": {
                "description": "Provisioning state of the flow",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "Succeeded",
                  "Failed",
                  "Canceled",
                  "Accepted"
                ],
                "x-ms-enum": {
                  "name": "ProvisioningState",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Succeeded",
                      "value": "Succeeded",
                      "description": "Resource has been created."
                    },
                    {
                      "name": "Failed",
                      "value": "Failed",
                      "description": "Resource creation failed."
                    },
                    {
                      "name": "Canceled",
                      "value": "Canceled",
                      "description": "Resource creation was canceled."
                    },
                    {
                      "name": "Accepted",
                      "value": "Accepted",
                      "description": "Resource has been accepted for creation."
                    }
                  ]
                }
              },
              "policies": {
                "type": "array",
                "description": "The policies for this flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                "items": {
                  "type": "string"
                }
              },
              "schema": {
                "type": "object",
                "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "ID associated with this schema"
                  },
                  "connectionId": {
                    "type": "string",
                    "description": "Connection ID associated with this schema"
                  },
                  "status": {
                    "description": "Status of the schema",
                    "type": "string",
                    "enum": [
                      "New",
                      "Approved"
                    ],
                    "x-ms-enum": {
                      "name": "SchemaStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "New",
                          "value": "New",
                          "description": "A schema that has not been approved and is awaiting review."
                        },
                        {
                          "name": "Approved",
                          "value": "Approved",
                          "description": "A schema that has been approved and is ready for use."
                        }
                      ]
                    }
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the schema"
                  },
                  "content": {
                    "type": "string",
                    "description": "Content of the schema"
                  },
                  "direction": {
                    "description": "The direction of the schema.",
                    "type": "string",
                    "enum": [
                      "Send",
                      "Receive"
                    ],
                    "x-ms-enum": {
                      "name": "Direction",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Send",
                          "value": "Send",
                          "description": "The direction is on the sending side of a pipeline, connection, or flow."
                        },
                        {
                          "name": "Receive",
                          "value": "Receive",
                          "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                        }
                      ]
                    }
                  },
                  "schemaUri": {
                    "type": "string",
                    "format": "uri",
                    "description": "Uri containing SAS token for the zipped schema"
                  },
                  "schemaType": {
                    "description": "The Schema Type",
                    "type": "string",
                    "enum": [
                      "Xsd",
                      "Zip"
                    ],
                    "x-ms-enum": {
                      "name": "SchemaType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Xsd",
                          "value": "Xsd",
                          "description": "The schema represents a single XML schema definition file."
                        },
                        {
                          "name": "Zip",
                          "value": "Zip",
                          "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                        }
                      ]
                    }
                  }
                }
              },
              "messagingOptions": {
                "description": "The messaging options for this flow",
                "type": "object",
                "properties": {
                  "billingTier": {
                    "description": "Billing tier for this messaging flow",
                    "type": "string",
                    "enum": [
                      "BlobTransport",
                      "Standard",
                      "Premium"
                    ],
                    "x-ms-enum": {
                      "name": "FlowBillingTier",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "BlobTransport",
                          "value": "BlobTransport",
                          "description": "Billing tier for messaging processing that charges based on how much data is transferred."
                        },
                        {
                          "name": "Standard",
                          "value": "Standard",
                          "description": "Billing tier for standard messaging processing that charges based on having the messaging resource allocated."
                        },
                        {
                          "name": "Premium",
                          "value": "Premium",
                          "description": "Billing tier for premium messaging processing that charges based on having the messaging resource allocated."
                        }
                      ]
                    }
                  }
                }
              },
              "apiFlowOptions": {
                "description": "The API Flow configuration options for Azure Data Transfer API Flow type.",
                "type": "object",
                "properties": {
                  "remoteEndpoint": {
                    "type": "string",
                    "description": "Remote host to which communication needs to be made. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the remoteEndpointSettings.endpoint property instead."
                  },
                  "cname": {
                    "type": "string",
                    "description": "Unique CNAME to represent the Azure Data Transfer API Flow instance"
                  },
                  "apiMode": {
                    "description": "Remote Calling Mode in the Azure Data Transfer API Flow, which describes how the API Flow will be invoked",
                    "type": "string",
                    "enum": [
                      "SDK",
                      "Endpoint"
                    ],
                    "x-ms-enum": {
                      "name": "ApiMode",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "SDK",
                          "value": "SDK",
                          "description": "The API flow will forward calls to a custom Software Development Kit implementation."
                        },
                        {
                          "name": "Endpoint",
                          "value": "Endpoint",
                          "description": "The API flow will forward calls to a specified endpoint."
                        }
                      ]
                    }
                  },
                  "identityTranslation": {
                    "description": "Determines which identity to use for extracting the user token for Azure Data Transfer API Flow. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead.",
                    "type": "string",
                    "enum": [
                      "UserIdentity",
                      "ServiceIdentity"
                    ],
                    "x-ms-enum": {
                      "name": "IdentityTranslation",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "UserIdentity",
                          "value": "UserIdentity",
                          "description": "The API flow will make use of the user identity that called this API flow, and pass that token through the boundary."
                        },
                        {
                          "name": "ServiceIdentity",
                          "value": "ServiceIdentity",
                          "description": "The API flow will make use of the Azure Data Transfer Flow managed identity on the other side of the boundary."
                        }
                      ]
                    }
                  },
                  "senderClientId": {
                    "type": "string",
                    "description": "Sender's app user assigned Manage Identity client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                  },
                  "remoteCallingModeClientId": {
                    "type": "string",
                    "description": "Remote stub app registration Client ID. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                  },
                  "audienceOverride": {
                    "type": "string",
                    "description": "Optional field to override the audience of the remote endpoint. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the authentication property instead."
                  }
                }
              },
              "customerManagedKeyVaultUri": {
                "type": "string",
                "format": "uri",
                "description": "The URI to the customer managed key for this flow"
              },
              "streamId": {
                "type": "string",
                "description": "The flow stream identifier"
              },
              "streamProtocol": {
                "description": "The protocol of the stream",
                "type": "string",
                "enum": [
                  "UDP",
                  "SRT",
                  "RTP"
                ],
                "x-ms-enum": {
                  "name": "StreamProtocol",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "UDP",
                      "value": "UDP",
                      "description": "This Flow is using User Datagram Protocol for the video stream."
                    },
                    {
                      "name": "SRT",
                      "value": "SRT",
                      "description": "This Flow is using Secure Reliable Transfer for the video stream."
                    },
                    {
                      "name": "RTP",
                      "value": "RTP",
                      "description": "This Flow is using Real-time Transport Protocol for the video stream."
                    }
                  ]
                }
              },
              "streamLatency": {
                "type": "integer",
                "format": "int64",
                "description": "The latency of the stream in milliseconds"
              },
              "passphrase": {
                "type": "string",
                "description": "The passphrase used for SRT streams"
              },
              "sourceAddresses": {
                "type": "object",
                "description": "The source IP address and CIDR ranges of the stream",
                "properties": {
                  "sourceAddresses": {
                    "type": "array",
                    "description": "A source IP address or CIDR range",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "destinationEndpoints": {
                "type": "array",
                "description": "The destination endpoints of the stream",
                "items": {
                  "type": "string"
                }
              },
              "destinationEndpointPorts": {
                "type": "array",
                "description": "The destination endpoint ports of the stream",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "eventHubId": {
                "type": "string",
                "format": "arm-id",
                "description": "Event Hub ID",
                "x-ms-arm-id-details": {
                  "allowedResources": [
                    {
                      "type": "Microsoft.EventHub/namespaces/eventhubs"
                    }
                  ]
                }
              },
              "consumerGroup": {
                "type": "string",
                "description": "Event Hub Consumer Group"
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true,
                "type": "string"
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            },
            "required": [
              "location"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "Pipeline": {
      "type": "object",
      "description": "The pipeline resource definition. A Pipeline defines the scope and identity under which data replication scenarios are managed.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "The set of configurable properties for the Pipeline resource.",
          "type": "object",
          "properties": {
            "remoteCloud": {
              "type": "string",
              "description": "Remote cloud of the data to be transferred or received"
            },
            "displayName": {
              "type": "string",
              "description": "Display name of this pipeline"
            },
            "connections": {
              "type": "array",
              "description": "Connections associated with pipeline",
              "items": {
                "type": "object",
                "description": "The ReadPipelineconnection.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Connection id inside pipeline"
                  },
                  "name": {
                    "type": "string",
                    "description": "Connection name inside pipeline"
                  },
                  "type": {
                    "type": "string",
                    "description": "Connection type inside pipeline"
                  },
                  "location": {
                    "type": "string",
                    "description": "Connection location inside pipeline"
                  },
                  "etag": {
                    "type": "string",
                    "description": "Connection etag inside pipeline"
                  },
                  "systemData": {
                    "description": "Metadata pertaining to creation and last modification of the resource.",
                    "type": "object",
                    "properties": {
                      "createdBy": {
                        "type": "string",
                        "description": "The identity that created the resource."
                      },
                      "createdByType": {
                        "type": "string",
                        "description": "The type of identity that created the resource.",
                        "enum": [
                          "User",
                          "Application",
                          "ManagedIdentity",
                          "Key"
                        ],
                        "x-ms-enum": {
                          "name": "createdByType",
                          "modelAsString": true
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of resource creation (UTC)."
                      },
                      "lastModifiedBy": {
                        "type": "string",
                        "description": "The identity that last modified the resource."
                      },
                      "lastModifiedByType": {
                        "type": "string",
                        "description": "The type of identity that last modified the resource.",
                        "enum": [
                          "User",
                          "Application",
                          "ManagedIdentity",
                          "Key"
                        ],
                        "x-ms-enum": {
                          "name": "createdByType",
                          "modelAsString": true
                        }
                      },
                      "lastModifiedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of resource last modification (UTC)"
                      }
                    },
                    "readOnly": true
                  },
                  "properties": {
                    "description": "Connection properties inside pipeline",
                    "type": "object",
                    "properties": {
                      "internalMetadata": {
                        "description": "Internal metadata of the connection inside pipeline.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "operationStatus": {
                            "description": "Operation status associated with the last patch request",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "status": {
                                "description": "Operation status for the last patch request for this connection.",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "Failed",
                                  "Succeeded"
                                ],
                                "x-ms-enum": {
                                  "name": "OperationStatusEnum",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Failed",
                                      "value": "Failed",
                                      "description": "The last patch request for this connection completed with an error."
                                    },
                                    {
                                      "name": "Succeeded",
                                      "value": "Succeeded",
                                      "description": "The last patch request for this connection completed."
                                    }
                                  ]
                                }
                              },
                              "id": {
                                "type": "string",
                                "description": "Operation status ID of the last patch request for this connection.",
                                "readOnly": true
                              },
                              "message": {
                                "type": "string",
                                "description": "Message for the operation for the last patch request for this connection.",
                                "readOnly": true
                              }
                            }
                          },
                          "statusSetBy": {
                            "type": "string",
                            "description": "User that last set the approved status for this connection",
                            "readOnly": true
                          }
                        },
                        "additionalProperties": {}
                      }
                    },
                    "additionalProperties": {}
                  }
                },
                "required": [
                  "id"
                ],
                "additionalProperties": {}
              },
              "readOnly": true,
              "x-ms-identifiers": [
                "id"
              ]
            },
            "subscribers": {
              "type": "array",
              "description": "Subscribers of this resource",
              "items": {
                "type": "object",
                "description": "An individual that would like to subscribe to events that occur on a pipeline.",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Email of the subscriber"
                  },
                  "notifications": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Number specifying what notifications to receive"
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "provisioningState": {
              "description": "Provisioning state of the pipeline",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Accepted"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "Resource has been accepted for creation."
                  }
                ]
              }
            },
            "policies": {
              "type": "array",
              "description": "The policies for this pipeline. The policies property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
              "items": {
                "type": "string"
              }
            },
            "flowTypes": {
              "type": "array",
              "description": "The flow type for this flow. The flowTypes property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
              "items": {
                "type": "string",
                "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                "enum": [
                  "Unknown",
                  "Complex",
                  "DevSecOps",
                  "Messaging",
                  "Mission",
                  "MicrosoftInternal",
                  "BasicFiles",
                  "Data",
                  "Standard",
                  "StreamingVideo",
                  "Opaque",
                  "MissionOpaqueXML",
                  "DiskImages",
                  "API"
                ],
                "x-ms-enum": {
                  "name": "FlowType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Unknown",
                      "value": "Unknown",
                      "description": "This type of flow is not set."
                    },
                    {
                      "name": "Complex",
                      "value": "Complex",
                      "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                    },
                    {
                      "name": "DevSecOps",
                      "value": "DevSecOps",
                      "description": "This flow sends source code files and artifacts."
                    },
                    {
                      "name": "Messaging",
                      "value": "Messaging",
                      "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                    },
                    {
                      "name": "Mission",
                      "value": "Mission",
                      "description": "This flow sends standard data but is subject to strict cloud owner approval."
                    },
                    {
                      "name": "MicrosoftInternal",
                      "value": "MicrosoftInternal",
                      "description": "This flow is assigned to internal Microsoft use cases."
                    },
                    {
                      "name": "BasicFiles",
                      "value": "BasicFiles",
                      "description": "This flow sends blobs that can be used for multiple use cases."
                    },
                    {
                      "name": "Data",
                      "value": "Data",
                      "description": "This flow sends blobs that can be used for multiple use cases."
                    },
                    {
                      "name": "Standard",
                      "value": "Standard",
                      "description": "This flow sends blobs that can be used for multiple use cases."
                    },
                    {
                      "name": "StreamingVideo",
                      "value": "StreamingVideo",
                      "description": "This flow sends video streams."
                    },
                    {
                      "name": "Opaque",
                      "value": "Opaque",
                      "description": "This flow sends blobs but is subject to cloud owner approval."
                    },
                    {
                      "name": "MissionOpaqueXML",
                      "value": "MissionOpaqueXML",
                      "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                    },
                    {
                      "name": "DiskImages",
                      "value": "DiskImages",
                      "description": "This flow sends blobs that can be used for Virtual Machines."
                    },
                    {
                      "name": "API",
                      "value": "API",
                      "description": "This flow sends data via an Application Programmer Interface."
                    }
                  ]
                }
              }
            },
            "disabledFlowTypes": {
              "type": "array",
              "description": "The flow types that are disabled for this pipeline",
              "items": {
                "type": "string",
                "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                "enum": [
                  "Unknown",
                  "Complex",
                  "DevSecOps",
                  "Messaging",
                  "Mission",
                  "MicrosoftInternal",
                  "BasicFiles",
                  "Data",
                  "Standard",
                  "StreamingVideo",
                  "Opaque",
                  "MissionOpaqueXML",
                  "DiskImages",
                  "API"
                ],
                "x-ms-enum": {
                  "name": "FlowType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Unknown",
                      "value": "Unknown",
                      "description": "This type of flow is not set."
                    },
                    {
                      "name": "Complex",
                      "value": "Complex",
                      "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                    },
                    {
                      "name": "DevSecOps",
                      "value": "DevSecOps",
                      "description": "This flow sends source code files and artifacts."
                    },
                    {
                      "name": "Messaging",
                      "value": "Messaging",
                      "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                    },
                    {
                      "name": "Mission",
                      "value": "Mission",
                      "description": "This flow sends standard data but is subject to strict cloud owner approval."
                    },
                    {
                      "name": "MicrosoftInternal",
                      "value": "MicrosoftInternal",
                      "description": "This flow is assigned to internal Microsoft use cases."
                    },
                    {
                      "name": "BasicFiles",
                      "value": "BasicFiles",
                      "description": "This flow sends blobs that can be used for multiple use cases."
                    },
                    {
                      "name": "Data",
                      "value": "Data",
                      "description": "This flow sends blobs that can be used for multiple use cases."
                    },
                    {
                      "name": "Standard",
                      "value": "Standard",
                      "description": "This flow sends blobs that can be used for multiple use cases."
                    },
                    {
                      "name": "StreamingVideo",
                      "value": "StreamingVideo",
                      "description": "This flow sends video streams."
                    },
                    {
                      "name": "Opaque",
                      "value": "Opaque",
                      "description": "This flow sends blobs but is subject to cloud owner approval."
                    },
                    {
                      "name": "MissionOpaqueXML",
                      "value": "MissionOpaqueXML",
                      "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                    },
                    {
                      "name": "DiskImages",
                      "value": "DiskImages",
                      "description": "This flow sends blobs that can be used for Virtual Machines."
                    },
                    {
                      "name": "API",
                      "value": "API",
                      "description": "This flow sends data via an Application Programmer Interface."
                    }
                  ]
                }
              }
            },
            "quarantineDownloadStorageAccount": {
              "type": "string",
              "description": "Quarantine Download Storage Account"
            },
            "quarantineDownloadStorageContainer": {
              "type": "string",
              "description": "Quarantine Download Storage Container"
            },
            "status": {
              "description": "Status of the current pipeline",
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "PipelineStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "The pipeline is currently enabled and all child connection and flow resources below able to send or receive data."
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "The pipeline is currently disabled and all child connection and flow resources below are unable to send or receive data."
                  }
                ]
              }
            }
          },
          "required": [
            "remoteCloud"
          ]
        },
        "identity": {
          "description": "The managed service identities assigned to this resource.",
          "type": "object",
          "properties": {
            "principalId": {
              "type": "string",
              "format": "uuid",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "format": "uuid",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "title": "User-Assigned Identities",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "additionalProperties": {
                "x-nullable": true,
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        }
      }
    },
    "PipelineConnectionProperties": {
      "type": "object",
      "description": "Connection properties inside pipeline",
      "properties": {
        "internalMetadata": {
          "description": "Internal metadata of the connection inside pipeline.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "operationStatus": {
              "description": "Operation status associated with the last patch request",
              "readOnly": true,
              "type": "object",
              "properties": {
                "status": {
                  "description": "Operation status for the last patch request for this connection.",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Failed",
                    "Succeeded"
                  ],
                  "x-ms-enum": {
                    "name": "OperationStatusEnum",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Failed",
                        "value": "Failed",
                        "description": "The last patch request for this connection completed with an error."
                      },
                      {
                        "name": "Succeeded",
                        "value": "Succeeded",
                        "description": "The last patch request for this connection completed."
                      }
                    ]
                  }
                },
                "id": {
                  "type": "string",
                  "description": "Operation status ID of the last patch request for this connection.",
                  "readOnly": true
                },
                "message": {
                  "type": "string",
                  "description": "Message for the operation for the last patch request for this connection.",
                  "readOnly": true
                }
              }
            },
            "statusSetBy": {
              "type": "string",
              "description": "User that last set the approved status for this connection",
              "readOnly": true
            }
          },
          "additionalProperties": {}
        }
      },
      "additionalProperties": {}
    },
    "PipelineListResult": {
      "type": "object",
      "description": "The response of a Pipeline list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Pipeline items on this page",
          "items": {
            "type": "object",
            "description": "The pipeline resource definition. A Pipeline defines the scope and identity under which data replication scenarios are managed.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "The set of configurable properties for the Pipeline resource.",
                "type": "object",
                "properties": {
                  "remoteCloud": {
                    "type": "string",
                    "description": "Remote cloud of the data to be transferred or received"
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Display name of this pipeline"
                  },
                  "connections": {
                    "type": "array",
                    "description": "Connections associated with pipeline",
                    "items": {
                      "type": "object",
                      "description": "The ReadPipelineconnection.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Connection id inside pipeline"
                        },
                        "name": {
                          "type": "string",
                          "description": "Connection name inside pipeline"
                        },
                        "type": {
                          "type": "string",
                          "description": "Connection type inside pipeline"
                        },
                        "location": {
                          "type": "string",
                          "description": "Connection location inside pipeline"
                        },
                        "etag": {
                          "type": "string",
                          "description": "Connection etag inside pipeline"
                        },
                        "systemData": {
                          "description": "Metadata pertaining to creation and last modification of the resource.",
                          "type": "object",
                          "properties": {
                            "createdBy": {
                              "type": "string",
                              "description": "The identity that created the resource."
                            },
                            "createdByType": {
                              "type": "string",
                              "description": "The type of identity that created the resource.",
                              "enum": [
                                "User",
                                "Application",
                                "ManagedIdentity",
                                "Key"
                              ],
                              "x-ms-enum": {
                                "name": "createdByType",
                                "modelAsString": true
                              }
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp of resource creation (UTC)."
                            },
                            "lastModifiedBy": {
                              "type": "string",
                              "description": "The identity that last modified the resource."
                            },
                            "lastModifiedByType": {
                              "type": "string",
                              "description": "The type of identity that last modified the resource.",
                              "enum": [
                                "User",
                                "Application",
                                "ManagedIdentity",
                                "Key"
                              ],
                              "x-ms-enum": {
                                "name": "createdByType",
                                "modelAsString": true
                              }
                            },
                            "lastModifiedAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp of resource last modification (UTC)"
                            }
                          },
                          "readOnly": true
                        },
                        "properties": {
                          "description": "Connection properties inside pipeline",
                          "type": "object",
                          "properties": {
                            "internalMetadata": {
                              "description": "Internal metadata of the connection inside pipeline.",
                              "readOnly": true,
                              "type": "object",
                              "properties": {
                                "operationStatus": {
                                  "description": "Operation status associated with the last patch request",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "status": {
                                      "description": "Operation status for the last patch request for this connection.",
                                      "readOnly": true,
                                      "type": "string",
                                      "enum": [
                                        "Failed",
                                        "Succeeded"
                                      ],
                                      "x-ms-enum": {
                                        "name": "OperationStatusEnum",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Failed",
                                            "value": "Failed",
                                            "description": "The last patch request for this connection completed with an error."
                                          },
                                          {
                                            "name": "Succeeded",
                                            "value": "Succeeded",
                                            "description": "The last patch request for this connection completed."
                                          }
                                        ]
                                      }
                                    },
                                    "id": {
                                      "type": "string",
                                      "description": "Operation status ID of the last patch request for this connection.",
                                      "readOnly": true
                                    },
                                    "message": {
                                      "type": "string",
                                      "description": "Message for the operation for the last patch request for this connection.",
                                      "readOnly": true
                                    }
                                  }
                                },
                                "statusSetBy": {
                                  "type": "string",
                                  "description": "User that last set the approved status for this connection",
                                  "readOnly": true
                                }
                              },
                              "additionalProperties": {}
                            }
                          },
                          "additionalProperties": {}
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "additionalProperties": {}
                    },
                    "readOnly": true,
                    "x-ms-identifiers": [
                      "id"
                    ]
                  },
                  "subscribers": {
                    "type": "array",
                    "description": "Subscribers of this resource",
                    "items": {
                      "type": "object",
                      "description": "An individual that would like to subscribe to events that occur on a pipeline.",
                      "properties": {
                        "email": {
                          "type": "string",
                          "description": "Email of the subscriber"
                        },
                        "notifications": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Number specifying what notifications to receive"
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the pipeline",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Accepted"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "Resource has been accepted for creation."
                        }
                      ]
                    }
                  },
                  "policies": {
                    "type": "array",
                    "description": "The policies for this pipeline. The policies property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "flowTypes": {
                    "type": "array",
                    "description": "The flow type for this flow. The flowTypes property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
                    "items": {
                      "type": "string",
                      "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                      "enum": [
                        "Unknown",
                        "Complex",
                        "DevSecOps",
                        "Messaging",
                        "Mission",
                        "MicrosoftInternal",
                        "BasicFiles",
                        "Data",
                        "Standard",
                        "StreamingVideo",
                        "Opaque",
                        "MissionOpaqueXML",
                        "DiskImages",
                        "API"
                      ],
                      "x-ms-enum": {
                        "name": "FlowType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "This type of flow is not set."
                          },
                          {
                            "name": "Complex",
                            "value": "Complex",
                            "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                          },
                          {
                            "name": "DevSecOps",
                            "value": "DevSecOps",
                            "description": "This flow sends source code files and artifacts."
                          },
                          {
                            "name": "Messaging",
                            "value": "Messaging",
                            "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                          },
                          {
                            "name": "Mission",
                            "value": "Mission",
                            "description": "This flow sends standard data but is subject to strict cloud owner approval."
                          },
                          {
                            "name": "MicrosoftInternal",
                            "value": "MicrosoftInternal",
                            "description": "This flow is assigned to internal Microsoft use cases."
                          },
                          {
                            "name": "BasicFiles",
                            "value": "BasicFiles",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "Data",
                            "value": "Data",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "Standard",
                            "value": "Standard",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "StreamingVideo",
                            "value": "StreamingVideo",
                            "description": "This flow sends video streams."
                          },
                          {
                            "name": "Opaque",
                            "value": "Opaque",
                            "description": "This flow sends blobs but is subject to cloud owner approval."
                          },
                          {
                            "name": "MissionOpaqueXML",
                            "value": "MissionOpaqueXML",
                            "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                          },
                          {
                            "name": "DiskImages",
                            "value": "DiskImages",
                            "description": "This flow sends blobs that can be used for Virtual Machines."
                          },
                          {
                            "name": "API",
                            "value": "API",
                            "description": "This flow sends data via an Application Programmer Interface."
                          }
                        ]
                      }
                    }
                  },
                  "disabledFlowTypes": {
                    "type": "array",
                    "description": "The flow types that are disabled for this pipeline",
                    "items": {
                      "type": "string",
                      "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                      "enum": [
                        "Unknown",
                        "Complex",
                        "DevSecOps",
                        "Messaging",
                        "Mission",
                        "MicrosoftInternal",
                        "BasicFiles",
                        "Data",
                        "Standard",
                        "StreamingVideo",
                        "Opaque",
                        "MissionOpaqueXML",
                        "DiskImages",
                        "API"
                      ],
                      "x-ms-enum": {
                        "name": "FlowType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "This type of flow is not set."
                          },
                          {
                            "name": "Complex",
                            "value": "Complex",
                            "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                          },
                          {
                            "name": "DevSecOps",
                            "value": "DevSecOps",
                            "description": "This flow sends source code files and artifacts."
                          },
                          {
                            "name": "Messaging",
                            "value": "Messaging",
                            "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                          },
                          {
                            "name": "Mission",
                            "value": "Mission",
                            "description": "This flow sends standard data but is subject to strict cloud owner approval."
                          },
                          {
                            "name": "MicrosoftInternal",
                            "value": "MicrosoftInternal",
                            "description": "This flow is assigned to internal Microsoft use cases."
                          },
                          {
                            "name": "BasicFiles",
                            "value": "BasicFiles",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "Data",
                            "value": "Data",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "Standard",
                            "value": "Standard",
                            "description": "This flow sends blobs that can be used for multiple use cases."
                          },
                          {
                            "name": "StreamingVideo",
                            "value": "StreamingVideo",
                            "description": "This flow sends video streams."
                          },
                          {
                            "name": "Opaque",
                            "value": "Opaque",
                            "description": "This flow sends blobs but is subject to cloud owner approval."
                          },
                          {
                            "name": "MissionOpaqueXML",
                            "value": "MissionOpaqueXML",
                            "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                          },
                          {
                            "name": "DiskImages",
                            "value": "DiskImages",
                            "description": "This flow sends blobs that can be used for Virtual Machines."
                          },
                          {
                            "name": "API",
                            "value": "API",
                            "description": "This flow sends data via an Application Programmer Interface."
                          }
                        ]
                      }
                    }
                  },
                  "quarantineDownloadStorageAccount": {
                    "type": "string",
                    "description": "Quarantine Download Storage Account"
                  },
                  "quarantineDownloadStorageContainer": {
                    "type": "string",
                    "description": "Quarantine Download Storage Container"
                  },
                  "status": {
                    "description": "Status of the current pipeline",
                    "type": "string",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "PipelineStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Enabled",
                          "value": "Enabled",
                          "description": "The pipeline is currently enabled and all child connection and flow resources below able to send or receive data."
                        },
                        {
                          "name": "Disabled",
                          "value": "Disabled",
                          "description": "The pipeline is currently disabled and all child connection and flow resources below are unable to send or receive data."
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "remoteCloud"
                ]
              },
              "identity": {
                "description": "The managed service identities assigned to this resource.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "tenantId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                    "enum": [
                      "None",
                      "SystemAssigned",
                      "UserAssigned",
                      "SystemAssigned,UserAssigned"
                    ],
                    "x-ms-enum": {
                      "name": "ManagedServiceIdentityType",
                      "modelAsString": true
                    }
                  },
                  "userAssignedIdentities": {
                    "type": "object",
                    "title": "User-Assigned Identities",
                    "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                    "additionalProperties": {
                      "x-nullable": true,
                      "type": "object",
                      "description": "User assigned identity properties",
                      "properties": {
                        "principalId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The principal ID of the assigned identity.",
                          "readOnly": true
                        },
                        "clientId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The client ID of the assigned identity.",
                          "readOnly": true
                        }
                      }
                    }
                  }
                },
                "required": [
                  "type"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PipelineProperties": {
      "type": "object",
      "description": "Properties of pipeline",
      "properties": {
        "remoteCloud": {
          "type": "string",
          "description": "Remote cloud of the data to be transferred or received"
        },
        "displayName": {
          "type": "string",
          "description": "Display name of this pipeline"
        },
        "connections": {
          "type": "array",
          "description": "Connections associated with pipeline",
          "items": {
            "type": "object",
            "description": "The ReadPipelineconnection.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Connection id inside pipeline"
              },
              "name": {
                "type": "string",
                "description": "Connection name inside pipeline"
              },
              "type": {
                "type": "string",
                "description": "Connection type inside pipeline"
              },
              "location": {
                "type": "string",
                "description": "Connection location inside pipeline"
              },
              "etag": {
                "type": "string",
                "description": "Connection etag inside pipeline"
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                },
                "readOnly": true
              },
              "properties": {
                "description": "Connection properties inside pipeline",
                "type": "object",
                "properties": {
                  "internalMetadata": {
                    "description": "Internal metadata of the connection inside pipeline.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "operationStatus": {
                        "description": "Operation status associated with the last patch request",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "Operation status for the last patch request for this connection.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Failed",
                              "Succeeded"
                            ],
                            "x-ms-enum": {
                              "name": "OperationStatusEnum",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "The last patch request for this connection completed with an error."
                                },
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The last patch request for this connection completed."
                                }
                              ]
                            }
                          },
                          "id": {
                            "type": "string",
                            "description": "Operation status ID of the last patch request for this connection.",
                            "readOnly": true
                          },
                          "message": {
                            "type": "string",
                            "description": "Message for the operation for the last patch request for this connection.",
                            "readOnly": true
                          }
                        }
                      },
                      "statusSetBy": {
                        "type": "string",
                        "description": "User that last set the approved status for this connection",
                        "readOnly": true
                      }
                    },
                    "additionalProperties": {}
                  }
                },
                "additionalProperties": {}
              }
            },
            "required": [
              "id"
            ],
            "additionalProperties": {}
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "id"
          ]
        },
        "subscribers": {
          "type": "array",
          "description": "Subscribers of this resource",
          "items": {
            "type": "object",
            "description": "An individual that would like to subscribe to events that occur on a pipeline.",
            "properties": {
              "email": {
                "type": "string",
                "description": "Email of the subscriber"
              },
              "notifications": {
                "type": "integer",
                "format": "int64",
                "description": "Number specifying what notifications to receive"
              }
            }
          },
          "x-ms-identifiers": []
        },
        "provisioningState": {
          "description": "Provisioning state of the pipeline",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Accepted"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Resource has been accepted for creation."
              }
            ]
          }
        },
        "policies": {
          "type": "array",
          "description": "The policies for this pipeline. The policies property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
          "items": {
            "type": "string"
          }
        },
        "flowTypes": {
          "type": "array",
          "description": "The flow type for this flow. The flowTypes property has reached end of life support starting version 2025-05-30-preview. Please create and use a FlowProfile resource instead.",
          "items": {
            "type": "string",
            "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
            "enum": [
              "Unknown",
              "Complex",
              "DevSecOps",
              "Messaging",
              "Mission",
              "MicrosoftInternal",
              "BasicFiles",
              "Data",
              "Standard",
              "StreamingVideo",
              "Opaque",
              "MissionOpaqueXML",
              "DiskImages",
              "API"
            ],
            "x-ms-enum": {
              "name": "FlowType",
              "modelAsString": true,
              "values": [
                {
                  "name": "Unknown",
                  "value": "Unknown",
                  "description": "This type of flow is not set."
                },
                {
                  "name": "Complex",
                  "value": "Complex",
                  "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                },
                {
                  "name": "DevSecOps",
                  "value": "DevSecOps",
                  "description": "This flow sends source code files and artifacts."
                },
                {
                  "name": "Messaging",
                  "value": "Messaging",
                  "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                },
                {
                  "name": "Mission",
                  "value": "Mission",
                  "description": "This flow sends standard data but is subject to strict cloud owner approval."
                },
                {
                  "name": "MicrosoftInternal",
                  "value": "MicrosoftInternal",
                  "description": "This flow is assigned to internal Microsoft use cases."
                },
                {
                  "name": "BasicFiles",
                  "value": "BasicFiles",
                  "description": "This flow sends blobs that can be used for multiple use cases."
                },
                {
                  "name": "Data",
                  "value": "Data",
                  "description": "This flow sends blobs that can be used for multiple use cases."
                },
                {
                  "name": "Standard",
                  "value": "Standard",
                  "description": "This flow sends blobs that can be used for multiple use cases."
                },
                {
                  "name": "StreamingVideo",
                  "value": "StreamingVideo",
                  "description": "This flow sends video streams."
                },
                {
                  "name": "Opaque",
                  "value": "Opaque",
                  "description": "This flow sends blobs but is subject to cloud owner approval."
                },
                {
                  "name": "MissionOpaqueXML",
                  "value": "MissionOpaqueXML",
                  "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                },
                {
                  "name": "DiskImages",
                  "value": "DiskImages",
                  "description": "This flow sends blobs that can be used for Virtual Machines."
                },
                {
                  "name": "API",
                  "value": "API",
                  "description": "This flow sends data via an Application Programmer Interface."
                }
              ]
            }
          }
        },
        "disabledFlowTypes": {
          "type": "array",
          "description": "The flow types that are disabled for this pipeline",
          "items": {
            "type": "string",
            "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
            "enum": [
              "Unknown",
              "Complex",
              "DevSecOps",
              "Messaging",
              "Mission",
              "MicrosoftInternal",
              "BasicFiles",
              "Data",
              "Standard",
              "StreamingVideo",
              "Opaque",
              "MissionOpaqueXML",
              "DiskImages",
              "API"
            ],
            "x-ms-enum": {
              "name": "FlowType",
              "modelAsString": true,
              "values": [
                {
                  "name": "Unknown",
                  "value": "Unknown",
                  "description": "This type of flow is not set."
                },
                {
                  "name": "Complex",
                  "value": "Complex",
                  "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                },
                {
                  "name": "DevSecOps",
                  "value": "DevSecOps",
                  "description": "This flow sends source code files and artifacts."
                },
                {
                  "name": "Messaging",
                  "value": "Messaging",
                  "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                },
                {
                  "name": "Mission",
                  "value": "Mission",
                  "description": "This flow sends standard data but is subject to strict cloud owner approval."
                },
                {
                  "name": "MicrosoftInternal",
                  "value": "MicrosoftInternal",
                  "description": "This flow is assigned to internal Microsoft use cases."
                },
                {
                  "name": "BasicFiles",
                  "value": "BasicFiles",
                  "description": "This flow sends blobs that can be used for multiple use cases."
                },
                {
                  "name": "Data",
                  "value": "Data",
                  "description": "This flow sends blobs that can be used for multiple use cases."
                },
                {
                  "name": "Standard",
                  "value": "Standard",
                  "description": "This flow sends blobs that can be used for multiple use cases."
                },
                {
                  "name": "StreamingVideo",
                  "value": "StreamingVideo",
                  "description": "This flow sends video streams."
                },
                {
                  "name": "Opaque",
                  "value": "Opaque",
                  "description": "This flow sends blobs but is subject to cloud owner approval."
                },
                {
                  "name": "MissionOpaqueXML",
                  "value": "MissionOpaqueXML",
                  "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                },
                {
                  "name": "DiskImages",
                  "value": "DiskImages",
                  "description": "This flow sends blobs that can be used for Virtual Machines."
                },
                {
                  "name": "API",
                  "value": "API",
                  "description": "This flow sends data via an Application Programmer Interface."
                }
              ]
            }
          }
        },
        "quarantineDownloadStorageAccount": {
          "type": "string",
          "description": "Quarantine Download Storage Account"
        },
        "quarantineDownloadStorageContainer": {
          "type": "string",
          "description": "Quarantine Download Storage Container"
        },
        "status": {
          "description": "Status of the current pipeline",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "PipelineStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "The pipeline is currently enabled and all child connection and flow resources below able to send or receive data."
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "The pipeline is currently disabled and all child connection and flow resources below are unable to send or receive data."
              }
            ]
          }
        }
      },
      "required": [
        "remoteCloud"
      ]
    },
    "PipelineStatus": {
      "type": "string",
      "description": "Status of the current pipeline",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "PipelineStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "The pipeline is currently enabled and all child connection and flow resources below able to send or receive data."
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "The pipeline is currently disabled and all child connection and flow resources below are unable to send or receive data."
          }
        ]
      }
    },
    "PipelinesPatch": {
      "type": "object",
      "description": "The pipelines resource patch definition.",
      "properties": {
        "properties": {
          "description": "Properties of pipelines patch body.",
          "type": "object",
          "properties": {
            "flowTypes": {
              "type": "array",
              "description": "The flow types allowed for this pipeline. FlowTypes has reached end of life support starting version 2025-05-30-preview. Please create and use the FlowProfile property instead.",
              "items": {
                "type": "string",
                "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
                "enum": [
                  "Unknown",
                  "Complex",
                  "DevSecOps",
                  "Messaging",
                  "Mission",
                  "MicrosoftInternal",
                  "BasicFiles",
                  "Data",
                  "Standard",
                  "StreamingVideo",
                  "Opaque",
                  "MissionOpaqueXML",
                  "DiskImages",
                  "API"
                ],
                "x-ms-enum": {
                  "name": "FlowType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Unknown",
                      "value": "Unknown",
                      "description": "This type of flow is not set."
                    },
                    {
                      "name": "Complex",
                      "value": "Complex",
                      "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                    },
                    {
                      "name": "DevSecOps",
                      "value": "DevSecOps",
                      "description": "This flow sends source code files and artifacts."
                    },
                    {
                      "name": "Messaging",
                      "value": "Messaging",
                      "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                    },
                    {
                      "name": "Mission",
                      "value": "Mission",
                      "description": "This flow sends standard data but is subject to strict cloud owner approval."
                    },
                    {
                      "name": "MicrosoftInternal",
                      "value": "MicrosoftInternal",
                      "description": "This flow is assigned to internal Microsoft use cases."
                    },
                    {
                      "name": "BasicFiles",
                      "value": "BasicFiles",
                      "description": "This flow sends blobs that can be used for multiple use cases."
                    },
                    {
                      "name": "Data",
                      "value": "Data",
                      "description": "This flow sends blobs that can be used for multiple use cases."
                    },
                    {
                      "name": "Standard",
                      "value": "Standard",
                      "description": "This flow sends blobs that can be used for multiple use cases."
                    },
                    {
                      "name": "StreamingVideo",
                      "value": "StreamingVideo",
                      "description": "This flow sends video streams."
                    },
                    {
                      "name": "Opaque",
                      "value": "Opaque",
                      "description": "This flow sends blobs but is subject to cloud owner approval."
                    },
                    {
                      "name": "MissionOpaqueXML",
                      "value": "MissionOpaqueXML",
                      "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                    },
                    {
                      "name": "DiskImages",
                      "value": "DiskImages",
                      "description": "This flow sends blobs that can be used for Virtual Machines."
                    },
                    {
                      "name": "API",
                      "value": "API",
                      "description": "This flow sends data via an Application Programmer Interface."
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "identity": {
          "description": "The managed service identities assigned to this resource.",
          "type": "object",
          "properties": {
            "principalId": {
              "type": "string",
              "format": "uuid",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "format": "uuid",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "title": "User-Assigned Identities",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "additionalProperties": {
                "x-nullable": true,
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        }
      }
    },
    "PipelinesPatchProperties": {
      "type": "object",
      "description": "Properties of pipelines patch body. The property has reached end of life support starting version 2025-05-30-preview. Please create and use the FlowProfile resource instead.",
      "properties": {
        "flowTypes": {
          "type": "array",
          "description": "The flow types allowed for this pipeline. FlowTypes has reached end of life support starting version 2025-05-30-preview. Please create and use the FlowProfile property instead.",
          "items": {
            "type": "string",
            "description": "Flow type for the specified resource. FlowType will be deprecated starting from version 2025_05_30_preview - please create a FlowProfile resource instead.",
            "enum": [
              "Unknown",
              "Complex",
              "DevSecOps",
              "Messaging",
              "Mission",
              "MicrosoftInternal",
              "BasicFiles",
              "Data",
              "Standard",
              "StreamingVideo",
              "Opaque",
              "MissionOpaqueXML",
              "DiskImages",
              "API"
            ],
            "x-ms-enum": {
              "name": "FlowType",
              "modelAsString": true,
              "values": [
                {
                  "name": "Unknown",
                  "value": "Unknown",
                  "description": "This type of flow is not set."
                },
                {
                  "name": "Complex",
                  "value": "Complex",
                  "description": "This flow sends complex documents, such as Microsoft Office documents of Portable document format files."
                },
                {
                  "name": "DevSecOps",
                  "value": "DevSecOps",
                  "description": "This flow sends source code files and artifacts."
                },
                {
                  "name": "Messaging",
                  "value": "Messaging",
                  "description": "This flow over the Azure Data Transfer low latency messaging subsystem."
                },
                {
                  "name": "Mission",
                  "value": "Mission",
                  "description": "This flow sends standard data but is subject to strict cloud owner approval."
                },
                {
                  "name": "MicrosoftInternal",
                  "value": "MicrosoftInternal",
                  "description": "This flow is assigned to internal Microsoft use cases."
                },
                {
                  "name": "BasicFiles",
                  "value": "BasicFiles",
                  "description": "This flow sends blobs that can be used for multiple use cases."
                },
                {
                  "name": "Data",
                  "value": "Data",
                  "description": "This flow sends blobs that can be used for multiple use cases."
                },
                {
                  "name": "Standard",
                  "value": "Standard",
                  "description": "This flow sends blobs that can be used for multiple use cases."
                },
                {
                  "name": "StreamingVideo",
                  "value": "StreamingVideo",
                  "description": "This flow sends video streams."
                },
                {
                  "name": "Opaque",
                  "value": "Opaque",
                  "description": "This flow sends blobs but is subject to cloud owner approval."
                },
                {
                  "name": "MissionOpaqueXML",
                  "value": "MissionOpaqueXML",
                  "description": "This flow sends Extensible Markup Language that is subject to strict cloud owner approval"
                },
                {
                  "name": "DiskImages",
                  "value": "DiskImages",
                  "description": "This flow sends blobs that can be used for Virtual Machines."
                },
                {
                  "name": "API",
                  "value": "API",
                  "description": "This flow sends data via an Application Programmer Interface."
                }
              ]
            }
          }
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "Provisioning state of the pipeline, connection, flow.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "Resource has been accepted for creation."
          }
        ]
      },
      "readOnly": true
    },
    "ReadPipelineConnection": {
      "type": "object",
      "description": "The ReadPipelineconnection.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Connection id inside pipeline"
        },
        "name": {
          "type": "string",
          "description": "Connection name inside pipeline"
        },
        "type": {
          "type": "string",
          "description": "Connection type inside pipeline"
        },
        "location": {
          "type": "string",
          "description": "Connection location inside pipeline"
        },
        "etag": {
          "type": "string",
          "description": "Connection etag inside pipeline"
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          },
          "readOnly": true
        },
        "properties": {
          "description": "Connection properties inside pipeline",
          "type": "object",
          "properties": {
            "internalMetadata": {
              "description": "Internal metadata of the connection inside pipeline.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "operationStatus": {
                  "description": "Operation status associated with the last patch request",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "Operation status for the last patch request for this connection.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Failed",
                        "Succeeded"
                      ],
                      "x-ms-enum": {
                        "name": "OperationStatusEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The last patch request for this connection completed with an error."
                          },
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The last patch request for this connection completed."
                          }
                        ]
                      }
                    },
                    "id": {
                      "type": "string",
                      "description": "Operation status ID of the last patch request for this connection.",
                      "readOnly": true
                    },
                    "message": {
                      "type": "string",
                      "description": "Message for the operation for the last patch request for this connection.",
                      "readOnly": true
                    }
                  }
                },
                "statusSetBy": {
                  "type": "string",
                  "description": "User that last set the approved status for this connection",
                  "readOnly": true
                }
              },
              "additionalProperties": {}
            }
          },
          "additionalProperties": {}
        }
      },
      "required": [
        "id"
      ],
      "additionalProperties": {}
    },
    "ResourceBody": {
      "type": "object",
      "description": "The resource to reference.",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the resource."
        },
        "statusReason": {
          "type": "string",
          "description": "Reason for resource operation."
        }
      },
      "required": [
        "id"
      ]
    },
    "Schema": {
      "type": "object",
      "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID associated with this schema"
        },
        "connectionId": {
          "type": "string",
          "description": "Connection ID associated with this schema"
        },
        "status": {
          "description": "Status of the schema",
          "type": "string",
          "enum": [
            "New",
            "Approved"
          ],
          "x-ms-enum": {
            "name": "SchemaStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "New",
                "value": "New",
                "description": "A schema that has not been approved and is awaiting review."
              },
              {
                "name": "Approved",
                "value": "Approved",
                "description": "A schema that has been approved and is ready for use."
              }
            ]
          }
        },
        "name": {
          "type": "string",
          "description": "Name of the schema"
        },
        "content": {
          "type": "string",
          "description": "Content of the schema"
        },
        "direction": {
          "description": "The direction of the schema.",
          "type": "string",
          "enum": [
            "Send",
            "Receive"
          ],
          "x-ms-enum": {
            "name": "Direction",
            "modelAsString": true,
            "values": [
              {
                "name": "Send",
                "value": "Send",
                "description": "The direction is on the sending side of a pipeline, connection, or flow."
              },
              {
                "name": "Receive",
                "value": "Receive",
                "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
              }
            ]
          }
        },
        "schemaUri": {
          "type": "string",
          "format": "uri",
          "description": "Uri containing SAS token for the zipped schema"
        },
        "schemaType": {
          "description": "The Schema Type",
          "type": "string",
          "enum": [
            "Xsd",
            "Zip"
          ],
          "x-ms-enum": {
            "name": "SchemaType",
            "modelAsString": true,
            "values": [
              {
                "name": "Xsd",
                "value": "Xsd",
                "description": "The schema represents a single XML schema definition file."
              },
              {
                "name": "Zip",
                "value": "Zip",
                "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
              }
            ]
          }
        }
      }
    },
    "SchemaStatus": {
      "type": "string",
      "description": "Status of the schema.",
      "enum": [
        "New",
        "Approved"
      ],
      "x-ms-enum": {
        "name": "SchemaStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "New",
            "value": "New",
            "description": "A schema that has not been approved and is awaiting review."
          },
          {
            "name": "Approved",
            "value": "Approved",
            "description": "A schema that has been approved and is ready for use."
          }
        ]
      }
    },
    "SchemaType": {
      "type": "string",
      "description": "The Schema Type.",
      "enum": [
        "Xsd",
        "Zip"
      ],
      "x-ms-enum": {
        "name": "SchemaType",
        "modelAsString": true,
        "values": [
          {
            "name": "Xsd",
            "value": "Xsd",
            "description": "The schema represents a single XML schema definition file."
          },
          {
            "name": "Zip",
            "value": "Zip",
            "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
          }
        ]
      }
    },
    "SchemasListResult": {
      "type": "object",
      "description": "The schemas list result. SchemaListResults has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Schemas array.",
          "items": {
            "type": "object",
            "description": "The schema object. Schemas has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID associated with this schema"
              },
              "connectionId": {
                "type": "string",
                "description": "Connection ID associated with this schema"
              },
              "status": {
                "description": "Status of the schema",
                "type": "string",
                "enum": [
                  "New",
                  "Approved"
                ],
                "x-ms-enum": {
                  "name": "SchemaStatus",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "New",
                      "value": "New",
                      "description": "A schema that has not been approved and is awaiting review."
                    },
                    {
                      "name": "Approved",
                      "value": "Approved",
                      "description": "A schema that has been approved and is ready for use."
                    }
                  ]
                }
              },
              "name": {
                "type": "string",
                "description": "Name of the schema"
              },
              "content": {
                "type": "string",
                "description": "Content of the schema"
              },
              "direction": {
                "description": "The direction of the schema.",
                "type": "string",
                "enum": [
                  "Send",
                  "Receive"
                ],
                "x-ms-enum": {
                  "name": "Direction",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Send",
                      "value": "Send",
                      "description": "The direction is on the sending side of a pipeline, connection, or flow."
                    },
                    {
                      "name": "Receive",
                      "value": "Receive",
                      "description": "The direction is on the receiving side side of a pipeline, connection, or flow."
                    }
                  ]
                }
              },
              "schemaUri": {
                "type": "string",
                "format": "uri",
                "description": "Uri containing SAS token for the zipped schema"
              },
              "schemaType": {
                "description": "The Schema Type",
                "type": "string",
                "enum": [
                  "Xsd",
                  "Zip"
                ],
                "x-ms-enum": {
                  "name": "SchemaType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Xsd",
                      "value": "Xsd",
                      "description": "The schema represents a single XML schema definition file."
                    },
                    {
                      "name": "Zip",
                      "value": "Zip",
                      "description": "The schema represents a ZIP file with multiple XML schema definition files within it."
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "SelectedResource": {
      "type": "object",
      "description": "A resource selected from ARM",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the connection"
        },
        "id": {
          "type": "string",
          "description": "Id of the connection"
        },
        "location": {
          "type": "string",
          "description": "Location of the connection",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "subscriptionName": {
          "type": "string",
          "description": "Name of the subscription with the connection"
        }
      },
      "required": [
        "id"
      ]
    },
    "SetDestinationEndpointPorts": {
      "type": "object",
      "description": "Set the destination endpoint ports for the specified flow.",
      "properties": {
        "ports": {
          "type": "array",
          "description": "The specified flow destination endpoint ports",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    },
    "SetDestinationEndpoints": {
      "type": "object",
      "description": "Set the destination endpoints for the specified flow.",
      "properties": {
        "endpoints": {
          "type": "array",
          "description": "The specified flow destination endpoints.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SetSourceAddresses": {
      "type": "object",
      "description": "Set the source addresses for the specified flow.",
      "properties": {
        "values": {
          "type": "array",
          "description": "Source addresses",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SetStreamPassphrase": {
      "type": "object",
      "description": "Set the passphrase used for SRT streams",
      "properties": {
        "value": {
          "type": "string",
          "description": "The passphrase used for SRT streams"
        }
      }
    },
    "StreamProtocol": {
      "type": "string",
      "description": "The protocol of the stream",
      "enum": [
        "UDP",
        "SRT",
        "RTP"
      ],
      "x-ms-enum": {
        "name": "StreamProtocol",
        "modelAsString": true,
        "values": [
          {
            "name": "UDP",
            "value": "UDP",
            "description": "This Flow is using User Datagram Protocol for the video stream."
          },
          {
            "name": "SRT",
            "value": "SRT",
            "description": "This Flow is using Secure Reliable Transfer for the video stream."
          },
          {
            "name": "RTP",
            "value": "RTP",
            "description": "This Flow is using Real-time Transport Protocol for the video stream."
          }
        ]
      }
    },
    "StreamSourceAddresses": {
      "type": "object",
      "description": "The source IP address and CIDR ranges of the stream",
      "properties": {
        "sourceAddresses": {
          "type": "array",
          "description": "A source IP address or CIDR range",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Subscriber": {
      "type": "object",
      "description": "An individual that would like to subscribe to events that occur on a pipeline.",
      "properties": {
        "email": {
          "type": "string",
          "description": "Email of the subscriber"
        },
        "notifications": {
          "type": "integer",
          "format": "int64",
          "description": "Number specifying what notifications to receive"
        }
      }
    },
    "TargetType": {
      "type": "string",
      "description": "Type of target to execute the action on",
      "enum": [
        "Pipeline",
        "Connection",
        "FlowType"
      ],
      "x-ms-enum": {
        "name": "TargetType",
        "modelAsString": true,
        "values": [
          {
            "name": "Pipeline",
            "value": "Pipeline",
            "description": "The action executing is targeting a pipeline."
          },
          {
            "name": "Connection",
            "value": "Connection",
            "description": "The action executing is targeting a connection."
          },
          {
            "name": "FlowType",
            "value": "FlowType",
            "description": "The action executing is targeting a flow type."
          }
        ]
      }
    },
    "ValidateSchemaResult": {
      "type": "object",
      "description": "Result of the schema validation. ValidateSchemaResult has reached end of life support starting version 2025-05-30-preview. Please manage schemas with a FlowProfile resource instead.",
      "properties": {
        "status": {
          "description": "Validation status of the schema",
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "ValidateSchemaStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Validation of the schema was successful."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "The schema failed validation, whether due to error or an invalid schema."
              }
            ]
          },
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Message describing the schema validation"
        }
      }
    },
    "ValidateSchemaStatus": {
      "type": "string",
      "description": "Validation status of the schema",
      "enum": [
        "Succeeded",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "ValidateSchemaStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Validation of the schema was successful."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The schema failed validation, whether due to error or an invalid schema."
          }
        ]
      },
      "readOnly": true
    }
  },
  "parameters": {}
}