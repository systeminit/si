{
  "swagger": "2.0",
  "info": {
    "title": "Azure datafactory",
    "version": "2018-06-01",
    "description": "Azure datafactory service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/providers/Microsoft.DataFactory/operations": {
      "get": {
        "tags": [
          "operations"
        ],
        "operationId": "Operations_List",
        "description": "Lists the available Azure Data Factory API operations.",
        "parameters": [
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "A list of operations that can be performed by the Data Factory service.",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "Azure Data Factory API operation definition.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Operation name: {provider}/{resource}/{operation}",
                        "type": "string"
                      },
                      "origin": {
                        "description": "The intended executor of the operation.",
                        "type": "string"
                      },
                      "display": {
                        "description": "Metadata associated with the operation.",
                        "properties": {
                          "description": {
                            "description": "The description of the operation.",
                            "type": "string"
                          },
                          "provider": {
                            "description": "The name of the provider.",
                            "type": "string"
                          },
                          "resource": {
                            "description": "The name of the resource type on which the operation is performed.",
                            "type": "string"
                          },
                          "operation": {
                            "description": "The type of operation: get, read, delete, etc.",
                            "type": "string"
                          }
                        }
                      },
                      "properties": {
                        "description": "Additional details about the operation.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "serviceSpecification": {
                            "description": "Details about a service operation.",
                            "type": "object",
                            "properties": {
                              "logSpecifications": {
                                "description": "Details about operations related to logs.",
                                "type": "array",
                                "items": {
                                  "description": "Details about an operation related to logs.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "The name of the log category.",
                                      "type": "string"
                                    },
                                    "displayName": {
                                      "description": "Localized display name.",
                                      "type": "string"
                                    },
                                    "blobDuration": {
                                      "description": "Blobs created in the customer storage account, per hour.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "metricSpecifications": {
                                "description": "Details about operations related to metrics.",
                                "type": "array",
                                "items": {
                                  "description": "Details about an operation related to metrics.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "The name of the metric.",
                                      "type": "string"
                                    },
                                    "displayName": {
                                      "description": "Localized display name of the metric.",
                                      "type": "string"
                                    },
                                    "displayDescription": {
                                      "description": "The description of the metric.",
                                      "type": "string"
                                    },
                                    "unit": {
                                      "description": "The unit that the metric is measured in.",
                                      "type": "string"
                                    },
                                    "aggregationType": {
                                      "description": "The type of metric aggregation.",
                                      "type": "string"
                                    },
                                    "enableRegionalMdmAccount": {
                                      "description": "Whether or not the service is using regional MDM accounts.",
                                      "type": "string"
                                    },
                                    "sourceMdmAccount": {
                                      "description": "The name of the MDM account.",
                                      "type": "string"
                                    },
                                    "sourceMdmNamespace": {
                                      "description": "The name of the MDM namespace.",
                                      "type": "string"
                                    },
                                    "availabilities": {
                                      "description": "Defines how often data for metrics becomes available.",
                                      "type": "array",
                                      "items": {
                                        "description": "Defines how often data for a metric becomes available.",
                                        "type": "object",
                                        "properties": {
                                          "timeGrain": {
                                            "description": "The granularity for the metric.",
                                            "type": "string"
                                          },
                                          "blobDuration": {
                                            "description": "Blob created in the customer storage account, per hour.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": []
                                    },
                                    "dimensions": {
                                      "description": "Defines the metric dimension.",
                                      "type": "array",
                                      "items": {
                                        "description": "Defines the metric dimension.",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "The name of the dimension for the metric.",
                                            "type": "string"
                                          },
                                          "displayName": {
                                            "description": "The display name of the metric dimension.",
                                            "type": "string"
                                          },
                                          "toBeExportedForShoebox": {
                                            "description": "Whether the dimension should be exported to Azure Monitor.",
                                            "type": "boolean"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "name"
                                      ]
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "List of Data Factory operations supported by the Data Factory resource provider.",
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "nextLink": {
                  "type": "string",
                  "description": "The link to the next page of results, if any remaining results exist."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataFactory/factories": {
      "get": {
        "tags": [
          "factories"
        ],
        "operationId": "Factories_List",
        "description": "Lists factories under the specified subscription.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "A list of factory resources.",
              "type": "object",
              "required": [
                "value"
              ],
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of factories.",
                  "items": {
                    "description": "Factory resource type.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The resource identifier.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The resource name.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The resource type.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "The resource location.",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "The resource tags."
                      },
                      "eTag": {
                        "type": "string",
                        "description": "Etag identifies change in the resource.",
                        "readOnly": true
                      },
                      "identity": {
                        "description": "Managed service identity of the factory.",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The identity type.",
                            "enum": [
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "FactoryIdentityType",
                              "modelAsString": true
                            }
                          },
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "readOnly": true,
                            "description": "The principal id of the identity."
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "readOnly": true,
                            "description": "The client tenant id of the identity."
                          },
                          "userAssignedIdentities": {
                            "description": "List of user assigned identities for the factory.",
                            "type": "object",
                            "additionalProperties": {
                              "description": "Definition of a single user assigned identity for a factory.",
                              "type": "object",
                              "properties": {}
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties of the factory.",
                        "properties": {
                          "provisioningState": {
                            "description": "Factory provisioning state, example Succeeded.",
                            "type": "string",
                            "readOnly": true
                          },
                          "createTime": {
                            "description": "Time the factory was created in ISO8601 format.",
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time"
                          },
                          "version": {
                            "description": "Version of the factory.",
                            "type": "string",
                            "readOnly": true
                          },
                          "purviewConfiguration": {
                            "description": "Purview information of the factory.",
                            "type": "object",
                            "properties": {
                              "purviewResourceId": {
                                "description": "Purview resource id.",
                                "type": "string"
                              }
                            }
                          },
                          "repoConfiguration": {
                            "description": "Git repo information of the factory.",
                            "type": "object",
                            "discriminator": "type",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Type of repo configuration."
                              },
                              "accountName": {
                                "description": "Account name.",
                                "type": "string"
                              },
                              "repositoryName": {
                                "description": "Repository name.",
                                "type": "string"
                              },
                              "collaborationBranch": {
                                "description": "Collaboration branch.",
                                "type": "string"
                              },
                              "rootFolder": {
                                "description": "Root folder.",
                                "type": "string"
                              },
                              "lastCommitId": {
                                "description": "Last commit id.",
                                "type": "string"
                              },
                              "disablePublish": {
                                "description": "Disable manual publish operation in ADF studio to favor automated publish.",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "type",
                              "accountName",
                              "repositoryName",
                              "collaborationBranch",
                              "rootFolder"
                            ]
                          },
                          "globalParameters": {
                            "description": "List of parameters for factory.",
                            "type": "object",
                            "additionalProperties": {
                              "description": "Definition of a single parameter for an entity.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "Global Parameter type.",
                                  "enum": [
                                    "Object",
                                    "String",
                                    "Int",
                                    "Float",
                                    "Bool",
                                    "Array"
                                  ],
                                  "x-ms-enum": {
                                    "name": "GlobalParameterType",
                                    "modelAsString": true
                                  }
                                },
                                "value": {
                                  "type": "object",
                                  "description": "Value of parameter."
                                }
                              },
                              "required": [
                                "type",
                                "value"
                              ]
                            }
                          },
                          "encryption": {
                            "description": "Properties to enable Customer Managed Key for the factory.",
                            "properties": {
                              "keyName": {
                                "type": "string",
                                "description": "The name of the key in Azure Key Vault to use as Customer Managed Key."
                              },
                              "vaultBaseUrl": {
                                "type": "string",
                                "description": "The url of the Azure Key Vault used for CMK."
                              },
                              "keyVersion": {
                                "type": "string",
                                "description": "The version of the key used for CMK. If not provided, latest version will be used."
                              },
                              "identity": {
                                "description": "User assigned identity to use to authenticate to customer's key vault. If not provided Managed Service Identity will be used.",
                                "properties": {
                                  "userAssignedIdentity": {
                                    "type": "string",
                                    "description": "The resource id of the user assigned identity to authenticate to customer's key vault."
                                  }
                                }
                              }
                            },
                            "required": [
                              "keyName",
                              "vaultBaseUrl"
                            ]
                          },
                          "publicNetworkAccess": {
                            "description": "Whether or not public network access is allowed for the data factory.",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PublicNetworkAccess",
                              "modelAsString": true
                            }
                          }
                        }
                      }
                    },
                    "additionalProperties": {
                      "type": "object"
                    }
                  }
                },
                "nextLink": {
                  "description": "The link to the next page of results, if any remaining results exist.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataFactory/locations/{locationId}/configureFactoryRepo": {
      "post": {
        "tags": [
          "factories"
        ],
        "operationId": "Factories_ConfigureFactoryRepo",
        "description": "Updates a factory's repo information.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "locationId",
            "description": "The location identifier.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "factoryRepoUpdate",
            "description": "Update factory repo request definition.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Factory's git repo information.",
              "properties": {
                "factoryResourceId": {
                  "description": "The factory resource id.",
                  "type": "string"
                },
                "repoConfiguration": {
                  "description": "Git repo information of the factory.",
                  "type": "object",
                  "discriminator": "type",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Type of repo configuration."
                    },
                    "accountName": {
                      "description": "Account name.",
                      "type": "string"
                    },
                    "repositoryName": {
                      "description": "Repository name.",
                      "type": "string"
                    },
                    "collaborationBranch": {
                      "description": "Collaboration branch.",
                      "type": "string"
                    },
                    "rootFolder": {
                      "description": "Root folder.",
                      "type": "string"
                    },
                    "lastCommitId": {
                      "description": "Last commit id.",
                      "type": "string"
                    },
                    "disablePublish": {
                      "description": "Disable manual publish operation in ADF studio to favor automated publish.",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "type",
                    "accountName",
                    "repositoryName",
                    "collaborationBranch",
                    "rootFolder"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Factory resource type.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "The resource tags."
                },
                "eTag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "identity": {
                  "description": "Managed service identity of the factory.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The identity type.",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "FactoryIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true,
                      "description": "The principal id of the identity."
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true,
                      "description": "The client tenant id of the identity."
                    },
                    "userAssignedIdentities": {
                      "description": "List of user assigned identities for the factory.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "Definition of a single user assigned identity for a factory.",
                        "type": "object",
                        "properties": {}
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the factory.",
                  "properties": {
                    "provisioningState": {
                      "description": "Factory provisioning state, example Succeeded.",
                      "type": "string",
                      "readOnly": true
                    },
                    "createTime": {
                      "description": "Time the factory was created in ISO8601 format.",
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time"
                    },
                    "version": {
                      "description": "Version of the factory.",
                      "type": "string",
                      "readOnly": true
                    },
                    "purviewConfiguration": {
                      "description": "Purview information of the factory.",
                      "type": "object",
                      "properties": {
                        "purviewResourceId": {
                          "description": "Purview resource id.",
                          "type": "string"
                        }
                      }
                    },
                    "repoConfiguration": {
                      "description": "Git repo information of the factory.",
                      "type": "object",
                      "discriminator": "type",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of repo configuration."
                        },
                        "accountName": {
                          "description": "Account name.",
                          "type": "string"
                        },
                        "repositoryName": {
                          "description": "Repository name.",
                          "type": "string"
                        },
                        "collaborationBranch": {
                          "description": "Collaboration branch.",
                          "type": "string"
                        },
                        "rootFolder": {
                          "description": "Root folder.",
                          "type": "string"
                        },
                        "lastCommitId": {
                          "description": "Last commit id.",
                          "type": "string"
                        },
                        "disablePublish": {
                          "description": "Disable manual publish operation in ADF studio to favor automated publish.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "type",
                        "accountName",
                        "repositoryName",
                        "collaborationBranch",
                        "rootFolder"
                      ]
                    },
                    "globalParameters": {
                      "description": "List of parameters for factory.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "Definition of a single parameter for an entity.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Global Parameter type.",
                            "enum": [
                              "Object",
                              "String",
                              "Int",
                              "Float",
                              "Bool",
                              "Array"
                            ],
                            "x-ms-enum": {
                              "name": "GlobalParameterType",
                              "modelAsString": true
                            }
                          },
                          "value": {
                            "type": "object",
                            "description": "Value of parameter."
                          }
                        },
                        "required": [
                          "type",
                          "value"
                        ]
                      }
                    },
                    "encryption": {
                      "description": "Properties to enable Customer Managed Key for the factory.",
                      "properties": {
                        "keyName": {
                          "type": "string",
                          "description": "The name of the key in Azure Key Vault to use as Customer Managed Key."
                        },
                        "vaultBaseUrl": {
                          "type": "string",
                          "description": "The url of the Azure Key Vault used for CMK."
                        },
                        "keyVersion": {
                          "type": "string",
                          "description": "The version of the key used for CMK. If not provided, latest version will be used."
                        },
                        "identity": {
                          "description": "User assigned identity to use to authenticate to customer's key vault. If not provided Managed Service Identity will be used.",
                          "properties": {
                            "userAssignedIdentity": {
                              "type": "string",
                              "description": "The resource id of the user assigned identity to authenticate to customer's key vault."
                            }
                          }
                        }
                      },
                      "required": [
                        "keyName",
                        "vaultBaseUrl"
                      ]
                    },
                    "publicNetworkAccess": {
                      "description": "Whether or not public network access is allowed for the data factory.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      }
                    }
                  }
                }
              },
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataFactory/locations/{locationId}/getFeatureValue": {
      "post": {
        "tags": [
          "exposureControl"
        ],
        "operationId": "ExposureControl_GetFeatureValue",
        "description": "Get exposure control feature for specific location.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "locationId",
            "description": "The location identifier.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "exposureControlRequest",
            "description": "The exposure control request.",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The exposure control request.",
              "properties": {
                "featureName": {
                  "type": "string",
                  "description": "The feature name."
                },
                "featureType": {
                  "type": "string",
                  "description": "The feature type."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "description": "The exposure control response.",
              "properties": {
                "featureName": {
                  "type": "string",
                  "description": "The feature name.",
                  "readOnly": true
                },
                "value": {
                  "type": "string",
                  "description": "The feature value.",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/getFeatureValue": {
      "post": {
        "tags": [
          "exposureControl"
        ],
        "operationId": "ExposureControl_GetFeatureValueByFactory",
        "description": "Get exposure control feature for specific factory.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "exposureControlRequest",
            "description": "The exposure control request.",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The exposure control request.",
              "properties": {
                "featureName": {
                  "type": "string",
                  "description": "The feature name."
                },
                "featureType": {
                  "type": "string",
                  "description": "The feature type."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "description": "The exposure control response.",
              "properties": {
                "featureName": {
                  "type": "string",
                  "description": "The feature name.",
                  "readOnly": true
                },
                "value": {
                  "type": "string",
                  "description": "The feature value.",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/queryFeaturesValue": {
      "post": {
        "tags": [
          "exposureControl"
        ],
        "operationId": "ExposureControl_QueryFeatureValuesByFactory",
        "description": "Get list of exposure control features for specific factory.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "exposureControlBatchRequest",
            "description": "The exposure control request for list of features.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "A list of exposure control features.",
              "type": "object",
              "required": [
                "exposureControlRequests"
              ],
              "properties": {
                "exposureControlRequests": {
                  "type": "array",
                  "description": "List of exposure control features.",
                  "items": {
                    "type": "object",
                    "description": "The exposure control request.",
                    "properties": {
                      "featureName": {
                        "type": "string",
                        "description": "The feature name."
                      },
                      "featureType": {
                        "type": "string",
                        "description": "The feature type."
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "featureName"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "A list of exposure control feature values.",
              "type": "object",
              "required": [
                "exposureControlResponses"
              ],
              "properties": {
                "exposureControlResponses": {
                  "type": "array",
                  "description": "List of exposure control feature values.",
                  "items": {
                    "type": "object",
                    "description": "The exposure control response.",
                    "properties": {
                      "featureName": {
                        "type": "string",
                        "description": "The feature name.",
                        "readOnly": true
                      },
                      "value": {
                        "type": "string",
                        "description": "The feature value.",
                        "readOnly": true
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "featureName"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories": {
      "get": {
        "tags": [
          "factories"
        ],
        "operationId": "Factories_ListByResourceGroup",
        "description": "Lists factories.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "A list of factory resources.",
              "type": "object",
              "required": [
                "value"
              ],
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of factories.",
                  "items": {
                    "description": "Factory resource type.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The resource identifier.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The resource name.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The resource type.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "The resource location.",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "The resource tags."
                      },
                      "eTag": {
                        "type": "string",
                        "description": "Etag identifies change in the resource.",
                        "readOnly": true
                      },
                      "identity": {
                        "description": "Managed service identity of the factory.",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The identity type.",
                            "enum": [
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "FactoryIdentityType",
                              "modelAsString": true
                            }
                          },
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "readOnly": true,
                            "description": "The principal id of the identity."
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "readOnly": true,
                            "description": "The client tenant id of the identity."
                          },
                          "userAssignedIdentities": {
                            "description": "List of user assigned identities for the factory.",
                            "type": "object",
                            "additionalProperties": {
                              "description": "Definition of a single user assigned identity for a factory.",
                              "type": "object",
                              "properties": {}
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties of the factory.",
                        "properties": {
                          "provisioningState": {
                            "description": "Factory provisioning state, example Succeeded.",
                            "type": "string",
                            "readOnly": true
                          },
                          "createTime": {
                            "description": "Time the factory was created in ISO8601 format.",
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time"
                          },
                          "version": {
                            "description": "Version of the factory.",
                            "type": "string",
                            "readOnly": true
                          },
                          "purviewConfiguration": {
                            "description": "Purview information of the factory.",
                            "type": "object",
                            "properties": {
                              "purviewResourceId": {
                                "description": "Purview resource id.",
                                "type": "string"
                              }
                            }
                          },
                          "repoConfiguration": {
                            "description": "Git repo information of the factory.",
                            "type": "object",
                            "discriminator": "type",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Type of repo configuration."
                              },
                              "accountName": {
                                "description": "Account name.",
                                "type": "string"
                              },
                              "repositoryName": {
                                "description": "Repository name.",
                                "type": "string"
                              },
                              "collaborationBranch": {
                                "description": "Collaboration branch.",
                                "type": "string"
                              },
                              "rootFolder": {
                                "description": "Root folder.",
                                "type": "string"
                              },
                              "lastCommitId": {
                                "description": "Last commit id.",
                                "type": "string"
                              },
                              "disablePublish": {
                                "description": "Disable manual publish operation in ADF studio to favor automated publish.",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "type",
                              "accountName",
                              "repositoryName",
                              "collaborationBranch",
                              "rootFolder"
                            ]
                          },
                          "globalParameters": {
                            "description": "List of parameters for factory.",
                            "type": "object",
                            "additionalProperties": {
                              "description": "Definition of a single parameter for an entity.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "Global Parameter type.",
                                  "enum": [
                                    "Object",
                                    "String",
                                    "Int",
                                    "Float",
                                    "Bool",
                                    "Array"
                                  ],
                                  "x-ms-enum": {
                                    "name": "GlobalParameterType",
                                    "modelAsString": true
                                  }
                                },
                                "value": {
                                  "type": "object",
                                  "description": "Value of parameter."
                                }
                              },
                              "required": [
                                "type",
                                "value"
                              ]
                            }
                          },
                          "encryption": {
                            "description": "Properties to enable Customer Managed Key for the factory.",
                            "properties": {
                              "keyName": {
                                "type": "string",
                                "description": "The name of the key in Azure Key Vault to use as Customer Managed Key."
                              },
                              "vaultBaseUrl": {
                                "type": "string",
                                "description": "The url of the Azure Key Vault used for CMK."
                              },
                              "keyVersion": {
                                "type": "string",
                                "description": "The version of the key used for CMK. If not provided, latest version will be used."
                              },
                              "identity": {
                                "description": "User assigned identity to use to authenticate to customer's key vault. If not provided Managed Service Identity will be used.",
                                "properties": {
                                  "userAssignedIdentity": {
                                    "type": "string",
                                    "description": "The resource id of the user assigned identity to authenticate to customer's key vault."
                                  }
                                }
                              }
                            },
                            "required": [
                              "keyName",
                              "vaultBaseUrl"
                            ]
                          },
                          "publicNetworkAccess": {
                            "description": "Whether or not public network access is allowed for the data factory.",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PublicNetworkAccess",
                              "modelAsString": true
                            }
                          }
                        }
                      }
                    },
                    "additionalProperties": {
                      "type": "object"
                    }
                  }
                },
                "nextLink": {
                  "description": "The link to the next page of results, if any remaining results exist.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}": {
      "put": {
        "tags": [
          "factories"
        ],
        "operationId": "Factories_CreateOrUpdate",
        "description": "Creates or updates a factory.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "factory",
            "description": "Factory resource definition.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Factory resource type.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "The resource tags."
                },
                "eTag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "identity": {
                  "description": "Managed service identity of the factory.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The identity type.",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "FactoryIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true,
                      "description": "The principal id of the identity."
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true,
                      "description": "The client tenant id of the identity."
                    },
                    "userAssignedIdentities": {
                      "description": "List of user assigned identities for the factory.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "Definition of a single user assigned identity for a factory.",
                        "type": "object",
                        "properties": {}
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the factory.",
                  "properties": {
                    "provisioningState": {
                      "description": "Factory provisioning state, example Succeeded.",
                      "type": "string",
                      "readOnly": true
                    },
                    "createTime": {
                      "description": "Time the factory was created in ISO8601 format.",
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time"
                    },
                    "version": {
                      "description": "Version of the factory.",
                      "type": "string",
                      "readOnly": true
                    },
                    "purviewConfiguration": {
                      "description": "Purview information of the factory.",
                      "type": "object",
                      "properties": {
                        "purviewResourceId": {
                          "description": "Purview resource id.",
                          "type": "string"
                        }
                      }
                    },
                    "repoConfiguration": {
                      "description": "Git repo information of the factory.",
                      "type": "object",
                      "discriminator": "type",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of repo configuration."
                        },
                        "accountName": {
                          "description": "Account name.",
                          "type": "string"
                        },
                        "repositoryName": {
                          "description": "Repository name.",
                          "type": "string"
                        },
                        "collaborationBranch": {
                          "description": "Collaboration branch.",
                          "type": "string"
                        },
                        "rootFolder": {
                          "description": "Root folder.",
                          "type": "string"
                        },
                        "lastCommitId": {
                          "description": "Last commit id.",
                          "type": "string"
                        },
                        "disablePublish": {
                          "description": "Disable manual publish operation in ADF studio to favor automated publish.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "type",
                        "accountName",
                        "repositoryName",
                        "collaborationBranch",
                        "rootFolder"
                      ]
                    },
                    "globalParameters": {
                      "description": "List of parameters for factory.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "Definition of a single parameter for an entity.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Global Parameter type.",
                            "enum": [
                              "Object",
                              "String",
                              "Int",
                              "Float",
                              "Bool",
                              "Array"
                            ],
                            "x-ms-enum": {
                              "name": "GlobalParameterType",
                              "modelAsString": true
                            }
                          },
                          "value": {
                            "type": "object",
                            "description": "Value of parameter."
                          }
                        },
                        "required": [
                          "type",
                          "value"
                        ]
                      }
                    },
                    "encryption": {
                      "description": "Properties to enable Customer Managed Key for the factory.",
                      "properties": {
                        "keyName": {
                          "type": "string",
                          "description": "The name of the key in Azure Key Vault to use as Customer Managed Key."
                        },
                        "vaultBaseUrl": {
                          "type": "string",
                          "description": "The url of the Azure Key Vault used for CMK."
                        },
                        "keyVersion": {
                          "type": "string",
                          "description": "The version of the key used for CMK. If not provided, latest version will be used."
                        },
                        "identity": {
                          "description": "User assigned identity to use to authenticate to customer's key vault. If not provided Managed Service Identity will be used.",
                          "properties": {
                            "userAssignedIdentity": {
                              "type": "string",
                              "description": "The resource id of the user assigned identity to authenticate to customer's key vault."
                            }
                          }
                        }
                      },
                      "required": [
                        "keyName",
                        "vaultBaseUrl"
                      ]
                    },
                    "publicNetworkAccess": {
                      "description": "Whether or not public network access is allowed for the data factory.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      }
                    }
                  }
                }
              },
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the factory entity. Should only be specified for update, for which it should match existing entity or can be * for unconditional update."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Factory resource type.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "The resource tags."
                },
                "eTag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "identity": {
                  "description": "Managed service identity of the factory.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The identity type.",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "FactoryIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true,
                      "description": "The principal id of the identity."
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true,
                      "description": "The client tenant id of the identity."
                    },
                    "userAssignedIdentities": {
                      "description": "List of user assigned identities for the factory.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "Definition of a single user assigned identity for a factory.",
                        "type": "object",
                        "properties": {}
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the factory.",
                  "properties": {
                    "provisioningState": {
                      "description": "Factory provisioning state, example Succeeded.",
                      "type": "string",
                      "readOnly": true
                    },
                    "createTime": {
                      "description": "Time the factory was created in ISO8601 format.",
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time"
                    },
                    "version": {
                      "description": "Version of the factory.",
                      "type": "string",
                      "readOnly": true
                    },
                    "purviewConfiguration": {
                      "description": "Purview information of the factory.",
                      "type": "object",
                      "properties": {
                        "purviewResourceId": {
                          "description": "Purview resource id.",
                          "type": "string"
                        }
                      }
                    },
                    "repoConfiguration": {
                      "description": "Git repo information of the factory.",
                      "type": "object",
                      "discriminator": "type",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of repo configuration."
                        },
                        "accountName": {
                          "description": "Account name.",
                          "type": "string"
                        },
                        "repositoryName": {
                          "description": "Repository name.",
                          "type": "string"
                        },
                        "collaborationBranch": {
                          "description": "Collaboration branch.",
                          "type": "string"
                        },
                        "rootFolder": {
                          "description": "Root folder.",
                          "type": "string"
                        },
                        "lastCommitId": {
                          "description": "Last commit id.",
                          "type": "string"
                        },
                        "disablePublish": {
                          "description": "Disable manual publish operation in ADF studio to favor automated publish.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "type",
                        "accountName",
                        "repositoryName",
                        "collaborationBranch",
                        "rootFolder"
                      ]
                    },
                    "globalParameters": {
                      "description": "List of parameters for factory.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "Definition of a single parameter for an entity.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Global Parameter type.",
                            "enum": [
                              "Object",
                              "String",
                              "Int",
                              "Float",
                              "Bool",
                              "Array"
                            ],
                            "x-ms-enum": {
                              "name": "GlobalParameterType",
                              "modelAsString": true
                            }
                          },
                          "value": {
                            "type": "object",
                            "description": "Value of parameter."
                          }
                        },
                        "required": [
                          "type",
                          "value"
                        ]
                      }
                    },
                    "encryption": {
                      "description": "Properties to enable Customer Managed Key for the factory.",
                      "properties": {
                        "keyName": {
                          "type": "string",
                          "description": "The name of the key in Azure Key Vault to use as Customer Managed Key."
                        },
                        "vaultBaseUrl": {
                          "type": "string",
                          "description": "The url of the Azure Key Vault used for CMK."
                        },
                        "keyVersion": {
                          "type": "string",
                          "description": "The version of the key used for CMK. If not provided, latest version will be used."
                        },
                        "identity": {
                          "description": "User assigned identity to use to authenticate to customer's key vault. If not provided Managed Service Identity will be used.",
                          "properties": {
                            "userAssignedIdentity": {
                              "type": "string",
                              "description": "The resource id of the user assigned identity to authenticate to customer's key vault."
                            }
                          }
                        }
                      },
                      "required": [
                        "keyName",
                        "vaultBaseUrl"
                      ]
                    },
                    "publicNetworkAccess": {
                      "description": "Whether or not public network access is allowed for the data factory.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      }
                    }
                  }
                }
              },
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "factories"
        ],
        "operationId": "Factories_Update",
        "description": "Updates a factory.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "factoryUpdateParameters",
            "description": "The parameters for updating a factory.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Parameters for updating a factory resource.",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "The resource tags."
                },
                "identity": {
                  "description": "Managed service identity of the factory.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The identity type.",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "FactoryIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true,
                      "description": "The principal id of the identity."
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true,
                      "description": "The client tenant id of the identity."
                    },
                    "userAssignedIdentities": {
                      "description": "List of user assigned identities for the factory.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "Definition of a single user assigned identity for a factory.",
                        "type": "object",
                        "properties": {}
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of update the factory.",
                  "type": "object",
                  "properties": {
                    "publicNetworkAccess": {
                      "description": "Whether or not public network access is allowed for the data factory.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Factory resource type.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "The resource tags."
                },
                "eTag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "identity": {
                  "description": "Managed service identity of the factory.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The identity type.",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "FactoryIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true,
                      "description": "The principal id of the identity."
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true,
                      "description": "The client tenant id of the identity."
                    },
                    "userAssignedIdentities": {
                      "description": "List of user assigned identities for the factory.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "Definition of a single user assigned identity for a factory.",
                        "type": "object",
                        "properties": {}
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the factory.",
                  "properties": {
                    "provisioningState": {
                      "description": "Factory provisioning state, example Succeeded.",
                      "type": "string",
                      "readOnly": true
                    },
                    "createTime": {
                      "description": "Time the factory was created in ISO8601 format.",
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time"
                    },
                    "version": {
                      "description": "Version of the factory.",
                      "type": "string",
                      "readOnly": true
                    },
                    "purviewConfiguration": {
                      "description": "Purview information of the factory.",
                      "type": "object",
                      "properties": {
                        "purviewResourceId": {
                          "description": "Purview resource id.",
                          "type": "string"
                        }
                      }
                    },
                    "repoConfiguration": {
                      "description": "Git repo information of the factory.",
                      "type": "object",
                      "discriminator": "type",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of repo configuration."
                        },
                        "accountName": {
                          "description": "Account name.",
                          "type": "string"
                        },
                        "repositoryName": {
                          "description": "Repository name.",
                          "type": "string"
                        },
                        "collaborationBranch": {
                          "description": "Collaboration branch.",
                          "type": "string"
                        },
                        "rootFolder": {
                          "description": "Root folder.",
                          "type": "string"
                        },
                        "lastCommitId": {
                          "description": "Last commit id.",
                          "type": "string"
                        },
                        "disablePublish": {
                          "description": "Disable manual publish operation in ADF studio to favor automated publish.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "type",
                        "accountName",
                        "repositoryName",
                        "collaborationBranch",
                        "rootFolder"
                      ]
                    },
                    "globalParameters": {
                      "description": "List of parameters for factory.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "Definition of a single parameter for an entity.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Global Parameter type.",
                            "enum": [
                              "Object",
                              "String",
                              "Int",
                              "Float",
                              "Bool",
                              "Array"
                            ],
                            "x-ms-enum": {
                              "name": "GlobalParameterType",
                              "modelAsString": true
                            }
                          },
                          "value": {
                            "type": "object",
                            "description": "Value of parameter."
                          }
                        },
                        "required": [
                          "type",
                          "value"
                        ]
                      }
                    },
                    "encryption": {
                      "description": "Properties to enable Customer Managed Key for the factory.",
                      "properties": {
                        "keyName": {
                          "type": "string",
                          "description": "The name of the key in Azure Key Vault to use as Customer Managed Key."
                        },
                        "vaultBaseUrl": {
                          "type": "string",
                          "description": "The url of the Azure Key Vault used for CMK."
                        },
                        "keyVersion": {
                          "type": "string",
                          "description": "The version of the key used for CMK. If not provided, latest version will be used."
                        },
                        "identity": {
                          "description": "User assigned identity to use to authenticate to customer's key vault. If not provided Managed Service Identity will be used.",
                          "properties": {
                            "userAssignedIdentity": {
                              "type": "string",
                              "description": "The resource id of the user assigned identity to authenticate to customer's key vault."
                            }
                          }
                        }
                      },
                      "required": [
                        "keyName",
                        "vaultBaseUrl"
                      ]
                    },
                    "publicNetworkAccess": {
                      "description": "Whether or not public network access is allowed for the data factory.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      }
                    }
                  }
                }
              },
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "factories"
        ],
        "operationId": "Factories_Get",
        "description": "Gets a factory.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the factory entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Factory resource type.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "The resource tags."
                },
                "eTag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "identity": {
                  "description": "Managed service identity of the factory.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The identity type.",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "FactoryIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true,
                      "description": "The principal id of the identity."
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "readOnly": true,
                      "description": "The client tenant id of the identity."
                    },
                    "userAssignedIdentities": {
                      "description": "List of user assigned identities for the factory.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "Definition of a single user assigned identity for a factory.",
                        "type": "object",
                        "properties": {}
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the factory.",
                  "properties": {
                    "provisioningState": {
                      "description": "Factory provisioning state, example Succeeded.",
                      "type": "string",
                      "readOnly": true
                    },
                    "createTime": {
                      "description": "Time the factory was created in ISO8601 format.",
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time"
                    },
                    "version": {
                      "description": "Version of the factory.",
                      "type": "string",
                      "readOnly": true
                    },
                    "purviewConfiguration": {
                      "description": "Purview information of the factory.",
                      "type": "object",
                      "properties": {
                        "purviewResourceId": {
                          "description": "Purview resource id.",
                          "type": "string"
                        }
                      }
                    },
                    "repoConfiguration": {
                      "description": "Git repo information of the factory.",
                      "type": "object",
                      "discriminator": "type",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of repo configuration."
                        },
                        "accountName": {
                          "description": "Account name.",
                          "type": "string"
                        },
                        "repositoryName": {
                          "description": "Repository name.",
                          "type": "string"
                        },
                        "collaborationBranch": {
                          "description": "Collaboration branch.",
                          "type": "string"
                        },
                        "rootFolder": {
                          "description": "Root folder.",
                          "type": "string"
                        },
                        "lastCommitId": {
                          "description": "Last commit id.",
                          "type": "string"
                        },
                        "disablePublish": {
                          "description": "Disable manual publish operation in ADF studio to favor automated publish.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "type",
                        "accountName",
                        "repositoryName",
                        "collaborationBranch",
                        "rootFolder"
                      ]
                    },
                    "globalParameters": {
                      "description": "List of parameters for factory.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "Definition of a single parameter for an entity.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Global Parameter type.",
                            "enum": [
                              "Object",
                              "String",
                              "Int",
                              "Float",
                              "Bool",
                              "Array"
                            ],
                            "x-ms-enum": {
                              "name": "GlobalParameterType",
                              "modelAsString": true
                            }
                          },
                          "value": {
                            "type": "object",
                            "description": "Value of parameter."
                          }
                        },
                        "required": [
                          "type",
                          "value"
                        ]
                      }
                    },
                    "encryption": {
                      "description": "Properties to enable Customer Managed Key for the factory.",
                      "properties": {
                        "keyName": {
                          "type": "string",
                          "description": "The name of the key in Azure Key Vault to use as Customer Managed Key."
                        },
                        "vaultBaseUrl": {
                          "type": "string",
                          "description": "The url of the Azure Key Vault used for CMK."
                        },
                        "keyVersion": {
                          "type": "string",
                          "description": "The version of the key used for CMK. If not provided, latest version will be used."
                        },
                        "identity": {
                          "description": "User assigned identity to use to authenticate to customer's key vault. If not provided Managed Service Identity will be used.",
                          "properties": {
                            "userAssignedIdentity": {
                              "type": "string",
                              "description": "The resource id of the user assigned identity to authenticate to customer's key vault."
                            }
                          }
                        }
                      },
                      "required": [
                        "keyName",
                        "vaultBaseUrl"
                      ]
                    },
                    "publicNetworkAccess": {
                      "description": "Whether or not public network access is allowed for the data factory.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      }
                    }
                  }
                }
              },
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "factories"
        ],
        "operationId": "Factories_Delete",
        "description": "Deletes a factory.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/getGitHubAccessToken": {
      "post": {
        "tags": [
          "factories"
        ],
        "operationId": "Factories_GetGitHubAccessToken",
        "description": "Get GitHub Access Token.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "gitHubAccessTokenRequest",
            "description": "Get GitHub access token request definition.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Get GitHub access token request definition.",
              "properties": {
                "gitHubAccessCode": {
                  "description": "GitHub access code.",
                  "type": "string"
                },
                "gitHubClientId": {
                  "description": "GitHub application client ID.",
                  "type": "string"
                },
                "gitHubClientSecret": {
                  "description": "GitHub bring your own app client secret information.",
                  "type": "object",
                  "properties": {
                    "byoaSecretAkvUrl": {
                      "description": "Bring your own app client secret AKV URL.",
                      "type": "string"
                    },
                    "byoaSecretName": {
                      "description": "Bring your own app client secret name in AKV.",
                      "type": "string"
                    }
                  }
                },
                "gitHubAccessTokenBaseUrl": {
                  "description": "GitHub access token base URL.",
                  "type": "string"
                }
              },
              "required": [
                "gitHubAccessCode",
                "gitHubAccessTokenBaseUrl"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Get GitHub access token response definition.",
              "properties": {
                "gitHubAccessToken": {
                  "description": "GitHub access token.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/getDataPlaneAccess": {
      "post": {
        "tags": [
          "factories"
        ],
        "operationId": "Factories_GetDataPlaneAccess",
        "description": "Get Data Plane access.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "policy",
            "description": "Data Plane user access policy definition.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Get Data Plane read only token request definition.",
              "properties": {
                "permissions": {
                  "description": "The string with permissions for Data Plane access. Currently only 'r' is supported which grants read only access.",
                  "type": "string"
                },
                "accessResourcePath": {
                  "description": "The resource path to get access relative to factory. Currently only empty string is supported which corresponds to the factory resource.",
                  "type": "string"
                },
                "profileName": {
                  "description": "The name of the profile. Currently only the default is supported. The default value is DefaultProfile.",
                  "type": "string"
                },
                "startTime": {
                  "description": "Start time for the token. If not specified the current time will be used.",
                  "type": "string"
                },
                "expireTime": {
                  "description": "Expiration time for the token. Maximum duration for the token is eight hours and by default the token will expire in eight hours.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Get Data Plane read only token response definition.",
              "properties": {
                "policy": {
                  "description": "Get Data Plane read only token request definition.",
                  "properties": {
                    "permissions": {
                      "description": "The string with permissions for Data Plane access. Currently only 'r' is supported which grants read only access.",
                      "type": "string"
                    },
                    "accessResourcePath": {
                      "description": "The resource path to get access relative to factory. Currently only empty string is supported which corresponds to the factory resource.",
                      "type": "string"
                    },
                    "profileName": {
                      "description": "The name of the profile. Currently only the default is supported. The default value is DefaultProfile.",
                      "type": "string"
                    },
                    "startTime": {
                      "description": "Start time for the token. If not specified the current time will be used.",
                      "type": "string"
                    },
                    "expireTime": {
                      "description": "Expiration time for the token. Maximum duration for the token is eight hours and by default the token will expire in eight hours.",
                      "type": "string"
                    }
                  }
                },
                "accessToken": {
                  "description": "Data Plane read only access token.",
                  "type": "string"
                },
                "dataPlaneUrl": {
                  "description": "Data Plane service base URL.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes": {
      "get": {
        "tags": [
          "integrationRuntimes"
        ],
        "operationId": "IntegrationRuntimes_ListByFactory",
        "description": "Lists integration runtimes.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "A list of integration runtime resources.",
              "type": "object",
              "required": [
                "value"
              ],
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of integration runtimes.",
                  "items": {
                    "description": "Integration runtime resource type.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The resource identifier.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The resource name.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The resource type.",
                        "readOnly": true
                      },
                      "etag": {
                        "type": "string",
                        "description": "Etag identifies change in the resource.",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Integration runtime properties.",
                        "type": "object",
                        "discriminator": "type",
                        "properties": {
                          "type": {
                            "description": "Type of integration runtime.",
                            "type": "string",
                            "enum": [
                              "Managed",
                              "SelfHosted"
                            ],
                            "x-ms-enum": {
                              "name": "IntegrationRuntimeType",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "description": "Integration runtime description.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "object"
                        },
                        "required": [
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "description": "The link to the next page of results, if any remaining results exist.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}": {
      "put": {
        "tags": [
          "integrationRuntimes"
        ],
        "operationId": "IntegrationRuntimes_CreateOrUpdate",
        "description": "Creates or updates an integration runtime.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "description": "The integration runtime name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the integration runtime entity. Should only be specified for update, for which it should match existing entity or can be * for unconditional update."
          },
          {
            "name": "integrationRuntime",
            "description": "Integration runtime resource definition.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Integration runtime resource type.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "etag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Integration runtime properties.",
                  "type": "object",
                  "discriminator": "type",
                  "properties": {
                    "type": {
                      "description": "Type of integration runtime.",
                      "type": "string",
                      "enum": [
                        "Managed",
                        "SelfHosted"
                      ],
                      "x-ms-enum": {
                        "name": "IntegrationRuntimeType",
                        "modelAsString": true
                      }
                    },
                    "description": {
                      "description": "Integration runtime description.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": {
                    "type": "object"
                  },
                  "required": [
                    "type"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Integration runtime resource type.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "etag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Integration runtime properties.",
                  "type": "object",
                  "discriminator": "type",
                  "properties": {
                    "type": {
                      "description": "Type of integration runtime.",
                      "type": "string",
                      "enum": [
                        "Managed",
                        "SelfHosted"
                      ],
                      "x-ms-enum": {
                        "name": "IntegrationRuntimeType",
                        "modelAsString": true
                      }
                    },
                    "description": {
                      "description": "Integration runtime description.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": {
                    "type": "object"
                  },
                  "required": [
                    "type"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "get": {
        "tags": [
          "integrationRuntimes"
        ],
        "operationId": "IntegrationRuntimes_Get",
        "description": "Gets an integration runtime.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "description": "The integration runtime name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the integration runtime entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Integration runtime resource type.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "etag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Integration runtime properties.",
                  "type": "object",
                  "discriminator": "type",
                  "properties": {
                    "type": {
                      "description": "Type of integration runtime.",
                      "type": "string",
                      "enum": [
                        "Managed",
                        "SelfHosted"
                      ],
                      "x-ms-enum": {
                        "name": "IntegrationRuntimeType",
                        "modelAsString": true
                      }
                    },
                    "description": {
                      "description": "Integration runtime description.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": {
                    "type": "object"
                  },
                  "required": [
                    "type"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "patch": {
        "tags": [
          "integrationRuntimes"
        ],
        "operationId": "IntegrationRuntimes_Update",
        "description": "Updates an integration runtime.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "description": "The integration runtime name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "updateIntegrationRuntimeRequest",
            "description": "The parameters for updating an integration runtime.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Update integration runtime request.",
              "type": "object",
              "properties": {
                "autoUpdate": {
                  "description": "Enables or disables the auto-update feature of the self-hosted integration runtime. See https://go.microsoft.com/fwlink/?linkid=854189.",
                  "type": "string",
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "x-ms-enum": {
                    "name": "IntegrationRuntimeAutoUpdate",
                    "modelAsString": true
                  }
                },
                "updateDelayOffset": {
                  "description": "The time offset (in hours) in the day, e.g., PT03H is 3 hours. The integration runtime auto update will happen on that time.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Integration runtime resource type.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "etag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Integration runtime properties.",
                  "type": "object",
                  "discriminator": "type",
                  "properties": {
                    "type": {
                      "description": "Type of integration runtime.",
                      "type": "string",
                      "enum": [
                        "Managed",
                        "SelfHosted"
                      ],
                      "x-ms-enum": {
                        "name": "IntegrationRuntimeType",
                        "modelAsString": true
                      }
                    },
                    "description": {
                      "description": "Integration runtime description.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": {
                    "type": "object"
                  },
                  "required": [
                    "type"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "delete": {
        "tags": [
          "integrationRuntimes"
        ],
        "operationId": "IntegrationRuntimes_Delete",
        "description": "Deletes an integration runtime.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "description": "The integration runtime name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/getStatus": {
      "post": {
        "tags": [
          "integrationRuntimes"
        ],
        "operationId": "IntegrationRuntimes_GetStatus",
        "description": "Gets detailed status information for an integration runtime.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "description": "The integration runtime name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Integration runtime status response.",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The integration runtime name.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Integration runtime properties.",
                  "type": "object",
                  "discriminator": "type",
                  "properties": {
                    "type": {
                      "description": "Type of integration runtime.",
                      "type": "string",
                      "enum": [
                        "Managed",
                        "SelfHosted"
                      ],
                      "x-ms-enum": {
                        "name": "IntegrationRuntimeType",
                        "modelAsString": true
                      }
                    },
                    "dataFactoryName": {
                      "description": "The data factory name which the integration runtime belong to.",
                      "type": "string",
                      "readOnly": true
                    },
                    "state": {
                      "description": "The state of integration runtime.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Initial",
                        "Stopped",
                        "Started",
                        "Starting",
                        "Stopping",
                        "NeedRegistration",
                        "Online",
                        "Limited",
                        "Offline",
                        "AccessDenied"
                      ],
                      "x-ms-enum": {
                        "name": "IntegrationRuntimeState",
                        "modelAsString": true
                      }
                    }
                  },
                  "additionalProperties": {
                    "type": "object"
                  },
                  "required": [
                    "type"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/outboundNetworkDependenciesEndpoints": {
      "get": {
        "tags": [
          "integrationRuntimes"
        ],
        "operationId": "IntegrationRuntimes_ListOutboundNetworkDependenciesEndpoints",
        "description": "Gets the list of outbound network dependencies for a given Azure-SSIS integration runtime.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "description": "The integration runtime name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Azure-SSIS integration runtime outbound network dependency endpoints.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "The list of outbound network dependency endpoints.",
                  "type": "array",
                  "items": {
                    "description": "Azure-SSIS integration runtime outbound network dependency endpoints for one category.",
                    "type": "object",
                    "properties": {
                      "category": {
                        "description": "The category of outbound network dependency.",
                        "type": "string"
                      },
                      "endpoints": {
                        "description": "The endpoints for outbound network dependency.",
                        "type": "array",
                        "items": {
                          "description": "The endpoint for Azure-SSIS integration runtime outbound network dependency.",
                          "type": "object",
                          "properties": {
                            "domainName": {
                              "description": "The domain name of endpoint.",
                              "type": "string"
                            },
                            "endpointDetails": {
                              "description": "The details of endpoint.",
                              "type": "array",
                              "items": {
                                "description": "The details of Azure-SSIS integration runtime outbound network dependency endpoint.",
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "description": "The port of endpoint.",
                                    "type": "integer",
                                    "format": "int32"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "port"
                              ]
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "domainName"
                        ]
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "category"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/getConnectionInfo": {
      "post": {
        "tags": [
          "integrationRuntimes"
        ],
        "operationId": "IntegrationRuntimes_GetConnectionInfo",
        "description": "Gets the on-premises integration runtime connection information for encrypting the on-premises data source credentials.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "description": "The integration runtime name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Connection information for encrypting the on-premises data source credentials.",
              "type": "object",
              "properties": {
                "serviceToken": {
                  "description": "The token generated in service. Callers use this token to authenticate to integration runtime.",
                  "type": "string",
                  "readOnly": true
                },
                "identityCertThumbprint": {
                  "description": "The integration runtime SSL certificate thumbprint. Click-Once application uses it to do server validation.",
                  "type": "string",
                  "readOnly": true
                },
                "hostServiceUri": {
                  "description": "The on-premises integration runtime host URL.",
                  "type": "string",
                  "readOnly": true
                },
                "version": {
                  "description": "The integration runtime version.",
                  "type": "string",
                  "readOnly": true
                },
                "publicKey": {
                  "description": "The public key for encrypting a credential when transferring the credential to the integration runtime.",
                  "type": "string",
                  "readOnly": true
                },
                "isIdentityCertExprired": {
                  "description": "Whether the identity certificate is expired.",
                  "type": "boolean",
                  "readOnly": true
                }
              },
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/regenerateAuthKey": {
      "post": {
        "tags": [
          "integrationRuntimes"
        ],
        "operationId": "IntegrationRuntimes_RegenerateAuthKey",
        "description": "Regenerates the authentication key for an integration runtime.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "description": "The integration runtime name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "regenerateKeyParameters",
            "description": "The parameters for regenerating integration runtime authentication key.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Parameters to regenerate the authentication key.",
              "type": "object",
              "properties": {
                "keyName": {
                  "description": "The name of the authentication key to regenerate.",
                  "type": "string",
                  "enum": [
                    "authKey1",
                    "authKey2"
                  ],
                  "x-ms-enum": {
                    "name": "IntegrationRuntimeAuthKeyName",
                    "modelAsString": true
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "The integration runtime authentication keys.",
              "type": "object",
              "properties": {
                "authKey1": {
                  "type": "string",
                  "description": "The primary integration runtime authentication key."
                },
                "authKey2": {
                  "type": "string",
                  "description": "The secondary integration runtime authentication key."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/listAuthKeys": {
      "post": {
        "tags": [
          "integrationRuntimes"
        ],
        "operationId": "IntegrationRuntimes_ListAuthKeys",
        "description": "Retrieves the authentication keys for an integration runtime.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "description": "The integration runtime name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "The integration runtime authentication keys.",
              "type": "object",
              "properties": {
                "authKey1": {
                  "type": "string",
                  "description": "The primary integration runtime authentication key."
                },
                "authKey2": {
                  "type": "string",
                  "description": "The secondary integration runtime authentication key."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/start": {
      "post": {
        "tags": [
          "integrationRuntimes"
        ],
        "operationId": "IntegrationRuntimes_Start",
        "description": "Starts a ManagedReserved type integration runtime.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "description": "The integration runtime name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Integration runtime status response.",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The integration runtime name.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Integration runtime properties.",
                  "type": "object",
                  "discriminator": "type",
                  "properties": {
                    "type": {
                      "description": "Type of integration runtime.",
                      "type": "string",
                      "enum": [
                        "Managed",
                        "SelfHosted"
                      ],
                      "x-ms-enum": {
                        "name": "IntegrationRuntimeType",
                        "modelAsString": true
                      }
                    },
                    "dataFactoryName": {
                      "description": "The data factory name which the integration runtime belong to.",
                      "type": "string",
                      "readOnly": true
                    },
                    "state": {
                      "description": "The state of integration runtime.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Initial",
                        "Stopped",
                        "Started",
                        "Starting",
                        "Stopping",
                        "NeedRegistration",
                        "Online",
                        "Limited",
                        "Offline",
                        "AccessDenied"
                      ],
                      "x-ms-enum": {
                        "name": "IntegrationRuntimeState",
                        "modelAsString": true
                      }
                    }
                  },
                  "additionalProperties": {
                    "type": "object"
                  },
                  "required": [
                    "type"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          },
          "202": {
            "description": "Accepted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/stop": {
      "post": {
        "tags": [
          "integrationRuntimes"
        ],
        "operationId": "IntegrationRuntimes_Stop",
        "description": "Stops a ManagedReserved type integration runtime.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "description": "The integration runtime name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Accepted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/syncCredentials": {
      "post": {
        "tags": [
          "integrationRuntimes"
        ],
        "operationId": "IntegrationRuntimes_SyncCredentials",
        "description": "Force the integration runtime to synchronize credentials across integration runtime nodes, and this will override the credentials across all worker nodes with those available on the dispatcher node. If you already have the latest credential backup file, you should manually import it (preferred) on any self-hosted integration runtime node than using this API directly.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "description": "The integration runtime name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/monitoringData": {
      "post": {
        "tags": [
          "integrationRuntimes"
        ],
        "operationId": "IntegrationRuntimes_GetMonitoringData",
        "description": "Get the integration runtime monitoring data, which includes the monitor data for all the nodes under this integration runtime.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "description": "The integration runtime name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Get monitoring data response.",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Integration runtime name."
                },
                "nodes": {
                  "type": "array",
                  "description": "Integration runtime node monitoring data.",
                  "items": {
                    "description": "Monitoring data for integration runtime node.",
                    "type": "object",
                    "properties": {
                      "nodeName": {
                        "description": "Name of the integration runtime node.",
                        "type": "string",
                        "readOnly": true
                      },
                      "availableMemoryInMB": {
                        "description": "Available memory (MB) on the integration runtime node.",
                        "type": "integer",
                        "readOnly": true
                      },
                      "cpuUtilization": {
                        "description": "CPU percentage on the integration runtime node.",
                        "type": "integer",
                        "readOnly": true
                      },
                      "concurrentJobsLimit": {
                        "description": "Maximum concurrent jobs on the integration runtime node.",
                        "type": "integer",
                        "readOnly": true
                      },
                      "concurrentJobsRunning": {
                        "description": "The number of jobs currently running on the integration runtime node.",
                        "type": "integer",
                        "readOnly": true
                      },
                      "maxConcurrentJobs": {
                        "description": "The maximum concurrent jobs in this integration runtime.",
                        "type": "integer",
                        "readOnly": true
                      },
                      "sentBytes": {
                        "description": "Sent bytes on the integration runtime node.",
                        "type": "number",
                        "readOnly": true
                      },
                      "receivedBytes": {
                        "description": "Received bytes on the integration runtime node.",
                        "type": "number",
                        "readOnly": true
                      }
                    },
                    "additionalProperties": {
                      "type": "object"
                    }
                  },
                  "x-ms-identifiers": [
                    "nodeName"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/upgrade": {
      "post": {
        "tags": [
          "integrationRuntimes"
        ],
        "operationId": "IntegrationRuntimes_Upgrade",
        "description": "Upgrade self-hosted integration runtime to latest version if availability.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "description": "The integration runtime name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/removeLinks": {
      "post": {
        "tags": [
          "integrationRuntimes"
        ],
        "operationId": "IntegrationRuntimes_RemoveLinks",
        "description": "Remove all linked integration runtimes under specific data factory in a self-hosted integration runtime.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "description": "The integration runtime name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "linkedIntegrationRuntimeRequest",
            "description": "The data factory name for the linked integration runtime.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Data factory name for linked integration runtime request.",
              "type": "object",
              "properties": {
                "factoryName": {
                  "description": "The data factory name for linked integration runtime.",
                  "type": "string",
                  "x-ms-client-name": "linkedFactoryName"
                }
              },
              "required": [
                "factoryName"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/linkedIntegrationRuntime": {
      "post": {
        "tags": [
          "integrationRuntimes"
        ],
        "operationId": "IntegrationRuntimes_CreateLinkedIntegrationRuntime",
        "description": "Create a linked integration runtime entry in a shared integration runtime.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "description": "The integration runtime name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "createLinkedIntegrationRuntimeRequest",
            "description": "The linked integration runtime properties.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "The linked integration runtime information.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the linked integration runtime.",
                  "type": "string"
                },
                "subscriptionId": {
                  "description": "The ID of the subscription that the linked integration runtime belongs to.",
                  "type": "string"
                },
                "dataFactoryName": {
                  "description": "The name of the data factory that the linked integration runtime belongs to.",
                  "type": "string"
                },
                "dataFactoryLocation": {
                  "description": "The location of the data factory that the linked integration runtime belongs to.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Integration runtime status response.",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The integration runtime name.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Integration runtime properties.",
                  "type": "object",
                  "discriminator": "type",
                  "properties": {
                    "type": {
                      "description": "Type of integration runtime.",
                      "type": "string",
                      "enum": [
                        "Managed",
                        "SelfHosted"
                      ],
                      "x-ms-enum": {
                        "name": "IntegrationRuntimeType",
                        "modelAsString": true
                      }
                    },
                    "dataFactoryName": {
                      "description": "The data factory name which the integration runtime belong to.",
                      "type": "string",
                      "readOnly": true
                    },
                    "state": {
                      "description": "The state of integration runtime.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Initial",
                        "Stopped",
                        "Started",
                        "Starting",
                        "Stopping",
                        "NeedRegistration",
                        "Online",
                        "Limited",
                        "Offline",
                        "AccessDenied"
                      ],
                      "x-ms-enum": {
                        "name": "IntegrationRuntimeState",
                        "modelAsString": true
                      }
                    }
                  },
                  "additionalProperties": {
                    "type": "object"
                  },
                  "required": [
                    "type"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/refreshObjectMetadata": {
      "post": {
        "tags": [
          "integrationRuntimeObjectMetadata"
        ],
        "operationId": "IntegrationRuntimeObjectMetadata_Refresh",
        "description": "Refresh a SSIS integration runtime object metadata.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "description": "The integration runtime name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "description": "The status of the operation.",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "The status of the operation."
                },
                "name": {
                  "type": "string",
                  "description": "The operation name."
                },
                "properties": {
                  "type": "string",
                  "description": "The operation properties."
                },
                "error": {
                  "type": "string",
                  "description": "The operation error message."
                }
              }
            }
          },
          "202": {
            "description": "Accepted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/getObjectMetadata": {
      "post": {
        "tags": [
          "integrationRuntimeObjectMetadata"
        ],
        "operationId": "IntegrationRuntimeObjectMetadata_Get",
        "description": "Get a SSIS integration runtime object metadata by specified path. The return is pageable metadata list.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "description": "The integration runtime name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "getMetadataRequest",
            "description": "The parameters for getting a SSIS object metadata.",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "description": "The request payload of get SSIS object metadata.",
              "properties": {
                "metadataPath": {
                  "type": "string",
                  "description": "Metadata path."
                }
              }
            }
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "description": "A list of SSIS object metadata.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of SSIS object metadata.",
                  "items": {
                    "type": "object",
                    "description": "SSIS object metadata.",
                    "discriminator": "type",
                    "properties": {
                      "type": {
                        "description": "Type of metadata.",
                        "type": "string",
                        "enum": [
                          "Folder",
                          "Project",
                          "Package",
                          "Environment"
                        ],
                        "x-ms-enum": {
                          "name": "SsisObjectMetadataType",
                          "modelAsString": true
                        }
                      },
                      "id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Metadata id."
                      },
                      "name": {
                        "type": "string",
                        "description": "Metadata name."
                      },
                      "description": {
                        "type": "string",
                        "description": "Metadata description."
                      }
                    },
                    "required": [
                      "type"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "The link to the next page of results, if any remaining results exist."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/nodes/{nodeName}": {
      "get": {
        "tags": [
          "integrationRuntimeNodes"
        ],
        "operationId": "IntegrationRuntimeNodes_Get",
        "description": "Gets a self-hosted integration runtime node.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "description": "The integration runtime name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "nodeName",
            "description": "The integration runtime node name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9A-Z][a-z0-9A-Z_-]{0,149}$",
            "minLength": 1,
            "maxLength": 150,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Properties of Self-hosted integration runtime node.",
              "properties": {
                "nodeName": {
                  "description": "Name of the integration runtime node.",
                  "type": "string",
                  "readOnly": true
                },
                "machineName": {
                  "description": "Machine name of the integration runtime node.",
                  "type": "string",
                  "readOnly": true
                },
                "hostServiceUri": {
                  "description": "URI for the host machine of the integration runtime.",
                  "type": "string",
                  "readOnly": true
                },
                "status": {
                  "description": "Status of the integration runtime node.",
                  "type": "string",
                  "readOnly": true,
                  "enum": [
                    "NeedRegistration",
                    "Online",
                    "Limited",
                    "Offline",
                    "Upgrading",
                    "Initializing",
                    "InitializeFailed"
                  ],
                  "x-ms-enum": {
                    "name": "SelfHostedIntegrationRuntimeNodeStatus",
                    "modelAsString": true
                  }
                },
                "capabilities": {
                  "description": "The integration runtime capabilities dictionary",
                  "type": "object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "versionStatus": {
                  "description": "Status of the integration runtime node version.",
                  "type": "string",
                  "readOnly": true
                },
                "version": {
                  "description": "Version of the integration runtime node.",
                  "type": "string",
                  "readOnly": true
                },
                "registerTime": {
                  "description": "The time at which the integration runtime node was registered in ISO8601 format.",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "lastConnectTime": {
                  "description": "The most recent time at which the integration runtime was connected in ISO8601 format.",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "expiryTime": {
                  "description": "The time at which the integration runtime will expire in ISO8601 format.",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "lastStartTime": {
                  "description": "The time the node last started up.",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "lastStopTime": {
                  "description": "The integration runtime node last stop time.",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "lastUpdateResult": {
                  "description": "The result of the last integration runtime node update.",
                  "type": "string",
                  "enum": [
                    "None",
                    "Succeed",
                    "Fail"
                  ],
                  "x-ms-enum": {
                    "name": "IntegrationRuntimeUpdateResult",
                    "modelAsString": true
                  },
                  "readOnly": true
                },
                "lastStartUpdateTime": {
                  "description": "The last time for the integration runtime node update start.",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "lastEndUpdateTime": {
                  "description": "The last time for the integration runtime node update end.",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "isActiveDispatcher": {
                  "description": "Indicates whether this node is the active dispatcher for integration runtime requests.",
                  "type": "boolean",
                  "readOnly": true
                },
                "concurrentJobsLimit": {
                  "description": "Maximum concurrent jobs on the integration runtime node.",
                  "type": "integer",
                  "readOnly": true
                },
                "maxConcurrentJobs": {
                  "description": "The maximum concurrent jobs in this integration runtime.",
                  "type": "integer",
                  "readOnly": true
                }
              },
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "integrationRuntimeNodes"
        ],
        "operationId": "IntegrationRuntimeNodes_Delete",
        "description": "Deletes a self-hosted integration runtime node.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "description": "The integration runtime name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "nodeName",
            "description": "The integration runtime node name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9A-Z][a-z0-9A-Z_-]{0,149}$",
            "minLength": 1,
            "maxLength": 150,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          }
        }
      },
      "patch": {
        "tags": [
          "integrationRuntimeNodes"
        ],
        "operationId": "IntegrationRuntimeNodes_Update",
        "description": "Updates a self-hosted integration runtime node.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "description": "The integration runtime name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "nodeName",
            "description": "The integration runtime node name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9A-Z][a-z0-9A-Z_-]{0,149}$",
            "minLength": 1,
            "maxLength": 150,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "updateIntegrationRuntimeNodeRequest",
            "description": "The parameters for updating an integration runtime node.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Update integration runtime node request.",
              "type": "object",
              "properties": {
                "concurrentJobsLimit": {
                  "description": "The number of concurrent jobs permitted to run on the integration runtime node. Values between 1 and maxConcurrentJobs(inclusive) are allowed.",
                  "type": "integer",
                  "minimum": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Properties of Self-hosted integration runtime node.",
              "properties": {
                "nodeName": {
                  "description": "Name of the integration runtime node.",
                  "type": "string",
                  "readOnly": true
                },
                "machineName": {
                  "description": "Machine name of the integration runtime node.",
                  "type": "string",
                  "readOnly": true
                },
                "hostServiceUri": {
                  "description": "URI for the host machine of the integration runtime.",
                  "type": "string",
                  "readOnly": true
                },
                "status": {
                  "description": "Status of the integration runtime node.",
                  "type": "string",
                  "readOnly": true,
                  "enum": [
                    "NeedRegistration",
                    "Online",
                    "Limited",
                    "Offline",
                    "Upgrading",
                    "Initializing",
                    "InitializeFailed"
                  ],
                  "x-ms-enum": {
                    "name": "SelfHostedIntegrationRuntimeNodeStatus",
                    "modelAsString": true
                  }
                },
                "capabilities": {
                  "description": "The integration runtime capabilities dictionary",
                  "type": "object",
                  "readOnly": true,
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "versionStatus": {
                  "description": "Status of the integration runtime node version.",
                  "type": "string",
                  "readOnly": true
                },
                "version": {
                  "description": "Version of the integration runtime node.",
                  "type": "string",
                  "readOnly": true
                },
                "registerTime": {
                  "description": "The time at which the integration runtime node was registered in ISO8601 format.",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "lastConnectTime": {
                  "description": "The most recent time at which the integration runtime was connected in ISO8601 format.",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "expiryTime": {
                  "description": "The time at which the integration runtime will expire in ISO8601 format.",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "lastStartTime": {
                  "description": "The time the node last started up.",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "lastStopTime": {
                  "description": "The integration runtime node last stop time.",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "lastUpdateResult": {
                  "description": "The result of the last integration runtime node update.",
                  "type": "string",
                  "enum": [
                    "None",
                    "Succeed",
                    "Fail"
                  ],
                  "x-ms-enum": {
                    "name": "IntegrationRuntimeUpdateResult",
                    "modelAsString": true
                  },
                  "readOnly": true
                },
                "lastStartUpdateTime": {
                  "description": "The last time for the integration runtime node update start.",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "lastEndUpdateTime": {
                  "description": "The last time for the integration runtime node update end.",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "isActiveDispatcher": {
                  "description": "Indicates whether this node is the active dispatcher for integration runtime requests.",
                  "type": "boolean",
                  "readOnly": true
                },
                "concurrentJobsLimit": {
                  "description": "Maximum concurrent jobs on the integration runtime node.",
                  "type": "integer",
                  "readOnly": true
                },
                "maxConcurrentJobs": {
                  "description": "The maximum concurrent jobs in this integration runtime.",
                  "type": "integer",
                  "readOnly": true
                }
              },
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/nodes/{nodeName}/ipAddress": {
      "post": {
        "tags": [
          "integrationRuntimeNodes"
        ],
        "operationId": "IntegrationRuntimeNodes_GetIpAddress",
        "description": "Get the IP address of self-hosted integration runtime node.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "integrationRuntimeName",
            "description": "The integration runtime name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "nodeName",
            "description": "The integration runtime node name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9A-Z][a-z0-9A-Z_-]{0,149}$",
            "minLength": 1,
            "maxLength": 150,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "description": "The IP address of self-hosted integration runtime node.",
              "properties": {
                "ipAddress": {
                  "description": "The IP address of self-hosted integration runtime node.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/linkedservices": {
      "get": {
        "tags": [
          "linkedServices"
        ],
        "operationId": "LinkedServices_ListByFactory",
        "description": "Lists linked services.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "A list of linked service resources.",
              "type": "object",
              "required": [
                "value"
              ],
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of linked services.",
                  "items": {
                    "description": "Linked service resource type.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The resource identifier.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The resource name.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The resource type.",
                        "readOnly": true
                      },
                      "etag": {
                        "type": "string",
                        "description": "Etag identifies change in the resource.",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of linked service.",
                        "type": "object",
                        "discriminator": "type",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Type of linked service."
                          },
                          "version": {
                            "type": "string",
                            "description": "Version of the linked service."
                          },
                          "connectVia": {
                            "description": "The integration runtime reference.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Type of integration runtime.",
                                "enum": [
                                  "IntegrationRuntimeReference"
                                ]
                              },
                              "referenceName": {
                                "type": "string",
                                "description": "Reference integration runtime name."
                              },
                              "parameters": {
                                "description": "Arguments for integration runtime.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object"
                                }
                              }
                            },
                            "required": [
                              "type",
                              "referenceName"
                            ]
                          },
                          "description": {
                            "description": "Linked service description.",
                            "type": "string"
                          },
                          "parameters": {
                            "description": "Parameters for linked service.",
                            "type": "object",
                            "additionalProperties": {
                              "description": "Definition of a single parameter for an entity.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "Parameter type.",
                                  "enum": [
                                    "Object",
                                    "String",
                                    "Int",
                                    "Float",
                                    "Bool",
                                    "Array",
                                    "SecureString"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ParameterType",
                                    "modelAsString": true
                                  }
                                },
                                "defaultValue": {
                                  "type": "object",
                                  "description": "Default value of parameter."
                                }
                              },
                              "required": [
                                "type"
                              ]
                            }
                          },
                          "annotations": {
                            "description": "List of tags that can be used for describing the linked service.",
                            "type": "array",
                            "items": {
                              "type": "object"
                            },
                            "x-ms-identifiers": []
                          }
                        },
                        "additionalProperties": {
                          "type": "object"
                        },
                        "required": [
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "description": "The link to the next page of results, if any remaining results exist.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/linkedservices/{linkedServiceName}": {
      "put": {
        "tags": [
          "linkedServices"
        ],
        "operationId": "LinkedServices_CreateOrUpdate",
        "description": "Creates or updates a linked service.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "linkedServiceName",
            "description": "The linked service name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "minLength": 1,
            "maxLength": 260,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the linkedService entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update."
          },
          {
            "name": "linkedService",
            "description": "Linked service resource definition.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Linked service resource type.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "etag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of linked service.",
                  "type": "object",
                  "discriminator": "type",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Type of linked service."
                    },
                    "version": {
                      "type": "string",
                      "description": "Version of the linked service."
                    },
                    "connectVia": {
                      "description": "The integration runtime reference.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of integration runtime.",
                          "enum": [
                            "IntegrationRuntimeReference"
                          ]
                        },
                        "referenceName": {
                          "type": "string",
                          "description": "Reference integration runtime name."
                        },
                        "parameters": {
                          "description": "Arguments for integration runtime.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "object"
                          }
                        }
                      },
                      "required": [
                        "type",
                        "referenceName"
                      ]
                    },
                    "description": {
                      "description": "Linked service description.",
                      "type": "string"
                    },
                    "parameters": {
                      "description": "Parameters for linked service.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "Definition of a single parameter for an entity.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Parameter type.",
                            "enum": [
                              "Object",
                              "String",
                              "Int",
                              "Float",
                              "Bool",
                              "Array",
                              "SecureString"
                            ],
                            "x-ms-enum": {
                              "name": "ParameterType",
                              "modelAsString": true
                            }
                          },
                          "defaultValue": {
                            "type": "object",
                            "description": "Default value of parameter."
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    },
                    "annotations": {
                      "description": "List of tags that can be used for describing the linked service.",
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "x-ms-identifiers": []
                    }
                  },
                  "additionalProperties": {
                    "type": "object"
                  },
                  "required": [
                    "type"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Linked service resource type.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "etag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of linked service.",
                  "type": "object",
                  "discriminator": "type",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Type of linked service."
                    },
                    "version": {
                      "type": "string",
                      "description": "Version of the linked service."
                    },
                    "connectVia": {
                      "description": "The integration runtime reference.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of integration runtime.",
                          "enum": [
                            "IntegrationRuntimeReference"
                          ]
                        },
                        "referenceName": {
                          "type": "string",
                          "description": "Reference integration runtime name."
                        },
                        "parameters": {
                          "description": "Arguments for integration runtime.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "object"
                          }
                        }
                      },
                      "required": [
                        "type",
                        "referenceName"
                      ]
                    },
                    "description": {
                      "description": "Linked service description.",
                      "type": "string"
                    },
                    "parameters": {
                      "description": "Parameters for linked service.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "Definition of a single parameter for an entity.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Parameter type.",
                            "enum": [
                              "Object",
                              "String",
                              "Int",
                              "Float",
                              "Bool",
                              "Array",
                              "SecureString"
                            ],
                            "x-ms-enum": {
                              "name": "ParameterType",
                              "modelAsString": true
                            }
                          },
                          "defaultValue": {
                            "type": "object",
                            "description": "Default value of parameter."
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    },
                    "annotations": {
                      "description": "List of tags that can be used for describing the linked service.",
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "x-ms-identifiers": []
                    }
                  },
                  "additionalProperties": {
                    "type": "object"
                  },
                  "required": [
                    "type"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "get": {
        "tags": [
          "linkedServices"
        ],
        "operationId": "LinkedServices_Get",
        "description": "Gets a linked service.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "linkedServiceName",
            "description": "The linked service name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "minLength": 1,
            "maxLength": 260,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the linked service entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Linked service resource type.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "etag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of linked service.",
                  "type": "object",
                  "discriminator": "type",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Type of linked service."
                    },
                    "version": {
                      "type": "string",
                      "description": "Version of the linked service."
                    },
                    "connectVia": {
                      "description": "The integration runtime reference.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of integration runtime.",
                          "enum": [
                            "IntegrationRuntimeReference"
                          ]
                        },
                        "referenceName": {
                          "type": "string",
                          "description": "Reference integration runtime name."
                        },
                        "parameters": {
                          "description": "Arguments for integration runtime.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "object"
                          }
                        }
                      },
                      "required": [
                        "type",
                        "referenceName"
                      ]
                    },
                    "description": {
                      "description": "Linked service description.",
                      "type": "string"
                    },
                    "parameters": {
                      "description": "Parameters for linked service.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "Definition of a single parameter for an entity.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Parameter type.",
                            "enum": [
                              "Object",
                              "String",
                              "Int",
                              "Float",
                              "Bool",
                              "Array",
                              "SecureString"
                            ],
                            "x-ms-enum": {
                              "name": "ParameterType",
                              "modelAsString": true
                            }
                          },
                          "defaultValue": {
                            "type": "object",
                            "description": "Default value of parameter."
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    },
                    "annotations": {
                      "description": "List of tags that can be used for describing the linked service.",
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "x-ms-identifiers": []
                    }
                  },
                  "additionalProperties": {
                    "type": "object"
                  },
                  "required": [
                    "type"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "delete": {
        "tags": [
          "linkedServices"
        ],
        "operationId": "LinkedServices_Delete",
        "description": "Deletes a linked service.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "linkedServiceName",
            "description": "The linked service name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "minLength": 1,
            "maxLength": 260,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/datasets": {
      "get": {
        "tags": [
          "datasets"
        ],
        "operationId": "Datasets_ListByFactory",
        "description": "Lists datasets.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "A list of dataset resources.",
              "type": "object",
              "required": [
                "value"
              ],
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of datasets.",
                  "items": {
                    "description": "Dataset resource type.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The resource identifier.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The resource name.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The resource type.",
                        "readOnly": true
                      },
                      "etag": {
                        "type": "string",
                        "description": "Etag identifies change in the resource.",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Dataset properties.",
                        "type": "object",
                        "discriminator": "type",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Type of dataset."
                          },
                          "description": {
                            "description": "Dataset description.",
                            "type": "string"
                          },
                          "structure": {
                            "type": "object",
                            "x-ms-format": "dfe-list-generic",
                            "x-ms-format-element-type": "DatasetDataElement",
                            "description": "Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement."
                          },
                          "schema": {
                            "type": "object",
                            "x-ms-format": "dfe-list-generic",
                            "x-ms-format-element-type": "DatasetSchemaDataElement",
                            "description": "Columns that define the physical type schema of the dataset. Type: array (or Expression with resultType array), itemType: DatasetSchemaDataElement."
                          },
                          "linkedServiceName": {
                            "description": "Linked service reference.",
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Linked service reference type.",
                                "enum": [
                                  "LinkedServiceReference"
                                ],
                                "x-ms-enum": {
                                  "name": "Type",
                                  "modelAsString": true
                                }
                              },
                              "referenceName": {
                                "type": "string",
                                "description": "Reference LinkedService name."
                              },
                              "parameters": {
                                "description": "Arguments for LinkedService.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object"
                                }
                              }
                            },
                            "required": [
                              "type",
                              "referenceName"
                            ]
                          },
                          "parameters": {
                            "description": "Parameters for dataset.",
                            "type": "object",
                            "additionalProperties": {
                              "description": "Definition of a single parameter for an entity.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "Parameter type.",
                                  "enum": [
                                    "Object",
                                    "String",
                                    "Int",
                                    "Float",
                                    "Bool",
                                    "Array",
                                    "SecureString"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ParameterType",
                                    "modelAsString": true
                                  }
                                },
                                "defaultValue": {
                                  "type": "object",
                                  "description": "Default value of parameter."
                                }
                              },
                              "required": [
                                "type"
                              ]
                            }
                          },
                          "annotations": {
                            "description": "List of tags that can be used for describing the Dataset.",
                            "type": "array",
                            "items": {
                              "type": "object"
                            },
                            "x-ms-identifiers": []
                          },
                          "folder": {
                            "description": "The folder that this Dataset is in. If not specified, Dataset will appear at the root level.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "The name of the folder that this Dataset is in.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "additionalProperties": {
                          "type": "object"
                        },
                        "required": [
                          "type",
                          "linkedServiceName"
                        ]
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "description": "The link to the next page of results, if any remaining results exist.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/datasets/{datasetName}": {
      "put": {
        "tags": [
          "datasets"
        ],
        "operationId": "Datasets_CreateOrUpdate",
        "description": "Creates or updates a dataset.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "datasetName",
            "description": "The dataset name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "minLength": 1,
            "maxLength": 260,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the dataset entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update."
          },
          {
            "name": "dataset",
            "description": "Dataset resource definition.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Dataset resource type.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "etag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Dataset properties.",
                  "type": "object",
                  "discriminator": "type",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Type of dataset."
                    },
                    "description": {
                      "description": "Dataset description.",
                      "type": "string"
                    },
                    "structure": {
                      "type": "object",
                      "x-ms-format": "dfe-list-generic",
                      "x-ms-format-element-type": "DatasetDataElement",
                      "description": "Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement."
                    },
                    "schema": {
                      "type": "object",
                      "x-ms-format": "dfe-list-generic",
                      "x-ms-format-element-type": "DatasetSchemaDataElement",
                      "description": "Columns that define the physical type schema of the dataset. Type: array (or Expression with resultType array), itemType: DatasetSchemaDataElement."
                    },
                    "linkedServiceName": {
                      "description": "Linked service reference.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Linked service reference type.",
                          "enum": [
                            "LinkedServiceReference"
                          ],
                          "x-ms-enum": {
                            "name": "Type",
                            "modelAsString": true
                          }
                        },
                        "referenceName": {
                          "type": "string",
                          "description": "Reference LinkedService name."
                        },
                        "parameters": {
                          "description": "Arguments for LinkedService.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "object"
                          }
                        }
                      },
                      "required": [
                        "type",
                        "referenceName"
                      ]
                    },
                    "parameters": {
                      "description": "Parameters for dataset.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "Definition of a single parameter for an entity.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Parameter type.",
                            "enum": [
                              "Object",
                              "String",
                              "Int",
                              "Float",
                              "Bool",
                              "Array",
                              "SecureString"
                            ],
                            "x-ms-enum": {
                              "name": "ParameterType",
                              "modelAsString": true
                            }
                          },
                          "defaultValue": {
                            "type": "object",
                            "description": "Default value of parameter."
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    },
                    "annotations": {
                      "description": "List of tags that can be used for describing the Dataset.",
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "x-ms-identifiers": []
                    },
                    "folder": {
                      "description": "The folder that this Dataset is in. If not specified, Dataset will appear at the root level.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name of the folder that this Dataset is in.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "additionalProperties": {
                    "type": "object"
                  },
                  "required": [
                    "type",
                    "linkedServiceName"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Dataset resource type.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "etag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Dataset properties.",
                  "type": "object",
                  "discriminator": "type",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Type of dataset."
                    },
                    "description": {
                      "description": "Dataset description.",
                      "type": "string"
                    },
                    "structure": {
                      "type": "object",
                      "x-ms-format": "dfe-list-generic",
                      "x-ms-format-element-type": "DatasetDataElement",
                      "description": "Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement."
                    },
                    "schema": {
                      "type": "object",
                      "x-ms-format": "dfe-list-generic",
                      "x-ms-format-element-type": "DatasetSchemaDataElement",
                      "description": "Columns that define the physical type schema of the dataset. Type: array (or Expression with resultType array), itemType: DatasetSchemaDataElement."
                    },
                    "linkedServiceName": {
                      "description": "Linked service reference.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Linked service reference type.",
                          "enum": [
                            "LinkedServiceReference"
                          ],
                          "x-ms-enum": {
                            "name": "Type",
                            "modelAsString": true
                          }
                        },
                        "referenceName": {
                          "type": "string",
                          "description": "Reference LinkedService name."
                        },
                        "parameters": {
                          "description": "Arguments for LinkedService.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "object"
                          }
                        }
                      },
                      "required": [
                        "type",
                        "referenceName"
                      ]
                    },
                    "parameters": {
                      "description": "Parameters for dataset.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "Definition of a single parameter for an entity.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Parameter type.",
                            "enum": [
                              "Object",
                              "String",
                              "Int",
                              "Float",
                              "Bool",
                              "Array",
                              "SecureString"
                            ],
                            "x-ms-enum": {
                              "name": "ParameterType",
                              "modelAsString": true
                            }
                          },
                          "defaultValue": {
                            "type": "object",
                            "description": "Default value of parameter."
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    },
                    "annotations": {
                      "description": "List of tags that can be used for describing the Dataset.",
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "x-ms-identifiers": []
                    },
                    "folder": {
                      "description": "The folder that this Dataset is in. If not specified, Dataset will appear at the root level.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name of the folder that this Dataset is in.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "additionalProperties": {
                    "type": "object"
                  },
                  "required": [
                    "type",
                    "linkedServiceName"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "get": {
        "tags": [
          "datasets"
        ],
        "operationId": "Datasets_Get",
        "description": "Gets a dataset.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "datasetName",
            "description": "The dataset name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "minLength": 1,
            "maxLength": 260,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the dataset entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Dataset resource type.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "etag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Dataset properties.",
                  "type": "object",
                  "discriminator": "type",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Type of dataset."
                    },
                    "description": {
                      "description": "Dataset description.",
                      "type": "string"
                    },
                    "structure": {
                      "type": "object",
                      "x-ms-format": "dfe-list-generic",
                      "x-ms-format-element-type": "DatasetDataElement",
                      "description": "Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement."
                    },
                    "schema": {
                      "type": "object",
                      "x-ms-format": "dfe-list-generic",
                      "x-ms-format-element-type": "DatasetSchemaDataElement",
                      "description": "Columns that define the physical type schema of the dataset. Type: array (or Expression with resultType array), itemType: DatasetSchemaDataElement."
                    },
                    "linkedServiceName": {
                      "description": "Linked service reference.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Linked service reference type.",
                          "enum": [
                            "LinkedServiceReference"
                          ],
                          "x-ms-enum": {
                            "name": "Type",
                            "modelAsString": true
                          }
                        },
                        "referenceName": {
                          "type": "string",
                          "description": "Reference LinkedService name."
                        },
                        "parameters": {
                          "description": "Arguments for LinkedService.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "object"
                          }
                        }
                      },
                      "required": [
                        "type",
                        "referenceName"
                      ]
                    },
                    "parameters": {
                      "description": "Parameters for dataset.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "Definition of a single parameter for an entity.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Parameter type.",
                            "enum": [
                              "Object",
                              "String",
                              "Int",
                              "Float",
                              "Bool",
                              "Array",
                              "SecureString"
                            ],
                            "x-ms-enum": {
                              "name": "ParameterType",
                              "modelAsString": true
                            }
                          },
                          "defaultValue": {
                            "type": "object",
                            "description": "Default value of parameter."
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    },
                    "annotations": {
                      "description": "List of tags that can be used for describing the Dataset.",
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "x-ms-identifiers": []
                    },
                    "folder": {
                      "description": "The folder that this Dataset is in. If not specified, Dataset will appear at the root level.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name of the folder that this Dataset is in.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "additionalProperties": {
                    "type": "object"
                  },
                  "required": [
                    "type",
                    "linkedServiceName"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "delete": {
        "tags": [
          "datasets"
        ],
        "operationId": "Datasets_Delete",
        "description": "Deletes a dataset.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "datasetName",
            "description": "The dataset name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "minLength": 1,
            "maxLength": 260,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelines": {
      "get": {
        "tags": [
          "pipelines"
        ],
        "operationId": "Pipelines_ListByFactory",
        "description": "Lists pipelines.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "A list of pipeline resources.",
              "type": "object",
              "required": [
                "value"
              ],
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of pipelines.",
                  "items": {
                    "description": "Pipeline resource type.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The resource identifier.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The resource name.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The resource type.",
                        "readOnly": true
                      },
                      "etag": {
                        "type": "string",
                        "description": "Etag identifies change in the resource.",
                        "readOnly": true
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties of the pipeline.",
                        "type": "object",
                        "properties": {
                          "description": {
                            "description": "The description of the pipeline.",
                            "type": "string"
                          },
                          "activities": {
                            "type": "array",
                            "description": "List of activities in pipeline.",
                            "items": {
                              "discriminator": "type",
                              "description": "A pipeline activity.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Activity name.",
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Type of activity."
                                },
                                "description": {
                                  "description": "Activity description.",
                                  "type": "string"
                                },
                                "state": {
                                  "description": "Activity state. This is an optional property and if not provided, the state will be Active by default.",
                                  "type": "string",
                                  "enum": [
                                    "Active",
                                    "Inactive"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ActivityState",
                                    "modelAsString": true
                                  }
                                },
                                "onInactiveMarkAs": {
                                  "description": "Status result of the activity when the state is set to Inactive. This is an optional property and if not provided when the activity is inactive, the status will be Succeeded by default.",
                                  "type": "string",
                                  "enum": [
                                    "Succeeded",
                                    "Failed",
                                    "Skipped"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ActivityOnInactiveMarkAs",
                                    "modelAsString": true
                                  }
                                },
                                "dependsOn": {
                                  "type": "array",
                                  "description": "Activity depends on condition.",
                                  "items": {
                                    "description": "Activity dependency information.",
                                    "type": "object",
                                    "properties": {
                                      "activity": {
                                        "description": "Activity name.",
                                        "type": "string"
                                      },
                                      "dependencyConditions": {
                                        "type": "array",
                                        "description": "Match-Condition for the dependency.",
                                        "items": {
                                          "type": "string",
                                          "enum": [
                                            "Succeeded",
                                            "Failed",
                                            "Skipped",
                                            "Completed"
                                          ],
                                          "x-ms-enum": {
                                            "name": "DependencyCondition",
                                            "modelAsString": true
                                          }
                                        }
                                      }
                                    },
                                    "additionalProperties": {
                                      "type": "object"
                                    },
                                    "required": [
                                      "activity",
                                      "dependencyConditions"
                                    ]
                                  },
                                  "x-ms-identifiers": []
                                },
                                "userProperties": {
                                  "type": "array",
                                  "description": "Activity user properties.",
                                  "items": {
                                    "description": "User property.",
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "description": "User property name.",
                                        "type": "string"
                                      },
                                      "value": {
                                        "x-ms-format": "dfe-string",
                                        "description": "User property value. Type: string (or Expression with resultType string).",
                                        "type": "object"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "value"
                                    ]
                                  },
                                  "x-ms-identifiers": [
                                    "name"
                                  ]
                                }
                              },
                              "additionalProperties": {
                                "type": "object"
                              },
                              "required": [
                                "name",
                                "type"
                              ]
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "parameters": {
                            "description": "List of parameters for pipeline.",
                            "type": "object",
                            "additionalProperties": {
                              "description": "Definition of a single parameter for an entity.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "Parameter type.",
                                  "enum": [
                                    "Object",
                                    "String",
                                    "Int",
                                    "Float",
                                    "Bool",
                                    "Array",
                                    "SecureString"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ParameterType",
                                    "modelAsString": true
                                  }
                                },
                                "defaultValue": {
                                  "type": "object",
                                  "description": "Default value of parameter."
                                }
                              },
                              "required": [
                                "type"
                              ]
                            }
                          },
                          "variables": {
                            "description": "List of variables for pipeline.",
                            "type": "object",
                            "additionalProperties": {
                              "description": "Definition of a single variable for a Pipeline.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "Variable type.",
                                  "enum": [
                                    "String",
                                    "Bool",
                                    "Array"
                                  ],
                                  "x-ms-enum": {
                                    "name": "VariableType",
                                    "modelAsString": true
                                  }
                                },
                                "defaultValue": {
                                  "type": "object",
                                  "description": "Default value of variable."
                                }
                              },
                              "required": [
                                "type"
                              ]
                            }
                          },
                          "concurrency": {
                            "type": "integer",
                            "minimum": 1,
                            "description": "The max number of concurrent runs for the pipeline."
                          },
                          "annotations": {
                            "description": "List of tags that can be used for describing the Pipeline.",
                            "type": "array",
                            "items": {
                              "type": "object"
                            },
                            "x-ms-identifiers": []
                          },
                          "runDimensions": {
                            "description": "Dimensions emitted by Pipeline.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "x-ms-format": "dfe-string",
                              "description": "Type: string (or Expression with resultType string)."
                            }
                          },
                          "folder": {
                            "description": "The folder that this Pipeline is in. If not specified, Pipeline will appear at the root level.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "The name of the folder that this Pipeline is in.",
                                "type": "string"
                              }
                            }
                          },
                          "policy": {
                            "description": "Pipeline Policy.",
                            "type": "object",
                            "properties": {
                              "elapsedTimeMetric": {
                                "description": "Pipeline ElapsedTime Metric Policy.",
                                "type": "object",
                                "properties": {
                                  "duration": {
                                    "description": "TimeSpan value, after which an Azure Monitoring Metric is fired.",
                                    "type": "object"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "additionalProperties": {
                      "type": "object"
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "description": "The link to the next page of results, if any remaining results exist.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelines/{pipelineName}": {
      "put": {
        "tags": [
          "pipelines"
        ],
        "operationId": "Pipelines_CreateOrUpdate",
        "description": "Creates or updates a pipeline.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "pipelineName",
            "description": "The pipeline name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "minLength": 1,
            "maxLength": 260,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the pipeline entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update."
          },
          {
            "name": "pipeline",
            "description": "Pipeline resource definition.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Pipeline resource type.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "etag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the pipeline.",
                  "type": "object",
                  "properties": {
                    "description": {
                      "description": "The description of the pipeline.",
                      "type": "string"
                    },
                    "activities": {
                      "type": "array",
                      "description": "List of activities in pipeline.",
                      "items": {
                        "discriminator": "type",
                        "description": "A pipeline activity.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Activity name.",
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of activity."
                          },
                          "description": {
                            "description": "Activity description.",
                            "type": "string"
                          },
                          "state": {
                            "description": "Activity state. This is an optional property and if not provided, the state will be Active by default.",
                            "type": "string",
                            "enum": [
                              "Active",
                              "Inactive"
                            ],
                            "x-ms-enum": {
                              "name": "ActivityState",
                              "modelAsString": true
                            }
                          },
                          "onInactiveMarkAs": {
                            "description": "Status result of the activity when the state is set to Inactive. This is an optional property and if not provided when the activity is inactive, the status will be Succeeded by default.",
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Skipped"
                            ],
                            "x-ms-enum": {
                              "name": "ActivityOnInactiveMarkAs",
                              "modelAsString": true
                            }
                          },
                          "dependsOn": {
                            "type": "array",
                            "description": "Activity depends on condition.",
                            "items": {
                              "description": "Activity dependency information.",
                              "type": "object",
                              "properties": {
                                "activity": {
                                  "description": "Activity name.",
                                  "type": "string"
                                },
                                "dependencyConditions": {
                                  "type": "array",
                                  "description": "Match-Condition for the dependency.",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "Succeeded",
                                      "Failed",
                                      "Skipped",
                                      "Completed"
                                    ],
                                    "x-ms-enum": {
                                      "name": "DependencyCondition",
                                      "modelAsString": true
                                    }
                                  }
                                }
                              },
                              "additionalProperties": {
                                "type": "object"
                              },
                              "required": [
                                "activity",
                                "dependencyConditions"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "userProperties": {
                            "type": "array",
                            "description": "Activity user properties.",
                            "items": {
                              "description": "User property.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "User property name.",
                                  "type": "string"
                                },
                                "value": {
                                  "x-ms-format": "dfe-string",
                                  "description": "User property value. Type: string (or Expression with resultType string).",
                                  "type": "object"
                                }
                              },
                              "required": [
                                "name",
                                "value"
                              ]
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          }
                        },
                        "additionalProperties": {
                          "type": "object"
                        },
                        "required": [
                          "name",
                          "type"
                        ]
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "parameters": {
                      "description": "List of parameters for pipeline.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "Definition of a single parameter for an entity.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Parameter type.",
                            "enum": [
                              "Object",
                              "String",
                              "Int",
                              "Float",
                              "Bool",
                              "Array",
                              "SecureString"
                            ],
                            "x-ms-enum": {
                              "name": "ParameterType",
                              "modelAsString": true
                            }
                          },
                          "defaultValue": {
                            "type": "object",
                            "description": "Default value of parameter."
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    },
                    "variables": {
                      "description": "List of variables for pipeline.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "Definition of a single variable for a Pipeline.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Variable type.",
                            "enum": [
                              "String",
                              "Bool",
                              "Array"
                            ],
                            "x-ms-enum": {
                              "name": "VariableType",
                              "modelAsString": true
                            }
                          },
                          "defaultValue": {
                            "type": "object",
                            "description": "Default value of variable."
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    },
                    "concurrency": {
                      "type": "integer",
                      "minimum": 1,
                      "description": "The max number of concurrent runs for the pipeline."
                    },
                    "annotations": {
                      "description": "List of tags that can be used for describing the Pipeline.",
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "x-ms-identifiers": []
                    },
                    "runDimensions": {
                      "description": "Dimensions emitted by Pipeline.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "x-ms-format": "dfe-string",
                        "description": "Type: string (or Expression with resultType string)."
                      }
                    },
                    "folder": {
                      "description": "The folder that this Pipeline is in. If not specified, Pipeline will appear at the root level.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name of the folder that this Pipeline is in.",
                          "type": "string"
                        }
                      }
                    },
                    "policy": {
                      "description": "Pipeline Policy.",
                      "type": "object",
                      "properties": {
                        "elapsedTimeMetric": {
                          "description": "Pipeline ElapsedTime Metric Policy.",
                          "type": "object",
                          "properties": {
                            "duration": {
                              "description": "TimeSpan value, after which an Azure Monitoring Metric is fired.",
                              "type": "object"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "additionalProperties": {
                "type": "object"
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Pipeline resource type.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "etag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the pipeline.",
                  "type": "object",
                  "properties": {
                    "description": {
                      "description": "The description of the pipeline.",
                      "type": "string"
                    },
                    "activities": {
                      "type": "array",
                      "description": "List of activities in pipeline.",
                      "items": {
                        "discriminator": "type",
                        "description": "A pipeline activity.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Activity name.",
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of activity."
                          },
                          "description": {
                            "description": "Activity description.",
                            "type": "string"
                          },
                          "state": {
                            "description": "Activity state. This is an optional property and if not provided, the state will be Active by default.",
                            "type": "string",
                            "enum": [
                              "Active",
                              "Inactive"
                            ],
                            "x-ms-enum": {
                              "name": "ActivityState",
                              "modelAsString": true
                            }
                          },
                          "onInactiveMarkAs": {
                            "description": "Status result of the activity when the state is set to Inactive. This is an optional property and if not provided when the activity is inactive, the status will be Succeeded by default.",
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Skipped"
                            ],
                            "x-ms-enum": {
                              "name": "ActivityOnInactiveMarkAs",
                              "modelAsString": true
                            }
                          },
                          "dependsOn": {
                            "type": "array",
                            "description": "Activity depends on condition.",
                            "items": {
                              "description": "Activity dependency information.",
                              "type": "object",
                              "properties": {
                                "activity": {
                                  "description": "Activity name.",
                                  "type": "string"
                                },
                                "dependencyConditions": {
                                  "type": "array",
                                  "description": "Match-Condition for the dependency.",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "Succeeded",
                                      "Failed",
                                      "Skipped",
                                      "Completed"
                                    ],
                                    "x-ms-enum": {
                                      "name": "DependencyCondition",
                                      "modelAsString": true
                                    }
                                  }
                                }
                              },
                              "additionalProperties": {
                                "type": "object"
                              },
                              "required": [
                                "activity",
                                "dependencyConditions"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "userProperties": {
                            "type": "array",
                            "description": "Activity user properties.",
                            "items": {
                              "description": "User property.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "User property name.",
                                  "type": "string"
                                },
                                "value": {
                                  "x-ms-format": "dfe-string",
                                  "description": "User property value. Type: string (or Expression with resultType string).",
                                  "type": "object"
                                }
                              },
                              "required": [
                                "name",
                                "value"
                              ]
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          }
                        },
                        "additionalProperties": {
                          "type": "object"
                        },
                        "required": [
                          "name",
                          "type"
                        ]
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "parameters": {
                      "description": "List of parameters for pipeline.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "Definition of a single parameter for an entity.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Parameter type.",
                            "enum": [
                              "Object",
                              "String",
                              "Int",
                              "Float",
                              "Bool",
                              "Array",
                              "SecureString"
                            ],
                            "x-ms-enum": {
                              "name": "ParameterType",
                              "modelAsString": true
                            }
                          },
                          "defaultValue": {
                            "type": "object",
                            "description": "Default value of parameter."
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    },
                    "variables": {
                      "description": "List of variables for pipeline.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "Definition of a single variable for a Pipeline.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Variable type.",
                            "enum": [
                              "String",
                              "Bool",
                              "Array"
                            ],
                            "x-ms-enum": {
                              "name": "VariableType",
                              "modelAsString": true
                            }
                          },
                          "defaultValue": {
                            "type": "object",
                            "description": "Default value of variable."
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    },
                    "concurrency": {
                      "type": "integer",
                      "minimum": 1,
                      "description": "The max number of concurrent runs for the pipeline."
                    },
                    "annotations": {
                      "description": "List of tags that can be used for describing the Pipeline.",
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "x-ms-identifiers": []
                    },
                    "runDimensions": {
                      "description": "Dimensions emitted by Pipeline.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "x-ms-format": "dfe-string",
                        "description": "Type: string (or Expression with resultType string)."
                      }
                    },
                    "folder": {
                      "description": "The folder that this Pipeline is in. If not specified, Pipeline will appear at the root level.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name of the folder that this Pipeline is in.",
                          "type": "string"
                        }
                      }
                    },
                    "policy": {
                      "description": "Pipeline Policy.",
                      "type": "object",
                      "properties": {
                        "elapsedTimeMetric": {
                          "description": "Pipeline ElapsedTime Metric Policy.",
                          "type": "object",
                          "properties": {
                            "duration": {
                              "description": "TimeSpan value, after which an Azure Monitoring Metric is fired.",
                              "type": "object"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "additionalProperties": {
                "type": "object"
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "get": {
        "tags": [
          "pipelines"
        ],
        "operationId": "Pipelines_Get",
        "description": "Gets a pipeline.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "pipelineName",
            "description": "The pipeline name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "minLength": 1,
            "maxLength": 260,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the pipeline entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Pipeline resource type.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "etag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the pipeline.",
                  "type": "object",
                  "properties": {
                    "description": {
                      "description": "The description of the pipeline.",
                      "type": "string"
                    },
                    "activities": {
                      "type": "array",
                      "description": "List of activities in pipeline.",
                      "items": {
                        "discriminator": "type",
                        "description": "A pipeline activity.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Activity name.",
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of activity."
                          },
                          "description": {
                            "description": "Activity description.",
                            "type": "string"
                          },
                          "state": {
                            "description": "Activity state. This is an optional property and if not provided, the state will be Active by default.",
                            "type": "string",
                            "enum": [
                              "Active",
                              "Inactive"
                            ],
                            "x-ms-enum": {
                              "name": "ActivityState",
                              "modelAsString": true
                            }
                          },
                          "onInactiveMarkAs": {
                            "description": "Status result of the activity when the state is set to Inactive. This is an optional property and if not provided when the activity is inactive, the status will be Succeeded by default.",
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Skipped"
                            ],
                            "x-ms-enum": {
                              "name": "ActivityOnInactiveMarkAs",
                              "modelAsString": true
                            }
                          },
                          "dependsOn": {
                            "type": "array",
                            "description": "Activity depends on condition.",
                            "items": {
                              "description": "Activity dependency information.",
                              "type": "object",
                              "properties": {
                                "activity": {
                                  "description": "Activity name.",
                                  "type": "string"
                                },
                                "dependencyConditions": {
                                  "type": "array",
                                  "description": "Match-Condition for the dependency.",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "Succeeded",
                                      "Failed",
                                      "Skipped",
                                      "Completed"
                                    ],
                                    "x-ms-enum": {
                                      "name": "DependencyCondition",
                                      "modelAsString": true
                                    }
                                  }
                                }
                              },
                              "additionalProperties": {
                                "type": "object"
                              },
                              "required": [
                                "activity",
                                "dependencyConditions"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "userProperties": {
                            "type": "array",
                            "description": "Activity user properties.",
                            "items": {
                              "description": "User property.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "User property name.",
                                  "type": "string"
                                },
                                "value": {
                                  "x-ms-format": "dfe-string",
                                  "description": "User property value. Type: string (or Expression with resultType string).",
                                  "type": "object"
                                }
                              },
                              "required": [
                                "name",
                                "value"
                              ]
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          }
                        },
                        "additionalProperties": {
                          "type": "object"
                        },
                        "required": [
                          "name",
                          "type"
                        ]
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "parameters": {
                      "description": "List of parameters for pipeline.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "Definition of a single parameter for an entity.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Parameter type.",
                            "enum": [
                              "Object",
                              "String",
                              "Int",
                              "Float",
                              "Bool",
                              "Array",
                              "SecureString"
                            ],
                            "x-ms-enum": {
                              "name": "ParameterType",
                              "modelAsString": true
                            }
                          },
                          "defaultValue": {
                            "type": "object",
                            "description": "Default value of parameter."
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    },
                    "variables": {
                      "description": "List of variables for pipeline.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "Definition of a single variable for a Pipeline.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Variable type.",
                            "enum": [
                              "String",
                              "Bool",
                              "Array"
                            ],
                            "x-ms-enum": {
                              "name": "VariableType",
                              "modelAsString": true
                            }
                          },
                          "defaultValue": {
                            "type": "object",
                            "description": "Default value of variable."
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    },
                    "concurrency": {
                      "type": "integer",
                      "minimum": 1,
                      "description": "The max number of concurrent runs for the pipeline."
                    },
                    "annotations": {
                      "description": "List of tags that can be used for describing the Pipeline.",
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "x-ms-identifiers": []
                    },
                    "runDimensions": {
                      "description": "Dimensions emitted by Pipeline.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "x-ms-format": "dfe-string",
                        "description": "Type: string (or Expression with resultType string)."
                      }
                    },
                    "folder": {
                      "description": "The folder that this Pipeline is in. If not specified, Pipeline will appear at the root level.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name of the folder that this Pipeline is in.",
                          "type": "string"
                        }
                      }
                    },
                    "policy": {
                      "description": "Pipeline Policy.",
                      "type": "object",
                      "properties": {
                        "elapsedTimeMetric": {
                          "description": "Pipeline ElapsedTime Metric Policy.",
                          "type": "object",
                          "properties": {
                            "duration": {
                              "description": "TimeSpan value, after which an Azure Monitoring Metric is fired.",
                              "type": "object"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "additionalProperties": {
                "type": "object"
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "delete": {
        "tags": [
          "pipelines"
        ],
        "operationId": "Pipelines_Delete",
        "description": "Deletes a pipeline.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "pipelineName",
            "description": "The pipeline name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "minLength": 1,
            "maxLength": 260,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelines/{pipelineName}/createRun": {
      "post": {
        "tags": [
          "pipelines"
        ],
        "operationId": "Pipelines_CreateRun",
        "description": "Creates a run of a pipeline.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "pipelineName",
            "description": "The pipeline name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "minLength": 1,
            "maxLength": 260,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "referencePipelineRunId",
            "description": "The pipeline run identifier. If run ID is specified the parameters of the specified run will be used to create a new run.",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "isRecovery",
            "description": "Recovery mode flag. If recovery mode is set to true, the specified referenced pipeline run and the new run will be grouped under the same groupId.",
            "in": "query",
            "required": false,
            "type": "boolean",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "startActivityName",
            "description": "In recovery mode, the rerun will start from this activity. If not specified, all activities will run.",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "startFromFailure",
            "description": "In recovery mode, if set to true, the rerun will start from failed activities. The property will be used only if startActivityName is not specified.",
            "in": "query",
            "required": false,
            "type": "boolean",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "description": "Parameters of the pipeline run. These parameters will be used only if the runId is not specified.",
            "in": "body",
            "required": false,
            "schema": {
              "description": "An object mapping parameter names to argument values.",
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Response body with a run identifier.",
              "type": "object",
              "properties": {
                "runId": {
                  "description": "Identifier of a run.",
                  "type": "string"
                }
              },
              "required": [
                "runId"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/queryPipelineRuns": {
      "post": {
        "operationId": "PipelineRuns_QueryByFactory",
        "description": "Query pipeline runs in the factory based on input filter conditions.",
        "tags": [
          "pipelineruns"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "filterParameters",
            "description": "Parameters to filter the pipeline run.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Query parameters for listing runs.",
              "type": "object",
              "properties": {
                "continuationToken": {
                  "description": "The continuation token for getting the next page of results. Null for first page.",
                  "type": "string"
                },
                "lastUpdatedAfter": {
                  "description": "The time at or after which the run event was updated in 'ISO 8601' format.",
                  "type": "string",
                  "format": "date-time"
                },
                "lastUpdatedBefore": {
                  "description": "The time at or before which the run event was updated in 'ISO 8601' format.",
                  "type": "string",
                  "format": "date-time"
                },
                "filters": {
                  "type": "array",
                  "description": "List of filters.",
                  "items": {
                    "description": "Query filter option for listing runs.",
                    "type": "object",
                    "properties": {
                      "operand": {
                        "description": "Parameter name to be used for filter. The allowed operands to query pipeline runs are PipelineName, RunStart, RunEnd and Status; to query activity runs are ActivityName, ActivityRunStart, ActivityRunEnd, ActivityType and Status, and to query trigger runs are TriggerName, TriggerRunTimestamp and Status.",
                        "type": "string",
                        "enum": [
                          "PipelineName",
                          "Status",
                          "RunStart",
                          "RunEnd",
                          "ActivityName",
                          "ActivityRunStart",
                          "ActivityRunEnd",
                          "ActivityType",
                          "TriggerName",
                          "TriggerRunTimestamp",
                          "RunGroupId",
                          "LatestOnly"
                        ],
                        "x-ms-enum": {
                          "name": "RunQueryFilterOperand",
                          "modelAsString": true
                        }
                      },
                      "operator": {
                        "description": "Operator to be used for filter.",
                        "type": "string",
                        "enum": [
                          "Equals",
                          "NotEquals",
                          "In",
                          "NotIn"
                        ],
                        "x-ms-enum": {
                          "name": "RunQueryFilterOperator",
                          "modelAsString": true
                        }
                      },
                      "values": {
                        "type": "array",
                        "description": "List of filter values.",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "operand",
                      "operator",
                      "values"
                    ]
                  },
                  "x-ms-identifiers": []
                },
                "orderBy": {
                  "type": "array",
                  "description": "List of OrderBy option.",
                  "items": {
                    "description": "An object to provide order by options for listing runs.",
                    "type": "object",
                    "properties": {
                      "orderBy": {
                        "description": "Parameter name to be used for order by. The allowed parameters to order by for pipeline runs are PipelineName, RunStart, RunEnd and Status; for activity runs are ActivityName, ActivityRunStart, ActivityRunEnd and Status; for trigger runs are TriggerName, TriggerRunTimestamp and Status.",
                        "type": "string",
                        "enum": [
                          "RunStart",
                          "RunEnd",
                          "PipelineName",
                          "Status",
                          "ActivityName",
                          "ActivityRunStart",
                          "ActivityRunEnd",
                          "TriggerName",
                          "TriggerRunTimestamp"
                        ],
                        "x-ms-enum": {
                          "name": "RunQueryOrderByField",
                          "modelAsString": true
                        }
                      },
                      "order": {
                        "description": "Sorting order of the parameter.",
                        "type": "string",
                        "enum": [
                          "ASC",
                          "DESC"
                        ],
                        "x-ms-enum": {
                          "name": "RunQueryOrder",
                          "modelAsString": true
                        }
                      }
                    },
                    "required": [
                      "orderBy",
                      "order"
                    ]
                  },
                  "x-ms-identifiers": []
                }
              },
              "required": [
                "lastUpdatedAfter",
                "lastUpdatedBefore"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "A list pipeline runs.",
              "type": "object",
              "required": [
                "value"
              ],
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of pipeline runs.",
                  "items": {
                    "description": "Information about a pipeline run.",
                    "type": "object",
                    "properties": {
                      "runId": {
                        "description": "Identifier of a run.",
                        "type": "string",
                        "readOnly": true
                      },
                      "runGroupId": {
                        "description": "Identifier that correlates all the recovery runs of a pipeline run.",
                        "type": "string",
                        "readOnly": true
                      },
                      "isLatest": {
                        "description": "Indicates if the recovered pipeline run is the latest in its group.",
                        "type": "boolean",
                        "readOnly": true
                      },
                      "pipelineName": {
                        "description": "The pipeline name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "parameters": {
                        "description": "The full or partial list of parameter name, value pair used in the pipeline run.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "readOnly": true
                      },
                      "runDimensions": {
                        "description": "Run dimensions emitted by Pipeline run.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "readOnly": true
                      },
                      "invokedBy": {
                        "description": "Entity that started the pipeline run.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the entity that started the pipeline run.",
                            "type": "string",
                            "readOnly": true
                          },
                          "id": {
                            "description": "The ID of the entity that started the run.",
                            "type": "string",
                            "readOnly": true
                          },
                          "invokedByType": {
                            "description": "The type of the entity that started the run.",
                            "type": "string",
                            "readOnly": true
                          },
                          "pipelineName": {
                            "description": "The name of the pipeline that triggered the run, if any.",
                            "type": "string",
                            "readOnly": true
                          },
                          "pipelineRunId": {
                            "description": "The run id of the pipeline that triggered the run, if any.",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "lastUpdated": {
                        "description": "The last updated timestamp for the pipeline run event in ISO8601 format.",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "runStart": {
                        "description": "The start time of a pipeline run in ISO8601 format.",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "runEnd": {
                        "description": "The end time of a pipeline run in ISO8601 format.",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "durationInMs": {
                        "description": "The duration of a pipeline run.",
                        "type": "integer",
                        "readOnly": true
                      },
                      "status": {
                        "description": "The status of a pipeline run. Possible values: Queued, InProgress, Succeeded, Failed, Canceling, Cancelled",
                        "type": "string",
                        "readOnly": true
                      },
                      "message": {
                        "description": "The message from a pipeline run.",
                        "type": "string",
                        "readOnly": true
                      }
                    },
                    "additionalProperties": {
                      "type": "object"
                    }
                  },
                  "x-ms-identifiers": [
                    "runId"
                  ]
                },
                "continuationToken": {
                  "description": "The continuation token for getting the next page of results, if any remaining results exist, null otherwise.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelineruns/{runId}": {
      "get": {
        "operationId": "PipelineRuns_Get",
        "description": "Get a pipeline run by its run ID.",
        "tags": [
          "pipelineruns"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "runId",
            "description": "The pipeline run identifier.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Information about a pipeline run.",
              "type": "object",
              "properties": {
                "runId": {
                  "description": "Identifier of a run.",
                  "type": "string",
                  "readOnly": true
                },
                "runGroupId": {
                  "description": "Identifier that correlates all the recovery runs of a pipeline run.",
                  "type": "string",
                  "readOnly": true
                },
                "isLatest": {
                  "description": "Indicates if the recovered pipeline run is the latest in its group.",
                  "type": "boolean",
                  "readOnly": true
                },
                "pipelineName": {
                  "description": "The pipeline name.",
                  "type": "string",
                  "readOnly": true
                },
                "parameters": {
                  "description": "The full or partial list of parameter name, value pair used in the pipeline run.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "readOnly": true
                },
                "runDimensions": {
                  "description": "Run dimensions emitted by Pipeline run.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "readOnly": true
                },
                "invokedBy": {
                  "description": "Entity that started the pipeline run.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the entity that started the pipeline run.",
                      "type": "string",
                      "readOnly": true
                    },
                    "id": {
                      "description": "The ID of the entity that started the run.",
                      "type": "string",
                      "readOnly": true
                    },
                    "invokedByType": {
                      "description": "The type of the entity that started the run.",
                      "type": "string",
                      "readOnly": true
                    },
                    "pipelineName": {
                      "description": "The name of the pipeline that triggered the run, if any.",
                      "type": "string",
                      "readOnly": true
                    },
                    "pipelineRunId": {
                      "description": "The run id of the pipeline that triggered the run, if any.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                },
                "lastUpdated": {
                  "description": "The last updated timestamp for the pipeline run event in ISO8601 format.",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "runStart": {
                  "description": "The start time of a pipeline run in ISO8601 format.",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "runEnd": {
                  "description": "The end time of a pipeline run in ISO8601 format.",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "durationInMs": {
                  "description": "The duration of a pipeline run.",
                  "type": "integer",
                  "readOnly": true
                },
                "status": {
                  "description": "The status of a pipeline run. Possible values: Queued, InProgress, Succeeded, Failed, Canceling, Cancelled",
                  "type": "string",
                  "readOnly": true
                },
                "message": {
                  "description": "The message from a pipeline run.",
                  "type": "string",
                  "readOnly": true
                }
              },
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelineruns/{runId}/queryActivityruns": {
      "post": {
        "operationId": "ActivityRuns_QueryByPipelineRun",
        "description": "Query activity runs based on input filter conditions.",
        "tags": [
          "activityruns"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "runId",
            "description": "The pipeline run identifier.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "filterParameters",
            "description": "Parameters to filter the activity runs.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Query parameters for listing runs.",
              "type": "object",
              "properties": {
                "continuationToken": {
                  "description": "The continuation token for getting the next page of results. Null for first page.",
                  "type": "string"
                },
                "lastUpdatedAfter": {
                  "description": "The time at or after which the run event was updated in 'ISO 8601' format.",
                  "type": "string",
                  "format": "date-time"
                },
                "lastUpdatedBefore": {
                  "description": "The time at or before which the run event was updated in 'ISO 8601' format.",
                  "type": "string",
                  "format": "date-time"
                },
                "filters": {
                  "type": "array",
                  "description": "List of filters.",
                  "items": {
                    "description": "Query filter option for listing runs.",
                    "type": "object",
                    "properties": {
                      "operand": {
                        "description": "Parameter name to be used for filter. The allowed operands to query pipeline runs are PipelineName, RunStart, RunEnd and Status; to query activity runs are ActivityName, ActivityRunStart, ActivityRunEnd, ActivityType and Status, and to query trigger runs are TriggerName, TriggerRunTimestamp and Status.",
                        "type": "string",
                        "enum": [
                          "PipelineName",
                          "Status",
                          "RunStart",
                          "RunEnd",
                          "ActivityName",
                          "ActivityRunStart",
                          "ActivityRunEnd",
                          "ActivityType",
                          "TriggerName",
                          "TriggerRunTimestamp",
                          "RunGroupId",
                          "LatestOnly"
                        ],
                        "x-ms-enum": {
                          "name": "RunQueryFilterOperand",
                          "modelAsString": true
                        }
                      },
                      "operator": {
                        "description": "Operator to be used for filter.",
                        "type": "string",
                        "enum": [
                          "Equals",
                          "NotEquals",
                          "In",
                          "NotIn"
                        ],
                        "x-ms-enum": {
                          "name": "RunQueryFilterOperator",
                          "modelAsString": true
                        }
                      },
                      "values": {
                        "type": "array",
                        "description": "List of filter values.",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "operand",
                      "operator",
                      "values"
                    ]
                  },
                  "x-ms-identifiers": []
                },
                "orderBy": {
                  "type": "array",
                  "description": "List of OrderBy option.",
                  "items": {
                    "description": "An object to provide order by options for listing runs.",
                    "type": "object",
                    "properties": {
                      "orderBy": {
                        "description": "Parameter name to be used for order by. The allowed parameters to order by for pipeline runs are PipelineName, RunStart, RunEnd and Status; for activity runs are ActivityName, ActivityRunStart, ActivityRunEnd and Status; for trigger runs are TriggerName, TriggerRunTimestamp and Status.",
                        "type": "string",
                        "enum": [
                          "RunStart",
                          "RunEnd",
                          "PipelineName",
                          "Status",
                          "ActivityName",
                          "ActivityRunStart",
                          "ActivityRunEnd",
                          "TriggerName",
                          "TriggerRunTimestamp"
                        ],
                        "x-ms-enum": {
                          "name": "RunQueryOrderByField",
                          "modelAsString": true
                        }
                      },
                      "order": {
                        "description": "Sorting order of the parameter.",
                        "type": "string",
                        "enum": [
                          "ASC",
                          "DESC"
                        ],
                        "x-ms-enum": {
                          "name": "RunQueryOrder",
                          "modelAsString": true
                        }
                      }
                    },
                    "required": [
                      "orderBy",
                      "order"
                    ]
                  },
                  "x-ms-identifiers": []
                }
              },
              "required": [
                "lastUpdatedAfter",
                "lastUpdatedBefore"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "A list activity runs.",
              "type": "object",
              "required": [
                "value"
              ],
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of activity runs.",
                  "items": {
                    "description": "Information about an activity run in a pipeline.",
                    "type": "object",
                    "properties": {
                      "pipelineName": {
                        "description": "The name of the pipeline.",
                        "type": "string",
                        "readOnly": true
                      },
                      "pipelineRunId": {
                        "description": "The id of the pipeline run.",
                        "type": "string",
                        "readOnly": true
                      },
                      "activityName": {
                        "description": "The name of the activity.",
                        "type": "string",
                        "readOnly": true
                      },
                      "activityType": {
                        "description": "The type of the activity.",
                        "type": "string",
                        "readOnly": true
                      },
                      "activityRunId": {
                        "description": "The id of the activity run.",
                        "type": "string",
                        "readOnly": true
                      },
                      "linkedServiceName": {
                        "description": "The name of the compute linked service.",
                        "type": "string",
                        "readOnly": true
                      },
                      "status": {
                        "description": "The status of the activity run.",
                        "type": "string",
                        "readOnly": true
                      },
                      "activityRunStart": {
                        "description": "The start time of the activity run in 'ISO 8601' format.",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "activityRunEnd": {
                        "description": "The end time of the activity run in 'ISO 8601' format.",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "durationInMs": {
                        "description": "The duration of the activity run.",
                        "type": "integer",
                        "readOnly": true
                      },
                      "input": {
                        "description": "The input for the activity.",
                        "type": "object",
                        "readOnly": true
                      },
                      "output": {
                        "description": "The output for the activity.",
                        "type": "object",
                        "readOnly": true
                      },
                      "error": {
                        "description": "The error if any from the activity run.",
                        "type": "object",
                        "readOnly": true
                      }
                    },
                    "additionalProperties": {
                      "type": "object"
                    }
                  },
                  "x-ms-identifiers": [
                    "pipelineRunId"
                  ]
                },
                "continuationToken": {
                  "description": "The continuation token for getting the next page of results, if any remaining results exist, null otherwise.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelineruns/{runId}/cancel": {
      "post": {
        "operationId": "PipelineRuns_Cancel",
        "description": "Cancel a pipeline run by its run ID.",
        "tags": [
          "pipelineruns"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "runId",
            "description": "The pipeline run identifier.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "isRecursive",
            "description": "If true, cancel all the Child pipelines that are triggered by the current pipeline.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Pipeline run has been canceled successfully. "
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers": {
      "get": {
        "tags": [
          "triggers"
        ],
        "operationId": "Triggers_ListByFactory",
        "description": "Lists triggers.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "A list of trigger resources.",
              "type": "object",
              "required": [
                "value"
              ],
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of triggers.",
                  "items": {
                    "description": "Trigger resource type.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The resource identifier.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The resource name.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The resource type.",
                        "readOnly": true
                      },
                      "etag": {
                        "type": "string",
                        "description": "Etag identifies change in the resource.",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the trigger.",
                        "type": "object",
                        "discriminator": "type",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Trigger type."
                          },
                          "description": {
                            "description": "Trigger description.",
                            "type": "string"
                          },
                          "runtimeState": {
                            "description": "Indicates if trigger is running or not. Updated when Start/Stop APIs are called on the Trigger.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Started",
                              "Stopped",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "TriggerRuntimeState",
                              "modelAsString": true
                            }
                          },
                          "annotations": {
                            "description": "List of tags that can be used for describing the trigger.",
                            "type": "array",
                            "items": {
                              "type": "object"
                            },
                            "x-ms-identifiers": []
                          }
                        },
                        "additionalProperties": {
                          "type": "object"
                        },
                        "required": [
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "description": "The link to the next page of results, if any remaining results exist.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/querytriggers": {
      "post": {
        "tags": [
          "triggers"
        ],
        "operationId": "Triggers_QueryByFactory",
        "description": "Query triggers.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "filterParameters",
            "description": "Parameters to filter the triggers.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Query parameters for triggers.",
              "type": "object",
              "properties": {
                "continuationToken": {
                  "description": "The continuation token for getting the next page of results. Null for first page.",
                  "type": "string"
                },
                "parentTriggerName": {
                  "description": "The name of the parent TumblingWindowTrigger to get the child rerun triggers",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "A query of triggers.",
              "type": "object",
              "required": [
                "value"
              ],
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of triggers.",
                  "items": {
                    "description": "Trigger resource type.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The resource identifier.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The resource name.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The resource type.",
                        "readOnly": true
                      },
                      "etag": {
                        "type": "string",
                        "description": "Etag identifies change in the resource.",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the trigger.",
                        "type": "object",
                        "discriminator": "type",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Trigger type."
                          },
                          "description": {
                            "description": "Trigger description.",
                            "type": "string"
                          },
                          "runtimeState": {
                            "description": "Indicates if trigger is running or not. Updated when Start/Stop APIs are called on the Trigger.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Started",
                              "Stopped",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "TriggerRuntimeState",
                              "modelAsString": true
                            }
                          },
                          "annotations": {
                            "description": "List of tags that can be used for describing the trigger.",
                            "type": "array",
                            "items": {
                              "type": "object"
                            },
                            "x-ms-identifiers": []
                          }
                        },
                        "additionalProperties": {
                          "type": "object"
                        },
                        "required": [
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "continuationToken": {
                  "description": "The continuation token for getting the next page of results, if any remaining results exist, null otherwise.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}": {
      "put": {
        "tags": [
          "triggers"
        ],
        "operationId": "Triggers_CreateOrUpdate",
        "description": "Creates or updates a trigger.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "triggerName",
            "description": "The trigger name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "minLength": 1,
            "maxLength": 260,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the trigger entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update."
          },
          {
            "name": "trigger",
            "description": "Trigger resource definition.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Trigger resource type.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "etag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the trigger.",
                  "type": "object",
                  "discriminator": "type",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Trigger type."
                    },
                    "description": {
                      "description": "Trigger description.",
                      "type": "string"
                    },
                    "runtimeState": {
                      "description": "Indicates if trigger is running or not. Updated when Start/Stop APIs are called on the Trigger.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Started",
                        "Stopped",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "TriggerRuntimeState",
                        "modelAsString": true
                      }
                    },
                    "annotations": {
                      "description": "List of tags that can be used for describing the trigger.",
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "x-ms-identifiers": []
                    }
                  },
                  "additionalProperties": {
                    "type": "object"
                  },
                  "required": [
                    "type"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Trigger resource type.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "etag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the trigger.",
                  "type": "object",
                  "discriminator": "type",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Trigger type."
                    },
                    "description": {
                      "description": "Trigger description.",
                      "type": "string"
                    },
                    "runtimeState": {
                      "description": "Indicates if trigger is running or not. Updated when Start/Stop APIs are called on the Trigger.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Started",
                        "Stopped",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "TriggerRuntimeState",
                        "modelAsString": true
                      }
                    },
                    "annotations": {
                      "description": "List of tags that can be used for describing the trigger.",
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "x-ms-identifiers": []
                    }
                  },
                  "additionalProperties": {
                    "type": "object"
                  },
                  "required": [
                    "type"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "get": {
        "tags": [
          "trigger"
        ],
        "operationId": "Triggers_Get",
        "description": "Gets a trigger.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "triggerName",
            "description": "The trigger name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "minLength": 1,
            "maxLength": 260,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the trigger entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Trigger resource type.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "etag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the trigger.",
                  "type": "object",
                  "discriminator": "type",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Trigger type."
                    },
                    "description": {
                      "description": "Trigger description.",
                      "type": "string"
                    },
                    "runtimeState": {
                      "description": "Indicates if trigger is running or not. Updated when Start/Stop APIs are called on the Trigger.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Started",
                        "Stopped",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "TriggerRuntimeState",
                        "modelAsString": true
                      }
                    },
                    "annotations": {
                      "description": "List of tags that can be used for describing the trigger.",
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "x-ms-identifiers": []
                    }
                  },
                  "additionalProperties": {
                    "type": "object"
                  },
                  "required": [
                    "type"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "delete": {
        "tags": [
          "triggers"
        ],
        "operationId": "Triggers_Delete",
        "description": "Deletes a trigger.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "triggerName",
            "description": "The trigger name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "minLength": 1,
            "maxLength": 260,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/subscribeToEvents": {
      "post": {
        "tags": [
          "triggers"
        ],
        "operationId": "Triggers_SubscribeToEvents",
        "description": "Subscribe event trigger to events.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "triggerName",
            "description": "The trigger name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "minLength": 1,
            "maxLength": 260,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Trigger is subscribed to events.",
            "schema": {
              "description": "Defines the response of a trigger subscription operation.",
              "type": "object",
              "properties": {
                "triggerName": {
                  "description": "Trigger name.",
                  "type": "string",
                  "readOnly": true
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Provisioning",
                    "Deprovisioning",
                    "Disabled",
                    "Unknown"
                  ],
                  "x-ms-enum": {
                    "name": "EventSubscriptionStatus",
                    "modelAsString": true
                  },
                  "description": "Event Subscription Status.",
                  "readOnly": true
                }
              }
            }
          },
          "202": {
            "description": "Accepted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/getEventSubscriptionStatus": {
      "post": {
        "tags": [
          "triggers"
        ],
        "operationId": "Triggers_GetEventSubscriptionStatus",
        "description": "Get a trigger's event subscription status.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "triggerName",
            "description": "The trigger name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "minLength": 1,
            "maxLength": 260,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Trigger event subscription state.",
            "schema": {
              "description": "Defines the response of a trigger subscription operation.",
              "type": "object",
              "properties": {
                "triggerName": {
                  "description": "Trigger name.",
                  "type": "string",
                  "readOnly": true
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Provisioning",
                    "Deprovisioning",
                    "Disabled",
                    "Unknown"
                  ],
                  "x-ms-enum": {
                    "name": "EventSubscriptionStatus",
                    "modelAsString": true
                  },
                  "description": "Event Subscription Status.",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/unsubscribeFromEvents": {
      "post": {
        "tags": [
          "triggers"
        ],
        "operationId": "Triggers_UnsubscribeFromEvents",
        "description": "Unsubscribe event trigger from events.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "triggerName",
            "description": "The trigger name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "minLength": 1,
            "maxLength": 260,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Trigger is unsubscribed from events.",
            "schema": {
              "description": "Defines the response of a trigger subscription operation.",
              "type": "object",
              "properties": {
                "triggerName": {
                  "description": "Trigger name.",
                  "type": "string",
                  "readOnly": true
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Provisioning",
                    "Deprovisioning",
                    "Disabled",
                    "Unknown"
                  ],
                  "x-ms-enum": {
                    "name": "EventSubscriptionStatus",
                    "modelAsString": true
                  },
                  "description": "Event Subscription Status.",
                  "readOnly": true
                }
              }
            }
          },
          "202": {
            "description": "Accepted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/start": {
      "post": {
        "tags": [
          "triggers"
        ],
        "operationId": "Triggers_Start",
        "description": "Starts a trigger.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "triggerName",
            "description": "The trigger name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "minLength": 1,
            "maxLength": 260,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Trigger has been started successfully."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/stop": {
      "post": {
        "tags": [
          "triggers"
        ],
        "operationId": "Triggers_Stop",
        "description": "Stops a trigger.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "triggerName",
            "description": "The trigger name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "minLength": 1,
            "maxLength": 260,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Trigger has been stopped successfully."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/triggerRuns/{runId}/rerun": {
      "post": {
        "tags": [
          "triggerruns"
        ],
        "operationId": "TriggerRuns_Rerun",
        "description": "Rerun single trigger instance by runId.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "triggerName",
            "description": "The trigger name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "minLength": 1,
            "maxLength": 260,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "runId",
            "description": "The pipeline run identifier.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "TriggerRun has been restarted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/triggerRuns/{runId}/cancel": {
      "post": {
        "tags": [
          "triggerruns"
        ],
        "operationId": "TriggerRuns_Cancel",
        "description": "Cancel a single trigger instance by runId.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "triggerName",
            "description": "The trigger name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "minLength": 1,
            "maxLength": 260,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "runId",
            "description": "The pipeline run identifier.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "TriggerRun has been cancelled."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/queryTriggerRuns": {
      "post": {
        "tags": [
          "triggerruns"
        ],
        "operationId": "TriggerRuns_QueryByFactory",
        "description": "Query trigger runs.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "filterParameters",
            "description": "Parameters to filter the pipeline run.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Query parameters for listing runs.",
              "type": "object",
              "properties": {
                "continuationToken": {
                  "description": "The continuation token for getting the next page of results. Null for first page.",
                  "type": "string"
                },
                "lastUpdatedAfter": {
                  "description": "The time at or after which the run event was updated in 'ISO 8601' format.",
                  "type": "string",
                  "format": "date-time"
                },
                "lastUpdatedBefore": {
                  "description": "The time at or before which the run event was updated in 'ISO 8601' format.",
                  "type": "string",
                  "format": "date-time"
                },
                "filters": {
                  "type": "array",
                  "description": "List of filters.",
                  "items": {
                    "description": "Query filter option for listing runs.",
                    "type": "object",
                    "properties": {
                      "operand": {
                        "description": "Parameter name to be used for filter. The allowed operands to query pipeline runs are PipelineName, RunStart, RunEnd and Status; to query activity runs are ActivityName, ActivityRunStart, ActivityRunEnd, ActivityType and Status, and to query trigger runs are TriggerName, TriggerRunTimestamp and Status.",
                        "type": "string",
                        "enum": [
                          "PipelineName",
                          "Status",
                          "RunStart",
                          "RunEnd",
                          "ActivityName",
                          "ActivityRunStart",
                          "ActivityRunEnd",
                          "ActivityType",
                          "TriggerName",
                          "TriggerRunTimestamp",
                          "RunGroupId",
                          "LatestOnly"
                        ],
                        "x-ms-enum": {
                          "name": "RunQueryFilterOperand",
                          "modelAsString": true
                        }
                      },
                      "operator": {
                        "description": "Operator to be used for filter.",
                        "type": "string",
                        "enum": [
                          "Equals",
                          "NotEquals",
                          "In",
                          "NotIn"
                        ],
                        "x-ms-enum": {
                          "name": "RunQueryFilterOperator",
                          "modelAsString": true
                        }
                      },
                      "values": {
                        "type": "array",
                        "description": "List of filter values.",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "operand",
                      "operator",
                      "values"
                    ]
                  },
                  "x-ms-identifiers": []
                },
                "orderBy": {
                  "type": "array",
                  "description": "List of OrderBy option.",
                  "items": {
                    "description": "An object to provide order by options for listing runs.",
                    "type": "object",
                    "properties": {
                      "orderBy": {
                        "description": "Parameter name to be used for order by. The allowed parameters to order by for pipeline runs are PipelineName, RunStart, RunEnd and Status; for activity runs are ActivityName, ActivityRunStart, ActivityRunEnd and Status; for trigger runs are TriggerName, TriggerRunTimestamp and Status.",
                        "type": "string",
                        "enum": [
                          "RunStart",
                          "RunEnd",
                          "PipelineName",
                          "Status",
                          "ActivityName",
                          "ActivityRunStart",
                          "ActivityRunEnd",
                          "TriggerName",
                          "TriggerRunTimestamp"
                        ],
                        "x-ms-enum": {
                          "name": "RunQueryOrderByField",
                          "modelAsString": true
                        }
                      },
                      "order": {
                        "description": "Sorting order of the parameter.",
                        "type": "string",
                        "enum": [
                          "ASC",
                          "DESC"
                        ],
                        "x-ms-enum": {
                          "name": "RunQueryOrder",
                          "modelAsString": true
                        }
                      }
                    },
                    "required": [
                      "orderBy",
                      "order"
                    ]
                  },
                  "x-ms-identifiers": []
                }
              },
              "required": [
                "lastUpdatedAfter",
                "lastUpdatedBefore"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "A list of trigger runs.",
              "type": "object",
              "required": [
                "value"
              ],
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of trigger runs.",
                  "items": {
                    "description": "Trigger runs.",
                    "type": "object",
                    "properties": {
                      "triggerRunId": {
                        "type": "string",
                        "description": "Trigger run id.",
                        "readOnly": true
                      },
                      "triggerName": {
                        "type": "string",
                        "description": "Trigger name.",
                        "readOnly": true
                      },
                      "triggerType": {
                        "type": "string",
                        "description": "Trigger type.",
                        "readOnly": true
                      },
                      "triggerRunTimestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Trigger run start time.",
                        "readOnly": true
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "Succeeded",
                          "Failed",
                          "Inprogress"
                        ],
                        "x-ms-enum": {
                          "name": "TriggerRunStatus",
                          "modelAsString": true
                        },
                        "description": "Trigger run status.",
                        "readOnly": true
                      },
                      "message": {
                        "type": "string",
                        "description": "Trigger error message.",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "List of property name and value related to trigger run. Name, value pair depends on type of trigger.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "readOnly": true
                      },
                      "triggeredPipelines": {
                        "description": "List of pipeline name and run Id triggered by the trigger run.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "readOnly": true
                      },
                      "runDimension": {
                        "description": "Run dimension for which trigger was fired.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "readOnly": true
                      },
                      "dependencyStatus": {
                        "description": "Status of the upstream pipelines.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "object"
                        },
                        "readOnly": true
                      }
                    },
                    "additionalProperties": {
                      "type": "object"
                    }
                  },
                  "x-ms-identifiers": [
                    "triggerRunId"
                  ]
                },
                "continuationToken": {
                  "description": "The continuation token for getting the next page of results, if any remaining results exist, null otherwise.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/dataflows/{dataFlowName}": {
      "put": {
        "tags": [
          "dataFlows"
        ],
        "operationId": "DataFlows_CreateOrUpdate",
        "description": "Creates or updates a data flow.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "dataFlowName",
            "description": "The data flow name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "minLength": 1,
            "maxLength": 260,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the data flow entity. Should only be specified for update, for which it should match existing entity or can be * for unconditional update."
          },
          {
            "name": "dataFlow",
            "description": "Data flow resource definition.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Data flow resource type.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "etag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Data flow properties.",
                  "type": "object",
                  "discriminator": "type",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Type of data flow."
                    },
                    "description": {
                      "description": "The description of the data flow.",
                      "type": "string"
                    },
                    "annotations": {
                      "description": "List of tags that can be used for describing the data flow.",
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "x-ms-identifiers": []
                    },
                    "folder": {
                      "description": "The folder that this data flow is in. If not specified, Data flow will appear at the root level.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name of the folder that this data flow is in.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Data flow resource type.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "etag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Data flow properties.",
                  "type": "object",
                  "discriminator": "type",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Type of data flow."
                    },
                    "description": {
                      "description": "The description of the data flow.",
                      "type": "string"
                    },
                    "annotations": {
                      "description": "List of tags that can be used for describing the data flow.",
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "x-ms-identifiers": []
                    },
                    "folder": {
                      "description": "The folder that this data flow is in. If not specified, Data flow will appear at the root level.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name of the folder that this data flow is in.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "get": {
        "tags": [
          "dataFlows"
        ],
        "operationId": "DataFlows_Get",
        "description": "Gets a data flow.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "dataFlowName",
            "description": "The data flow name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "minLength": 1,
            "maxLength": 260,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the data flow entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Data flow resource type.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "etag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Data flow properties.",
                  "type": "object",
                  "discriminator": "type",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Type of data flow."
                    },
                    "description": {
                      "description": "The description of the data flow.",
                      "type": "string"
                    },
                    "annotations": {
                      "description": "List of tags that can be used for describing the data flow.",
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "x-ms-identifiers": []
                    },
                    "folder": {
                      "description": "The folder that this data flow is in. If not specified, Data flow will appear at the root level.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name of the folder that this data flow is in.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "delete": {
        "tags": [
          "dataFlows"
        ],
        "operationId": "DataFlows_Delete",
        "description": "Deletes a data flow.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "dataFlowName",
            "description": "The data flow name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "minLength": 1,
            "maxLength": 260,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/dataflows": {
      "get": {
        "tags": [
          "dataFlows"
        ],
        "operationId": "DataFlows_ListByFactory",
        "description": "Lists data flows.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "A list of data flow resources.",
              "type": "object",
              "required": [
                "value"
              ],
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of data flows.",
                  "items": {
                    "description": "Data flow resource type.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The resource identifier.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The resource name.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The resource type.",
                        "readOnly": true
                      },
                      "etag": {
                        "type": "string",
                        "description": "Etag identifies change in the resource.",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Data flow properties.",
                        "type": "object",
                        "discriminator": "type",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Type of data flow."
                          },
                          "description": {
                            "description": "The description of the data flow.",
                            "type": "string"
                          },
                          "annotations": {
                            "description": "List of tags that can be used for describing the data flow.",
                            "type": "array",
                            "items": {
                              "type": "object"
                            },
                            "x-ms-identifiers": []
                          },
                          "folder": {
                            "description": "The folder that this data flow is in. If not specified, Data flow will appear at the root level.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "The name of the folder that this data flow is in.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "description": "The link to the next page of results, if any remaining results exist.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/createDataFlowDebugSession": {
      "post": {
        "tags": [
          "dataFlowDebugSession"
        ],
        "operationId": "DataFlowDebugSession_Create",
        "description": "Creates a data flow debug session.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "description": "Data flow debug session definition",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Request body structure for creating data flow debug session.",
              "type": "object",
              "properties": {
                "computeType": {
                  "description": "Compute type of the cluster. The value will be overwritten by the same setting in integration runtime if provided.",
                  "type": "string"
                },
                "coreCount": {
                  "description": "Core count of the cluster. The value will be overwritten by the same setting in integration runtime if provided.",
                  "type": "integer"
                },
                "timeToLive": {
                  "description": "Time to live setting of the cluster in minutes.",
                  "type": "integer"
                },
                "integrationRuntime": {
                  "description": "Set to use integration runtime setting for data flow debug session.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The resource name."
                    },
                    "properties": {
                      "description": "Integration runtime properties.",
                      "type": "object",
                      "discriminator": "type",
                      "properties": {
                        "type": {
                          "description": "Type of integration runtime.",
                          "type": "string",
                          "enum": [
                            "Managed",
                            "SelfHosted"
                          ],
                          "x-ms-enum": {
                            "name": "IntegrationRuntimeType",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "description": "Integration runtime description.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": {
                        "type": "object"
                      },
                      "required": [
                        "type"
                      ]
                    }
                  },
                  "required": [
                    "properties"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Response body structure for creating data flow debug session.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "The state of the debug session.",
                  "type": "string"
                },
                "sessionId": {
                  "description": "The ID of data flow debug session.",
                  "type": "string"
                }
              }
            }
          },
          "202": {
            "description": "Accepted.",
            "headers": {
              "location": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/queryDataFlowDebugSessions": {
      "post": {
        "tags": [
          "dataFlowDebugSession"
        ],
        "operationId": "DataFlowDebugSession_QueryByFactory",
        "description": "Query all active data flow debug sessions.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "A list of active debug sessions.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Array with all active debug sessions.",
                  "type": "array",
                  "items": {
                    "description": "Data flow debug session info.",
                    "type": "object",
                    "properties": {
                      "dataFlowName": {
                        "description": "The name of the data flow.",
                        "type": "string"
                      },
                      "computeType": {
                        "description": "Compute type of the cluster.",
                        "type": "string"
                      },
                      "coreCount": {
                        "description": "Core count of the cluster.",
                        "type": "integer"
                      },
                      "nodeCount": {
                        "description": "Node count of the cluster. (deprecated property)",
                        "type": "integer"
                      },
                      "integrationRuntimeName": {
                        "description": "Attached integration runtime name of data flow debug session.",
                        "type": "string"
                      },
                      "sessionId": {
                        "description": "The ID of data flow debug session.",
                        "type": "string"
                      },
                      "startTime": {
                        "description": "Start time of data flow debug session.",
                        "type": "string"
                      },
                      "timeToLiveInMinutes": {
                        "description": "Compute type of the cluster.",
                        "type": "integer"
                      },
                      "lastActivityTime": {
                        "description": "Last activity time of data flow debug session.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": {
                      "type": "object"
                    }
                  },
                  "x-ms-identifiers": [
                    "dataFlowName",
                    "sessionId"
                  ]
                },
                "nextLink": {
                  "description": "The link to the next page of results, if any remaining results exist.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/addDataFlowToDebugSession": {
      "post": {
        "tags": [
          "dataFlowDebugSession"
        ],
        "operationId": "DataFlowDebugSession_AddDataFlow",
        "description": "Add a data flow into debug session.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "description": "Data flow debug session definition with debug content.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Request body structure for starting data flow debug session.",
              "type": "object",
              "properties": {
                "sessionId": {
                  "description": "The ID of data flow debug session.",
                  "type": "string"
                },
                "dataFlow": {
                  "description": "Data flow instance.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The resource name."
                    },
                    "properties": {
                      "description": "Data flow properties.",
                      "type": "object",
                      "discriminator": "type",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of data flow."
                        },
                        "description": {
                          "description": "The description of the data flow.",
                          "type": "string"
                        },
                        "annotations": {
                          "description": "List of tags that can be used for describing the data flow.",
                          "type": "array",
                          "items": {
                            "type": "object"
                          },
                          "x-ms-identifiers": []
                        },
                        "folder": {
                          "description": "The folder that this data flow is in. If not specified, Data flow will appear at the root level.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "The name of the folder that this data flow is in.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "properties"
                  ]
                },
                "dataFlows": {
                  "description": "List of Data flows",
                  "type": "array",
                  "items": {
                    "description": "Data flow debug resource.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The resource name."
                      },
                      "properties": {
                        "description": "Data flow properties.",
                        "type": "object",
                        "discriminator": "type",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Type of data flow."
                          },
                          "description": {
                            "description": "The description of the data flow.",
                            "type": "string"
                          },
                          "annotations": {
                            "description": "List of tags that can be used for describing the data flow.",
                            "type": "array",
                            "items": {
                              "type": "object"
                            },
                            "x-ms-identifiers": []
                          },
                          "folder": {
                            "description": "The folder that this data flow is in. If not specified, Data flow will appear at the root level.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "The name of the folder that this data flow is in.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "datasets": {
                  "type": "array",
                  "description": "List of datasets.",
                  "items": {
                    "description": "Dataset debug resource.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The resource name."
                      },
                      "properties": {
                        "description": "Dataset properties.",
                        "type": "object",
                        "discriminator": "type",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Type of dataset."
                          },
                          "description": {
                            "description": "Dataset description.",
                            "type": "string"
                          },
                          "structure": {
                            "type": "object",
                            "x-ms-format": "dfe-list-generic",
                            "x-ms-format-element-type": "DatasetDataElement",
                            "description": "Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement."
                          },
                          "schema": {
                            "type": "object",
                            "x-ms-format": "dfe-list-generic",
                            "x-ms-format-element-type": "DatasetSchemaDataElement",
                            "description": "Columns that define the physical type schema of the dataset. Type: array (or Expression with resultType array), itemType: DatasetSchemaDataElement."
                          },
                          "linkedServiceName": {
                            "description": "Linked service reference.",
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Linked service reference type.",
                                "enum": [
                                  "LinkedServiceReference"
                                ],
                                "x-ms-enum": {
                                  "name": "Type",
                                  "modelAsString": true
                                }
                              },
                              "referenceName": {
                                "type": "string",
                                "description": "Reference LinkedService name."
                              },
                              "parameters": {
                                "description": "Arguments for LinkedService.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object"
                                }
                              }
                            },
                            "required": [
                              "type",
                              "referenceName"
                            ]
                          },
                          "parameters": {
                            "description": "Parameters for dataset.",
                            "type": "object",
                            "additionalProperties": {
                              "description": "Definition of a single parameter for an entity.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "Parameter type.",
                                  "enum": [
                                    "Object",
                                    "String",
                                    "Int",
                                    "Float",
                                    "Bool",
                                    "Array",
                                    "SecureString"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ParameterType",
                                    "modelAsString": true
                                  }
                                },
                                "defaultValue": {
                                  "type": "object",
                                  "description": "Default value of parameter."
                                }
                              },
                              "required": [
                                "type"
                              ]
                            }
                          },
                          "annotations": {
                            "description": "List of tags that can be used for describing the Dataset.",
                            "type": "array",
                            "items": {
                              "type": "object"
                            },
                            "x-ms-identifiers": []
                          },
                          "folder": {
                            "description": "The folder that this Dataset is in. If not specified, Dataset will appear at the root level.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "The name of the folder that this Dataset is in.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "additionalProperties": {
                          "type": "object"
                        },
                        "required": [
                          "type",
                          "linkedServiceName"
                        ]
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "linkedServices": {
                  "type": "array",
                  "description": "List of linked services.",
                  "items": {
                    "description": "Linked service debug resource.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The resource name."
                      },
                      "properties": {
                        "description": "Properties of linked service.",
                        "type": "object",
                        "discriminator": "type",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Type of linked service."
                          },
                          "version": {
                            "type": "string",
                            "description": "Version of the linked service."
                          },
                          "connectVia": {
                            "description": "The integration runtime reference.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Type of integration runtime.",
                                "enum": [
                                  "IntegrationRuntimeReference"
                                ]
                              },
                              "referenceName": {
                                "type": "string",
                                "description": "Reference integration runtime name."
                              },
                              "parameters": {
                                "description": "Arguments for integration runtime.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object"
                                }
                              }
                            },
                            "required": [
                              "type",
                              "referenceName"
                            ]
                          },
                          "description": {
                            "description": "Linked service description.",
                            "type": "string"
                          },
                          "parameters": {
                            "description": "Parameters for linked service.",
                            "type": "object",
                            "additionalProperties": {
                              "description": "Definition of a single parameter for an entity.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "Parameter type.",
                                  "enum": [
                                    "Object",
                                    "String",
                                    "Int",
                                    "Float",
                                    "Bool",
                                    "Array",
                                    "SecureString"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ParameterType",
                                    "modelAsString": true
                                  }
                                },
                                "defaultValue": {
                                  "type": "object",
                                  "description": "Default value of parameter."
                                }
                              },
                              "required": [
                                "type"
                              ]
                            }
                          },
                          "annotations": {
                            "description": "List of tags that can be used for describing the linked service.",
                            "type": "array",
                            "items": {
                              "type": "object"
                            },
                            "x-ms-identifiers": []
                          }
                        },
                        "additionalProperties": {
                          "type": "object"
                        },
                        "required": [
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "staging": {
                  "description": "Staging info for debug session.",
                  "properties": {
                    "linkedService": {
                      "description": "Staging linked service reference.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Linked service reference type.",
                          "enum": [
                            "LinkedServiceReference"
                          ],
                          "x-ms-enum": {
                            "name": "Type",
                            "modelAsString": true
                          }
                        },
                        "referenceName": {
                          "type": "string",
                          "description": "Reference LinkedService name."
                        },
                        "parameters": {
                          "description": "Arguments for LinkedService.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "object"
                          }
                        }
                      },
                      "required": [
                        "type",
                        "referenceName"
                      ]
                    },
                    "folderPath": {
                      "description": "Folder path for staging blob. Type: string (or Expression with resultType string)",
                      "x-ms-format": "dfe-string",
                      "type": "object"
                    }
                  }
                },
                "debugSettings": {
                  "description": "Data flow debug settings.",
                  "type": "object",
                  "properties": {
                    "sourceSettings": {
                      "type": "array",
                      "description": "Source setting for data flow debug.",
                      "items": {
                        "description": "Definition of data flow source setting for debug.",
                        "type": "object",
                        "properties": {
                          "sourceName": {
                            "description": "The data flow source name.",
                            "type": "string"
                          },
                          "rowLimit": {
                            "description": "Defines the row limit of data flow source in debug.",
                            "type": "integer"
                          }
                        },
                        "additionalProperties": {
                          "type": "object"
                        }
                      },
                      "x-ms-identifiers": [
                        "sourceName"
                      ]
                    },
                    "parameters": {
                      "description": "An object mapping parameter names to argument values.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object"
                      }
                    },
                    "datasetParameters": {
                      "description": "Parameters for dataset.",
                      "type": "object"
                    }
                  }
                }
              },
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Response body structure for starting data flow debug session.",
              "type": "object",
              "properties": {
                "jobVersion": {
                  "description": "The ID of data flow debug job version.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/deleteDataFlowDebugSession": {
      "post": {
        "tags": [
          "dataFlowDebugSession"
        ],
        "operationId": "DataFlowDebugSession_Delete",
        "description": "Deletes a data flow debug session.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "description": "Data flow debug session definition for deletion",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Request body structure for deleting data flow debug session.",
              "type": "object",
              "properties": {
                "sessionId": {
                  "description": "The ID of data flow debug session.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/executeDataFlowDebugCommand": {
      "post": {
        "tags": [
          "dataFlowDebugSession"
        ],
        "operationId": "DataFlowDebugSession_ExecuteCommand",
        "description": "Execute a data flow debug command.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "description": "Data flow debug command definition.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Request body structure for data flow debug command.",
              "type": "object",
              "properties": {
                "sessionId": {
                  "description": "The ID of data flow debug session.",
                  "type": "string"
                },
                "command": {
                  "description": "The command type.",
                  "type": "string",
                  "enum": [
                    "executePreviewQuery",
                    "executeStatisticsQuery",
                    "executeExpressionQuery"
                  ],
                  "x-ms-enum": {
                    "name": "DataFlowDebugCommandType",
                    "modelAsString": true
                  }
                },
                "commandPayload": {
                  "description": "The command payload object.",
                  "type": "object",
                  "properties": {
                    "streamName": {
                      "description": "The stream name which is used for preview.",
                      "type": "string"
                    },
                    "rowLimits": {
                      "description": "Row limits for preview response.",
                      "type": "integer"
                    },
                    "columns": {
                      "description": "Array of column names.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "expression": {
                      "description": "The expression which is used for preview.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "streamName"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Response body structure of data flow result for data preview, statistics or expression preview.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "The run status of data preview, statistics or expression preview.",
                  "type": "string"
                },
                "data": {
                  "description": "The result data of data preview, statistics or expression preview.",
                  "type": "string"
                }
              }
            }
          },
          "202": {
            "description": "Accepted.",
            "headers": {
              "location": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/managedVirtualNetworks": {
      "get": {
        "tags": [
          "managedVirtualNetworks"
        ],
        "operationId": "ManagedVirtualNetworks_ListByFactory",
        "description": "Lists managed Virtual Networks.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "A list of managed Virtual Network resources.",
              "type": "object",
              "required": [
                "value"
              ],
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of managed Virtual Networks.",
                  "items": {
                    "description": "Managed Virtual Network resource type.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The resource identifier.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The resource name.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The resource type.",
                        "readOnly": true
                      },
                      "etag": {
                        "type": "string",
                        "description": "Etag identifies change in the resource.",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Managed Virtual Network properties.",
                        "type": "object",
                        "properties": {
                          "vNetId": {
                            "description": "Managed Virtual Network ID.",
                            "type": "string",
                            "readOnly": true
                          },
                          "alias": {
                            "description": "Managed Virtual Network alias.",
                            "type": "string",
                            "readOnly": true
                          }
                        },
                        "additionalProperties": {
                          "type": "object"
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "description": "The link to the next page of results, if any remaining results exist.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/managedVirtualNetworks/{managedVirtualNetworkName}": {
      "put": {
        "tags": [
          "managedVirtualNetworks"
        ],
        "operationId": "ManagedVirtualNetworks_CreateOrUpdate",
        "description": "Creates or updates a managed Virtual Network.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "managedVirtualNetworkName",
            "description": "Managed virtual network name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^([_A-Za-z0-9]|([_A-Za-z0-9][-_A-Za-z0-9]{0,125}[_A-Za-z0-9]))$",
            "minLength": 1,
            "maxLength": 127,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the managed Virtual Network entity. Should only be specified for update, for which it should match existing entity or can be * for unconditional update."
          },
          {
            "name": "managedVirtualNetwork",
            "description": "Managed Virtual Network resource definition.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Managed Virtual Network resource type.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "etag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Managed Virtual Network properties.",
                  "type": "object",
                  "properties": {
                    "vNetId": {
                      "description": "Managed Virtual Network ID.",
                      "type": "string",
                      "readOnly": true
                    },
                    "alias": {
                      "description": "Managed Virtual Network alias.",
                      "type": "string",
                      "readOnly": true
                    }
                  },
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Managed Virtual Network resource type.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "etag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Managed Virtual Network properties.",
                  "type": "object",
                  "properties": {
                    "vNetId": {
                      "description": "Managed Virtual Network ID.",
                      "type": "string",
                      "readOnly": true
                    },
                    "alias": {
                      "description": "Managed Virtual Network alias.",
                      "type": "string",
                      "readOnly": true
                    }
                  },
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "get": {
        "tags": [
          "managedVirtualNetworks"
        ],
        "operationId": "ManagedVirtualNetworks_Get",
        "description": "Gets a managed Virtual Network.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "managedVirtualNetworkName",
            "description": "Managed virtual network name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^([_A-Za-z0-9]|([_A-Za-z0-9][-_A-Za-z0-9]{0,125}[_A-Za-z0-9]))$",
            "minLength": 1,
            "maxLength": 127,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the managed Virtual Network entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Managed Virtual Network resource type.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "etag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Managed Virtual Network properties.",
                  "type": "object",
                  "properties": {
                    "vNetId": {
                      "description": "Managed Virtual Network ID.",
                      "type": "string",
                      "readOnly": true
                    },
                    "alias": {
                      "description": "Managed Virtual Network alias.",
                      "type": "string",
                      "readOnly": true
                    }
                  },
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/managedVirtualNetworks/{managedVirtualNetworkName}/managedPrivateEndpoints": {
      "get": {
        "tags": [
          "managedPrivateEndpoints"
        ],
        "operationId": "ManagedPrivateEndpoints_ListByFactory",
        "description": "Lists managed private endpoints.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "managedVirtualNetworkName",
            "description": "Managed virtual network name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^([_A-Za-z0-9]|([_A-Za-z0-9][-_A-Za-z0-9]{0,125}[_A-Za-z0-9]))$",
            "minLength": 1,
            "maxLength": 127,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "A list of managed private endpoint resources.",
              "type": "object",
              "required": [
                "value"
              ],
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of managed private endpoints.",
                  "items": {
                    "description": "Managed private endpoint resource type.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The resource identifier.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The resource name.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The resource type.",
                        "readOnly": true
                      },
                      "etag": {
                        "type": "string",
                        "description": "Etag identifies change in the resource.",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Managed private endpoint properties.",
                        "type": "object",
                        "properties": {
                          "connectionState": {
                            "description": "The managed private endpoint connection state",
                            "type": "object",
                            "properties": {
                              "actionsRequired": {
                                "description": "The actions required on the managed private endpoint",
                                "type": "string",
                                "readOnly": true
                              },
                              "description": {
                                "description": "The managed private endpoint description",
                                "type": "string",
                                "readOnly": true
                              },
                              "status": {
                                "description": "The approval status",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "fqdns": {
                            "description": "Fully qualified domain names",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "groupId": {
                            "description": "The groupId to which the managed private endpoint is created",
                            "type": "string"
                          },
                          "isReserved": {
                            "description": "Denotes whether the managed private endpoint is reserved",
                            "type": "boolean",
                            "readOnly": true
                          },
                          "privateLinkResourceId": {
                            "description": "The ARM resource ID of the resource to which the managed private endpoint is created",
                            "type": "string"
                          },
                          "provisioningState": {
                            "description": "The managed private endpoint provisioning state",
                            "type": "string",
                            "readOnly": true
                          }
                        },
                        "additionalProperties": {
                          "type": "object"
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "description": "The link to the next page of results, if any remaining results exist.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/credentials": {
      "get": {
        "tags": [
          "credentials"
        ],
        "operationId": "CredentialOperations_ListByFactory",
        "description": "List credentials.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "A list of credential resources.",
              "type": "object",
              "required": [
                "value"
              ],
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of credentials.",
                  "items": {
                    "description": "Credential resource type.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The resource identifier.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The resource name.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The resource type.",
                        "readOnly": true
                      },
                      "etag": {
                        "type": "string",
                        "description": "Etag identifies change in the resource.",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of credentials.",
                        "type": "object",
                        "discriminator": "type",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Type of credential."
                          },
                          "description": {
                            "description": "Credential description.",
                            "type": "string"
                          },
                          "annotations": {
                            "description": "List of tags that can be used for describing the Credential.",
                            "type": "array",
                            "items": {
                              "type": "object"
                            },
                            "x-ms-identifiers": []
                          }
                        },
                        "additionalProperties": {
                          "type": "object"
                        },
                        "required": [
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "description": "The link to the next page of results, if any remaining results exist.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/credentials/{credentialName}": {
      "put": {
        "tags": [
          "credentials"
        ],
        "operationId": "CredentialOperations_CreateOrUpdate",
        "description": "Creates or updates a credential.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "credentialName",
            "description": "Credential name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^([_A-Za-z0-9]|([_A-Za-z0-9][-_A-Za-z0-9]{0,125}[_A-Za-z0-9]))$",
            "minLength": 1,
            "maxLength": 127,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the credential entity. Should only be specified for update, for which it should match existing entity or can be * for unconditional update."
          },
          {
            "name": "credential",
            "description": "Credential resource definition.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Credential resource type.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "etag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of credentials.",
                  "type": "object",
                  "discriminator": "type",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Type of credential."
                    },
                    "description": {
                      "description": "Credential description.",
                      "type": "string"
                    },
                    "annotations": {
                      "description": "List of tags that can be used for describing the Credential.",
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "x-ms-identifiers": []
                    }
                  },
                  "additionalProperties": {
                    "type": "object"
                  },
                  "required": [
                    "type"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Credential resource type.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "etag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of credentials.",
                  "type": "object",
                  "discriminator": "type",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Type of credential."
                    },
                    "description": {
                      "description": "Credential description.",
                      "type": "string"
                    },
                    "annotations": {
                      "description": "List of tags that can be used for describing the Credential.",
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "x-ms-identifiers": []
                    }
                  },
                  "additionalProperties": {
                    "type": "object"
                  },
                  "required": [
                    "type"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "get": {
        "tags": [
          "credentials"
        ],
        "operationId": "CredentialOperations_Get",
        "description": "Gets a credential.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "credentialName",
            "description": "Credential name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^([_A-Za-z0-9]|([_A-Za-z0-9][-_A-Za-z0-9]{0,125}[_A-Za-z0-9]))$",
            "minLength": 1,
            "maxLength": 127,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the credential entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Credential resource type.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "etag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of credentials.",
                  "type": "object",
                  "discriminator": "type",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Type of credential."
                    },
                    "description": {
                      "description": "Credential description.",
                      "type": "string"
                    },
                    "annotations": {
                      "description": "List of tags that can be used for describing the Credential.",
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "x-ms-identifiers": []
                    }
                  },
                  "additionalProperties": {
                    "type": "object"
                  },
                  "required": [
                    "type"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "delete": {
        "tags": [
          "credentials"
        ],
        "operationId": "CredentialOperations_Delete",
        "description": "Deletes a credential.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "credentialName",
            "description": "Credential name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^([_A-Za-z0-9]|([_A-Za-z0-9][-_A-Za-z0-9]{0,125}[_A-Za-z0-9]))$",
            "minLength": 1,
            "maxLength": 127,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/managedVirtualNetworks/{managedVirtualNetworkName}/managedPrivateEndpoints/{managedPrivateEndpointName}": {
      "put": {
        "tags": [
          "managedPrivateEndpoints"
        ],
        "operationId": "ManagedPrivateEndpoints_CreateOrUpdate",
        "description": "Creates or updates a managed private endpoint.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "managedVirtualNetworkName",
            "description": "Managed virtual network name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^([_A-Za-z0-9]|([_A-Za-z0-9][-_A-Za-z0-9]{0,125}[_A-Za-z0-9]))$",
            "minLength": 1,
            "maxLength": 127,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "managedPrivateEndpointName",
            "description": "Managed private endpoint name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^([_A-Za-z0-9]|([_A-Za-z0-9][-_A-Za-z0-9]{0,125}[_A-Za-z0-9]))$",
            "minLength": 1,
            "maxLength": 127,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the managed private endpoint entity. Should only be specified for update, for which it should match existing entity or can be * for unconditional update."
          },
          {
            "name": "managedPrivateEndpoint",
            "description": "Managed private endpoint resource definition.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Managed private endpoint resource type.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "etag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Managed private endpoint properties.",
                  "type": "object",
                  "properties": {
                    "connectionState": {
                      "description": "The managed private endpoint connection state",
                      "type": "object",
                      "properties": {
                        "actionsRequired": {
                          "description": "The actions required on the managed private endpoint",
                          "type": "string",
                          "readOnly": true
                        },
                        "description": {
                          "description": "The managed private endpoint description",
                          "type": "string",
                          "readOnly": true
                        },
                        "status": {
                          "description": "The approval status",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "fqdns": {
                      "description": "Fully qualified domain names",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "groupId": {
                      "description": "The groupId to which the managed private endpoint is created",
                      "type": "string"
                    },
                    "isReserved": {
                      "description": "Denotes whether the managed private endpoint is reserved",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "privateLinkResourceId": {
                      "description": "The ARM resource ID of the resource to which the managed private endpoint is created",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "The managed private endpoint provisioning state",
                      "type": "string",
                      "readOnly": true
                    }
                  },
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Managed private endpoint resource type.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "etag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Managed private endpoint properties.",
                  "type": "object",
                  "properties": {
                    "connectionState": {
                      "description": "The managed private endpoint connection state",
                      "type": "object",
                      "properties": {
                        "actionsRequired": {
                          "description": "The actions required on the managed private endpoint",
                          "type": "string",
                          "readOnly": true
                        },
                        "description": {
                          "description": "The managed private endpoint description",
                          "type": "string",
                          "readOnly": true
                        },
                        "status": {
                          "description": "The approval status",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "fqdns": {
                      "description": "Fully qualified domain names",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "groupId": {
                      "description": "The groupId to which the managed private endpoint is created",
                      "type": "string"
                    },
                    "isReserved": {
                      "description": "Denotes whether the managed private endpoint is reserved",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "privateLinkResourceId": {
                      "description": "The ARM resource ID of the resource to which the managed private endpoint is created",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "The managed private endpoint provisioning state",
                      "type": "string",
                      "readOnly": true
                    }
                  },
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "get": {
        "tags": [
          "managedPrivateEndpoints"
        ],
        "operationId": "ManagedPrivateEndpoints_Get",
        "description": "Gets a managed private endpoint.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "managedVirtualNetworkName",
            "description": "Managed virtual network name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^([_A-Za-z0-9]|([_A-Za-z0-9][-_A-Za-z0-9]{0,125}[_A-Za-z0-9]))$",
            "minLength": 1,
            "maxLength": 127,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "managedPrivateEndpointName",
            "description": "Managed private endpoint name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^([_A-Za-z0-9]|([_A-Za-z0-9][-_A-Za-z0-9]{0,125}[_A-Za-z0-9]))$",
            "minLength": 1,
            "maxLength": 127,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the managed private endpoint entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Managed private endpoint resource type.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "etag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Managed private endpoint properties.",
                  "type": "object",
                  "properties": {
                    "connectionState": {
                      "description": "The managed private endpoint connection state",
                      "type": "object",
                      "properties": {
                        "actionsRequired": {
                          "description": "The actions required on the managed private endpoint",
                          "type": "string",
                          "readOnly": true
                        },
                        "description": {
                          "description": "The managed private endpoint description",
                          "type": "string",
                          "readOnly": true
                        },
                        "status": {
                          "description": "The approval status",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "fqdns": {
                      "description": "Fully qualified domain names",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "groupId": {
                      "description": "The groupId to which the managed private endpoint is created",
                      "type": "string"
                    },
                    "isReserved": {
                      "description": "Denotes whether the managed private endpoint is reserved",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "privateLinkResourceId": {
                      "description": "The ARM resource ID of the resource to which the managed private endpoint is created",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "The managed private endpoint provisioning state",
                      "type": "string",
                      "readOnly": true
                    }
                  },
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "delete": {
        "tags": [
          "managedPrivateEndpoints"
        ],
        "operationId": "ManagedPrivateEndpoints_Delete",
        "description": "Deletes a managed private endpoint.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "managedVirtualNetworkName",
            "description": "Managed virtual network name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^([_A-Za-z0-9]|([_A-Za-z0-9][-_A-Za-z0-9]{0,125}[_A-Za-z0-9]))$",
            "minLength": 1,
            "maxLength": 127,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "managedPrivateEndpointName",
            "description": "Managed private endpoint name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^([_A-Za-z0-9]|([_A-Za-z0-9][-_A-Za-z0-9]{0,125}[_A-Za-z0-9]))$",
            "minLength": 1,
            "maxLength": 127,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/privateEndPointConnections": {
      "get": {
        "tags": [
          "privateEndPointConnections"
        ],
        "operationId": "privateEndPointConnections_ListByFactory",
        "description": "Lists Private endpoint connections",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "A list of linked service resources.",
              "type": "object",
              "required": [
                "value"
              ],
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of Private Endpoint Connections.",
                  "items": {
                    "description": "Private Endpoint Connection ARM resource.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The resource identifier.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The resource name.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The resource type.",
                        "readOnly": true
                      },
                      "etag": {
                        "type": "string",
                        "description": "Etag identifies change in the resource.",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Core resource properties",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "type": "string",
                            "readOnly": true
                          },
                          "privateEndpoint": {
                            "description": "PrivateEndpoint of a remote private endpoint connection",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "privateLinkServiceConnectionState": {
                            "description": "The state of a private link connection",
                            "type": "object",
                            "properties": {
                              "status": {
                                "description": "Status of a private link connection",
                                "type": "string"
                              },
                              "description": {
                                "description": "Description of a private link connection",
                                "type": "string"
                              },
                              "actionsRequired": {
                                "description": "ActionsRequired for a private link connection",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "The link to the next page of results, if any remaining results exist.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "put": {
        "tags": [
          "privateEndpointConnections"
        ],
        "description": "Approves or rejects a private endpoint connection",
        "operationId": "PrivateEndpointConnection_CreateOrUpdate",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateEndpointConnectionName",
            "description": "The private endpoint connection name.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the private endpoint connection entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update."
          },
          {
            "name": "privateEndpointWrapper",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Private Endpoint Connection Approval ARM resource.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "etag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Core resource properties",
                  "type": "object",
                  "properties": {
                    "privateLinkServiceConnectionState": {
                      "description": "The state of a private link connection",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Status of a private link connection",
                          "type": "string"
                        },
                        "description": {
                          "description": "Description of a private link connection",
                          "type": "string"
                        },
                        "actionsRequired": {
                          "description": "ActionsRequired for a private link connection",
                          "type": "string"
                        }
                      }
                    },
                    "privateEndpoint": {
                      "description": "The resource of private endpoint.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "The resource Id for private endpoint",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Private Endpoint Connection ARM resource.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "etag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Core resource properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true
                    },
                    "privateEndpoint": {
                      "description": "PrivateEndpoint of a remote private endpoint connection",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "The state of a private link connection",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Status of a private link connection",
                          "type": "string"
                        },
                        "description": {
                          "description": "Description of a private link connection",
                          "type": "string"
                        },
                        "actionsRequired": {
                          "description": "ActionsRequired for a private link connection",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "privateEndpointConnections"
        ],
        "description": "Gets a private endpoint connection",
        "operationId": "PrivateEndpointConnection_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateEndpointConnectionName",
            "description": "The private endpoint connection name.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the private endpoint connection entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Private Endpoint Connection ARM resource.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "etag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Core resource properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true
                    },
                    "privateEndpoint": {
                      "description": "PrivateEndpoint of a remote private endpoint connection",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "The state of a private link connection",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Status of a private link connection",
                          "type": "string"
                        },
                        "description": {
                          "description": "Description of a private link connection",
                          "type": "string"
                        },
                        "actionsRequired": {
                          "description": "ActionsRequired for a private link connection",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "privateEndpointConnections"
        ],
        "description": "Deletes a private endpoint connection",
        "operationId": "PrivateEndpointConnection_Delete",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateEndpointConnectionName",
            "description": "The private endpoint connection name.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No content."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/privateLinkResources": {
      "get": {
        "tags": [
          "privateLinkResources"
        ],
        "description": "Gets the private link resources",
        "operationId": "privateLinkResources_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Wrapper for a collection of private link resources",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "A private link resource",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The resource identifier.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The resource name.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The resource type.",
                        "readOnly": true
                      },
                      "etag": {
                        "type": "string",
                        "description": "Etag identifies change in the resource.",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Core resource properties",
                        "type": "object",
                        "properties": {
                          "groupId": {
                            "description": "GroupId of a private link resource",
                            "type": "string",
                            "readOnly": true
                          },
                          "requiredMembers": {
                            "description": "RequiredMembers of a private link resource",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "requiredZoneNames": {
                            "description": "RequiredZoneNames of a private link resource",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/globalParameters": {
      "get": {
        "tags": [
          "globalParameters"
        ],
        "operationId": "GlobalParameters_ListByFactory",
        "description": "Lists Global parameters",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "A list of Global parameters.",
              "type": "object",
              "required": [
                "value"
              ],
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of global parameters.",
                  "items": {
                    "description": "Global parameters resource type.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The resource identifier.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The resource name.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The resource type.",
                        "readOnly": true
                      },
                      "etag": {
                        "type": "string",
                        "description": "Etag identifies change in the resource.",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the global parameter.",
                        "type": "object",
                        "properties": {},
                        "additionalProperties": {
                          "description": "Definition of a single parameter for an entity.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "Global Parameter type.",
                              "enum": [
                                "Object",
                                "String",
                                "Int",
                                "Float",
                                "Bool",
                                "Array"
                              ],
                              "x-ms-enum": {
                                "name": "GlobalParameterType",
                                "modelAsString": true
                              }
                            },
                            "value": {
                              "type": "object",
                              "description": "Value of parameter."
                            }
                          },
                          "required": [
                            "type",
                            "value"
                          ]
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "description": "The link to the next page of results, if any remaining results exist.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/globalParameters/{globalParameterName}": {
      "get": {
        "tags": [
          "globalParameters"
        ],
        "operationId": "GlobalParameters_Get",
        "description": "Gets a Global parameter",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "globalParameterName",
            "description": "The global parameter name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "minLength": 1,
            "maxLength": 260,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Global parameters resource type.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "etag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the global parameter.",
                  "type": "object",
                  "properties": {},
                  "additionalProperties": {
                    "description": "Definition of a single parameter for an entity.",
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Global Parameter type.",
                        "enum": [
                          "Object",
                          "String",
                          "Int",
                          "Float",
                          "Bool",
                          "Array"
                        ],
                        "x-ms-enum": {
                          "name": "GlobalParameterType",
                          "modelAsString": true
                        }
                      },
                      "value": {
                        "type": "object",
                        "description": "Value of parameter."
                      }
                    },
                    "required": [
                      "type",
                      "value"
                    ]
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "put": {
        "tags": [
          "globalParameters"
        ],
        "operationId": "GlobalParameters_CreateOrUpdate",
        "description": "Creates or updates a Global parameter",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "globalParameterName",
            "description": "The global parameter name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "minLength": 1,
            "maxLength": 260,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "default",
            "description": "Global parameter resource definition.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Global parameters resource type.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "etag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the global parameter.",
                  "type": "object",
                  "properties": {},
                  "additionalProperties": {
                    "description": "Definition of a single parameter for an entity.",
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Global Parameter type.",
                        "enum": [
                          "Object",
                          "String",
                          "Int",
                          "Float",
                          "Bool",
                          "Array"
                        ],
                        "x-ms-enum": {
                          "name": "GlobalParameterType",
                          "modelAsString": true
                        }
                      },
                      "value": {
                        "type": "object",
                        "description": "Value of parameter."
                      }
                    },
                    "required": [
                      "type",
                      "value"
                    ]
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Global parameters resource type.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "etag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the global parameter.",
                  "type": "object",
                  "properties": {},
                  "additionalProperties": {
                    "description": "Definition of a single parameter for an entity.",
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Global Parameter type.",
                        "enum": [
                          "Object",
                          "String",
                          "Int",
                          "Float",
                          "Bool",
                          "Array"
                        ],
                        "x-ms-enum": {
                          "name": "GlobalParameterType",
                          "modelAsString": true
                        }
                      },
                      "value": {
                        "type": "object",
                        "description": "Value of parameter."
                      }
                    },
                    "required": [
                      "type",
                      "value"
                    ]
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "delete": {
        "tags": [
          "globalParameters"
        ],
        "operationId": "GlobalParameters_Delete",
        "description": "Deletes a Global parameter",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "globalParameterName",
            "description": "The global parameter name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "minLength": 1,
            "maxLength": 260,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/adfcdcs": {
      "get": {
        "tags": [
          "changeDataCapture"
        ],
        "operationId": "ChangeDataCapture_ListByFactory",
        "description": "Lists all resources of type change data capture.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "A list of change data capture resources.",
              "type": "object",
              "required": [
                "value"
              ],
              "properties": {
                "value": {
                  "type": "array",
                  "description": "Lists all resources of type change data capture.",
                  "items": {
                    "description": "Change data capture resource type.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The resource identifier.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The resource name.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The resource type.",
                        "readOnly": true
                      },
                      "etag": {
                        "type": "string",
                        "description": "Etag identifies change in the resource.",
                        "readOnly": true
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties of the change data capture.",
                        "type": "object",
                        "properties": {
                          "folder": {
                            "description": "The folder that this CDC is in. If not specified, CDC will appear at the root level.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "The name of the folder that this CDC is in.",
                                "type": "string"
                              }
                            }
                          },
                          "description": {
                            "description": "The description of the change data capture.",
                            "type": "string"
                          },
                          "sourceConnectionsInfo": {
                            "description": "List of sources connections that can be used as sources in the CDC.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "A object which contains list of tables and connection details for a source connection.",
                              "properties": {
                                "sourceEntities": {
                                  "description": "List of source tables for a source connection.",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": "CDC table details.",
                                    "properties": {
                                      "name": {
                                        "description": "Name of the table.",
                                        "type": "string"
                                      },
                                      "properties": {
                                        "description": "Table properties.",
                                        "type": "object",
                                        "x-ms-client-flatten": true,
                                        "properties": {
                                          "schema": {
                                            "description": "List of columns for the source table.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "description": "Schema of a CDC table in terms of column names and their corresponding data types.",
                                              "properties": {
                                                "name": {
                                                  "description": "Name of the column.",
                                                  "type": "string"
                                                },
                                                "dataType": {
                                                  "description": "Data type of the column.",
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "x-ms-identifiers": [
                                              "name"
                                            ]
                                          },
                                          "dslConnectorProperties": {
                                            "description": "List of name/value pairs for connection properties.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "description": "Connector properties of a CDC table in terms of name / value pairs.",
                                              "properties": {
                                                "name": {
                                                  "description": "Name of the property.",
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "description": "Value of the property.",
                                                  "type": "object"
                                                }
                                              }
                                            },
                                            "x-ms-identifiers": []
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": [
                                    "name"
                                  ]
                                },
                                "connection": {
                                  "type": "object",
                                  "description": "Source connection details.",
                                  "properties": {
                                    "linkedService": {
                                      "description": "Linked service reference.",
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "description": "Linked service reference type.",
                                          "enum": [
                                            "LinkedServiceReference"
                                          ],
                                          "x-ms-enum": {
                                            "name": "Type",
                                            "modelAsString": true
                                          }
                                        },
                                        "referenceName": {
                                          "type": "string",
                                          "description": "Reference LinkedService name."
                                        },
                                        "parameters": {
                                          "description": "Arguments for LinkedService.",
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "object"
                                          }
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "referenceName"
                                      ]
                                    },
                                    "linkedServiceType": {
                                      "description": "Type of the linked service e.g.: AzureBlobFS.",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "Type of connection via linked service or dataset.",
                                      "type": "string",
                                      "enum": [
                                        "linkedservicetype"
                                      ],
                                      "x-ms-enum": {
                                        "name": "ConnectionType",
                                        "modelAsString": true
                                      }
                                    },
                                    "isInlineDataset": {
                                      "description": "A boolean indicating whether linked service is of type inline dataset. Currently only inline datasets are supported.",
                                      "type": "boolean"
                                    },
                                    "commonDslConnectorProperties": {
                                      "description": "List of name/value pairs for connection properties.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "description": "Connector properties of a CDC table in terms of name / value pairs.",
                                        "properties": {
                                          "name": {
                                            "description": "Name of the property.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Value of the property.",
                                            "type": "object"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": []
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ]
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "targetConnectionsInfo": {
                            "description": "List of target connections that can be used as sources in the CDC.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "A object which contains list of tables and connection details for a target connection.",
                              "properties": {
                                "targetEntities": {
                                  "description": "List of source tables for a target connection.",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": "CDC table details.",
                                    "properties": {
                                      "name": {
                                        "description": "Name of the table.",
                                        "type": "string"
                                      },
                                      "properties": {
                                        "description": "Table properties.",
                                        "type": "object",
                                        "x-ms-client-flatten": true,
                                        "properties": {
                                          "schema": {
                                            "description": "List of columns for the source table.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "description": "Schema of a CDC table in terms of column names and their corresponding data types.",
                                              "properties": {
                                                "name": {
                                                  "description": "Name of the column.",
                                                  "type": "string"
                                                },
                                                "dataType": {
                                                  "description": "Data type of the column.",
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "x-ms-identifiers": [
                                              "name"
                                            ]
                                          },
                                          "dslConnectorProperties": {
                                            "description": "List of name/value pairs for connection properties.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "description": "Connector properties of a CDC table in terms of name / value pairs.",
                                              "properties": {
                                                "name": {
                                                  "description": "Name of the property.",
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "description": "Value of the property.",
                                                  "type": "object"
                                                }
                                              }
                                            },
                                            "x-ms-identifiers": []
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": [
                                    "name"
                                  ]
                                },
                                "connection": {
                                  "type": "object",
                                  "description": "Source connection details.",
                                  "properties": {
                                    "linkedService": {
                                      "description": "Linked service reference.",
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "description": "Linked service reference type.",
                                          "enum": [
                                            "LinkedServiceReference"
                                          ],
                                          "x-ms-enum": {
                                            "name": "Type",
                                            "modelAsString": true
                                          }
                                        },
                                        "referenceName": {
                                          "type": "string",
                                          "description": "Reference LinkedService name."
                                        },
                                        "parameters": {
                                          "description": "Arguments for LinkedService.",
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "object"
                                          }
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "referenceName"
                                      ]
                                    },
                                    "linkedServiceType": {
                                      "description": "Type of the linked service e.g.: AzureBlobFS.",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "Type of connection via linked service or dataset.",
                                      "type": "string",
                                      "enum": [
                                        "linkedservicetype"
                                      ],
                                      "x-ms-enum": {
                                        "name": "ConnectionType",
                                        "modelAsString": true
                                      }
                                    },
                                    "isInlineDataset": {
                                      "description": "A boolean indicating whether linked service is of type inline dataset. Currently only inline datasets are supported.",
                                      "type": "boolean"
                                    },
                                    "commonDslConnectorProperties": {
                                      "description": "List of name/value pairs for connection properties.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "description": "Connector properties of a CDC table in terms of name / value pairs.",
                                        "properties": {
                                          "name": {
                                            "description": "Name of the property.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Value of the property.",
                                            "type": "object"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": []
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ]
                                },
                                "dataMapperMappings": {
                                  "description": "List of table mappings.",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": "Source and target table mapping details.",
                                    "properties": {
                                      "targetEntityName": {
                                        "description": "Name of the target table",
                                        "type": "string"
                                      },
                                      "sourceEntityName": {
                                        "description": "Name of the source table",
                                        "type": "string"
                                      },
                                      "sourceConnectionReference": {
                                        "description": "The connection reference for the source connection.",
                                        "type": "object",
                                        "properties": {
                                          "connectionName": {
                                            "description": "Name of the connection",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Type of connection via linked service or dataset.",
                                            "type": "string",
                                            "enum": [
                                              "linkedservicetype"
                                            ],
                                            "x-ms-enum": {
                                              "name": "ConnectionType",
                                              "modelAsString": true
                                            }
                                          }
                                        }
                                      },
                                      "attributeMappingInfo": {
                                        "description": "This holds the user provided attribute mapping information.",
                                        "type": "object",
                                        "properties": {
                                          "attributeMappings": {
                                            "description": "List of attribute mappings.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "description": "Source and target column mapping details.",
                                              "properties": {
                                                "name": {
                                                  "description": "Name of the target column.",
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "description": "Type of the CDC attribute mapping. Note: 'Advanced' mapping type is also saved as 'Derived'.",
                                                  "type": "string",
                                                  "enum": [
                                                    "Direct",
                                                    "Derived",
                                                    "Aggregate"
                                                  ],
                                                  "x-ms-enum": {
                                                    "name": "MappingType",
                                                    "modelAsString": true
                                                  }
                                                },
                                                "functionName": {
                                                  "description": "Name of the function used for 'Aggregate' and 'Derived' (except 'Advanced') type mapping.",
                                                  "type": "string"
                                                },
                                                "expression": {
                                                  "description": "Expression used for 'Aggregate' and 'Derived' type mapping.",
                                                  "type": "string"
                                                },
                                                "attributeReference": {
                                                  "description": "Reference of the source column used in the mapping. It is used for 'Direct' mapping type only.",
                                                  "type": "object",
                                                  "properties": {
                                                    "name": {
                                                      "description": "Name of the column.",
                                                      "type": "string"
                                                    },
                                                    "entity": {
                                                      "description": "Name of the table.",
                                                      "type": "string"
                                                    },
                                                    "entityConnectionReference": {
                                                      "description": "The connection reference for the connection.",
                                                      "type": "object",
                                                      "properties": {
                                                        "connectionName": {
                                                          "description": "Name of the connection",
                                                          "type": "string"
                                                        },
                                                        "type": {
                                                          "description": "Type of connection via linked service or dataset.",
                                                          "type": "string",
                                                          "enum": [
                                                            "linkedservicetype"
                                                          ],
                                                          "x-ms-enum": {
                                                            "name": "ConnectionType",
                                                            "modelAsString": true
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "attributeReferences": {
                                                  "description": "List of references for source columns. It is used for 'Derived' and 'Aggregate' type mappings only.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "description": "Attribute reference details for the referred column.",
                                                    "properties": {
                                                      "name": {
                                                        "description": "Name of the column.",
                                                        "type": "string"
                                                      },
                                                      "entity": {
                                                        "description": "Name of the table.",
                                                        "type": "string"
                                                      },
                                                      "entityConnectionReference": {
                                                        "description": "The connection reference for the connection.",
                                                        "type": "object",
                                                        "properties": {
                                                          "connectionName": {
                                                            "description": "Name of the connection",
                                                            "type": "string"
                                                          },
                                                          "type": {
                                                            "description": "Type of connection via linked service or dataset.",
                                                            "type": "string",
                                                            "enum": [
                                                              "linkedservicetype"
                                                            ],
                                                            "x-ms-enum": {
                                                              "name": "ConnectionType",
                                                              "modelAsString": true
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "x-ms-identifiers": [
                                                    "name"
                                                  ]
                                                }
                                              }
                                            },
                                            "x-ms-identifiers": [
                                              "name"
                                            ]
                                          }
                                        }
                                      },
                                      "sourceDenormalizeInfo": {
                                        "description": "This holds the source denormalization information used while joining multiple sources.",
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": [
                                    "targetEntityName",
                                    "sourceEntityName"
                                  ]
                                },
                                "relationships": {
                                  "description": "List of relationship info among the tables.",
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  },
                                  "x-ms-identifiers": []
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "policy": {
                            "description": "CDC policy",
                            "type": "object",
                            "properties": {
                              "mode": {
                                "description": "Mode of running the CDC: batch vs continuous.",
                                "type": "string"
                              },
                              "recurrence": {
                                "description": "Defines the frequency and interval for running the CDC for batch mode.",
                                "type": "object",
                                "properties": {
                                  "frequency": {
                                    "description": "Frequency of period in terms of 'Hour', 'Minute' or 'Second'.",
                                    "type": "string",
                                    "enum": [
                                      "Hour",
                                      "Minute",
                                      "Second"
                                    ],
                                    "x-ms-enum": {
                                      "name": "FrequencyType",
                                      "modelAsString": true
                                    }
                                  },
                                  "interval": {
                                    "description": "Actual interval value as per chosen frequency.",
                                    "type": "integer",
                                    "format": "int32"
                                  }
                                }
                              }
                            }
                          },
                          "allowVNetOverride": {
                            "description": "A boolean to determine if the vnet configuration needs to be overwritten.",
                            "type": "boolean"
                          },
                          "status": {
                            "description": "Status of the CDC as to if it is running or stopped.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "sourceConnectionsInfo",
                          "targetConnectionsInfo",
                          "policy"
                        ]
                      }
                    },
                    "additionalProperties": {
                      "type": "object"
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "description": "The link to the next page of results, if any remaining results exist.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/adfcdcs/{changeDataCaptureName}": {
      "put": {
        "tags": [
          "changeDataCapture"
        ],
        "operationId": "ChangeDataCapture_CreateOrUpdate",
        "description": "Creates or updates a change data capture resource.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "changeDataCaptureName",
            "description": "The change data capture name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "minLength": 1,
            "maxLength": 260,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the change data capture entity. Should only be specified for update, for which it should match existing entity or can be * for unconditional update."
          },
          {
            "name": "changeDataCapture",
            "description": "Change data capture resource definition.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Change data capture resource type.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "etag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the change data capture.",
                  "type": "object",
                  "properties": {
                    "folder": {
                      "description": "The folder that this CDC is in. If not specified, CDC will appear at the root level.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name of the folder that this CDC is in.",
                          "type": "string"
                        }
                      }
                    },
                    "description": {
                      "description": "The description of the change data capture.",
                      "type": "string"
                    },
                    "sourceConnectionsInfo": {
                      "description": "List of sources connections that can be used as sources in the CDC.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "A object which contains list of tables and connection details for a source connection.",
                        "properties": {
                          "sourceEntities": {
                            "description": "List of source tables for a source connection.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "CDC table details.",
                              "properties": {
                                "name": {
                                  "description": "Name of the table.",
                                  "type": "string"
                                },
                                "properties": {
                                  "description": "Table properties.",
                                  "type": "object",
                                  "x-ms-client-flatten": true,
                                  "properties": {
                                    "schema": {
                                      "description": "List of columns for the source table.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "description": "Schema of a CDC table in terms of column names and their corresponding data types.",
                                        "properties": {
                                          "name": {
                                            "description": "Name of the column.",
                                            "type": "string"
                                          },
                                          "dataType": {
                                            "description": "Data type of the column.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "name"
                                      ]
                                    },
                                    "dslConnectorProperties": {
                                      "description": "List of name/value pairs for connection properties.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "description": "Connector properties of a CDC table in terms of name / value pairs.",
                                        "properties": {
                                          "name": {
                                            "description": "Name of the property.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Value of the property.",
                                            "type": "object"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": []
                                    }
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "connection": {
                            "type": "object",
                            "description": "Source connection details.",
                            "properties": {
                              "linkedService": {
                                "description": "Linked service reference.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "Linked service reference type.",
                                    "enum": [
                                      "LinkedServiceReference"
                                    ],
                                    "x-ms-enum": {
                                      "name": "Type",
                                      "modelAsString": true
                                    }
                                  },
                                  "referenceName": {
                                    "type": "string",
                                    "description": "Reference LinkedService name."
                                  },
                                  "parameters": {
                                    "description": "Arguments for LinkedService.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "object"
                                    }
                                  }
                                },
                                "required": [
                                  "type",
                                  "referenceName"
                                ]
                              },
                              "linkedServiceType": {
                                "description": "Type of the linked service e.g.: AzureBlobFS.",
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of connection via linked service or dataset.",
                                "type": "string",
                                "enum": [
                                  "linkedservicetype"
                                ],
                                "x-ms-enum": {
                                  "name": "ConnectionType",
                                  "modelAsString": true
                                }
                              },
                              "isInlineDataset": {
                                "description": "A boolean indicating whether linked service is of type inline dataset. Currently only inline datasets are supported.",
                                "type": "boolean"
                              },
                              "commonDslConnectorProperties": {
                                "description": "List of name/value pairs for connection properties.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Connector properties of a CDC table in terms of name / value pairs.",
                                  "properties": {
                                    "name": {
                                      "description": "Name of the property.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Value of the property.",
                                      "type": "object"
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            },
                            "required": [
                              "type"
                            ]
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "targetConnectionsInfo": {
                      "description": "List of target connections that can be used as sources in the CDC.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "A object which contains list of tables and connection details for a target connection.",
                        "properties": {
                          "targetEntities": {
                            "description": "List of source tables for a target connection.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "CDC table details.",
                              "properties": {
                                "name": {
                                  "description": "Name of the table.",
                                  "type": "string"
                                },
                                "properties": {
                                  "description": "Table properties.",
                                  "type": "object",
                                  "x-ms-client-flatten": true,
                                  "properties": {
                                    "schema": {
                                      "description": "List of columns for the source table.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "description": "Schema of a CDC table in terms of column names and their corresponding data types.",
                                        "properties": {
                                          "name": {
                                            "description": "Name of the column.",
                                            "type": "string"
                                          },
                                          "dataType": {
                                            "description": "Data type of the column.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "name"
                                      ]
                                    },
                                    "dslConnectorProperties": {
                                      "description": "List of name/value pairs for connection properties.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "description": "Connector properties of a CDC table in terms of name / value pairs.",
                                        "properties": {
                                          "name": {
                                            "description": "Name of the property.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Value of the property.",
                                            "type": "object"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": []
                                    }
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "connection": {
                            "type": "object",
                            "description": "Source connection details.",
                            "properties": {
                              "linkedService": {
                                "description": "Linked service reference.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "Linked service reference type.",
                                    "enum": [
                                      "LinkedServiceReference"
                                    ],
                                    "x-ms-enum": {
                                      "name": "Type",
                                      "modelAsString": true
                                    }
                                  },
                                  "referenceName": {
                                    "type": "string",
                                    "description": "Reference LinkedService name."
                                  },
                                  "parameters": {
                                    "description": "Arguments for LinkedService.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "object"
                                    }
                                  }
                                },
                                "required": [
                                  "type",
                                  "referenceName"
                                ]
                              },
                              "linkedServiceType": {
                                "description": "Type of the linked service e.g.: AzureBlobFS.",
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of connection via linked service or dataset.",
                                "type": "string",
                                "enum": [
                                  "linkedservicetype"
                                ],
                                "x-ms-enum": {
                                  "name": "ConnectionType",
                                  "modelAsString": true
                                }
                              },
                              "isInlineDataset": {
                                "description": "A boolean indicating whether linked service is of type inline dataset. Currently only inline datasets are supported.",
                                "type": "boolean"
                              },
                              "commonDslConnectorProperties": {
                                "description": "List of name/value pairs for connection properties.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Connector properties of a CDC table in terms of name / value pairs.",
                                  "properties": {
                                    "name": {
                                      "description": "Name of the property.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Value of the property.",
                                      "type": "object"
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            },
                            "required": [
                              "type"
                            ]
                          },
                          "dataMapperMappings": {
                            "description": "List of table mappings.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Source and target table mapping details.",
                              "properties": {
                                "targetEntityName": {
                                  "description": "Name of the target table",
                                  "type": "string"
                                },
                                "sourceEntityName": {
                                  "description": "Name of the source table",
                                  "type": "string"
                                },
                                "sourceConnectionReference": {
                                  "description": "The connection reference for the source connection.",
                                  "type": "object",
                                  "properties": {
                                    "connectionName": {
                                      "description": "Name of the connection",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "Type of connection via linked service or dataset.",
                                      "type": "string",
                                      "enum": [
                                        "linkedservicetype"
                                      ],
                                      "x-ms-enum": {
                                        "name": "ConnectionType",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                },
                                "attributeMappingInfo": {
                                  "description": "This holds the user provided attribute mapping information.",
                                  "type": "object",
                                  "properties": {
                                    "attributeMappings": {
                                      "description": "List of attribute mappings.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "description": "Source and target column mapping details.",
                                        "properties": {
                                          "name": {
                                            "description": "Name of the target column.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Type of the CDC attribute mapping. Note: 'Advanced' mapping type is also saved as 'Derived'.",
                                            "type": "string",
                                            "enum": [
                                              "Direct",
                                              "Derived",
                                              "Aggregate"
                                            ],
                                            "x-ms-enum": {
                                              "name": "MappingType",
                                              "modelAsString": true
                                            }
                                          },
                                          "functionName": {
                                            "description": "Name of the function used for 'Aggregate' and 'Derived' (except 'Advanced') type mapping.",
                                            "type": "string"
                                          },
                                          "expression": {
                                            "description": "Expression used for 'Aggregate' and 'Derived' type mapping.",
                                            "type": "string"
                                          },
                                          "attributeReference": {
                                            "description": "Reference of the source column used in the mapping. It is used for 'Direct' mapping type only.",
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "description": "Name of the column.",
                                                "type": "string"
                                              },
                                              "entity": {
                                                "description": "Name of the table.",
                                                "type": "string"
                                              },
                                              "entityConnectionReference": {
                                                "description": "The connection reference for the connection.",
                                                "type": "object",
                                                "properties": {
                                                  "connectionName": {
                                                    "description": "Name of the connection",
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "description": "Type of connection via linked service or dataset.",
                                                    "type": "string",
                                                    "enum": [
                                                      "linkedservicetype"
                                                    ],
                                                    "x-ms-enum": {
                                                      "name": "ConnectionType",
                                                      "modelAsString": true
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "attributeReferences": {
                                            "description": "List of references for source columns. It is used for 'Derived' and 'Aggregate' type mappings only.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "description": "Attribute reference details for the referred column.",
                                              "properties": {
                                                "name": {
                                                  "description": "Name of the column.",
                                                  "type": "string"
                                                },
                                                "entity": {
                                                  "description": "Name of the table.",
                                                  "type": "string"
                                                },
                                                "entityConnectionReference": {
                                                  "description": "The connection reference for the connection.",
                                                  "type": "object",
                                                  "properties": {
                                                    "connectionName": {
                                                      "description": "Name of the connection",
                                                      "type": "string"
                                                    },
                                                    "type": {
                                                      "description": "Type of connection via linked service or dataset.",
                                                      "type": "string",
                                                      "enum": [
                                                        "linkedservicetype"
                                                      ],
                                                      "x-ms-enum": {
                                                        "name": "ConnectionType",
                                                        "modelAsString": true
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "x-ms-identifiers": [
                                              "name"
                                            ]
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "name"
                                      ]
                                    }
                                  }
                                },
                                "sourceDenormalizeInfo": {
                                  "description": "This holds the source denormalization information used while joining multiple sources.",
                                  "type": "object"
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "targetEntityName",
                              "sourceEntityName"
                            ]
                          },
                          "relationships": {
                            "description": "List of relationship info among the tables.",
                            "type": "array",
                            "items": {
                              "type": "object"
                            },
                            "x-ms-identifiers": []
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "policy": {
                      "description": "CDC policy",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "description": "Mode of running the CDC: batch vs continuous.",
                          "type": "string"
                        },
                        "recurrence": {
                          "description": "Defines the frequency and interval for running the CDC for batch mode.",
                          "type": "object",
                          "properties": {
                            "frequency": {
                              "description": "Frequency of period in terms of 'Hour', 'Minute' or 'Second'.",
                              "type": "string",
                              "enum": [
                                "Hour",
                                "Minute",
                                "Second"
                              ],
                              "x-ms-enum": {
                                "name": "FrequencyType",
                                "modelAsString": true
                              }
                            },
                            "interval": {
                              "description": "Actual interval value as per chosen frequency.",
                              "type": "integer",
                              "format": "int32"
                            }
                          }
                        }
                      }
                    },
                    "allowVNetOverride": {
                      "description": "A boolean to determine if the vnet configuration needs to be overwritten.",
                      "type": "boolean"
                    },
                    "status": {
                      "description": "Status of the CDC as to if it is running or stopped.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "sourceConnectionsInfo",
                    "targetConnectionsInfo",
                    "policy"
                  ]
                }
              },
              "additionalProperties": {
                "type": "object"
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Change data capture resource type.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "etag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the change data capture.",
                  "type": "object",
                  "properties": {
                    "folder": {
                      "description": "The folder that this CDC is in. If not specified, CDC will appear at the root level.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name of the folder that this CDC is in.",
                          "type": "string"
                        }
                      }
                    },
                    "description": {
                      "description": "The description of the change data capture.",
                      "type": "string"
                    },
                    "sourceConnectionsInfo": {
                      "description": "List of sources connections that can be used as sources in the CDC.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "A object which contains list of tables and connection details for a source connection.",
                        "properties": {
                          "sourceEntities": {
                            "description": "List of source tables for a source connection.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "CDC table details.",
                              "properties": {
                                "name": {
                                  "description": "Name of the table.",
                                  "type": "string"
                                },
                                "properties": {
                                  "description": "Table properties.",
                                  "type": "object",
                                  "x-ms-client-flatten": true,
                                  "properties": {
                                    "schema": {
                                      "description": "List of columns for the source table.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "description": "Schema of a CDC table in terms of column names and their corresponding data types.",
                                        "properties": {
                                          "name": {
                                            "description": "Name of the column.",
                                            "type": "string"
                                          },
                                          "dataType": {
                                            "description": "Data type of the column.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "name"
                                      ]
                                    },
                                    "dslConnectorProperties": {
                                      "description": "List of name/value pairs for connection properties.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "description": "Connector properties of a CDC table in terms of name / value pairs.",
                                        "properties": {
                                          "name": {
                                            "description": "Name of the property.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Value of the property.",
                                            "type": "object"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": []
                                    }
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "connection": {
                            "type": "object",
                            "description": "Source connection details.",
                            "properties": {
                              "linkedService": {
                                "description": "Linked service reference.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "Linked service reference type.",
                                    "enum": [
                                      "LinkedServiceReference"
                                    ],
                                    "x-ms-enum": {
                                      "name": "Type",
                                      "modelAsString": true
                                    }
                                  },
                                  "referenceName": {
                                    "type": "string",
                                    "description": "Reference LinkedService name."
                                  },
                                  "parameters": {
                                    "description": "Arguments for LinkedService.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "object"
                                    }
                                  }
                                },
                                "required": [
                                  "type",
                                  "referenceName"
                                ]
                              },
                              "linkedServiceType": {
                                "description": "Type of the linked service e.g.: AzureBlobFS.",
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of connection via linked service or dataset.",
                                "type": "string",
                                "enum": [
                                  "linkedservicetype"
                                ],
                                "x-ms-enum": {
                                  "name": "ConnectionType",
                                  "modelAsString": true
                                }
                              },
                              "isInlineDataset": {
                                "description": "A boolean indicating whether linked service is of type inline dataset. Currently only inline datasets are supported.",
                                "type": "boolean"
                              },
                              "commonDslConnectorProperties": {
                                "description": "List of name/value pairs for connection properties.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Connector properties of a CDC table in terms of name / value pairs.",
                                  "properties": {
                                    "name": {
                                      "description": "Name of the property.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Value of the property.",
                                      "type": "object"
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            },
                            "required": [
                              "type"
                            ]
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "targetConnectionsInfo": {
                      "description": "List of target connections that can be used as sources in the CDC.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "A object which contains list of tables and connection details for a target connection.",
                        "properties": {
                          "targetEntities": {
                            "description": "List of source tables for a target connection.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "CDC table details.",
                              "properties": {
                                "name": {
                                  "description": "Name of the table.",
                                  "type": "string"
                                },
                                "properties": {
                                  "description": "Table properties.",
                                  "type": "object",
                                  "x-ms-client-flatten": true,
                                  "properties": {
                                    "schema": {
                                      "description": "List of columns for the source table.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "description": "Schema of a CDC table in terms of column names and their corresponding data types.",
                                        "properties": {
                                          "name": {
                                            "description": "Name of the column.",
                                            "type": "string"
                                          },
                                          "dataType": {
                                            "description": "Data type of the column.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "name"
                                      ]
                                    },
                                    "dslConnectorProperties": {
                                      "description": "List of name/value pairs for connection properties.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "description": "Connector properties of a CDC table in terms of name / value pairs.",
                                        "properties": {
                                          "name": {
                                            "description": "Name of the property.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Value of the property.",
                                            "type": "object"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": []
                                    }
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "connection": {
                            "type": "object",
                            "description": "Source connection details.",
                            "properties": {
                              "linkedService": {
                                "description": "Linked service reference.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "Linked service reference type.",
                                    "enum": [
                                      "LinkedServiceReference"
                                    ],
                                    "x-ms-enum": {
                                      "name": "Type",
                                      "modelAsString": true
                                    }
                                  },
                                  "referenceName": {
                                    "type": "string",
                                    "description": "Reference LinkedService name."
                                  },
                                  "parameters": {
                                    "description": "Arguments for LinkedService.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "object"
                                    }
                                  }
                                },
                                "required": [
                                  "type",
                                  "referenceName"
                                ]
                              },
                              "linkedServiceType": {
                                "description": "Type of the linked service e.g.: AzureBlobFS.",
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of connection via linked service or dataset.",
                                "type": "string",
                                "enum": [
                                  "linkedservicetype"
                                ],
                                "x-ms-enum": {
                                  "name": "ConnectionType",
                                  "modelAsString": true
                                }
                              },
                              "isInlineDataset": {
                                "description": "A boolean indicating whether linked service is of type inline dataset. Currently only inline datasets are supported.",
                                "type": "boolean"
                              },
                              "commonDslConnectorProperties": {
                                "description": "List of name/value pairs for connection properties.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Connector properties of a CDC table in terms of name / value pairs.",
                                  "properties": {
                                    "name": {
                                      "description": "Name of the property.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Value of the property.",
                                      "type": "object"
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            },
                            "required": [
                              "type"
                            ]
                          },
                          "dataMapperMappings": {
                            "description": "List of table mappings.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Source and target table mapping details.",
                              "properties": {
                                "targetEntityName": {
                                  "description": "Name of the target table",
                                  "type": "string"
                                },
                                "sourceEntityName": {
                                  "description": "Name of the source table",
                                  "type": "string"
                                },
                                "sourceConnectionReference": {
                                  "description": "The connection reference for the source connection.",
                                  "type": "object",
                                  "properties": {
                                    "connectionName": {
                                      "description": "Name of the connection",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "Type of connection via linked service or dataset.",
                                      "type": "string",
                                      "enum": [
                                        "linkedservicetype"
                                      ],
                                      "x-ms-enum": {
                                        "name": "ConnectionType",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                },
                                "attributeMappingInfo": {
                                  "description": "This holds the user provided attribute mapping information.",
                                  "type": "object",
                                  "properties": {
                                    "attributeMappings": {
                                      "description": "List of attribute mappings.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "description": "Source and target column mapping details.",
                                        "properties": {
                                          "name": {
                                            "description": "Name of the target column.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Type of the CDC attribute mapping. Note: 'Advanced' mapping type is also saved as 'Derived'.",
                                            "type": "string",
                                            "enum": [
                                              "Direct",
                                              "Derived",
                                              "Aggregate"
                                            ],
                                            "x-ms-enum": {
                                              "name": "MappingType",
                                              "modelAsString": true
                                            }
                                          },
                                          "functionName": {
                                            "description": "Name of the function used for 'Aggregate' and 'Derived' (except 'Advanced') type mapping.",
                                            "type": "string"
                                          },
                                          "expression": {
                                            "description": "Expression used for 'Aggregate' and 'Derived' type mapping.",
                                            "type": "string"
                                          },
                                          "attributeReference": {
                                            "description": "Reference of the source column used in the mapping. It is used for 'Direct' mapping type only.",
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "description": "Name of the column.",
                                                "type": "string"
                                              },
                                              "entity": {
                                                "description": "Name of the table.",
                                                "type": "string"
                                              },
                                              "entityConnectionReference": {
                                                "description": "The connection reference for the connection.",
                                                "type": "object",
                                                "properties": {
                                                  "connectionName": {
                                                    "description": "Name of the connection",
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "description": "Type of connection via linked service or dataset.",
                                                    "type": "string",
                                                    "enum": [
                                                      "linkedservicetype"
                                                    ],
                                                    "x-ms-enum": {
                                                      "name": "ConnectionType",
                                                      "modelAsString": true
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "attributeReferences": {
                                            "description": "List of references for source columns. It is used for 'Derived' and 'Aggregate' type mappings only.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "description": "Attribute reference details for the referred column.",
                                              "properties": {
                                                "name": {
                                                  "description": "Name of the column.",
                                                  "type": "string"
                                                },
                                                "entity": {
                                                  "description": "Name of the table.",
                                                  "type": "string"
                                                },
                                                "entityConnectionReference": {
                                                  "description": "The connection reference for the connection.",
                                                  "type": "object",
                                                  "properties": {
                                                    "connectionName": {
                                                      "description": "Name of the connection",
                                                      "type": "string"
                                                    },
                                                    "type": {
                                                      "description": "Type of connection via linked service or dataset.",
                                                      "type": "string",
                                                      "enum": [
                                                        "linkedservicetype"
                                                      ],
                                                      "x-ms-enum": {
                                                        "name": "ConnectionType",
                                                        "modelAsString": true
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "x-ms-identifiers": [
                                              "name"
                                            ]
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "name"
                                      ]
                                    }
                                  }
                                },
                                "sourceDenormalizeInfo": {
                                  "description": "This holds the source denormalization information used while joining multiple sources.",
                                  "type": "object"
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "targetEntityName",
                              "sourceEntityName"
                            ]
                          },
                          "relationships": {
                            "description": "List of relationship info among the tables.",
                            "type": "array",
                            "items": {
                              "type": "object"
                            },
                            "x-ms-identifiers": []
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "policy": {
                      "description": "CDC policy",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "description": "Mode of running the CDC: batch vs continuous.",
                          "type": "string"
                        },
                        "recurrence": {
                          "description": "Defines the frequency and interval for running the CDC for batch mode.",
                          "type": "object",
                          "properties": {
                            "frequency": {
                              "description": "Frequency of period in terms of 'Hour', 'Minute' or 'Second'.",
                              "type": "string",
                              "enum": [
                                "Hour",
                                "Minute",
                                "Second"
                              ],
                              "x-ms-enum": {
                                "name": "FrequencyType",
                                "modelAsString": true
                              }
                            },
                            "interval": {
                              "description": "Actual interval value as per chosen frequency.",
                              "type": "integer",
                              "format": "int32"
                            }
                          }
                        }
                      }
                    },
                    "allowVNetOverride": {
                      "description": "A boolean to determine if the vnet configuration needs to be overwritten.",
                      "type": "boolean"
                    },
                    "status": {
                      "description": "Status of the CDC as to if it is running or stopped.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "sourceConnectionsInfo",
                    "targetConnectionsInfo",
                    "policy"
                  ]
                }
              },
              "additionalProperties": {
                "type": "object"
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "get": {
        "tags": [
          "changeDataCapture"
        ],
        "operationId": "ChangeDataCapture_Get",
        "description": "Gets a change data capture.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "changeDataCaptureName",
            "description": "The change data capture name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "minLength": 1,
            "maxLength": 260,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the change data capture entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Change data capture resource type.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The resource type.",
                  "readOnly": true
                },
                "etag": {
                  "type": "string",
                  "description": "Etag identifies change in the resource.",
                  "readOnly": true
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the change data capture.",
                  "type": "object",
                  "properties": {
                    "folder": {
                      "description": "The folder that this CDC is in. If not specified, CDC will appear at the root level.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name of the folder that this CDC is in.",
                          "type": "string"
                        }
                      }
                    },
                    "description": {
                      "description": "The description of the change data capture.",
                      "type": "string"
                    },
                    "sourceConnectionsInfo": {
                      "description": "List of sources connections that can be used as sources in the CDC.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "A object which contains list of tables and connection details for a source connection.",
                        "properties": {
                          "sourceEntities": {
                            "description": "List of source tables for a source connection.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "CDC table details.",
                              "properties": {
                                "name": {
                                  "description": "Name of the table.",
                                  "type": "string"
                                },
                                "properties": {
                                  "description": "Table properties.",
                                  "type": "object",
                                  "x-ms-client-flatten": true,
                                  "properties": {
                                    "schema": {
                                      "description": "List of columns for the source table.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "description": "Schema of a CDC table in terms of column names and their corresponding data types.",
                                        "properties": {
                                          "name": {
                                            "description": "Name of the column.",
                                            "type": "string"
                                          },
                                          "dataType": {
                                            "description": "Data type of the column.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "name"
                                      ]
                                    },
                                    "dslConnectorProperties": {
                                      "description": "List of name/value pairs for connection properties.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "description": "Connector properties of a CDC table in terms of name / value pairs.",
                                        "properties": {
                                          "name": {
                                            "description": "Name of the property.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Value of the property.",
                                            "type": "object"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": []
                                    }
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "connection": {
                            "type": "object",
                            "description": "Source connection details.",
                            "properties": {
                              "linkedService": {
                                "description": "Linked service reference.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "Linked service reference type.",
                                    "enum": [
                                      "LinkedServiceReference"
                                    ],
                                    "x-ms-enum": {
                                      "name": "Type",
                                      "modelAsString": true
                                    }
                                  },
                                  "referenceName": {
                                    "type": "string",
                                    "description": "Reference LinkedService name."
                                  },
                                  "parameters": {
                                    "description": "Arguments for LinkedService.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "object"
                                    }
                                  }
                                },
                                "required": [
                                  "type",
                                  "referenceName"
                                ]
                              },
                              "linkedServiceType": {
                                "description": "Type of the linked service e.g.: AzureBlobFS.",
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of connection via linked service or dataset.",
                                "type": "string",
                                "enum": [
                                  "linkedservicetype"
                                ],
                                "x-ms-enum": {
                                  "name": "ConnectionType",
                                  "modelAsString": true
                                }
                              },
                              "isInlineDataset": {
                                "description": "A boolean indicating whether linked service is of type inline dataset. Currently only inline datasets are supported.",
                                "type": "boolean"
                              },
                              "commonDslConnectorProperties": {
                                "description": "List of name/value pairs for connection properties.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Connector properties of a CDC table in terms of name / value pairs.",
                                  "properties": {
                                    "name": {
                                      "description": "Name of the property.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Value of the property.",
                                      "type": "object"
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            },
                            "required": [
                              "type"
                            ]
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "targetConnectionsInfo": {
                      "description": "List of target connections that can be used as sources in the CDC.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "A object which contains list of tables and connection details for a target connection.",
                        "properties": {
                          "targetEntities": {
                            "description": "List of source tables for a target connection.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "CDC table details.",
                              "properties": {
                                "name": {
                                  "description": "Name of the table.",
                                  "type": "string"
                                },
                                "properties": {
                                  "description": "Table properties.",
                                  "type": "object",
                                  "x-ms-client-flatten": true,
                                  "properties": {
                                    "schema": {
                                      "description": "List of columns for the source table.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "description": "Schema of a CDC table in terms of column names and their corresponding data types.",
                                        "properties": {
                                          "name": {
                                            "description": "Name of the column.",
                                            "type": "string"
                                          },
                                          "dataType": {
                                            "description": "Data type of the column.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "name"
                                      ]
                                    },
                                    "dslConnectorProperties": {
                                      "description": "List of name/value pairs for connection properties.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "description": "Connector properties of a CDC table in terms of name / value pairs.",
                                        "properties": {
                                          "name": {
                                            "description": "Name of the property.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Value of the property.",
                                            "type": "object"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": []
                                    }
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "connection": {
                            "type": "object",
                            "description": "Source connection details.",
                            "properties": {
                              "linkedService": {
                                "description": "Linked service reference.",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "Linked service reference type.",
                                    "enum": [
                                      "LinkedServiceReference"
                                    ],
                                    "x-ms-enum": {
                                      "name": "Type",
                                      "modelAsString": true
                                    }
                                  },
                                  "referenceName": {
                                    "type": "string",
                                    "description": "Reference LinkedService name."
                                  },
                                  "parameters": {
                                    "description": "Arguments for LinkedService.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "object"
                                    }
                                  }
                                },
                                "required": [
                                  "type",
                                  "referenceName"
                                ]
                              },
                              "linkedServiceType": {
                                "description": "Type of the linked service e.g.: AzureBlobFS.",
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of connection via linked service or dataset.",
                                "type": "string",
                                "enum": [
                                  "linkedservicetype"
                                ],
                                "x-ms-enum": {
                                  "name": "ConnectionType",
                                  "modelAsString": true
                                }
                              },
                              "isInlineDataset": {
                                "description": "A boolean indicating whether linked service is of type inline dataset. Currently only inline datasets are supported.",
                                "type": "boolean"
                              },
                              "commonDslConnectorProperties": {
                                "description": "List of name/value pairs for connection properties.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Connector properties of a CDC table in terms of name / value pairs.",
                                  "properties": {
                                    "name": {
                                      "description": "Name of the property.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Value of the property.",
                                      "type": "object"
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            },
                            "required": [
                              "type"
                            ]
                          },
                          "dataMapperMappings": {
                            "description": "List of table mappings.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Source and target table mapping details.",
                              "properties": {
                                "targetEntityName": {
                                  "description": "Name of the target table",
                                  "type": "string"
                                },
                                "sourceEntityName": {
                                  "description": "Name of the source table",
                                  "type": "string"
                                },
                                "sourceConnectionReference": {
                                  "description": "The connection reference for the source connection.",
                                  "type": "object",
                                  "properties": {
                                    "connectionName": {
                                      "description": "Name of the connection",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "Type of connection via linked service or dataset.",
                                      "type": "string",
                                      "enum": [
                                        "linkedservicetype"
                                      ],
                                      "x-ms-enum": {
                                        "name": "ConnectionType",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                },
                                "attributeMappingInfo": {
                                  "description": "This holds the user provided attribute mapping information.",
                                  "type": "object",
                                  "properties": {
                                    "attributeMappings": {
                                      "description": "List of attribute mappings.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "description": "Source and target column mapping details.",
                                        "properties": {
                                          "name": {
                                            "description": "Name of the target column.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Type of the CDC attribute mapping. Note: 'Advanced' mapping type is also saved as 'Derived'.",
                                            "type": "string",
                                            "enum": [
                                              "Direct",
                                              "Derived",
                                              "Aggregate"
                                            ],
                                            "x-ms-enum": {
                                              "name": "MappingType",
                                              "modelAsString": true
                                            }
                                          },
                                          "functionName": {
                                            "description": "Name of the function used for 'Aggregate' and 'Derived' (except 'Advanced') type mapping.",
                                            "type": "string"
                                          },
                                          "expression": {
                                            "description": "Expression used for 'Aggregate' and 'Derived' type mapping.",
                                            "type": "string"
                                          },
                                          "attributeReference": {
                                            "description": "Reference of the source column used in the mapping. It is used for 'Direct' mapping type only.",
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "description": "Name of the column.",
                                                "type": "string"
                                              },
                                              "entity": {
                                                "description": "Name of the table.",
                                                "type": "string"
                                              },
                                              "entityConnectionReference": {
                                                "description": "The connection reference for the connection.",
                                                "type": "object",
                                                "properties": {
                                                  "connectionName": {
                                                    "description": "Name of the connection",
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "description": "Type of connection via linked service or dataset.",
                                                    "type": "string",
                                                    "enum": [
                                                      "linkedservicetype"
                                                    ],
                                                    "x-ms-enum": {
                                                      "name": "ConnectionType",
                                                      "modelAsString": true
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "attributeReferences": {
                                            "description": "List of references for source columns. It is used for 'Derived' and 'Aggregate' type mappings only.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "description": "Attribute reference details for the referred column.",
                                              "properties": {
                                                "name": {
                                                  "description": "Name of the column.",
                                                  "type": "string"
                                                },
                                                "entity": {
                                                  "description": "Name of the table.",
                                                  "type": "string"
                                                },
                                                "entityConnectionReference": {
                                                  "description": "The connection reference for the connection.",
                                                  "type": "object",
                                                  "properties": {
                                                    "connectionName": {
                                                      "description": "Name of the connection",
                                                      "type": "string"
                                                    },
                                                    "type": {
                                                      "description": "Type of connection via linked service or dataset.",
                                                      "type": "string",
                                                      "enum": [
                                                        "linkedservicetype"
                                                      ],
                                                      "x-ms-enum": {
                                                        "name": "ConnectionType",
                                                        "modelAsString": true
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "x-ms-identifiers": [
                                              "name"
                                            ]
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "name"
                                      ]
                                    }
                                  }
                                },
                                "sourceDenormalizeInfo": {
                                  "description": "This holds the source denormalization information used while joining multiple sources.",
                                  "type": "object"
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "targetEntityName",
                              "sourceEntityName"
                            ]
                          },
                          "relationships": {
                            "description": "List of relationship info among the tables.",
                            "type": "array",
                            "items": {
                              "type": "object"
                            },
                            "x-ms-identifiers": []
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "policy": {
                      "description": "CDC policy",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "description": "Mode of running the CDC: batch vs continuous.",
                          "type": "string"
                        },
                        "recurrence": {
                          "description": "Defines the frequency and interval for running the CDC for batch mode.",
                          "type": "object",
                          "properties": {
                            "frequency": {
                              "description": "Frequency of period in terms of 'Hour', 'Minute' or 'Second'.",
                              "type": "string",
                              "enum": [
                                "Hour",
                                "Minute",
                                "Second"
                              ],
                              "x-ms-enum": {
                                "name": "FrequencyType",
                                "modelAsString": true
                              }
                            },
                            "interval": {
                              "description": "Actual interval value as per chosen frequency.",
                              "type": "integer",
                              "format": "int32"
                            }
                          }
                        }
                      }
                    },
                    "allowVNetOverride": {
                      "description": "A boolean to determine if the vnet configuration needs to be overwritten.",
                      "type": "boolean"
                    },
                    "status": {
                      "description": "Status of the CDC as to if it is running or stopped.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "sourceConnectionsInfo",
                    "targetConnectionsInfo",
                    "policy"
                  ]
                }
              },
              "additionalProperties": {
                "type": "object"
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "delete": {
        "tags": [
          "changeDataCapture"
        ],
        "operationId": "ChangeDataCapture_Delete",
        "description": "Deletes a change data capture.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "changeDataCaptureName",
            "description": "The change data capture name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "minLength": 1,
            "maxLength": 260,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/adfcdcs/{changeDataCaptureName}/start": {
      "post": {
        "tags": [
          "changeDataCapture"
        ],
        "operationId": "ChangeDataCapture_Start",
        "description": "Starts a change data capture.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "changeDataCaptureName",
            "description": "The change data capture name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "minLength": 1,
            "maxLength": 260,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Change data capture has been started successfully."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/adfcdcs/{changeDataCaptureName}/stop": {
      "post": {
        "tags": [
          "changeDataCapture"
        ],
        "operationId": "ChangeDataCapture_Stop",
        "description": "Stops a change data capture.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "changeDataCaptureName",
            "description": "The change data capture name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "minLength": 1,
            "maxLength": 260,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Change data capture has been stopped successfully."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/adfcdcs/{changeDataCaptureName}/status": {
      "get": {
        "tags": [
          "changeDataCapture"
        ],
        "operationId": "ChangeDataCapture_Status",
        "description": "Gets the current status for the change data capture resource.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The subscription identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "description": "The resource group name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "factoryName",
            "description": "The factory name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "changeDataCaptureName",
            "description": "The change data capture name.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "minLength": 1,
            "maxLength": 260,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Current status of the change data capture resource.",
              "type": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Resource": {
      "x-ms-azure-resource": true,
      "description": "Azure Data Factory top-level resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The resource type.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "The resource location.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The resource tags."
        },
        "eTag": {
          "type": "string",
          "description": "Etag identifies change in the resource.",
          "readOnly": true
        }
      }
    },
    "SubResource": {
      "description": "Azure Data Factory nested resource, which belongs to a factory.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The resource type.",
          "readOnly": true
        },
        "etag": {
          "type": "string",
          "description": "Etag identifies change in the resource.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "SubResourceDebugResource": {
      "description": "Azure Data Factory nested debug resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The resource name."
        }
      }
    },
    "Expression": {
      "description": "Azure Data Factory expression definition.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Expression type.",
          "enum": [
            "Expression"
          ]
        },
        "value": {
          "type": "string",
          "description": "Expression value."
        }
      },
      "required": [
        "type",
        "value"
      ]
    },
    "SecureString": {
      "x-ms-discriminator-value": "SecureString",
      "description": "Azure Data Factory secure string definition. The string value will be masked with asterisks '*' during Get or List API calls.",
      "type": "object",
      "allOf": [
        {
          "description": "The base definition of a secret type.",
          "discriminator": "type",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of the secret."
            }
          },
          "required": [
            "type"
          ]
        }
      ],
      "properties": {
        "value": {
          "type": "string",
          "description": "Value of secure string."
        }
      },
      "required": [
        "value"
      ]
    },
    "AzureKeyVaultSecretReference": {
      "x-ms-discriminator-value": "AzureKeyVaultSecret",
      "description": "Azure Key Vault secret reference.",
      "type": "object",
      "allOf": [
        {
          "description": "The base definition of a secret type.",
          "discriminator": "type",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of the secret."
            }
          },
          "required": [
            "type"
          ]
        }
      ],
      "properties": {
        "store": {
          "description": "The Azure Key Vault linked service reference.",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Linked service reference type.",
              "enum": [
                "LinkedServiceReference"
              ],
              "x-ms-enum": {
                "name": "Type",
                "modelAsString": true
              }
            },
            "referenceName": {
              "type": "string",
              "description": "Reference LinkedService name."
            },
            "parameters": {
              "description": "Arguments for LinkedService.",
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "required": [
            "type",
            "referenceName"
          ]
        },
        "secretName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string)."
        },
        "secretVersion": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "store",
        "secretName"
      ]
    },
    "SecretBase": {
      "description": "The base definition of a secret type.",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the secret."
        }
      },
      "required": [
        "type"
      ]
    },
    "FactoryListResponse": {
      "description": "A list of factory resources.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of factories.",
          "items": {
            "description": "Factory resource type.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The resource identifier.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The resource name.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The resource type.",
                "readOnly": true
              },
              "location": {
                "type": "string",
                "description": "The resource location.",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "The resource tags."
              },
              "eTag": {
                "type": "string",
                "description": "Etag identifies change in the resource.",
                "readOnly": true
              },
              "identity": {
                "description": "Managed service identity of the factory.",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The identity type.",
                    "enum": [
                      "SystemAssigned",
                      "UserAssigned",
                      "SystemAssigned,UserAssigned"
                    ],
                    "x-ms-enum": {
                      "name": "FactoryIdentityType",
                      "modelAsString": true
                    }
                  },
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true,
                    "description": "The principal id of the identity."
                  },
                  "tenantId": {
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true,
                    "description": "The client tenant id of the identity."
                  },
                  "userAssignedIdentities": {
                    "description": "List of user assigned identities for the factory.",
                    "type": "object",
                    "additionalProperties": {
                      "description": "Definition of a single user assigned identity for a factory.",
                      "type": "object",
                      "properties": {}
                    }
                  }
                },
                "required": [
                  "type"
                ]
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Properties of the factory.",
                "properties": {
                  "provisioningState": {
                    "description": "Factory provisioning state, example Succeeded.",
                    "type": "string",
                    "readOnly": true
                  },
                  "createTime": {
                    "description": "Time the factory was created in ISO8601 format.",
                    "type": "string",
                    "readOnly": true,
                    "format": "date-time"
                  },
                  "version": {
                    "description": "Version of the factory.",
                    "type": "string",
                    "readOnly": true
                  },
                  "purviewConfiguration": {
                    "description": "Purview information of the factory.",
                    "type": "object",
                    "properties": {
                      "purviewResourceId": {
                        "description": "Purview resource id.",
                        "type": "string"
                      }
                    }
                  },
                  "repoConfiguration": {
                    "description": "Git repo information of the factory.",
                    "type": "object",
                    "discriminator": "type",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Type of repo configuration."
                      },
                      "accountName": {
                        "description": "Account name.",
                        "type": "string"
                      },
                      "repositoryName": {
                        "description": "Repository name.",
                        "type": "string"
                      },
                      "collaborationBranch": {
                        "description": "Collaboration branch.",
                        "type": "string"
                      },
                      "rootFolder": {
                        "description": "Root folder.",
                        "type": "string"
                      },
                      "lastCommitId": {
                        "description": "Last commit id.",
                        "type": "string"
                      },
                      "disablePublish": {
                        "description": "Disable manual publish operation in ADF studio to favor automated publish.",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "type",
                      "accountName",
                      "repositoryName",
                      "collaborationBranch",
                      "rootFolder"
                    ]
                  },
                  "globalParameters": {
                    "description": "List of parameters for factory.",
                    "type": "object",
                    "additionalProperties": {
                      "description": "Definition of a single parameter for an entity.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Global Parameter type.",
                          "enum": [
                            "Object",
                            "String",
                            "Int",
                            "Float",
                            "Bool",
                            "Array"
                          ],
                          "x-ms-enum": {
                            "name": "GlobalParameterType",
                            "modelAsString": true
                          }
                        },
                        "value": {
                          "type": "object",
                          "description": "Value of parameter."
                        }
                      },
                      "required": [
                        "type",
                        "value"
                      ]
                    }
                  },
                  "encryption": {
                    "description": "Properties to enable Customer Managed Key for the factory.",
                    "properties": {
                      "keyName": {
                        "type": "string",
                        "description": "The name of the key in Azure Key Vault to use as Customer Managed Key."
                      },
                      "vaultBaseUrl": {
                        "type": "string",
                        "description": "The url of the Azure Key Vault used for CMK."
                      },
                      "keyVersion": {
                        "type": "string",
                        "description": "The version of the key used for CMK. If not provided, latest version will be used."
                      },
                      "identity": {
                        "description": "User assigned identity to use to authenticate to customer's key vault. If not provided Managed Service Identity will be used.",
                        "properties": {
                          "userAssignedIdentity": {
                            "type": "string",
                            "description": "The resource id of the user assigned identity to authenticate to customer's key vault."
                          }
                        }
                      }
                    },
                    "required": [
                      "keyName",
                      "vaultBaseUrl"
                    ]
                  },
                  "publicNetworkAccess": {
                    "description": "Whether or not public network access is allowed for the data factory.",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "PublicNetworkAccess",
                      "modelAsString": true
                    }
                  }
                }
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "IntegrationRuntimeListResponse": {
      "description": "A list of integration runtime resources.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of integration runtimes.",
          "items": {
            "description": "Integration runtime resource type.",
            "properties": {
              "id": {
                "type": "string",
                "description": "The resource identifier.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The resource name.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The resource type.",
                "readOnly": true
              },
              "etag": {
                "type": "string",
                "description": "Etag identifies change in the resource.",
                "readOnly": true
              },
              "properties": {
                "description": "Integration runtime properties.",
                "type": "object",
                "discriminator": "type",
                "properties": {
                  "type": {
                    "description": "Type of integration runtime.",
                    "type": "string",
                    "enum": [
                      "Managed",
                      "SelfHosted"
                    ],
                    "x-ms-enum": {
                      "name": "IntegrationRuntimeType",
                      "modelAsString": true
                    }
                  },
                  "description": {
                    "description": "Integration runtime description.",
                    "type": "string"
                  }
                },
                "additionalProperties": {
                  "type": "object"
                },
                "required": [
                  "type"
                ]
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "IntegrationRuntimeReference": {
      "description": "Integration runtime reference type.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of integration runtime.",
          "enum": [
            "IntegrationRuntimeReference"
          ]
        },
        "referenceName": {
          "type": "string",
          "description": "Reference integration runtime name."
        },
        "parameters": {
          "description": "Arguments for integration runtime.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      },
      "required": [
        "type",
        "referenceName"
      ]
    },
    "IntegrationRuntimeResource": {
      "description": "Integration runtime resource type.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The resource type.",
          "readOnly": true
        },
        "etag": {
          "type": "string",
          "description": "Etag identifies change in the resource.",
          "readOnly": true
        },
        "properties": {
          "description": "Integration runtime properties.",
          "type": "object",
          "discriminator": "type",
          "properties": {
            "type": {
              "description": "Type of integration runtime.",
              "type": "string",
              "enum": [
                "Managed",
                "SelfHosted"
              ],
              "x-ms-enum": {
                "name": "IntegrationRuntimeType",
                "modelAsString": true
              }
            },
            "description": {
              "description": "Integration runtime description.",
              "type": "string"
            }
          },
          "additionalProperties": {
            "type": "object"
          },
          "required": [
            "type"
          ]
        }
      },
      "required": [
        "properties"
      ]
    },
    "IntegrationRuntimeDebugResource": {
      "description": "Integration runtime debug resource.",
      "allOf": [
        {
          "description": "Azure Data Factory nested debug resource.",
          "properties": {
            "name": {
              "type": "string",
              "description": "The resource name."
            }
          }
        }
      ],
      "properties": {
        "properties": {
          "description": "Integration runtime properties.",
          "type": "object",
          "discriminator": "type",
          "properties": {
            "type": {
              "description": "Type of integration runtime.",
              "type": "string",
              "enum": [
                "Managed",
                "SelfHosted"
              ],
              "x-ms-enum": {
                "name": "IntegrationRuntimeType",
                "modelAsString": true
              }
            },
            "description": {
              "description": "Integration runtime description.",
              "type": "string"
            }
          },
          "additionalProperties": {
            "type": "object"
          },
          "required": [
            "type"
          ]
        }
      },
      "required": [
        "properties"
      ]
    },
    "IntegrationRuntimeStatusResponse": {
      "description": "Integration runtime status response.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The integration runtime name.",
          "readOnly": true
        },
        "properties": {
          "description": "Integration runtime properties.",
          "type": "object",
          "discriminator": "type",
          "properties": {
            "type": {
              "description": "Type of integration runtime.",
              "type": "string",
              "enum": [
                "Managed",
                "SelfHosted"
              ],
              "x-ms-enum": {
                "name": "IntegrationRuntimeType",
                "modelAsString": true
              }
            },
            "dataFactoryName": {
              "description": "The data factory name which the integration runtime belong to.",
              "type": "string",
              "readOnly": true
            },
            "state": {
              "description": "The state of integration runtime.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Initial",
                "Stopped",
                "Started",
                "Starting",
                "Stopping",
                "NeedRegistration",
                "Online",
                "Limited",
                "Offline",
                "AccessDenied"
              ],
              "x-ms-enum": {
                "name": "IntegrationRuntimeState",
                "modelAsString": true
              }
            }
          },
          "additionalProperties": {
            "type": "object"
          },
          "required": [
            "type"
          ]
        }
      },
      "required": [
        "properties"
      ]
    },
    "IntegrationRuntimeStatusListResponse": {
      "description": "A list of integration runtime status.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of integration runtime status.",
          "items": {
            "description": "Integration runtime status response.",
            "properties": {
              "name": {
                "type": "string",
                "description": "The integration runtime name.",
                "readOnly": true
              },
              "properties": {
                "description": "Integration runtime properties.",
                "type": "object",
                "discriminator": "type",
                "properties": {
                  "type": {
                    "description": "Type of integration runtime.",
                    "type": "string",
                    "enum": [
                      "Managed",
                      "SelfHosted"
                    ],
                    "x-ms-enum": {
                      "name": "IntegrationRuntimeType",
                      "modelAsString": true
                    }
                  },
                  "dataFactoryName": {
                    "description": "The data factory name which the integration runtime belong to.",
                    "type": "string",
                    "readOnly": true
                  },
                  "state": {
                    "description": "The state of integration runtime.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Initial",
                      "Stopped",
                      "Started",
                      "Starting",
                      "Stopping",
                      "NeedRegistration",
                      "Online",
                      "Limited",
                      "Offline",
                      "AccessDenied"
                    ],
                    "x-ms-enum": {
                      "name": "IntegrationRuntimeState",
                      "modelAsString": true
                    }
                  }
                },
                "additionalProperties": {
                  "type": "object"
                },
                "required": [
                  "type"
                ]
              }
            },
            "required": [
              "properties"
            ]
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "UpdateIntegrationRuntimeRequest": {
      "description": "Update integration runtime request.",
      "type": "object",
      "properties": {
        "autoUpdate": {
          "description": "Enables or disables the auto-update feature of the self-hosted integration runtime. See https://go.microsoft.com/fwlink/?linkid=854189.",
          "type": "string",
          "enum": [
            "On",
            "Off"
          ],
          "x-ms-enum": {
            "name": "IntegrationRuntimeAutoUpdate",
            "modelAsString": true
          }
        },
        "updateDelayOffset": {
          "description": "The time offset (in hours) in the day, e.g., PT03H is 3 hours. The integration runtime auto update will happen on that time.",
          "type": "string"
        }
      }
    },
    "UpdateIntegrationRuntimeNodeRequest": {
      "description": "Update integration runtime node request.",
      "type": "object",
      "properties": {
        "concurrentJobsLimit": {
          "description": "The number of concurrent jobs permitted to run on the integration runtime node. Values between 1 and maxConcurrentJobs(inclusive) are allowed.",
          "type": "integer",
          "minimum": 1
        }
      }
    },
    "LinkedIntegrationRuntimeRequest": {
      "description": "Data factory name for linked integration runtime request.",
      "type": "object",
      "properties": {
        "factoryName": {
          "description": "The data factory name for linked integration runtime.",
          "type": "string",
          "x-ms-client-name": "linkedFactoryName"
        }
      },
      "required": [
        "factoryName"
      ]
    },
    "CreateLinkedIntegrationRuntimeRequest": {
      "description": "The linked integration runtime information.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the linked integration runtime.",
          "type": "string"
        },
        "subscriptionId": {
          "description": "The ID of the subscription that the linked integration runtime belongs to.",
          "type": "string"
        },
        "dataFactoryName": {
          "description": "The name of the data factory that the linked integration runtime belongs to.",
          "type": "string"
        },
        "dataFactoryLocation": {
          "description": "The location of the data factory that the linked integration runtime belongs to.",
          "type": "string"
        }
      }
    },
    "LinkedServiceListResponse": {
      "description": "A list of linked service resources.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of linked services.",
          "items": {
            "description": "Linked service resource type.",
            "properties": {
              "id": {
                "type": "string",
                "description": "The resource identifier.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The resource name.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The resource type.",
                "readOnly": true
              },
              "etag": {
                "type": "string",
                "description": "Etag identifies change in the resource.",
                "readOnly": true
              },
              "properties": {
                "description": "Properties of linked service.",
                "type": "object",
                "discriminator": "type",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Type of linked service."
                  },
                  "version": {
                    "type": "string",
                    "description": "Version of the linked service."
                  },
                  "connectVia": {
                    "description": "The integration runtime reference.",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Type of integration runtime.",
                        "enum": [
                          "IntegrationRuntimeReference"
                        ]
                      },
                      "referenceName": {
                        "type": "string",
                        "description": "Reference integration runtime name."
                      },
                      "parameters": {
                        "description": "Arguments for integration runtime.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "object"
                        }
                      }
                    },
                    "required": [
                      "type",
                      "referenceName"
                    ]
                  },
                  "description": {
                    "description": "Linked service description.",
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters for linked service.",
                    "type": "object",
                    "additionalProperties": {
                      "description": "Definition of a single parameter for an entity.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Parameter type.",
                          "enum": [
                            "Object",
                            "String",
                            "Int",
                            "Float",
                            "Bool",
                            "Array",
                            "SecureString"
                          ],
                          "x-ms-enum": {
                            "name": "ParameterType",
                            "modelAsString": true
                          }
                        },
                        "defaultValue": {
                          "type": "object",
                          "description": "Default value of parameter."
                        }
                      },
                      "required": [
                        "type"
                      ]
                    }
                  },
                  "annotations": {
                    "description": "List of tags that can be used for describing the linked service.",
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "x-ms-identifiers": []
                  }
                },
                "additionalProperties": {
                  "type": "object"
                },
                "required": [
                  "type"
                ]
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "DatasetListResponse": {
      "description": "A list of dataset resources.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of datasets.",
          "items": {
            "description": "Dataset resource type.",
            "properties": {
              "id": {
                "type": "string",
                "description": "The resource identifier.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The resource name.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The resource type.",
                "readOnly": true
              },
              "etag": {
                "type": "string",
                "description": "Etag identifies change in the resource.",
                "readOnly": true
              },
              "properties": {
                "description": "Dataset properties.",
                "type": "object",
                "discriminator": "type",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Type of dataset."
                  },
                  "description": {
                    "description": "Dataset description.",
                    "type": "string"
                  },
                  "structure": {
                    "type": "object",
                    "x-ms-format": "dfe-list-generic",
                    "x-ms-format-element-type": "DatasetDataElement",
                    "description": "Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement."
                  },
                  "schema": {
                    "type": "object",
                    "x-ms-format": "dfe-list-generic",
                    "x-ms-format-element-type": "DatasetSchemaDataElement",
                    "description": "Columns that define the physical type schema of the dataset. Type: array (or Expression with resultType array), itemType: DatasetSchemaDataElement."
                  },
                  "linkedServiceName": {
                    "description": "Linked service reference.",
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Linked service reference type.",
                        "enum": [
                          "LinkedServiceReference"
                        ],
                        "x-ms-enum": {
                          "name": "Type",
                          "modelAsString": true
                        }
                      },
                      "referenceName": {
                        "type": "string",
                        "description": "Reference LinkedService name."
                      },
                      "parameters": {
                        "description": "Arguments for LinkedService.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "object"
                        }
                      }
                    },
                    "required": [
                      "type",
                      "referenceName"
                    ]
                  },
                  "parameters": {
                    "description": "Parameters for dataset.",
                    "type": "object",
                    "additionalProperties": {
                      "description": "Definition of a single parameter for an entity.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Parameter type.",
                          "enum": [
                            "Object",
                            "String",
                            "Int",
                            "Float",
                            "Bool",
                            "Array",
                            "SecureString"
                          ],
                          "x-ms-enum": {
                            "name": "ParameterType",
                            "modelAsString": true
                          }
                        },
                        "defaultValue": {
                          "type": "object",
                          "description": "Default value of parameter."
                        }
                      },
                      "required": [
                        "type"
                      ]
                    }
                  },
                  "annotations": {
                    "description": "List of tags that can be used for describing the Dataset.",
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "x-ms-identifiers": []
                  },
                  "folder": {
                    "description": "The folder that this Dataset is in. If not specified, Dataset will appear at the root level.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the folder that this Dataset is in.",
                        "type": "string"
                      }
                    }
                  }
                },
                "additionalProperties": {
                  "type": "object"
                },
                "required": [
                  "type",
                  "linkedServiceName"
                ]
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "PipelineListResponse": {
      "description": "A list of pipeline resources.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of pipelines.",
          "items": {
            "description": "Pipeline resource type.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The resource identifier.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The resource name.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The resource type.",
                "readOnly": true
              },
              "etag": {
                "type": "string",
                "description": "Etag identifies change in the resource.",
                "readOnly": true
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Properties of the pipeline.",
                "type": "object",
                "properties": {
                  "description": {
                    "description": "The description of the pipeline.",
                    "type": "string"
                  },
                  "activities": {
                    "type": "array",
                    "description": "List of activities in pipeline.",
                    "items": {
                      "discriminator": "type",
                      "description": "A pipeline activity.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Activity name.",
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "description": "Type of activity."
                        },
                        "description": {
                          "description": "Activity description.",
                          "type": "string"
                        },
                        "state": {
                          "description": "Activity state. This is an optional property and if not provided, the state will be Active by default.",
                          "type": "string",
                          "enum": [
                            "Active",
                            "Inactive"
                          ],
                          "x-ms-enum": {
                            "name": "ActivityState",
                            "modelAsString": true
                          }
                        },
                        "onInactiveMarkAs": {
                          "description": "Status result of the activity when the state is set to Inactive. This is an optional property and if not provided when the activity is inactive, the status will be Succeeded by default.",
                          "type": "string",
                          "enum": [
                            "Succeeded",
                            "Failed",
                            "Skipped"
                          ],
                          "x-ms-enum": {
                            "name": "ActivityOnInactiveMarkAs",
                            "modelAsString": true
                          }
                        },
                        "dependsOn": {
                          "type": "array",
                          "description": "Activity depends on condition.",
                          "items": {
                            "description": "Activity dependency information.",
                            "type": "object",
                            "properties": {
                              "activity": {
                                "description": "Activity name.",
                                "type": "string"
                              },
                              "dependencyConditions": {
                                "type": "array",
                                "description": "Match-Condition for the dependency.",
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "Succeeded",
                                    "Failed",
                                    "Skipped",
                                    "Completed"
                                  ],
                                  "x-ms-enum": {
                                    "name": "DependencyCondition",
                                    "modelAsString": true
                                  }
                                }
                              }
                            },
                            "additionalProperties": {
                              "type": "object"
                            },
                            "required": [
                              "activity",
                              "dependencyConditions"
                            ]
                          },
                          "x-ms-identifiers": []
                        },
                        "userProperties": {
                          "type": "array",
                          "description": "Activity user properties.",
                          "items": {
                            "description": "User property.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "User property name.",
                                "type": "string"
                              },
                              "value": {
                                "x-ms-format": "dfe-string",
                                "description": "User property value. Type: string (or Expression with resultType string).",
                                "type": "object"
                              }
                            },
                            "required": [
                              "name",
                              "value"
                            ]
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        }
                      },
                      "additionalProperties": {
                        "type": "object"
                      },
                      "required": [
                        "name",
                        "type"
                      ]
                    },
                    "x-ms-identifiers": [
                      "name"
                    ]
                  },
                  "parameters": {
                    "description": "List of parameters for pipeline.",
                    "type": "object",
                    "additionalProperties": {
                      "description": "Definition of a single parameter for an entity.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Parameter type.",
                          "enum": [
                            "Object",
                            "String",
                            "Int",
                            "Float",
                            "Bool",
                            "Array",
                            "SecureString"
                          ],
                          "x-ms-enum": {
                            "name": "ParameterType",
                            "modelAsString": true
                          }
                        },
                        "defaultValue": {
                          "type": "object",
                          "description": "Default value of parameter."
                        }
                      },
                      "required": [
                        "type"
                      ]
                    }
                  },
                  "variables": {
                    "description": "List of variables for pipeline.",
                    "type": "object",
                    "additionalProperties": {
                      "description": "Definition of a single variable for a Pipeline.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Variable type.",
                          "enum": [
                            "String",
                            "Bool",
                            "Array"
                          ],
                          "x-ms-enum": {
                            "name": "VariableType",
                            "modelAsString": true
                          }
                        },
                        "defaultValue": {
                          "type": "object",
                          "description": "Default value of variable."
                        }
                      },
                      "required": [
                        "type"
                      ]
                    }
                  },
                  "concurrency": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "The max number of concurrent runs for the pipeline."
                  },
                  "annotations": {
                    "description": "List of tags that can be used for describing the Pipeline.",
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "x-ms-identifiers": []
                  },
                  "runDimensions": {
                    "description": "Dimensions emitted by Pipeline.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "x-ms-format": "dfe-string",
                      "description": "Type: string (or Expression with resultType string)."
                    }
                  },
                  "folder": {
                    "description": "The folder that this Pipeline is in. If not specified, Pipeline will appear at the root level.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the folder that this Pipeline is in.",
                        "type": "string"
                      }
                    }
                  },
                  "policy": {
                    "description": "Pipeline Policy.",
                    "type": "object",
                    "properties": {
                      "elapsedTimeMetric": {
                        "description": "Pipeline ElapsedTime Metric Policy.",
                        "type": "object",
                        "properties": {
                          "duration": {
                            "description": "TimeSpan value, after which an Azure Monitoring Metric is fired.",
                            "type": "object"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "additionalProperties": {
              "type": "object"
            },
            "required": [
              "properties"
            ]
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "TriggerQueryResponse": {
      "description": "A query of triggers.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of triggers.",
          "items": {
            "description": "Trigger resource type.",
            "properties": {
              "id": {
                "type": "string",
                "description": "The resource identifier.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The resource name.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The resource type.",
                "readOnly": true
              },
              "etag": {
                "type": "string",
                "description": "Etag identifies change in the resource.",
                "readOnly": true
              },
              "properties": {
                "description": "Properties of the trigger.",
                "type": "object",
                "discriminator": "type",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Trigger type."
                  },
                  "description": {
                    "description": "Trigger description.",
                    "type": "string"
                  },
                  "runtimeState": {
                    "description": "Indicates if trigger is running or not. Updated when Start/Stop APIs are called on the Trigger.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Started",
                      "Stopped",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "TriggerRuntimeState",
                      "modelAsString": true
                    }
                  },
                  "annotations": {
                    "description": "List of tags that can be used for describing the trigger.",
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "x-ms-identifiers": []
                  }
                },
                "additionalProperties": {
                  "type": "object"
                },
                "required": [
                  "type"
                ]
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "continuationToken": {
          "description": "The continuation token for getting the next page of results, if any remaining results exist, null otherwise.",
          "type": "string"
        }
      }
    },
    "TriggerListResponse": {
      "description": "A list of trigger resources.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of triggers.",
          "items": {
            "description": "Trigger resource type.",
            "properties": {
              "id": {
                "type": "string",
                "description": "The resource identifier.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The resource name.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The resource type.",
                "readOnly": true
              },
              "etag": {
                "type": "string",
                "description": "Etag identifies change in the resource.",
                "readOnly": true
              },
              "properties": {
                "description": "Properties of the trigger.",
                "type": "object",
                "discriminator": "type",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Trigger type."
                  },
                  "description": {
                    "description": "Trigger description.",
                    "type": "string"
                  },
                  "runtimeState": {
                    "description": "Indicates if trigger is running or not. Updated when Start/Stop APIs are called on the Trigger.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Started",
                      "Stopped",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "TriggerRuntimeState",
                      "modelAsString": true
                    }
                  },
                  "annotations": {
                    "description": "List of tags that can be used for describing the trigger.",
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "x-ms-identifiers": []
                  }
                },
                "additionalProperties": {
                  "type": "object"
                },
                "required": [
                  "type"
                ]
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "CreateRunResponse": {
      "description": "Response body with a run identifier.",
      "type": "object",
      "properties": {
        "runId": {
          "description": "Identifier of a run.",
          "type": "string"
        }
      },
      "required": [
        "runId"
      ]
    },
    "GlobalParameterListResponse": {
      "description": "A list of Global parameters.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of global parameters.",
          "items": {
            "description": "Global parameters resource type.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The resource identifier.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The resource name.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The resource type.",
                "readOnly": true
              },
              "etag": {
                "type": "string",
                "description": "Etag identifies change in the resource.",
                "readOnly": true
              },
              "properties": {
                "description": "Properties of the global parameter.",
                "type": "object",
                "properties": {},
                "additionalProperties": {
                  "description": "Definition of a single parameter for an entity.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Global Parameter type.",
                      "enum": [
                        "Object",
                        "String",
                        "Int",
                        "Float",
                        "Bool",
                        "Array"
                      ],
                      "x-ms-enum": {
                        "name": "GlobalParameterType",
                        "modelAsString": true
                      }
                    },
                    "value": {
                      "type": "object",
                      "description": "Value of parameter."
                    }
                  },
                  "required": [
                    "type",
                    "value"
                  ]
                }
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "CloudError": {
      "x-ms-external": true,
      "description": "The object that defines the structure of an Azure Data Factory error response.",
      "type": "object",
      "properties": {
        "error": {
          "x-ms-client-flatten": true,
          "description": "Error data",
          "$ref": "#/definitions/CloudErrorBody"
        }
      },
      "required": [
        "error"
      ]
    },
    "CloudErrorBody": {
      "x-ms-external": true,
      "description": "The object that defines the structure of an Azure Data Factory error.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code.",
          "type": "string"
        },
        "message": {
          "description": "Error message.",
          "type": "string"
        },
        "target": {
          "description": "Property name/path in request associated with error.",
          "type": "string"
        },
        "details": {
          "description": "Array with additional error details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudError"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "TriggerSubscriptionOperationStatus": {
      "description": "Defines the response of a trigger subscription operation.",
      "type": "object",
      "properties": {
        "triggerName": {
          "description": "Trigger name.",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "enum": [
            "Enabled",
            "Provisioning",
            "Deprovisioning",
            "Disabled",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "EventSubscriptionStatus",
            "modelAsString": true
          },
          "description": "Event Subscription Status.",
          "readOnly": true
        }
      }
    },
    "VariableDefinitionSpecification": {
      "description": "Definition of variable for a Pipeline.",
      "type": "object",
      "additionalProperties": {
        "description": "Definition of a single variable for a Pipeline.",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Variable type.",
            "enum": [
              "String",
              "Bool",
              "Array"
            ],
            "x-ms-enum": {
              "name": "VariableType",
              "modelAsString": true
            }
          },
          "defaultValue": {
            "type": "object",
            "description": "Default value of variable."
          }
        },
        "required": [
          "type"
        ]
      }
    },
    "VariableSpecification": {
      "description": "Definition of a single variable for a Pipeline.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Variable type.",
          "enum": [
            "String",
            "Bool",
            "Array"
          ],
          "x-ms-enum": {
            "name": "VariableType",
            "modelAsString": true
          }
        },
        "defaultValue": {
          "type": "object",
          "description": "Default value of variable."
        }
      },
      "required": [
        "type"
      ]
    },
    "ParameterDefinitionSpecification": {
      "description": "Definition of all parameters for an entity.",
      "type": "object",
      "additionalProperties": {
        "description": "Definition of a single parameter for an entity.",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Parameter type.",
            "enum": [
              "Object",
              "String",
              "Int",
              "Float",
              "Bool",
              "Array",
              "SecureString"
            ],
            "x-ms-enum": {
              "name": "ParameterType",
              "modelAsString": true
            }
          },
          "defaultValue": {
            "type": "object",
            "description": "Default value of parameter."
          }
        },
        "required": [
          "type"
        ]
      }
    },
    "ParameterSpecification": {
      "description": "Definition of a single parameter for an entity.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Parameter type.",
          "enum": [
            "Object",
            "String",
            "Int",
            "Float",
            "Bool",
            "Array",
            "SecureString"
          ],
          "x-ms-enum": {
            "name": "ParameterType",
            "modelAsString": true
          }
        },
        "defaultValue": {
          "type": "object",
          "description": "Default value of parameter."
        }
      },
      "required": [
        "type"
      ]
    },
    "ParameterValueSpecification": {
      "description": "An object mapping parameter names to argument values.",
      "type": "object",
      "additionalProperties": {
        "type": "object"
      }
    },
    "PurviewConfiguration": {
      "description": "Purview configuration.",
      "type": "object",
      "properties": {
        "purviewResourceId": {
          "description": "Purview resource id.",
          "type": "string"
        }
      }
    },
    "FactoryRepoConfiguration": {
      "description": "Factory's git repo information.",
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of repo configuration."
        },
        "accountName": {
          "description": "Account name.",
          "type": "string"
        },
        "repositoryName": {
          "description": "Repository name.",
          "type": "string"
        },
        "collaborationBranch": {
          "description": "Collaboration branch.",
          "type": "string"
        },
        "rootFolder": {
          "description": "Root folder.",
          "type": "string"
        },
        "lastCommitId": {
          "description": "Last commit id.",
          "type": "string"
        },
        "disablePublish": {
          "description": "Disable manual publish operation in ADF studio to favor automated publish.",
          "type": "boolean"
        }
      },
      "required": [
        "type",
        "accountName",
        "repositoryName",
        "collaborationBranch",
        "rootFolder"
      ]
    },
    "FactoryVSTSConfiguration": {
      "x-ms-discriminator-value": "FactoryVSTSConfiguration",
      "description": "Factory's VSTS repo information.",
      "type": "object",
      "allOf": [
        {
          "description": "Factory's git repo information.",
          "type": "object",
          "discriminator": "type",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of repo configuration."
            },
            "accountName": {
              "description": "Account name.",
              "type": "string"
            },
            "repositoryName": {
              "description": "Repository name.",
              "type": "string"
            },
            "collaborationBranch": {
              "description": "Collaboration branch.",
              "type": "string"
            },
            "rootFolder": {
              "description": "Root folder.",
              "type": "string"
            },
            "lastCommitId": {
              "description": "Last commit id.",
              "type": "string"
            },
            "disablePublish": {
              "description": "Disable manual publish operation in ADF studio to favor automated publish.",
              "type": "boolean"
            }
          },
          "required": [
            "type",
            "accountName",
            "repositoryName",
            "collaborationBranch",
            "rootFolder"
          ]
        }
      ],
      "properties": {
        "projectName": {
          "description": "VSTS project name.",
          "type": "string"
        },
        "tenantId": {
          "description": "VSTS tenant id.",
          "type": "string"
        }
      },
      "required": [
        "projectName"
      ]
    },
    "FactoryGitHubConfiguration": {
      "x-ms-discriminator-value": "FactoryGitHubConfiguration",
      "description": "Factory's GitHub repo information.",
      "type": "object",
      "allOf": [
        {
          "description": "Factory's git repo information.",
          "type": "object",
          "discriminator": "type",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of repo configuration."
            },
            "accountName": {
              "description": "Account name.",
              "type": "string"
            },
            "repositoryName": {
              "description": "Repository name.",
              "type": "string"
            },
            "collaborationBranch": {
              "description": "Collaboration branch.",
              "type": "string"
            },
            "rootFolder": {
              "description": "Root folder.",
              "type": "string"
            },
            "lastCommitId": {
              "description": "Last commit id.",
              "type": "string"
            },
            "disablePublish": {
              "description": "Disable manual publish operation in ADF studio to favor automated publish.",
              "type": "boolean"
            }
          },
          "required": [
            "type",
            "accountName",
            "repositoryName",
            "collaborationBranch",
            "rootFolder"
          ]
        }
      ],
      "properties": {
        "hostName": {
          "description": "GitHub Enterprise host name. For example: `https://github.mydomain.com`",
          "type": "string"
        },
        "clientId": {
          "description": "GitHub bring your own app client id.",
          "type": "string"
        },
        "clientSecret": {
          "description": "GitHub bring your own app client secret information.",
          "type": "object",
          "properties": {
            "byoaSecretAkvUrl": {
              "description": "Bring your own app client secret AKV URL.",
              "type": "string"
            },
            "byoaSecretName": {
              "description": "Bring your own app client secret name in AKV.",
              "type": "string"
            }
          }
        }
      }
    },
    "GitHubClientSecret": {
      "description": "Client secret information for factory's bring your own app repository configuration.",
      "type": "object",
      "properties": {
        "byoaSecretAkvUrl": {
          "description": "Bring your own app client secret AKV URL.",
          "type": "string"
        },
        "byoaSecretName": {
          "description": "Bring your own app client secret name in AKV.",
          "type": "string"
        }
      }
    },
    "FactoryRepoUpdate": {
      "description": "Factory's git repo information.",
      "properties": {
        "factoryResourceId": {
          "description": "The factory resource id.",
          "type": "string"
        },
        "repoConfiguration": {
          "description": "Git repo information of the factory.",
          "type": "object",
          "discriminator": "type",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of repo configuration."
            },
            "accountName": {
              "description": "Account name.",
              "type": "string"
            },
            "repositoryName": {
              "description": "Repository name.",
              "type": "string"
            },
            "collaborationBranch": {
              "description": "Collaboration branch.",
              "type": "string"
            },
            "rootFolder": {
              "description": "Root folder.",
              "type": "string"
            },
            "lastCommitId": {
              "description": "Last commit id.",
              "type": "string"
            },
            "disablePublish": {
              "description": "Disable manual publish operation in ADF studio to favor automated publish.",
              "type": "boolean"
            }
          },
          "required": [
            "type",
            "accountName",
            "repositoryName",
            "collaborationBranch",
            "rootFolder"
          ]
        }
      }
    },
    "GitHubAccessTokenRequest": {
      "description": "Get GitHub access token request definition.",
      "properties": {
        "gitHubAccessCode": {
          "description": "GitHub access code.",
          "type": "string"
        },
        "gitHubClientId": {
          "description": "GitHub application client ID.",
          "type": "string"
        },
        "gitHubClientSecret": {
          "description": "GitHub bring your own app client secret information.",
          "type": "object",
          "properties": {
            "byoaSecretAkvUrl": {
              "description": "Bring your own app client secret AKV URL.",
              "type": "string"
            },
            "byoaSecretName": {
              "description": "Bring your own app client secret name in AKV.",
              "type": "string"
            }
          }
        },
        "gitHubAccessTokenBaseUrl": {
          "description": "GitHub access token base URL.",
          "type": "string"
        }
      },
      "required": [
        "gitHubAccessCode",
        "gitHubAccessTokenBaseUrl"
      ]
    },
    "GitHubAccessTokenResponse": {
      "description": "Get GitHub access token response definition.",
      "properties": {
        "gitHubAccessToken": {
          "description": "GitHub access token.",
          "type": "string"
        }
      }
    },
    "UserAccessPolicy": {
      "description": "Get Data Plane read only token request definition.",
      "properties": {
        "permissions": {
          "description": "The string with permissions for Data Plane access. Currently only 'r' is supported which grants read only access.",
          "type": "string"
        },
        "accessResourcePath": {
          "description": "The resource path to get access relative to factory. Currently only empty string is supported which corresponds to the factory resource.",
          "type": "string"
        },
        "profileName": {
          "description": "The name of the profile. Currently only the default is supported. The default value is DefaultProfile.",
          "type": "string"
        },
        "startTime": {
          "description": "Start time for the token. If not specified the current time will be used.",
          "type": "string"
        },
        "expireTime": {
          "description": "Expiration time for the token. Maximum duration for the token is eight hours and by default the token will expire in eight hours.",
          "type": "string"
        }
      }
    },
    "AccessPolicyResponse": {
      "description": "Get Data Plane read only token response definition.",
      "properties": {
        "policy": {
          "description": "Get Data Plane read only token request definition.",
          "properties": {
            "permissions": {
              "description": "The string with permissions for Data Plane access. Currently only 'r' is supported which grants read only access.",
              "type": "string"
            },
            "accessResourcePath": {
              "description": "The resource path to get access relative to factory. Currently only empty string is supported which corresponds to the factory resource.",
              "type": "string"
            },
            "profileName": {
              "description": "The name of the profile. Currently only the default is supported. The default value is DefaultProfile.",
              "type": "string"
            },
            "startTime": {
              "description": "Start time for the token. If not specified the current time will be used.",
              "type": "string"
            },
            "expireTime": {
              "description": "Expiration time for the token. Maximum duration for the token is eight hours and by default the token will expire in eight hours.",
              "type": "string"
            }
          }
        },
        "accessToken": {
          "description": "Data Plane read only access token.",
          "type": "string"
        },
        "dataPlaneUrl": {
          "description": "Data Plane service base URL.",
          "type": "string"
        }
      }
    },
    "FactoryProperties": {
      "description": "Factory resource properties.",
      "properties": {
        "provisioningState": {
          "description": "Factory provisioning state, example Succeeded.",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "description": "Time the factory was created in ISO8601 format.",
          "type": "string",
          "readOnly": true,
          "format": "date-time"
        },
        "version": {
          "description": "Version of the factory.",
          "type": "string",
          "readOnly": true
        },
        "purviewConfiguration": {
          "description": "Purview information of the factory.",
          "type": "object",
          "properties": {
            "purviewResourceId": {
              "description": "Purview resource id.",
              "type": "string"
            }
          }
        },
        "repoConfiguration": {
          "description": "Git repo information of the factory.",
          "type": "object",
          "discriminator": "type",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of repo configuration."
            },
            "accountName": {
              "description": "Account name.",
              "type": "string"
            },
            "repositoryName": {
              "description": "Repository name.",
              "type": "string"
            },
            "collaborationBranch": {
              "description": "Collaboration branch.",
              "type": "string"
            },
            "rootFolder": {
              "description": "Root folder.",
              "type": "string"
            },
            "lastCommitId": {
              "description": "Last commit id.",
              "type": "string"
            },
            "disablePublish": {
              "description": "Disable manual publish operation in ADF studio to favor automated publish.",
              "type": "boolean"
            }
          },
          "required": [
            "type",
            "accountName",
            "repositoryName",
            "collaborationBranch",
            "rootFolder"
          ]
        },
        "globalParameters": {
          "description": "List of parameters for factory.",
          "type": "object",
          "additionalProperties": {
            "description": "Definition of a single parameter for an entity.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Global Parameter type.",
                "enum": [
                  "Object",
                  "String",
                  "Int",
                  "Float",
                  "Bool",
                  "Array"
                ],
                "x-ms-enum": {
                  "name": "GlobalParameterType",
                  "modelAsString": true
                }
              },
              "value": {
                "type": "object",
                "description": "Value of parameter."
              }
            },
            "required": [
              "type",
              "value"
            ]
          }
        },
        "encryption": {
          "description": "Properties to enable Customer Managed Key for the factory.",
          "properties": {
            "keyName": {
              "type": "string",
              "description": "The name of the key in Azure Key Vault to use as Customer Managed Key."
            },
            "vaultBaseUrl": {
              "type": "string",
              "description": "The url of the Azure Key Vault used for CMK."
            },
            "keyVersion": {
              "type": "string",
              "description": "The version of the key used for CMK. If not provided, latest version will be used."
            },
            "identity": {
              "description": "User assigned identity to use to authenticate to customer's key vault. If not provided Managed Service Identity will be used.",
              "properties": {
                "userAssignedIdentity": {
                  "type": "string",
                  "description": "The resource id of the user assigned identity to authenticate to customer's key vault."
                }
              }
            }
          },
          "required": [
            "keyName",
            "vaultBaseUrl"
          ]
        },
        "publicNetworkAccess": {
          "description": "Whether or not public network access is allowed for the data factory.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true
          }
        }
      }
    },
    "FactoryUpdateProperties": {
      "description": "Factory update resource properties.",
      "type": "object",
      "properties": {
        "publicNetworkAccess": {
          "description": "Whether or not public network access is allowed for the data factory.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true
          }
        }
      }
    },
    "EncryptionConfiguration": {
      "description": "Definition of CMK for the factory.",
      "properties": {
        "keyName": {
          "type": "string",
          "description": "The name of the key in Azure Key Vault to use as Customer Managed Key."
        },
        "vaultBaseUrl": {
          "type": "string",
          "description": "The url of the Azure Key Vault used for CMK."
        },
        "keyVersion": {
          "type": "string",
          "description": "The version of the key used for CMK. If not provided, latest version will be used."
        },
        "identity": {
          "description": "User assigned identity to use to authenticate to customer's key vault. If not provided Managed Service Identity will be used.",
          "properties": {
            "userAssignedIdentity": {
              "type": "string",
              "description": "The resource id of the user assigned identity to authenticate to customer's key vault."
            }
          }
        }
      },
      "required": [
        "keyName",
        "vaultBaseUrl"
      ]
    },
    "CMKIdentityDefinition": {
      "description": "Managed Identity used for CMK.",
      "properties": {
        "userAssignedIdentity": {
          "type": "string",
          "description": "The resource id of the user assigned identity to authenticate to customer's key vault."
        }
      }
    },
    "GlobalParameterDefinitionSpecification": {
      "description": "Definition of all parameters for an entity.",
      "type": "object",
      "additionalProperties": {
        "description": "Definition of a single parameter for an entity.",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Global Parameter type.",
            "enum": [
              "Object",
              "String",
              "Int",
              "Float",
              "Bool",
              "Array"
            ],
            "x-ms-enum": {
              "name": "GlobalParameterType",
              "modelAsString": true
            }
          },
          "value": {
            "type": "object",
            "description": "Value of parameter."
          }
        },
        "required": [
          "type",
          "value"
        ]
      }
    },
    "GlobalParameterSpecification": {
      "description": "Definition of a single parameter for an entity.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Global Parameter type.",
          "enum": [
            "Object",
            "String",
            "Int",
            "Float",
            "Bool",
            "Array"
          ],
          "x-ms-enum": {
            "name": "GlobalParameterType",
            "modelAsString": true
          }
        },
        "value": {
          "type": "object",
          "description": "Value of parameter."
        }
      },
      "required": [
        "type",
        "value"
      ]
    },
    "PipelineResource": {
      "description": "Pipeline resource type.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The resource type.",
          "readOnly": true
        },
        "etag": {
          "type": "string",
          "description": "Etag identifies change in the resource.",
          "readOnly": true
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of the pipeline.",
          "type": "object",
          "properties": {
            "description": {
              "description": "The description of the pipeline.",
              "type": "string"
            },
            "activities": {
              "type": "array",
              "description": "List of activities in pipeline.",
              "items": {
                "discriminator": "type",
                "description": "A pipeline activity.",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Activity name.",
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of activity."
                  },
                  "description": {
                    "description": "Activity description.",
                    "type": "string"
                  },
                  "state": {
                    "description": "Activity state. This is an optional property and if not provided, the state will be Active by default.",
                    "type": "string",
                    "enum": [
                      "Active",
                      "Inactive"
                    ],
                    "x-ms-enum": {
                      "name": "ActivityState",
                      "modelAsString": true
                    }
                  },
                  "onInactiveMarkAs": {
                    "description": "Status result of the activity when the state is set to Inactive. This is an optional property and if not provided when the activity is inactive, the status will be Succeeded by default.",
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Skipped"
                    ],
                    "x-ms-enum": {
                      "name": "ActivityOnInactiveMarkAs",
                      "modelAsString": true
                    }
                  },
                  "dependsOn": {
                    "type": "array",
                    "description": "Activity depends on condition.",
                    "items": {
                      "description": "Activity dependency information.",
                      "type": "object",
                      "properties": {
                        "activity": {
                          "description": "Activity name.",
                          "type": "string"
                        },
                        "dependencyConditions": {
                          "type": "array",
                          "description": "Match-Condition for the dependency.",
                          "items": {
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Skipped",
                              "Completed"
                            ],
                            "x-ms-enum": {
                              "name": "DependencyCondition",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "additionalProperties": {
                        "type": "object"
                      },
                      "required": [
                        "activity",
                        "dependencyConditions"
                      ]
                    },
                    "x-ms-identifiers": []
                  },
                  "userProperties": {
                    "type": "array",
                    "description": "Activity user properties.",
                    "items": {
                      "description": "User property.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "User property name.",
                          "type": "string"
                        },
                        "value": {
                          "x-ms-format": "dfe-string",
                          "description": "User property value. Type: string (or Expression with resultType string).",
                          "type": "object"
                        }
                      },
                      "required": [
                        "name",
                        "value"
                      ]
                    },
                    "x-ms-identifiers": [
                      "name"
                    ]
                  }
                },
                "additionalProperties": {
                  "type": "object"
                },
                "required": [
                  "name",
                  "type"
                ]
              },
              "x-ms-identifiers": [
                "name"
              ]
            },
            "parameters": {
              "description": "List of parameters for pipeline.",
              "type": "object",
              "additionalProperties": {
                "description": "Definition of a single parameter for an entity.",
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Parameter type.",
                    "enum": [
                      "Object",
                      "String",
                      "Int",
                      "Float",
                      "Bool",
                      "Array",
                      "SecureString"
                    ],
                    "x-ms-enum": {
                      "name": "ParameterType",
                      "modelAsString": true
                    }
                  },
                  "defaultValue": {
                    "type": "object",
                    "description": "Default value of parameter."
                  }
                },
                "required": [
                  "type"
                ]
              }
            },
            "variables": {
              "description": "List of variables for pipeline.",
              "type": "object",
              "additionalProperties": {
                "description": "Definition of a single variable for a Pipeline.",
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Variable type.",
                    "enum": [
                      "String",
                      "Bool",
                      "Array"
                    ],
                    "x-ms-enum": {
                      "name": "VariableType",
                      "modelAsString": true
                    }
                  },
                  "defaultValue": {
                    "type": "object",
                    "description": "Default value of variable."
                  }
                },
                "required": [
                  "type"
                ]
              }
            },
            "concurrency": {
              "type": "integer",
              "minimum": 1,
              "description": "The max number of concurrent runs for the pipeline."
            },
            "annotations": {
              "description": "List of tags that can be used for describing the Pipeline.",
              "type": "array",
              "items": {
                "type": "object"
              },
              "x-ms-identifiers": []
            },
            "runDimensions": {
              "description": "Dimensions emitted by Pipeline.",
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "x-ms-format": "dfe-string",
                "description": "Type: string (or Expression with resultType string)."
              }
            },
            "folder": {
              "description": "The folder that this Pipeline is in. If not specified, Pipeline will appear at the root level.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the folder that this Pipeline is in.",
                  "type": "string"
                }
              }
            },
            "policy": {
              "description": "Pipeline Policy.",
              "type": "object",
              "properties": {
                "elapsedTimeMetric": {
                  "description": "Pipeline ElapsedTime Metric Policy.",
                  "type": "object",
                  "properties": {
                    "duration": {
                      "description": "TimeSpan value, after which an Azure Monitoring Metric is fired.",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "additionalProperties": {
        "type": "object"
      },
      "required": [
        "properties"
      ]
    },
    "PipelineReference": {
      "description": "Pipeline reference type.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Pipeline reference type.",
          "enum": [
            "PipelineReference"
          ]
        },
        "referenceName": {
          "type": "string",
          "description": "Reference pipeline name."
        },
        "name": {
          "type": "string",
          "description": "Reference name."
        }
      },
      "required": [
        "type",
        "referenceName"
      ]
    },
    "TriggerPipelineReference": {
      "description": "Pipeline that needs to be triggered with the given parameters.",
      "properties": {
        "pipelineReference": {
          "description": "Pipeline reference.",
          "properties": {
            "type": {
              "type": "string",
              "description": "Pipeline reference type.",
              "enum": [
                "PipelineReference"
              ]
            },
            "referenceName": {
              "type": "string",
              "description": "Reference pipeline name."
            },
            "name": {
              "type": "string",
              "description": "Reference name."
            }
          },
          "required": [
            "type",
            "referenceName"
          ]
        },
        "parameters": {
          "description": "An object mapping parameter names to argument values.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "TriggerResource": {
      "description": "Trigger resource type.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The resource type.",
          "readOnly": true
        },
        "etag": {
          "type": "string",
          "description": "Etag identifies change in the resource.",
          "readOnly": true
        },
        "properties": {
          "description": "Properties of the trigger.",
          "type": "object",
          "discriminator": "type",
          "properties": {
            "type": {
              "type": "string",
              "description": "Trigger type."
            },
            "description": {
              "description": "Trigger description.",
              "type": "string"
            },
            "runtimeState": {
              "description": "Indicates if trigger is running or not. Updated when Start/Stop APIs are called on the Trigger.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Started",
                "Stopped",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "TriggerRuntimeState",
                "modelAsString": true
              }
            },
            "annotations": {
              "description": "List of tags that can be used for describing the trigger.",
              "type": "array",
              "items": {
                "type": "object"
              },
              "x-ms-identifiers": []
            }
          },
          "additionalProperties": {
            "type": "object"
          },
          "required": [
            "type"
          ]
        }
      },
      "required": [
        "properties"
      ]
    },
    "GlobalParameterResource": {
      "description": "Global parameters resource type.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The resource type.",
          "readOnly": true
        },
        "etag": {
          "type": "string",
          "description": "Etag identifies change in the resource.",
          "readOnly": true
        },
        "properties": {
          "description": "Properties of the global parameter.",
          "type": "object",
          "properties": {},
          "additionalProperties": {
            "description": "Definition of a single parameter for an entity.",
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Global Parameter type.",
                "enum": [
                  "Object",
                  "String",
                  "Int",
                  "Float",
                  "Bool",
                  "Array"
                ],
                "x-ms-enum": {
                  "name": "GlobalParameterType",
                  "modelAsString": true
                }
              },
              "value": {
                "type": "object",
                "description": "Value of parameter."
              }
            },
            "required": [
              "type",
              "value"
            ]
          }
        }
      },
      "required": [
        "properties"
      ]
    },
    "Factory": {
      "description": "Factory resource type.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The resource type.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "The resource location.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The resource tags."
        },
        "eTag": {
          "type": "string",
          "description": "Etag identifies change in the resource.",
          "readOnly": true
        },
        "identity": {
          "description": "Managed service identity of the factory.",
          "properties": {
            "type": {
              "type": "string",
              "description": "The identity type.",
              "enum": [
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "FactoryIdentityType",
                "modelAsString": true
              }
            },
            "principalId": {
              "type": "string",
              "format": "uuid",
              "readOnly": true,
              "description": "The principal id of the identity."
            },
            "tenantId": {
              "type": "string",
              "format": "uuid",
              "readOnly": true,
              "description": "The client tenant id of the identity."
            },
            "userAssignedIdentities": {
              "description": "List of user assigned identities for the factory.",
              "type": "object",
              "additionalProperties": {
                "description": "Definition of a single user assigned identity for a factory.",
                "type": "object",
                "properties": {}
              }
            }
          },
          "required": [
            "type"
          ]
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of the factory.",
          "properties": {
            "provisioningState": {
              "description": "Factory provisioning state, example Succeeded.",
              "type": "string",
              "readOnly": true
            },
            "createTime": {
              "description": "Time the factory was created in ISO8601 format.",
              "type": "string",
              "readOnly": true,
              "format": "date-time"
            },
            "version": {
              "description": "Version of the factory.",
              "type": "string",
              "readOnly": true
            },
            "purviewConfiguration": {
              "description": "Purview information of the factory.",
              "type": "object",
              "properties": {
                "purviewResourceId": {
                  "description": "Purview resource id.",
                  "type": "string"
                }
              }
            },
            "repoConfiguration": {
              "description": "Git repo information of the factory.",
              "type": "object",
              "discriminator": "type",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Type of repo configuration."
                },
                "accountName": {
                  "description": "Account name.",
                  "type": "string"
                },
                "repositoryName": {
                  "description": "Repository name.",
                  "type": "string"
                },
                "collaborationBranch": {
                  "description": "Collaboration branch.",
                  "type": "string"
                },
                "rootFolder": {
                  "description": "Root folder.",
                  "type": "string"
                },
                "lastCommitId": {
                  "description": "Last commit id.",
                  "type": "string"
                },
                "disablePublish": {
                  "description": "Disable manual publish operation in ADF studio to favor automated publish.",
                  "type": "boolean"
                }
              },
              "required": [
                "type",
                "accountName",
                "repositoryName",
                "collaborationBranch",
                "rootFolder"
              ]
            },
            "globalParameters": {
              "description": "List of parameters for factory.",
              "type": "object",
              "additionalProperties": {
                "description": "Definition of a single parameter for an entity.",
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Global Parameter type.",
                    "enum": [
                      "Object",
                      "String",
                      "Int",
                      "Float",
                      "Bool",
                      "Array"
                    ],
                    "x-ms-enum": {
                      "name": "GlobalParameterType",
                      "modelAsString": true
                    }
                  },
                  "value": {
                    "type": "object",
                    "description": "Value of parameter."
                  }
                },
                "required": [
                  "type",
                  "value"
                ]
              }
            },
            "encryption": {
              "description": "Properties to enable Customer Managed Key for the factory.",
              "properties": {
                "keyName": {
                  "type": "string",
                  "description": "The name of the key in Azure Key Vault to use as Customer Managed Key."
                },
                "vaultBaseUrl": {
                  "type": "string",
                  "description": "The url of the Azure Key Vault used for CMK."
                },
                "keyVersion": {
                  "type": "string",
                  "description": "The version of the key used for CMK. If not provided, latest version will be used."
                },
                "identity": {
                  "description": "User assigned identity to use to authenticate to customer's key vault. If not provided Managed Service Identity will be used.",
                  "properties": {
                    "userAssignedIdentity": {
                      "type": "string",
                      "description": "The resource id of the user assigned identity to authenticate to customer's key vault."
                    }
                  }
                }
              },
              "required": [
                "keyName",
                "vaultBaseUrl"
              ]
            },
            "publicNetworkAccess": {
              "description": "Whether or not public network access is allowed for the data factory.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "PublicNetworkAccess",
                "modelAsString": true
              }
            }
          }
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "FactoryUpdateParameters": {
      "description": "Parameters for updating a factory resource.",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The resource tags."
        },
        "identity": {
          "description": "Managed service identity of the factory.",
          "properties": {
            "type": {
              "type": "string",
              "description": "The identity type.",
              "enum": [
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "FactoryIdentityType",
                "modelAsString": true
              }
            },
            "principalId": {
              "type": "string",
              "format": "uuid",
              "readOnly": true,
              "description": "The principal id of the identity."
            },
            "tenantId": {
              "type": "string",
              "format": "uuid",
              "readOnly": true,
              "description": "The client tenant id of the identity."
            },
            "userAssignedIdentities": {
              "description": "List of user assigned identities for the factory.",
              "type": "object",
              "additionalProperties": {
                "description": "Definition of a single user assigned identity for a factory.",
                "type": "object",
                "properties": {}
              }
            }
          },
          "required": [
            "type"
          ]
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of update the factory.",
          "type": "object",
          "properties": {
            "publicNetworkAccess": {
              "description": "Whether or not public network access is allowed for the data factory.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "PublicNetworkAccess",
                "modelAsString": true
              }
            }
          }
        }
      }
    },
    "FactoryIdentity": {
      "description": "Identity properties of the factory resource.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned",
            "UserAssigned",
            "SystemAssigned,UserAssigned"
          ],
          "x-ms-enum": {
            "name": "FactoryIdentityType",
            "modelAsString": true
          }
        },
        "principalId": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "description": "The principal id of the identity."
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "description": "The client tenant id of the identity."
        },
        "userAssignedIdentities": {
          "description": "List of user assigned identities for the factory.",
          "type": "object",
          "additionalProperties": {
            "description": "Definition of a single user assigned identity for a factory.",
            "type": "object",
            "properties": {}
          }
        }
      },
      "required": [
        "type"
      ]
    },
    "UserAssignedIdentitiesDefinitionSpecification": {
      "description": "Definition of all user assigned identities for a factory.",
      "type": "object",
      "additionalProperties": {
        "description": "Definition of a single user assigned identity for a factory.",
        "type": "object",
        "properties": {}
      }
    },
    "UserAssignedIdentitySpecification": {
      "description": "Definition of a single user assigned identity for a factory.",
      "type": "object",
      "properties": {}
    },
    "DatasetReference": {
      "description": "Dataset reference type.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Dataset reference type.",
          "enum": [
            "DatasetReference"
          ]
        },
        "referenceName": {
          "type": "string",
          "description": "Reference dataset name."
        },
        "parameters": {
          "description": "An object mapping parameter names to argument values.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      },
      "required": [
        "type",
        "referenceName"
      ]
    },
    "DatasetResource": {
      "description": "Dataset resource type.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The resource type.",
          "readOnly": true
        },
        "etag": {
          "type": "string",
          "description": "Etag identifies change in the resource.",
          "readOnly": true
        },
        "properties": {
          "description": "Dataset properties.",
          "type": "object",
          "discriminator": "type",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of dataset."
            },
            "description": {
              "description": "Dataset description.",
              "type": "string"
            },
            "structure": {
              "type": "object",
              "x-ms-format": "dfe-list-generic",
              "x-ms-format-element-type": "DatasetDataElement",
              "description": "Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement."
            },
            "schema": {
              "type": "object",
              "x-ms-format": "dfe-list-generic",
              "x-ms-format-element-type": "DatasetSchemaDataElement",
              "description": "Columns that define the physical type schema of the dataset. Type: array (or Expression with resultType array), itemType: DatasetSchemaDataElement."
            },
            "linkedServiceName": {
              "description": "Linked service reference.",
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Linked service reference type.",
                  "enum": [
                    "LinkedServiceReference"
                  ],
                  "x-ms-enum": {
                    "name": "Type",
                    "modelAsString": true
                  }
                },
                "referenceName": {
                  "type": "string",
                  "description": "Reference LinkedService name."
                },
                "parameters": {
                  "description": "Arguments for LinkedService.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              },
              "required": [
                "type",
                "referenceName"
              ]
            },
            "parameters": {
              "description": "Parameters for dataset.",
              "type": "object",
              "additionalProperties": {
                "description": "Definition of a single parameter for an entity.",
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Parameter type.",
                    "enum": [
                      "Object",
                      "String",
                      "Int",
                      "Float",
                      "Bool",
                      "Array",
                      "SecureString"
                    ],
                    "x-ms-enum": {
                      "name": "ParameterType",
                      "modelAsString": true
                    }
                  },
                  "defaultValue": {
                    "type": "object",
                    "description": "Default value of parameter."
                  }
                },
                "required": [
                  "type"
                ]
              }
            },
            "annotations": {
              "description": "List of tags that can be used for describing the Dataset.",
              "type": "array",
              "items": {
                "type": "object"
              },
              "x-ms-identifiers": []
            },
            "folder": {
              "description": "The folder that this Dataset is in. If not specified, Dataset will appear at the root level.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the folder that this Dataset is in.",
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": {
            "type": "object"
          },
          "required": [
            "type",
            "linkedServiceName"
          ]
        }
      },
      "required": [
        "properties"
      ]
    },
    "DatasetDebugResource": {
      "description": "Dataset debug resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The resource name."
        },
        "properties": {
          "description": "Dataset properties.",
          "type": "object",
          "discriminator": "type",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of dataset."
            },
            "description": {
              "description": "Dataset description.",
              "type": "string"
            },
            "structure": {
              "type": "object",
              "x-ms-format": "dfe-list-generic",
              "x-ms-format-element-type": "DatasetDataElement",
              "description": "Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement."
            },
            "schema": {
              "type": "object",
              "x-ms-format": "dfe-list-generic",
              "x-ms-format-element-type": "DatasetSchemaDataElement",
              "description": "Columns that define the physical type schema of the dataset. Type: array (or Expression with resultType array), itemType: DatasetSchemaDataElement."
            },
            "linkedServiceName": {
              "description": "Linked service reference.",
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Linked service reference type.",
                  "enum": [
                    "LinkedServiceReference"
                  ],
                  "x-ms-enum": {
                    "name": "Type",
                    "modelAsString": true
                  }
                },
                "referenceName": {
                  "type": "string",
                  "description": "Reference LinkedService name."
                },
                "parameters": {
                  "description": "Arguments for LinkedService.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              },
              "required": [
                "type",
                "referenceName"
              ]
            },
            "parameters": {
              "description": "Parameters for dataset.",
              "type": "object",
              "additionalProperties": {
                "description": "Definition of a single parameter for an entity.",
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Parameter type.",
                    "enum": [
                      "Object",
                      "String",
                      "Int",
                      "Float",
                      "Bool",
                      "Array",
                      "SecureString"
                    ],
                    "x-ms-enum": {
                      "name": "ParameterType",
                      "modelAsString": true
                    }
                  },
                  "defaultValue": {
                    "type": "object",
                    "description": "Default value of parameter."
                  }
                },
                "required": [
                  "type"
                ]
              }
            },
            "annotations": {
              "description": "List of tags that can be used for describing the Dataset.",
              "type": "array",
              "items": {
                "type": "object"
              },
              "x-ms-identifiers": []
            },
            "folder": {
              "description": "The folder that this Dataset is in. If not specified, Dataset will appear at the root level.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the folder that this Dataset is in.",
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": {
            "type": "object"
          },
          "required": [
            "type",
            "linkedServiceName"
          ]
        }
      },
      "required": [
        "properties"
      ]
    },
    "LinkedServiceReference": {
      "description": "Linked service reference type.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Linked service reference type.",
          "enum": [
            "LinkedServiceReference"
          ],
          "x-ms-enum": {
            "name": "Type",
            "modelAsString": true
          }
        },
        "referenceName": {
          "type": "string",
          "description": "Reference LinkedService name."
        },
        "parameters": {
          "description": "Arguments for LinkedService.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      },
      "required": [
        "type",
        "referenceName"
      ]
    },
    "LinkedServiceResource": {
      "description": "Linked service resource type.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The resource type.",
          "readOnly": true
        },
        "etag": {
          "type": "string",
          "description": "Etag identifies change in the resource.",
          "readOnly": true
        },
        "properties": {
          "description": "Properties of linked service.",
          "type": "object",
          "discriminator": "type",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of linked service."
            },
            "version": {
              "type": "string",
              "description": "Version of the linked service."
            },
            "connectVia": {
              "description": "The integration runtime reference.",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Type of integration runtime.",
                  "enum": [
                    "IntegrationRuntimeReference"
                  ]
                },
                "referenceName": {
                  "type": "string",
                  "description": "Reference integration runtime name."
                },
                "parameters": {
                  "description": "Arguments for integration runtime.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              },
              "required": [
                "type",
                "referenceName"
              ]
            },
            "description": {
              "description": "Linked service description.",
              "type": "string"
            },
            "parameters": {
              "description": "Parameters for linked service.",
              "type": "object",
              "additionalProperties": {
                "description": "Definition of a single parameter for an entity.",
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Parameter type.",
                    "enum": [
                      "Object",
                      "String",
                      "Int",
                      "Float",
                      "Bool",
                      "Array",
                      "SecureString"
                    ],
                    "x-ms-enum": {
                      "name": "ParameterType",
                      "modelAsString": true
                    }
                  },
                  "defaultValue": {
                    "type": "object",
                    "description": "Default value of parameter."
                  }
                },
                "required": [
                  "type"
                ]
              }
            },
            "annotations": {
              "description": "List of tags that can be used for describing the linked service.",
              "type": "array",
              "items": {
                "type": "object"
              },
              "x-ms-identifiers": []
            }
          },
          "additionalProperties": {
            "type": "object"
          },
          "required": [
            "type"
          ]
        }
      },
      "required": [
        "properties"
      ]
    },
    "LinkedServiceDebugResource": {
      "description": "Linked service debug resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The resource name."
        },
        "properties": {
          "description": "Properties of linked service.",
          "type": "object",
          "discriminator": "type",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of linked service."
            },
            "version": {
              "type": "string",
              "description": "Version of the linked service."
            },
            "connectVia": {
              "description": "The integration runtime reference.",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Type of integration runtime.",
                  "enum": [
                    "IntegrationRuntimeReference"
                  ]
                },
                "referenceName": {
                  "type": "string",
                  "description": "Reference integration runtime name."
                },
                "parameters": {
                  "description": "Arguments for integration runtime.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              },
              "required": [
                "type",
                "referenceName"
              ]
            },
            "description": {
              "description": "Linked service description.",
              "type": "string"
            },
            "parameters": {
              "description": "Parameters for linked service.",
              "type": "object",
              "additionalProperties": {
                "description": "Definition of a single parameter for an entity.",
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Parameter type.",
                    "enum": [
                      "Object",
                      "String",
                      "Int",
                      "Float",
                      "Bool",
                      "Array",
                      "SecureString"
                    ],
                    "x-ms-enum": {
                      "name": "ParameterType",
                      "modelAsString": true
                    }
                  },
                  "defaultValue": {
                    "type": "object",
                    "description": "Default value of parameter."
                  }
                },
                "required": [
                  "type"
                ]
              }
            },
            "annotations": {
              "description": "List of tags that can be used for describing the linked service.",
              "type": "array",
              "items": {
                "type": "object"
              },
              "x-ms-identifiers": []
            }
          },
          "additionalProperties": {
            "type": "object"
          },
          "required": [
            "type"
          ]
        }
      },
      "required": [
        "properties"
      ]
    },
    "ChangeDataCaptureResource": {
      "description": "Change data capture resource type.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The resource type.",
          "readOnly": true
        },
        "etag": {
          "type": "string",
          "description": "Etag identifies change in the resource.",
          "readOnly": true
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of the change data capture.",
          "type": "object",
          "properties": {
            "folder": {
              "description": "The folder that this CDC is in. If not specified, CDC will appear at the root level.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the folder that this CDC is in.",
                  "type": "string"
                }
              }
            },
            "description": {
              "description": "The description of the change data capture.",
              "type": "string"
            },
            "sourceConnectionsInfo": {
              "description": "List of sources connections that can be used as sources in the CDC.",
              "type": "array",
              "items": {
                "type": "object",
                "description": "A object which contains list of tables and connection details for a source connection.",
                "properties": {
                  "sourceEntities": {
                    "description": "List of source tables for a source connection.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "CDC table details.",
                      "properties": {
                        "name": {
                          "description": "Name of the table.",
                          "type": "string"
                        },
                        "properties": {
                          "description": "Table properties.",
                          "type": "object",
                          "x-ms-client-flatten": true,
                          "properties": {
                            "schema": {
                              "description": "List of columns for the source table.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Schema of a CDC table in terms of column names and their corresponding data types.",
                                "properties": {
                                  "name": {
                                    "description": "Name of the column.",
                                    "type": "string"
                                  },
                                  "dataType": {
                                    "description": "Data type of the column.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "dslConnectorProperties": {
                              "description": "List of name/value pairs for connection properties.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Connector properties of a CDC table in terms of name / value pairs.",
                                "properties": {
                                  "name": {
                                    "description": "Name of the property.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Value of the property.",
                                    "type": "object"
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            }
                          }
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "name"
                    ]
                  },
                  "connection": {
                    "type": "object",
                    "description": "Source connection details.",
                    "properties": {
                      "linkedService": {
                        "description": "Linked service reference.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Linked service reference type.",
                            "enum": [
                              "LinkedServiceReference"
                            ],
                            "x-ms-enum": {
                              "name": "Type",
                              "modelAsString": true
                            }
                          },
                          "referenceName": {
                            "type": "string",
                            "description": "Reference LinkedService name."
                          },
                          "parameters": {
                            "description": "Arguments for LinkedService.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "object"
                            }
                          }
                        },
                        "required": [
                          "type",
                          "referenceName"
                        ]
                      },
                      "linkedServiceType": {
                        "description": "Type of the linked service e.g.: AzureBlobFS.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type of connection via linked service or dataset.",
                        "type": "string",
                        "enum": [
                          "linkedservicetype"
                        ],
                        "x-ms-enum": {
                          "name": "ConnectionType",
                          "modelAsString": true
                        }
                      },
                      "isInlineDataset": {
                        "description": "A boolean indicating whether linked service is of type inline dataset. Currently only inline datasets are supported.",
                        "type": "boolean"
                      },
                      "commonDslConnectorProperties": {
                        "description": "List of name/value pairs for connection properties.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Connector properties of a CDC table in terms of name / value pairs.",
                          "properties": {
                            "name": {
                              "description": "Name of the property.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Value of the property.",
                              "type": "object"
                            }
                          }
                        },
                        "x-ms-identifiers": []
                      }
                    },
                    "required": [
                      "type"
                    ]
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "targetConnectionsInfo": {
              "description": "List of target connections that can be used as sources in the CDC.",
              "type": "array",
              "items": {
                "type": "object",
                "description": "A object which contains list of tables and connection details for a target connection.",
                "properties": {
                  "targetEntities": {
                    "description": "List of source tables for a target connection.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "CDC table details.",
                      "properties": {
                        "name": {
                          "description": "Name of the table.",
                          "type": "string"
                        },
                        "properties": {
                          "description": "Table properties.",
                          "type": "object",
                          "x-ms-client-flatten": true,
                          "properties": {
                            "schema": {
                              "description": "List of columns for the source table.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Schema of a CDC table in terms of column names and their corresponding data types.",
                                "properties": {
                                  "name": {
                                    "description": "Name of the column.",
                                    "type": "string"
                                  },
                                  "dataType": {
                                    "description": "Data type of the column.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "dslConnectorProperties": {
                              "description": "List of name/value pairs for connection properties.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Connector properties of a CDC table in terms of name / value pairs.",
                                "properties": {
                                  "name": {
                                    "description": "Name of the property.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Value of the property.",
                                    "type": "object"
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            }
                          }
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "name"
                    ]
                  },
                  "connection": {
                    "type": "object",
                    "description": "Source connection details.",
                    "properties": {
                      "linkedService": {
                        "description": "Linked service reference.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Linked service reference type.",
                            "enum": [
                              "LinkedServiceReference"
                            ],
                            "x-ms-enum": {
                              "name": "Type",
                              "modelAsString": true
                            }
                          },
                          "referenceName": {
                            "type": "string",
                            "description": "Reference LinkedService name."
                          },
                          "parameters": {
                            "description": "Arguments for LinkedService.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "object"
                            }
                          }
                        },
                        "required": [
                          "type",
                          "referenceName"
                        ]
                      },
                      "linkedServiceType": {
                        "description": "Type of the linked service e.g.: AzureBlobFS.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type of connection via linked service or dataset.",
                        "type": "string",
                        "enum": [
                          "linkedservicetype"
                        ],
                        "x-ms-enum": {
                          "name": "ConnectionType",
                          "modelAsString": true
                        }
                      },
                      "isInlineDataset": {
                        "description": "A boolean indicating whether linked service is of type inline dataset. Currently only inline datasets are supported.",
                        "type": "boolean"
                      },
                      "commonDslConnectorProperties": {
                        "description": "List of name/value pairs for connection properties.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Connector properties of a CDC table in terms of name / value pairs.",
                          "properties": {
                            "name": {
                              "description": "Name of the property.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Value of the property.",
                              "type": "object"
                            }
                          }
                        },
                        "x-ms-identifiers": []
                      }
                    },
                    "required": [
                      "type"
                    ]
                  },
                  "dataMapperMappings": {
                    "description": "List of table mappings.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "Source and target table mapping details.",
                      "properties": {
                        "targetEntityName": {
                          "description": "Name of the target table",
                          "type": "string"
                        },
                        "sourceEntityName": {
                          "description": "Name of the source table",
                          "type": "string"
                        },
                        "sourceConnectionReference": {
                          "description": "The connection reference for the source connection.",
                          "type": "object",
                          "properties": {
                            "connectionName": {
                              "description": "Name of the connection",
                              "type": "string"
                            },
                            "type": {
                              "description": "Type of connection via linked service or dataset.",
                              "type": "string",
                              "enum": [
                                "linkedservicetype"
                              ],
                              "x-ms-enum": {
                                "name": "ConnectionType",
                                "modelAsString": true
                              }
                            }
                          }
                        },
                        "attributeMappingInfo": {
                          "description": "This holds the user provided attribute mapping information.",
                          "type": "object",
                          "properties": {
                            "attributeMappings": {
                              "description": "List of attribute mappings.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Source and target column mapping details.",
                                "properties": {
                                  "name": {
                                    "description": "Name of the target column.",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "Type of the CDC attribute mapping. Note: 'Advanced' mapping type is also saved as 'Derived'.",
                                    "type": "string",
                                    "enum": [
                                      "Direct",
                                      "Derived",
                                      "Aggregate"
                                    ],
                                    "x-ms-enum": {
                                      "name": "MappingType",
                                      "modelAsString": true
                                    }
                                  },
                                  "functionName": {
                                    "description": "Name of the function used for 'Aggregate' and 'Derived' (except 'Advanced') type mapping.",
                                    "type": "string"
                                  },
                                  "expression": {
                                    "description": "Expression used for 'Aggregate' and 'Derived' type mapping.",
                                    "type": "string"
                                  },
                                  "attributeReference": {
                                    "description": "Reference of the source column used in the mapping. It is used for 'Direct' mapping type only.",
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "description": "Name of the column.",
                                        "type": "string"
                                      },
                                      "entity": {
                                        "description": "Name of the table.",
                                        "type": "string"
                                      },
                                      "entityConnectionReference": {
                                        "description": "The connection reference for the connection.",
                                        "type": "object",
                                        "properties": {
                                          "connectionName": {
                                            "description": "Name of the connection",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Type of connection via linked service or dataset.",
                                            "type": "string",
                                            "enum": [
                                              "linkedservicetype"
                                            ],
                                            "x-ms-enum": {
                                              "name": "ConnectionType",
                                              "modelAsString": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "attributeReferences": {
                                    "description": "List of references for source columns. It is used for 'Derived' and 'Aggregate' type mappings only.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "description": "Attribute reference details for the referred column.",
                                      "properties": {
                                        "name": {
                                          "description": "Name of the column.",
                                          "type": "string"
                                        },
                                        "entity": {
                                          "description": "Name of the table.",
                                          "type": "string"
                                        },
                                        "entityConnectionReference": {
                                          "description": "The connection reference for the connection.",
                                          "type": "object",
                                          "properties": {
                                            "connectionName": {
                                              "description": "Name of the connection",
                                              "type": "string"
                                            },
                                            "type": {
                                              "description": "Type of connection via linked service or dataset.",
                                              "type": "string",
                                              "enum": [
                                                "linkedservicetype"
                                              ],
                                              "x-ms-enum": {
                                                "name": "ConnectionType",
                                                "modelAsString": true
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "x-ms-identifiers": [
                                      "name"
                                    ]
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            }
                          }
                        },
                        "sourceDenormalizeInfo": {
                          "description": "This holds the source denormalization information used while joining multiple sources.",
                          "type": "object"
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "targetEntityName",
                      "sourceEntityName"
                    ]
                  },
                  "relationships": {
                    "description": "List of relationship info among the tables.",
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "x-ms-identifiers": []
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "policy": {
              "description": "CDC policy",
              "type": "object",
              "properties": {
                "mode": {
                  "description": "Mode of running the CDC: batch vs continuous.",
                  "type": "string"
                },
                "recurrence": {
                  "description": "Defines the frequency and interval for running the CDC for batch mode.",
                  "type": "object",
                  "properties": {
                    "frequency": {
                      "description": "Frequency of period in terms of 'Hour', 'Minute' or 'Second'.",
                      "type": "string",
                      "enum": [
                        "Hour",
                        "Minute",
                        "Second"
                      ],
                      "x-ms-enum": {
                        "name": "FrequencyType",
                        "modelAsString": true
                      }
                    },
                    "interval": {
                      "description": "Actual interval value as per chosen frequency.",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            },
            "allowVNetOverride": {
              "description": "A boolean to determine if the vnet configuration needs to be overwritten.",
              "type": "boolean"
            },
            "status": {
              "description": "Status of the CDC as to if it is running or stopped.",
              "type": "string"
            }
          },
          "required": [
            "sourceConnectionsInfo",
            "targetConnectionsInfo",
            "policy"
          ]
        }
      },
      "additionalProperties": {
        "type": "object"
      },
      "required": [
        "properties"
      ]
    },
    "TriggerFilterParameters": {
      "description": "Query parameters for triggers.",
      "type": "object",
      "properties": {
        "continuationToken": {
          "description": "The continuation token for getting the next page of results. Null for first page.",
          "type": "string"
        },
        "parentTriggerName": {
          "description": "The name of the parent TumblingWindowTrigger to get the child rerun triggers",
          "type": "string"
        }
      }
    },
    "RunFilterParameters": {
      "description": "Query parameters for listing runs.",
      "type": "object",
      "properties": {
        "continuationToken": {
          "description": "The continuation token for getting the next page of results. Null for first page.",
          "type": "string"
        },
        "lastUpdatedAfter": {
          "description": "The time at or after which the run event was updated in 'ISO 8601' format.",
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedBefore": {
          "description": "The time at or before which the run event was updated in 'ISO 8601' format.",
          "type": "string",
          "format": "date-time"
        },
        "filters": {
          "type": "array",
          "description": "List of filters.",
          "items": {
            "description": "Query filter option for listing runs.",
            "type": "object",
            "properties": {
              "operand": {
                "description": "Parameter name to be used for filter. The allowed operands to query pipeline runs are PipelineName, RunStart, RunEnd and Status; to query activity runs are ActivityName, ActivityRunStart, ActivityRunEnd, ActivityType and Status, and to query trigger runs are TriggerName, TriggerRunTimestamp and Status.",
                "type": "string",
                "enum": [
                  "PipelineName",
                  "Status",
                  "RunStart",
                  "RunEnd",
                  "ActivityName",
                  "ActivityRunStart",
                  "ActivityRunEnd",
                  "ActivityType",
                  "TriggerName",
                  "TriggerRunTimestamp",
                  "RunGroupId",
                  "LatestOnly"
                ],
                "x-ms-enum": {
                  "name": "RunQueryFilterOperand",
                  "modelAsString": true
                }
              },
              "operator": {
                "description": "Operator to be used for filter.",
                "type": "string",
                "enum": [
                  "Equals",
                  "NotEquals",
                  "In",
                  "NotIn"
                ],
                "x-ms-enum": {
                  "name": "RunQueryFilterOperator",
                  "modelAsString": true
                }
              },
              "values": {
                "type": "array",
                "description": "List of filter values.",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "operand",
              "operator",
              "values"
            ]
          },
          "x-ms-identifiers": []
        },
        "orderBy": {
          "type": "array",
          "description": "List of OrderBy option.",
          "items": {
            "description": "An object to provide order by options for listing runs.",
            "type": "object",
            "properties": {
              "orderBy": {
                "description": "Parameter name to be used for order by. The allowed parameters to order by for pipeline runs are PipelineName, RunStart, RunEnd and Status; for activity runs are ActivityName, ActivityRunStart, ActivityRunEnd and Status; for trigger runs are TriggerName, TriggerRunTimestamp and Status.",
                "type": "string",
                "enum": [
                  "RunStart",
                  "RunEnd",
                  "PipelineName",
                  "Status",
                  "ActivityName",
                  "ActivityRunStart",
                  "ActivityRunEnd",
                  "TriggerName",
                  "TriggerRunTimestamp"
                ],
                "x-ms-enum": {
                  "name": "RunQueryOrderByField",
                  "modelAsString": true
                }
              },
              "order": {
                "description": "Sorting order of the parameter.",
                "type": "string",
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "x-ms-enum": {
                  "name": "RunQueryOrder",
                  "modelAsString": true
                }
              }
            },
            "required": [
              "orderBy",
              "order"
            ]
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "lastUpdatedAfter",
        "lastUpdatedBefore"
      ]
    },
    "RunQueryFilter": {
      "description": "Query filter option for listing runs.",
      "type": "object",
      "properties": {
        "operand": {
          "description": "Parameter name to be used for filter. The allowed operands to query pipeline runs are PipelineName, RunStart, RunEnd and Status; to query activity runs are ActivityName, ActivityRunStart, ActivityRunEnd, ActivityType and Status, and to query trigger runs are TriggerName, TriggerRunTimestamp and Status.",
          "type": "string",
          "enum": [
            "PipelineName",
            "Status",
            "RunStart",
            "RunEnd",
            "ActivityName",
            "ActivityRunStart",
            "ActivityRunEnd",
            "ActivityType",
            "TriggerName",
            "TriggerRunTimestamp",
            "RunGroupId",
            "LatestOnly"
          ],
          "x-ms-enum": {
            "name": "RunQueryFilterOperand",
            "modelAsString": true
          }
        },
        "operator": {
          "description": "Operator to be used for filter.",
          "type": "string",
          "enum": [
            "Equals",
            "NotEquals",
            "In",
            "NotIn"
          ],
          "x-ms-enum": {
            "name": "RunQueryFilterOperator",
            "modelAsString": true
          }
        },
        "values": {
          "type": "array",
          "description": "List of filter values.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "operand",
        "operator",
        "values"
      ]
    },
    "RunQueryOrderBy": {
      "description": "An object to provide order by options for listing runs.",
      "type": "object",
      "properties": {
        "orderBy": {
          "description": "Parameter name to be used for order by. The allowed parameters to order by for pipeline runs are PipelineName, RunStart, RunEnd and Status; for activity runs are ActivityName, ActivityRunStart, ActivityRunEnd and Status; for trigger runs are TriggerName, TriggerRunTimestamp and Status.",
          "type": "string",
          "enum": [
            "RunStart",
            "RunEnd",
            "PipelineName",
            "Status",
            "ActivityName",
            "ActivityRunStart",
            "ActivityRunEnd",
            "TriggerName",
            "TriggerRunTimestamp"
          ],
          "x-ms-enum": {
            "name": "RunQueryOrderByField",
            "modelAsString": true
          }
        },
        "order": {
          "description": "Sorting order of the parameter.",
          "type": "string",
          "enum": [
            "ASC",
            "DESC"
          ],
          "x-ms-enum": {
            "name": "RunQueryOrder",
            "modelAsString": true
          }
        }
      },
      "required": [
        "orderBy",
        "order"
      ]
    },
    "PipelineRunsQueryResponse": {
      "description": "A list pipeline runs.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of pipeline runs.",
          "items": {
            "description": "Information about a pipeline run.",
            "type": "object",
            "properties": {
              "runId": {
                "description": "Identifier of a run.",
                "type": "string",
                "readOnly": true
              },
              "runGroupId": {
                "description": "Identifier that correlates all the recovery runs of a pipeline run.",
                "type": "string",
                "readOnly": true
              },
              "isLatest": {
                "description": "Indicates if the recovered pipeline run is the latest in its group.",
                "type": "boolean",
                "readOnly": true
              },
              "pipelineName": {
                "description": "The pipeline name.",
                "type": "string",
                "readOnly": true
              },
              "parameters": {
                "description": "The full or partial list of parameter name, value pair used in the pipeline run.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "readOnly": true
              },
              "runDimensions": {
                "description": "Run dimensions emitted by Pipeline run.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "readOnly": true
              },
              "invokedBy": {
                "description": "Entity that started the pipeline run.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the entity that started the pipeline run.",
                    "type": "string",
                    "readOnly": true
                  },
                  "id": {
                    "description": "The ID of the entity that started the run.",
                    "type": "string",
                    "readOnly": true
                  },
                  "invokedByType": {
                    "description": "The type of the entity that started the run.",
                    "type": "string",
                    "readOnly": true
                  },
                  "pipelineName": {
                    "description": "The name of the pipeline that triggered the run, if any.",
                    "type": "string",
                    "readOnly": true
                  },
                  "pipelineRunId": {
                    "description": "The run id of the pipeline that triggered the run, if any.",
                    "type": "string",
                    "readOnly": true
                  }
                }
              },
              "lastUpdated": {
                "description": "The last updated timestamp for the pipeline run event in ISO8601 format.",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "runStart": {
                "description": "The start time of a pipeline run in ISO8601 format.",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "runEnd": {
                "description": "The end time of a pipeline run in ISO8601 format.",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "durationInMs": {
                "description": "The duration of a pipeline run.",
                "type": "integer",
                "readOnly": true
              },
              "status": {
                "description": "The status of a pipeline run. Possible values: Queued, InProgress, Succeeded, Failed, Canceling, Cancelled",
                "type": "string",
                "readOnly": true
              },
              "message": {
                "description": "The message from a pipeline run.",
                "type": "string",
                "readOnly": true
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          },
          "x-ms-identifiers": [
            "runId"
          ]
        },
        "continuationToken": {
          "description": "The continuation token for getting the next page of results, if any remaining results exist, null otherwise.",
          "type": "string"
        }
      }
    },
    "PipelineRun": {
      "description": "Information about a pipeline run.",
      "type": "object",
      "properties": {
        "runId": {
          "description": "Identifier of a run.",
          "type": "string",
          "readOnly": true
        },
        "runGroupId": {
          "description": "Identifier that correlates all the recovery runs of a pipeline run.",
          "type": "string",
          "readOnly": true
        },
        "isLatest": {
          "description": "Indicates if the recovered pipeline run is the latest in its group.",
          "type": "boolean",
          "readOnly": true
        },
        "pipelineName": {
          "description": "The pipeline name.",
          "type": "string",
          "readOnly": true
        },
        "parameters": {
          "description": "The full or partial list of parameter name, value pair used in the pipeline run.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "runDimensions": {
          "description": "Run dimensions emitted by Pipeline run.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "invokedBy": {
          "description": "Entity that started the pipeline run.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the entity that started the pipeline run.",
              "type": "string",
              "readOnly": true
            },
            "id": {
              "description": "The ID of the entity that started the run.",
              "type": "string",
              "readOnly": true
            },
            "invokedByType": {
              "description": "The type of the entity that started the run.",
              "type": "string",
              "readOnly": true
            },
            "pipelineName": {
              "description": "The name of the pipeline that triggered the run, if any.",
              "type": "string",
              "readOnly": true
            },
            "pipelineRunId": {
              "description": "The run id of the pipeline that triggered the run, if any.",
              "type": "string",
              "readOnly": true
            }
          }
        },
        "lastUpdated": {
          "description": "The last updated timestamp for the pipeline run event in ISO8601 format.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "runStart": {
          "description": "The start time of a pipeline run in ISO8601 format.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "runEnd": {
          "description": "The end time of a pipeline run in ISO8601 format.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "durationInMs": {
          "description": "The duration of a pipeline run.",
          "type": "integer",
          "readOnly": true
        },
        "status": {
          "description": "The status of a pipeline run. Possible values: Queued, InProgress, Succeeded, Failed, Canceling, Cancelled",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "The message from a pipeline run.",
          "type": "string",
          "readOnly": true
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "PipelineRunInvokedBy": {
      "description": "Provides entity name and id that started the pipeline run.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the entity that started the pipeline run.",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "description": "The ID of the entity that started the run.",
          "type": "string",
          "readOnly": true
        },
        "invokedByType": {
          "description": "The type of the entity that started the run.",
          "type": "string",
          "readOnly": true
        },
        "pipelineName": {
          "description": "The name of the pipeline that triggered the run, if any.",
          "type": "string",
          "readOnly": true
        },
        "pipelineRunId": {
          "description": "The run id of the pipeline that triggered the run, if any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ActivityRunsQueryResponse": {
      "description": "A list activity runs.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of activity runs.",
          "items": {
            "description": "Information about an activity run in a pipeline.",
            "type": "object",
            "properties": {
              "pipelineName": {
                "description": "The name of the pipeline.",
                "type": "string",
                "readOnly": true
              },
              "pipelineRunId": {
                "description": "The id of the pipeline run.",
                "type": "string",
                "readOnly": true
              },
              "activityName": {
                "description": "The name of the activity.",
                "type": "string",
                "readOnly": true
              },
              "activityType": {
                "description": "The type of the activity.",
                "type": "string",
                "readOnly": true
              },
              "activityRunId": {
                "description": "The id of the activity run.",
                "type": "string",
                "readOnly": true
              },
              "linkedServiceName": {
                "description": "The name of the compute linked service.",
                "type": "string",
                "readOnly": true
              },
              "status": {
                "description": "The status of the activity run.",
                "type": "string",
                "readOnly": true
              },
              "activityRunStart": {
                "description": "The start time of the activity run in 'ISO 8601' format.",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "activityRunEnd": {
                "description": "The end time of the activity run in 'ISO 8601' format.",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "durationInMs": {
                "description": "The duration of the activity run.",
                "type": "integer",
                "readOnly": true
              },
              "input": {
                "description": "The input for the activity.",
                "type": "object",
                "readOnly": true
              },
              "output": {
                "description": "The output for the activity.",
                "type": "object",
                "readOnly": true
              },
              "error": {
                "description": "The error if any from the activity run.",
                "type": "object",
                "readOnly": true
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          },
          "x-ms-identifiers": [
            "pipelineRunId"
          ]
        },
        "continuationToken": {
          "description": "The continuation token for getting the next page of results, if any remaining results exist, null otherwise.",
          "type": "string"
        }
      }
    },
    "ActivityRun": {
      "description": "Information about an activity run in a pipeline.",
      "type": "object",
      "properties": {
        "pipelineName": {
          "description": "The name of the pipeline.",
          "type": "string",
          "readOnly": true
        },
        "pipelineRunId": {
          "description": "The id of the pipeline run.",
          "type": "string",
          "readOnly": true
        },
        "activityName": {
          "description": "The name of the activity.",
          "type": "string",
          "readOnly": true
        },
        "activityType": {
          "description": "The type of the activity.",
          "type": "string",
          "readOnly": true
        },
        "activityRunId": {
          "description": "The id of the activity run.",
          "type": "string",
          "readOnly": true
        },
        "linkedServiceName": {
          "description": "The name of the compute linked service.",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "The status of the activity run.",
          "type": "string",
          "readOnly": true
        },
        "activityRunStart": {
          "description": "The start time of the activity run in 'ISO 8601' format.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "activityRunEnd": {
          "description": "The end time of the activity run in 'ISO 8601' format.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "durationInMs": {
          "description": "The duration of the activity run.",
          "type": "integer",
          "readOnly": true
        },
        "input": {
          "description": "The input for the activity.",
          "type": "object",
          "readOnly": true
        },
        "output": {
          "description": "The output for the activity.",
          "type": "object",
          "readOnly": true
        },
        "error": {
          "description": "The error if any from the activity run.",
          "type": "object",
          "readOnly": true
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "TriggerRunsQueryResponse": {
      "description": "A list of trigger runs.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of trigger runs.",
          "items": {
            "description": "Trigger runs.",
            "type": "object",
            "properties": {
              "triggerRunId": {
                "type": "string",
                "description": "Trigger run id.",
                "readOnly": true
              },
              "triggerName": {
                "type": "string",
                "description": "Trigger name.",
                "readOnly": true
              },
              "triggerType": {
                "type": "string",
                "description": "Trigger type.",
                "readOnly": true
              },
              "triggerRunTimestamp": {
                "type": "string",
                "format": "date-time",
                "description": "Trigger run start time.",
                "readOnly": true
              },
              "status": {
                "type": "string",
                "enum": [
                  "Succeeded",
                  "Failed",
                  "Inprogress"
                ],
                "x-ms-enum": {
                  "name": "TriggerRunStatus",
                  "modelAsString": true
                },
                "description": "Trigger run status.",
                "readOnly": true
              },
              "message": {
                "type": "string",
                "description": "Trigger error message.",
                "readOnly": true
              },
              "properties": {
                "description": "List of property name and value related to trigger run. Name, value pair depends on type of trigger.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "readOnly": true
              },
              "triggeredPipelines": {
                "description": "List of pipeline name and run Id triggered by the trigger run.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "readOnly": true
              },
              "runDimension": {
                "description": "Run dimension for which trigger was fired.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "readOnly": true
              },
              "dependencyStatus": {
                "description": "Status of the upstream pipelines.",
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                },
                "readOnly": true
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          },
          "x-ms-identifiers": [
            "triggerRunId"
          ]
        },
        "continuationToken": {
          "description": "The continuation token for getting the next page of results, if any remaining results exist, null otherwise.",
          "type": "string"
        }
      }
    },
    "TriggerRun": {
      "description": "Trigger runs.",
      "type": "object",
      "properties": {
        "triggerRunId": {
          "type": "string",
          "description": "Trigger run id.",
          "readOnly": true
        },
        "triggerName": {
          "type": "string",
          "description": "Trigger name.",
          "readOnly": true
        },
        "triggerType": {
          "type": "string",
          "description": "Trigger type.",
          "readOnly": true
        },
        "triggerRunTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Trigger run start time.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Inprogress"
          ],
          "x-ms-enum": {
            "name": "TriggerRunStatus",
            "modelAsString": true
          },
          "description": "Trigger run status.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Trigger error message.",
          "readOnly": true
        },
        "properties": {
          "description": "List of property name and value related to trigger run. Name, value pair depends on type of trigger.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "triggeredPipelines": {
          "description": "List of pipeline name and run Id triggered by the trigger run.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "runDimension": {
          "description": "Run dimension for which trigger was fired.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "dependencyStatus": {
          "description": "Status of the upstream pipelines.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "readOnly": true
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "OperationListResponse": {
      "description": "A list of operations that can be performed by the Data Factory service.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "description": "Azure Data Factory API operation definition.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Operation name: {provider}/{resource}/{operation}",
                "type": "string"
              },
              "origin": {
                "description": "The intended executor of the operation.",
                "type": "string"
              },
              "display": {
                "description": "Metadata associated with the operation.",
                "properties": {
                  "description": {
                    "description": "The description of the operation.",
                    "type": "string"
                  },
                  "provider": {
                    "description": "The name of the provider.",
                    "type": "string"
                  },
                  "resource": {
                    "description": "The name of the resource type on which the operation is performed.",
                    "type": "string"
                  },
                  "operation": {
                    "description": "The type of operation: get, read, delete, etc.",
                    "type": "string"
                  }
                }
              },
              "properties": {
                "description": "Additional details about the operation.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "serviceSpecification": {
                    "description": "Details about a service operation.",
                    "type": "object",
                    "properties": {
                      "logSpecifications": {
                        "description": "Details about operations related to logs.",
                        "type": "array",
                        "items": {
                          "description": "Details about an operation related to logs.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "The name of the log category.",
                              "type": "string"
                            },
                            "displayName": {
                              "description": "Localized display name.",
                              "type": "string"
                            },
                            "blobDuration": {
                              "description": "Blobs created in the customer storage account, per hour.",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      },
                      "metricSpecifications": {
                        "description": "Details about operations related to metrics.",
                        "type": "array",
                        "items": {
                          "description": "Details about an operation related to metrics.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "The name of the metric.",
                              "type": "string"
                            },
                            "displayName": {
                              "description": "Localized display name of the metric.",
                              "type": "string"
                            },
                            "displayDescription": {
                              "description": "The description of the metric.",
                              "type": "string"
                            },
                            "unit": {
                              "description": "The unit that the metric is measured in.",
                              "type": "string"
                            },
                            "aggregationType": {
                              "description": "The type of metric aggregation.",
                              "type": "string"
                            },
                            "enableRegionalMdmAccount": {
                              "description": "Whether or not the service is using regional MDM accounts.",
                              "type": "string"
                            },
                            "sourceMdmAccount": {
                              "description": "The name of the MDM account.",
                              "type": "string"
                            },
                            "sourceMdmNamespace": {
                              "description": "The name of the MDM namespace.",
                              "type": "string"
                            },
                            "availabilities": {
                              "description": "Defines how often data for metrics becomes available.",
                              "type": "array",
                              "items": {
                                "description": "Defines how often data for a metric becomes available.",
                                "type": "object",
                                "properties": {
                                  "timeGrain": {
                                    "description": "The granularity for the metric.",
                                    "type": "string"
                                  },
                                  "blobDuration": {
                                    "description": "Blob created in the customer storage account, per hour.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            },
                            "dimensions": {
                              "description": "Defines the metric dimension.",
                              "type": "array",
                              "items": {
                                "description": "Defines the metric dimension.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "The name of the dimension for the metric.",
                                    "type": "string"
                                  },
                                  "displayName": {
                                    "description": "The display name of the metric dimension.",
                                    "type": "string"
                                  },
                                  "toBeExportedForShoebox": {
                                    "description": "Whether the dimension should be exported to Azure Monitor.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "List of Data Factory operations supported by the Data Factory resource provider.",
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of results, if any remaining results exist."
        }
      }
    },
    "Operation": {
      "description": "Azure Data Factory API operation definition.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}",
          "type": "string"
        },
        "origin": {
          "description": "The intended executor of the operation.",
          "type": "string"
        },
        "display": {
          "description": "Metadata associated with the operation.",
          "properties": {
            "description": {
              "description": "The description of the operation.",
              "type": "string"
            },
            "provider": {
              "description": "The name of the provider.",
              "type": "string"
            },
            "resource": {
              "description": "The name of the resource type on which the operation is performed.",
              "type": "string"
            },
            "operation": {
              "description": "The type of operation: get, read, delete, etc.",
              "type": "string"
            }
          }
        },
        "properties": {
          "description": "Additional details about the operation.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "serviceSpecification": {
              "description": "Details about a service operation.",
              "type": "object",
              "properties": {
                "logSpecifications": {
                  "description": "Details about operations related to logs.",
                  "type": "array",
                  "items": {
                    "description": "Details about an operation related to logs.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the log category.",
                        "type": "string"
                      },
                      "displayName": {
                        "description": "Localized display name.",
                        "type": "string"
                      },
                      "blobDuration": {
                        "description": "Blobs created in the customer storage account, per hour.",
                        "type": "string"
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "metricSpecifications": {
                  "description": "Details about operations related to metrics.",
                  "type": "array",
                  "items": {
                    "description": "Details about an operation related to metrics.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the metric.",
                        "type": "string"
                      },
                      "displayName": {
                        "description": "Localized display name of the metric.",
                        "type": "string"
                      },
                      "displayDescription": {
                        "description": "The description of the metric.",
                        "type": "string"
                      },
                      "unit": {
                        "description": "The unit that the metric is measured in.",
                        "type": "string"
                      },
                      "aggregationType": {
                        "description": "The type of metric aggregation.",
                        "type": "string"
                      },
                      "enableRegionalMdmAccount": {
                        "description": "Whether or not the service is using regional MDM accounts.",
                        "type": "string"
                      },
                      "sourceMdmAccount": {
                        "description": "The name of the MDM account.",
                        "type": "string"
                      },
                      "sourceMdmNamespace": {
                        "description": "The name of the MDM namespace.",
                        "type": "string"
                      },
                      "availabilities": {
                        "description": "Defines how often data for metrics becomes available.",
                        "type": "array",
                        "items": {
                          "description": "Defines how often data for a metric becomes available.",
                          "type": "object",
                          "properties": {
                            "timeGrain": {
                              "description": "The granularity for the metric.",
                              "type": "string"
                            },
                            "blobDuration": {
                              "description": "Blob created in the customer storage account, per hour.",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": []
                      },
                      "dimensions": {
                        "description": "Defines the metric dimension.",
                        "type": "array",
                        "items": {
                          "description": "Defines the metric dimension.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "The name of the dimension for the metric.",
                              "type": "string"
                            },
                            "displayName": {
                              "description": "The display name of the metric dimension.",
                              "type": "string"
                            },
                            "toBeExportedForShoebox": {
                              "description": "Whether the dimension should be exported to Azure Monitor.",
                              "type": "boolean"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "OperationProperties": {
      "description": "Additional details about an operation.",
      "type": "object",
      "x-ms-client-flatten": true,
      "properties": {
        "serviceSpecification": {
          "description": "Details about a service operation.",
          "type": "object",
          "properties": {
            "logSpecifications": {
              "description": "Details about operations related to logs.",
              "type": "array",
              "items": {
                "description": "Details about an operation related to logs.",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The name of the log category.",
                    "type": "string"
                  },
                  "displayName": {
                    "description": "Localized display name.",
                    "type": "string"
                  },
                  "blobDuration": {
                    "description": "Blobs created in the customer storage account, per hour.",
                    "type": "string"
                  }
                }
              },
              "x-ms-identifiers": [
                "name"
              ]
            },
            "metricSpecifications": {
              "description": "Details about operations related to metrics.",
              "type": "array",
              "items": {
                "description": "Details about an operation related to metrics.",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The name of the metric.",
                    "type": "string"
                  },
                  "displayName": {
                    "description": "Localized display name of the metric.",
                    "type": "string"
                  },
                  "displayDescription": {
                    "description": "The description of the metric.",
                    "type": "string"
                  },
                  "unit": {
                    "description": "The unit that the metric is measured in.",
                    "type": "string"
                  },
                  "aggregationType": {
                    "description": "The type of metric aggregation.",
                    "type": "string"
                  },
                  "enableRegionalMdmAccount": {
                    "description": "Whether or not the service is using regional MDM accounts.",
                    "type": "string"
                  },
                  "sourceMdmAccount": {
                    "description": "The name of the MDM account.",
                    "type": "string"
                  },
                  "sourceMdmNamespace": {
                    "description": "The name of the MDM namespace.",
                    "type": "string"
                  },
                  "availabilities": {
                    "description": "Defines how often data for metrics becomes available.",
                    "type": "array",
                    "items": {
                      "description": "Defines how often data for a metric becomes available.",
                      "type": "object",
                      "properties": {
                        "timeGrain": {
                          "description": "The granularity for the metric.",
                          "type": "string"
                        },
                        "blobDuration": {
                          "description": "Blob created in the customer storage account, per hour.",
                          "type": "string"
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "dimensions": {
                    "description": "Defines the metric dimension.",
                    "type": "array",
                    "items": {
                      "description": "Defines the metric dimension.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name of the dimension for the metric.",
                          "type": "string"
                        },
                        "displayName": {
                          "description": "The display name of the metric dimension.",
                          "type": "string"
                        },
                        "toBeExportedForShoebox": {
                          "description": "Whether the dimension should be exported to Azure Monitor.",
                          "type": "boolean"
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "name"
                    ]
                  }
                }
              },
              "x-ms-identifiers": [
                "name"
              ]
            }
          }
        }
      }
    },
    "OperationServiceSpecification": {
      "description": "Details about a service operation.",
      "type": "object",
      "properties": {
        "logSpecifications": {
          "description": "Details about operations related to logs.",
          "type": "array",
          "items": {
            "description": "Details about an operation related to logs.",
            "type": "object",
            "properties": {
              "name": {
                "description": "The name of the log category.",
                "type": "string"
              },
              "displayName": {
                "description": "Localized display name.",
                "type": "string"
              },
              "blobDuration": {
                "description": "Blobs created in the customer storage account, per hour.",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "metricSpecifications": {
          "description": "Details about operations related to metrics.",
          "type": "array",
          "items": {
            "description": "Details about an operation related to metrics.",
            "type": "object",
            "properties": {
              "name": {
                "description": "The name of the metric.",
                "type": "string"
              },
              "displayName": {
                "description": "Localized display name of the metric.",
                "type": "string"
              },
              "displayDescription": {
                "description": "The description of the metric.",
                "type": "string"
              },
              "unit": {
                "description": "The unit that the metric is measured in.",
                "type": "string"
              },
              "aggregationType": {
                "description": "The type of metric aggregation.",
                "type": "string"
              },
              "enableRegionalMdmAccount": {
                "description": "Whether or not the service is using regional MDM accounts.",
                "type": "string"
              },
              "sourceMdmAccount": {
                "description": "The name of the MDM account.",
                "type": "string"
              },
              "sourceMdmNamespace": {
                "description": "The name of the MDM namespace.",
                "type": "string"
              },
              "availabilities": {
                "description": "Defines how often data for metrics becomes available.",
                "type": "array",
                "items": {
                  "description": "Defines how often data for a metric becomes available.",
                  "type": "object",
                  "properties": {
                    "timeGrain": {
                      "description": "The granularity for the metric.",
                      "type": "string"
                    },
                    "blobDuration": {
                      "description": "Blob created in the customer storage account, per hour.",
                      "type": "string"
                    }
                  }
                },
                "x-ms-identifiers": []
              },
              "dimensions": {
                "description": "Defines the metric dimension.",
                "type": "array",
                "items": {
                  "description": "Defines the metric dimension.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The name of the dimension for the metric.",
                      "type": "string"
                    },
                    "displayName": {
                      "description": "The display name of the metric dimension.",
                      "type": "string"
                    },
                    "toBeExportedForShoebox": {
                      "description": "Whether the dimension should be exported to Azure Monitor.",
                      "type": "boolean"
                    }
                  }
                },
                "x-ms-identifiers": [
                  "name"
                ]
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "OperationLogSpecification": {
      "description": "Details about an operation related to logs.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the log category.",
          "type": "string"
        },
        "displayName": {
          "description": "Localized display name.",
          "type": "string"
        },
        "blobDuration": {
          "description": "Blobs created in the customer storage account, per hour.",
          "type": "string"
        }
      }
    },
    "OperationMetricSpecification": {
      "description": "Details about an operation related to metrics.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the metric.",
          "type": "string"
        },
        "displayName": {
          "description": "Localized display name of the metric.",
          "type": "string"
        },
        "displayDescription": {
          "description": "The description of the metric.",
          "type": "string"
        },
        "unit": {
          "description": "The unit that the metric is measured in.",
          "type": "string"
        },
        "aggregationType": {
          "description": "The type of metric aggregation.",
          "type": "string"
        },
        "enableRegionalMdmAccount": {
          "description": "Whether or not the service is using regional MDM accounts.",
          "type": "string"
        },
        "sourceMdmAccount": {
          "description": "The name of the MDM account.",
          "type": "string"
        },
        "sourceMdmNamespace": {
          "description": "The name of the MDM namespace.",
          "type": "string"
        },
        "availabilities": {
          "description": "Defines how often data for metrics becomes available.",
          "type": "array",
          "items": {
            "description": "Defines how often data for a metric becomes available.",
            "type": "object",
            "properties": {
              "timeGrain": {
                "description": "The granularity for the metric.",
                "type": "string"
              },
              "blobDuration": {
                "description": "Blob created in the customer storage account, per hour.",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": []
        },
        "dimensions": {
          "description": "Defines the metric dimension.",
          "type": "array",
          "items": {
            "description": "Defines the metric dimension.",
            "type": "object",
            "properties": {
              "name": {
                "description": "The name of the dimension for the metric.",
                "type": "string"
              },
              "displayName": {
                "description": "The display name of the metric dimension.",
                "type": "string"
              },
              "toBeExportedForShoebox": {
                "description": "Whether the dimension should be exported to Azure Monitor.",
                "type": "boolean"
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "OperationMetricAvailability": {
      "description": "Defines how often data for a metric becomes available.",
      "type": "object",
      "properties": {
        "timeGrain": {
          "description": "The granularity for the metric.",
          "type": "string"
        },
        "blobDuration": {
          "description": "Blob created in the customer storage account, per hour.",
          "type": "string"
        }
      }
    },
    "OperationMetricDimension": {
      "description": "Defines the metric dimension.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the dimension for the metric.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the metric dimension.",
          "type": "string"
        },
        "toBeExportedForShoebox": {
          "description": "Whether the dimension should be exported to Azure Monitor.",
          "type": "boolean"
        }
      }
    },
    "GetSsisObjectMetadataRequest": {
      "type": "object",
      "description": "The request payload of get SSIS object metadata.",
      "properties": {
        "metadataPath": {
          "type": "string",
          "description": "Metadata path."
        }
      }
    },
    "SsisObjectMetadataStatusResponse": {
      "type": "object",
      "description": "The status of the operation.",
      "properties": {
        "status": {
          "type": "string",
          "description": "The status of the operation."
        },
        "name": {
          "type": "string",
          "description": "The operation name."
        },
        "properties": {
          "type": "string",
          "description": "The operation properties."
        },
        "error": {
          "type": "string",
          "description": "The operation error message."
        }
      }
    },
    "ExposureControlBatchRequest": {
      "description": "A list of exposure control features.",
      "type": "object",
      "required": [
        "exposureControlRequests"
      ],
      "properties": {
        "exposureControlRequests": {
          "type": "array",
          "description": "List of exposure control features.",
          "items": {
            "type": "object",
            "description": "The exposure control request.",
            "properties": {
              "featureName": {
                "type": "string",
                "description": "The feature name."
              },
              "featureType": {
                "type": "string",
                "description": "The feature type."
              }
            }
          },
          "x-ms-identifiers": [
            "featureName"
          ]
        }
      }
    },
    "ExposureControlRequest": {
      "type": "object",
      "description": "The exposure control request.",
      "properties": {
        "featureName": {
          "type": "string",
          "description": "The feature name."
        },
        "featureType": {
          "type": "string",
          "description": "The feature type."
        }
      }
    },
    "ExposureControlBatchResponse": {
      "description": "A list of exposure control feature values.",
      "type": "object",
      "required": [
        "exposureControlResponses"
      ],
      "properties": {
        "exposureControlResponses": {
          "type": "array",
          "description": "List of exposure control feature values.",
          "items": {
            "type": "object",
            "description": "The exposure control response.",
            "properties": {
              "featureName": {
                "type": "string",
                "description": "The feature name.",
                "readOnly": true
              },
              "value": {
                "type": "string",
                "description": "The feature value.",
                "readOnly": true
              }
            }
          },
          "x-ms-identifiers": [
            "featureName"
          ]
        }
      }
    },
    "ExposureControlResponse": {
      "type": "object",
      "description": "The exposure control response.",
      "properties": {
        "featureName": {
          "type": "string",
          "description": "The feature name.",
          "readOnly": true
        },
        "value": {
          "type": "string",
          "description": "The feature value.",
          "readOnly": true
        }
      }
    },
    "DataFlowListResponse": {
      "description": "A list of data flow resources.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of data flows.",
          "items": {
            "description": "Data flow resource type.",
            "properties": {
              "id": {
                "type": "string",
                "description": "The resource identifier.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The resource name.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The resource type.",
                "readOnly": true
              },
              "etag": {
                "type": "string",
                "description": "Etag identifies change in the resource.",
                "readOnly": true
              },
              "properties": {
                "description": "Data flow properties.",
                "type": "object",
                "discriminator": "type",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Type of data flow."
                  },
                  "description": {
                    "description": "The description of the data flow.",
                    "type": "string"
                  },
                  "annotations": {
                    "description": "List of tags that can be used for describing the data flow.",
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "x-ms-identifiers": []
                  },
                  "folder": {
                    "description": "The folder that this data flow is in. If not specified, Data flow will appear at the root level.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the folder that this data flow is in.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "ChangeDataCaptureListResponse": {
      "description": "A list of change data capture resources.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "Lists all resources of type change data capture.",
          "items": {
            "description": "Change data capture resource type.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The resource identifier.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The resource name.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The resource type.",
                "readOnly": true
              },
              "etag": {
                "type": "string",
                "description": "Etag identifies change in the resource.",
                "readOnly": true
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Properties of the change data capture.",
                "type": "object",
                "properties": {
                  "folder": {
                    "description": "The folder that this CDC is in. If not specified, CDC will appear at the root level.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the folder that this CDC is in.",
                        "type": "string"
                      }
                    }
                  },
                  "description": {
                    "description": "The description of the change data capture.",
                    "type": "string"
                  },
                  "sourceConnectionsInfo": {
                    "description": "List of sources connections that can be used as sources in the CDC.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A object which contains list of tables and connection details for a source connection.",
                      "properties": {
                        "sourceEntities": {
                          "description": "List of source tables for a source connection.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "CDC table details.",
                            "properties": {
                              "name": {
                                "description": "Name of the table.",
                                "type": "string"
                              },
                              "properties": {
                                "description": "Table properties.",
                                "type": "object",
                                "x-ms-client-flatten": true,
                                "properties": {
                                  "schema": {
                                    "description": "List of columns for the source table.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "description": "Schema of a CDC table in terms of column names and their corresponding data types.",
                                      "properties": {
                                        "name": {
                                          "description": "Name of the column.",
                                          "type": "string"
                                        },
                                        "dataType": {
                                          "description": "Data type of the column.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "x-ms-identifiers": [
                                      "name"
                                    ]
                                  },
                                  "dslConnectorProperties": {
                                    "description": "List of name/value pairs for connection properties.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "description": "Connector properties of a CDC table in terms of name / value pairs.",
                                      "properties": {
                                        "name": {
                                          "description": "Name of the property.",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "Value of the property.",
                                          "type": "object"
                                        }
                                      }
                                    },
                                    "x-ms-identifiers": []
                                  }
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "connection": {
                          "type": "object",
                          "description": "Source connection details.",
                          "properties": {
                            "linkedService": {
                              "description": "Linked service reference.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "Linked service reference type.",
                                  "enum": [
                                    "LinkedServiceReference"
                                  ],
                                  "x-ms-enum": {
                                    "name": "Type",
                                    "modelAsString": true
                                  }
                                },
                                "referenceName": {
                                  "type": "string",
                                  "description": "Reference LinkedService name."
                                },
                                "parameters": {
                                  "description": "Arguments for LinkedService.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "object"
                                  }
                                }
                              },
                              "required": [
                                "type",
                                "referenceName"
                              ]
                            },
                            "linkedServiceType": {
                              "description": "Type of the linked service e.g.: AzureBlobFS.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Type of connection via linked service or dataset.",
                              "type": "string",
                              "enum": [
                                "linkedservicetype"
                              ],
                              "x-ms-enum": {
                                "name": "ConnectionType",
                                "modelAsString": true
                              }
                            },
                            "isInlineDataset": {
                              "description": "A boolean indicating whether linked service is of type inline dataset. Currently only inline datasets are supported.",
                              "type": "boolean"
                            },
                            "commonDslConnectorProperties": {
                              "description": "List of name/value pairs for connection properties.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Connector properties of a CDC table in terms of name / value pairs.",
                                "properties": {
                                  "name": {
                                    "description": "Name of the property.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Value of the property.",
                                    "type": "object"
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            }
                          },
                          "required": [
                            "type"
                          ]
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "targetConnectionsInfo": {
                    "description": "List of target connections that can be used as sources in the CDC.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "A object which contains list of tables and connection details for a target connection.",
                      "properties": {
                        "targetEntities": {
                          "description": "List of source tables for a target connection.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "CDC table details.",
                            "properties": {
                              "name": {
                                "description": "Name of the table.",
                                "type": "string"
                              },
                              "properties": {
                                "description": "Table properties.",
                                "type": "object",
                                "x-ms-client-flatten": true,
                                "properties": {
                                  "schema": {
                                    "description": "List of columns for the source table.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "description": "Schema of a CDC table in terms of column names and their corresponding data types.",
                                      "properties": {
                                        "name": {
                                          "description": "Name of the column.",
                                          "type": "string"
                                        },
                                        "dataType": {
                                          "description": "Data type of the column.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "x-ms-identifiers": [
                                      "name"
                                    ]
                                  },
                                  "dslConnectorProperties": {
                                    "description": "List of name/value pairs for connection properties.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "description": "Connector properties of a CDC table in terms of name / value pairs.",
                                      "properties": {
                                        "name": {
                                          "description": "Name of the property.",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "Value of the property.",
                                          "type": "object"
                                        }
                                      }
                                    },
                                    "x-ms-identifiers": []
                                  }
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "connection": {
                          "type": "object",
                          "description": "Source connection details.",
                          "properties": {
                            "linkedService": {
                              "description": "Linked service reference.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "Linked service reference type.",
                                  "enum": [
                                    "LinkedServiceReference"
                                  ],
                                  "x-ms-enum": {
                                    "name": "Type",
                                    "modelAsString": true
                                  }
                                },
                                "referenceName": {
                                  "type": "string",
                                  "description": "Reference LinkedService name."
                                },
                                "parameters": {
                                  "description": "Arguments for LinkedService.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "object"
                                  }
                                }
                              },
                              "required": [
                                "type",
                                "referenceName"
                              ]
                            },
                            "linkedServiceType": {
                              "description": "Type of the linked service e.g.: AzureBlobFS.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Type of connection via linked service or dataset.",
                              "type": "string",
                              "enum": [
                                "linkedservicetype"
                              ],
                              "x-ms-enum": {
                                "name": "ConnectionType",
                                "modelAsString": true
                              }
                            },
                            "isInlineDataset": {
                              "description": "A boolean indicating whether linked service is of type inline dataset. Currently only inline datasets are supported.",
                              "type": "boolean"
                            },
                            "commonDslConnectorProperties": {
                              "description": "List of name/value pairs for connection properties.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Connector properties of a CDC table in terms of name / value pairs.",
                                "properties": {
                                  "name": {
                                    "description": "Name of the property.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Value of the property.",
                                    "type": "object"
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            }
                          },
                          "required": [
                            "type"
                          ]
                        },
                        "dataMapperMappings": {
                          "description": "List of table mappings.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "Source and target table mapping details.",
                            "properties": {
                              "targetEntityName": {
                                "description": "Name of the target table",
                                "type": "string"
                              },
                              "sourceEntityName": {
                                "description": "Name of the source table",
                                "type": "string"
                              },
                              "sourceConnectionReference": {
                                "description": "The connection reference for the source connection.",
                                "type": "object",
                                "properties": {
                                  "connectionName": {
                                    "description": "Name of the connection",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "Type of connection via linked service or dataset.",
                                    "type": "string",
                                    "enum": [
                                      "linkedservicetype"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ConnectionType",
                                      "modelAsString": true
                                    }
                                  }
                                }
                              },
                              "attributeMappingInfo": {
                                "description": "This holds the user provided attribute mapping information.",
                                "type": "object",
                                "properties": {
                                  "attributeMappings": {
                                    "description": "List of attribute mappings.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "description": "Source and target column mapping details.",
                                      "properties": {
                                        "name": {
                                          "description": "Name of the target column.",
                                          "type": "string"
                                        },
                                        "type": {
                                          "description": "Type of the CDC attribute mapping. Note: 'Advanced' mapping type is also saved as 'Derived'.",
                                          "type": "string",
                                          "enum": [
                                            "Direct",
                                            "Derived",
                                            "Aggregate"
                                          ],
                                          "x-ms-enum": {
                                            "name": "MappingType",
                                            "modelAsString": true
                                          }
                                        },
                                        "functionName": {
                                          "description": "Name of the function used for 'Aggregate' and 'Derived' (except 'Advanced') type mapping.",
                                          "type": "string"
                                        },
                                        "expression": {
                                          "description": "Expression used for 'Aggregate' and 'Derived' type mapping.",
                                          "type": "string"
                                        },
                                        "attributeReference": {
                                          "description": "Reference of the source column used in the mapping. It is used for 'Direct' mapping type only.",
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "description": "Name of the column.",
                                              "type": "string"
                                            },
                                            "entity": {
                                              "description": "Name of the table.",
                                              "type": "string"
                                            },
                                            "entityConnectionReference": {
                                              "description": "The connection reference for the connection.",
                                              "type": "object",
                                              "properties": {
                                                "connectionName": {
                                                  "description": "Name of the connection",
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "description": "Type of connection via linked service or dataset.",
                                                  "type": "string",
                                                  "enum": [
                                                    "linkedservicetype"
                                                  ],
                                                  "x-ms-enum": {
                                                    "name": "ConnectionType",
                                                    "modelAsString": true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "attributeReferences": {
                                          "description": "List of references for source columns. It is used for 'Derived' and 'Aggregate' type mappings only.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "description": "Attribute reference details for the referred column.",
                                            "properties": {
                                              "name": {
                                                "description": "Name of the column.",
                                                "type": "string"
                                              },
                                              "entity": {
                                                "description": "Name of the table.",
                                                "type": "string"
                                              },
                                              "entityConnectionReference": {
                                                "description": "The connection reference for the connection.",
                                                "type": "object",
                                                "properties": {
                                                  "connectionName": {
                                                    "description": "Name of the connection",
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "description": "Type of connection via linked service or dataset.",
                                                    "type": "string",
                                                    "enum": [
                                                      "linkedservicetype"
                                                    ],
                                                    "x-ms-enum": {
                                                      "name": "ConnectionType",
                                                      "modelAsString": true
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "x-ms-identifiers": [
                                            "name"
                                          ]
                                        }
                                      }
                                    },
                                    "x-ms-identifiers": [
                                      "name"
                                    ]
                                  }
                                }
                              },
                              "sourceDenormalizeInfo": {
                                "description": "This holds the source denormalization information used while joining multiple sources.",
                                "type": "object"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "targetEntityName",
                            "sourceEntityName"
                          ]
                        },
                        "relationships": {
                          "description": "List of relationship info among the tables.",
                          "type": "array",
                          "items": {
                            "type": "object"
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "policy": {
                    "description": "CDC policy",
                    "type": "object",
                    "properties": {
                      "mode": {
                        "description": "Mode of running the CDC: batch vs continuous.",
                        "type": "string"
                      },
                      "recurrence": {
                        "description": "Defines the frequency and interval for running the CDC for batch mode.",
                        "type": "object",
                        "properties": {
                          "frequency": {
                            "description": "Frequency of period in terms of 'Hour', 'Minute' or 'Second'.",
                            "type": "string",
                            "enum": [
                              "Hour",
                              "Minute",
                              "Second"
                            ],
                            "x-ms-enum": {
                              "name": "FrequencyType",
                              "modelAsString": true
                            }
                          },
                          "interval": {
                            "description": "Actual interval value as per chosen frequency.",
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    }
                  },
                  "allowVNetOverride": {
                    "description": "A boolean to determine if the vnet configuration needs to be overwritten.",
                    "type": "boolean"
                  },
                  "status": {
                    "description": "Status of the CDC as to if it is running or stopped.",
                    "type": "string"
                  }
                },
                "required": [
                  "sourceConnectionsInfo",
                  "targetConnectionsInfo",
                  "policy"
                ]
              }
            },
            "additionalProperties": {
              "type": "object"
            },
            "required": [
              "properties"
            ]
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "ChangeDataCaptureStatusResponse": {
      "description": "Current status of the change data capture resource.",
      "type": "string"
    },
    "CreateDataFlowDebugSessionRequest": {
      "description": "Request body structure for creating data flow debug session.",
      "type": "object",
      "properties": {
        "computeType": {
          "description": "Compute type of the cluster. The value will be overwritten by the same setting in integration runtime if provided.",
          "type": "string"
        },
        "coreCount": {
          "description": "Core count of the cluster. The value will be overwritten by the same setting in integration runtime if provided.",
          "type": "integer"
        },
        "timeToLive": {
          "description": "Time to live setting of the cluster in minutes.",
          "type": "integer"
        },
        "integrationRuntime": {
          "description": "Set to use integration runtime setting for data flow debug session.",
          "properties": {
            "name": {
              "type": "string",
              "description": "The resource name."
            },
            "properties": {
              "description": "Integration runtime properties.",
              "type": "object",
              "discriminator": "type",
              "properties": {
                "type": {
                  "description": "Type of integration runtime.",
                  "type": "string",
                  "enum": [
                    "Managed",
                    "SelfHosted"
                  ],
                  "x-ms-enum": {
                    "name": "IntegrationRuntimeType",
                    "modelAsString": true
                  }
                },
                "description": {
                  "description": "Integration runtime description.",
                  "type": "string"
                }
              },
              "additionalProperties": {
                "type": "object"
              },
              "required": [
                "type"
              ]
            }
          },
          "required": [
            "properties"
          ]
        }
      }
    },
    "CreateDataFlowDebugSessionResponse": {
      "description": "Response body structure for creating data flow debug session.",
      "type": "object",
      "properties": {
        "status": {
          "description": "The state of the debug session.",
          "type": "string"
        },
        "sessionId": {
          "description": "The ID of data flow debug session.",
          "type": "string"
        }
      }
    },
    "DataFlowSourceSetting": {
      "description": "Definition of data flow source setting for debug.",
      "type": "object",
      "properties": {
        "sourceName": {
          "description": "The data flow source name.",
          "type": "string"
        },
        "rowLimit": {
          "description": "Defines the row limit of data flow source in debug.",
          "type": "integer"
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "DataFlowStagingInfo": {
      "description": "Staging info for execute data flow activity.",
      "properties": {
        "linkedService": {
          "description": "Staging linked service reference.",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Linked service reference type.",
              "enum": [
                "LinkedServiceReference"
              ],
              "x-ms-enum": {
                "name": "Type",
                "modelAsString": true
              }
            },
            "referenceName": {
              "type": "string",
              "description": "Reference LinkedService name."
            },
            "parameters": {
              "description": "Arguments for LinkedService.",
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "required": [
            "type",
            "referenceName"
          ]
        },
        "folderPath": {
          "description": "Folder path for staging blob. Type: string (or Expression with resultType string)",
          "x-ms-format": "dfe-string",
          "type": "object"
        }
      }
    },
    "DataFlowDebugPackage": {
      "description": "Request body structure for starting data flow debug session.",
      "type": "object",
      "properties": {
        "sessionId": {
          "description": "The ID of data flow debug session.",
          "type": "string"
        },
        "dataFlow": {
          "description": "Data flow instance.",
          "properties": {
            "name": {
              "type": "string",
              "description": "The resource name."
            },
            "properties": {
              "description": "Data flow properties.",
              "type": "object",
              "discriminator": "type",
              "required": [
                "type"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Type of data flow."
                },
                "description": {
                  "description": "The description of the data flow.",
                  "type": "string"
                },
                "annotations": {
                  "description": "List of tags that can be used for describing the data flow.",
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "x-ms-identifiers": []
                },
                "folder": {
                  "description": "The folder that this data flow is in. If not specified, Data flow will appear at the root level.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The name of the folder that this data flow is in.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "required": [
            "properties"
          ]
        },
        "dataFlows": {
          "description": "List of Data flows",
          "type": "array",
          "items": {
            "description": "Data flow debug resource.",
            "properties": {
              "name": {
                "type": "string",
                "description": "The resource name."
              },
              "properties": {
                "description": "Data flow properties.",
                "type": "object",
                "discriminator": "type",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Type of data flow."
                  },
                  "description": {
                    "description": "The description of the data flow.",
                    "type": "string"
                  },
                  "annotations": {
                    "description": "List of tags that can be used for describing the data flow.",
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "x-ms-identifiers": []
                  },
                  "folder": {
                    "description": "The folder that this data flow is in. If not specified, Data flow will appear at the root level.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the folder that this data flow is in.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "properties"
            ]
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "datasets": {
          "type": "array",
          "description": "List of datasets.",
          "items": {
            "description": "Dataset debug resource.",
            "properties": {
              "name": {
                "type": "string",
                "description": "The resource name."
              },
              "properties": {
                "description": "Dataset properties.",
                "type": "object",
                "discriminator": "type",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Type of dataset."
                  },
                  "description": {
                    "description": "Dataset description.",
                    "type": "string"
                  },
                  "structure": {
                    "type": "object",
                    "x-ms-format": "dfe-list-generic",
                    "x-ms-format-element-type": "DatasetDataElement",
                    "description": "Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement."
                  },
                  "schema": {
                    "type": "object",
                    "x-ms-format": "dfe-list-generic",
                    "x-ms-format-element-type": "DatasetSchemaDataElement",
                    "description": "Columns that define the physical type schema of the dataset. Type: array (or Expression with resultType array), itemType: DatasetSchemaDataElement."
                  },
                  "linkedServiceName": {
                    "description": "Linked service reference.",
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Linked service reference type.",
                        "enum": [
                          "LinkedServiceReference"
                        ],
                        "x-ms-enum": {
                          "name": "Type",
                          "modelAsString": true
                        }
                      },
                      "referenceName": {
                        "type": "string",
                        "description": "Reference LinkedService name."
                      },
                      "parameters": {
                        "description": "Arguments for LinkedService.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "object"
                        }
                      }
                    },
                    "required": [
                      "type",
                      "referenceName"
                    ]
                  },
                  "parameters": {
                    "description": "Parameters for dataset.",
                    "type": "object",
                    "additionalProperties": {
                      "description": "Definition of a single parameter for an entity.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Parameter type.",
                          "enum": [
                            "Object",
                            "String",
                            "Int",
                            "Float",
                            "Bool",
                            "Array",
                            "SecureString"
                          ],
                          "x-ms-enum": {
                            "name": "ParameterType",
                            "modelAsString": true
                          }
                        },
                        "defaultValue": {
                          "type": "object",
                          "description": "Default value of parameter."
                        }
                      },
                      "required": [
                        "type"
                      ]
                    }
                  },
                  "annotations": {
                    "description": "List of tags that can be used for describing the Dataset.",
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "x-ms-identifiers": []
                  },
                  "folder": {
                    "description": "The folder that this Dataset is in. If not specified, Dataset will appear at the root level.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the folder that this Dataset is in.",
                        "type": "string"
                      }
                    }
                  }
                },
                "additionalProperties": {
                  "type": "object"
                },
                "required": [
                  "type",
                  "linkedServiceName"
                ]
              }
            },
            "required": [
              "properties"
            ]
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "linkedServices": {
          "type": "array",
          "description": "List of linked services.",
          "items": {
            "description": "Linked service debug resource.",
            "properties": {
              "name": {
                "type": "string",
                "description": "The resource name."
              },
              "properties": {
                "description": "Properties of linked service.",
                "type": "object",
                "discriminator": "type",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Type of linked service."
                  },
                  "version": {
                    "type": "string",
                    "description": "Version of the linked service."
                  },
                  "connectVia": {
                    "description": "The integration runtime reference.",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Type of integration runtime.",
                        "enum": [
                          "IntegrationRuntimeReference"
                        ]
                      },
                      "referenceName": {
                        "type": "string",
                        "description": "Reference integration runtime name."
                      },
                      "parameters": {
                        "description": "Arguments for integration runtime.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "object"
                        }
                      }
                    },
                    "required": [
                      "type",
                      "referenceName"
                    ]
                  },
                  "description": {
                    "description": "Linked service description.",
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters for linked service.",
                    "type": "object",
                    "additionalProperties": {
                      "description": "Definition of a single parameter for an entity.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Parameter type.",
                          "enum": [
                            "Object",
                            "String",
                            "Int",
                            "Float",
                            "Bool",
                            "Array",
                            "SecureString"
                          ],
                          "x-ms-enum": {
                            "name": "ParameterType",
                            "modelAsString": true
                          }
                        },
                        "defaultValue": {
                          "type": "object",
                          "description": "Default value of parameter."
                        }
                      },
                      "required": [
                        "type"
                      ]
                    }
                  },
                  "annotations": {
                    "description": "List of tags that can be used for describing the linked service.",
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "x-ms-identifiers": []
                  }
                },
                "additionalProperties": {
                  "type": "object"
                },
                "required": [
                  "type"
                ]
              }
            },
            "required": [
              "properties"
            ]
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "staging": {
          "description": "Staging info for debug session.",
          "properties": {
            "linkedService": {
              "description": "Staging linked service reference.",
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Linked service reference type.",
                  "enum": [
                    "LinkedServiceReference"
                  ],
                  "x-ms-enum": {
                    "name": "Type",
                    "modelAsString": true
                  }
                },
                "referenceName": {
                  "type": "string",
                  "description": "Reference LinkedService name."
                },
                "parameters": {
                  "description": "Arguments for LinkedService.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              },
              "required": [
                "type",
                "referenceName"
              ]
            },
            "folderPath": {
              "description": "Folder path for staging blob. Type: string (or Expression with resultType string)",
              "x-ms-format": "dfe-string",
              "type": "object"
            }
          }
        },
        "debugSettings": {
          "description": "Data flow debug settings.",
          "type": "object",
          "properties": {
            "sourceSettings": {
              "type": "array",
              "description": "Source setting for data flow debug.",
              "items": {
                "description": "Definition of data flow source setting for debug.",
                "type": "object",
                "properties": {
                  "sourceName": {
                    "description": "The data flow source name.",
                    "type": "string"
                  },
                  "rowLimit": {
                    "description": "Defines the row limit of data flow source in debug.",
                    "type": "integer"
                  }
                },
                "additionalProperties": {
                  "type": "object"
                }
              },
              "x-ms-identifiers": [
                "sourceName"
              ]
            },
            "parameters": {
              "description": "An object mapping parameter names to argument values.",
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            },
            "datasetParameters": {
              "description": "Parameters for dataset.",
              "type": "object"
            }
          }
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "AddDataFlowToDebugSessionResponse": {
      "description": "Response body structure for starting data flow debug session.",
      "type": "object",
      "properties": {
        "jobVersion": {
          "description": "The ID of data flow debug job version.",
          "type": "string"
        }
      }
    },
    "DeleteDataFlowDebugSessionRequest": {
      "description": "Request body structure for deleting data flow debug session.",
      "type": "object",
      "properties": {
        "sessionId": {
          "description": "The ID of data flow debug session.",
          "type": "string"
        }
      }
    },
    "DataFlowDebugCommandPayload": {
      "description": "Structure of command payload.",
      "type": "object",
      "properties": {
        "streamName": {
          "description": "The stream name which is used for preview.",
          "type": "string"
        },
        "rowLimits": {
          "description": "Row limits for preview response.",
          "type": "integer"
        },
        "columns": {
          "description": "Array of column names.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "expression": {
          "description": "The expression which is used for preview.",
          "type": "string"
        }
      },
      "required": [
        "streamName"
      ]
    },
    "DataFlowDebugCommandRequest": {
      "description": "Request body structure for data flow debug command.",
      "type": "object",
      "properties": {
        "sessionId": {
          "description": "The ID of data flow debug session.",
          "type": "string"
        },
        "command": {
          "description": "The command type.",
          "type": "string",
          "enum": [
            "executePreviewQuery",
            "executeStatisticsQuery",
            "executeExpressionQuery"
          ],
          "x-ms-enum": {
            "name": "DataFlowDebugCommandType",
            "modelAsString": true
          }
        },
        "commandPayload": {
          "description": "The command payload object.",
          "type": "object",
          "properties": {
            "streamName": {
              "description": "The stream name which is used for preview.",
              "type": "string"
            },
            "rowLimits": {
              "description": "Row limits for preview response.",
              "type": "integer"
            },
            "columns": {
              "description": "Array of column names.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "expression": {
              "description": "The expression which is used for preview.",
              "type": "string"
            }
          },
          "required": [
            "streamName"
          ]
        }
      }
    },
    "DataFlowDebugCommandResponse": {
      "description": "Response body structure of data flow result for data preview, statistics or expression preview.",
      "type": "object",
      "properties": {
        "status": {
          "description": "The run status of data preview, statistics or expression preview.",
          "type": "string"
        },
        "data": {
          "description": "The result data of data preview, statistics or expression preview.",
          "type": "string"
        }
      }
    },
    "QueryDataFlowDebugSessionsResponse": {
      "description": "A list of active debug sessions.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array with all active debug sessions.",
          "type": "array",
          "items": {
            "description": "Data flow debug session info.",
            "type": "object",
            "properties": {
              "dataFlowName": {
                "description": "The name of the data flow.",
                "type": "string"
              },
              "computeType": {
                "description": "Compute type of the cluster.",
                "type": "string"
              },
              "coreCount": {
                "description": "Core count of the cluster.",
                "type": "integer"
              },
              "nodeCount": {
                "description": "Node count of the cluster. (deprecated property)",
                "type": "integer"
              },
              "integrationRuntimeName": {
                "description": "Attached integration runtime name of data flow debug session.",
                "type": "string"
              },
              "sessionId": {
                "description": "The ID of data flow debug session.",
                "type": "string"
              },
              "startTime": {
                "description": "Start time of data flow debug session.",
                "type": "string"
              },
              "timeToLiveInMinutes": {
                "description": "Compute type of the cluster.",
                "type": "integer"
              },
              "lastActivityTime": {
                "description": "Last activity time of data flow debug session.",
                "type": "string"
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          },
          "x-ms-identifiers": [
            "dataFlowName",
            "sessionId"
          ]
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "DataFlowDebugSessionInfo": {
      "description": "Data flow debug session info.",
      "type": "object",
      "properties": {
        "dataFlowName": {
          "description": "The name of the data flow.",
          "type": "string"
        },
        "computeType": {
          "description": "Compute type of the cluster.",
          "type": "string"
        },
        "coreCount": {
          "description": "Core count of the cluster.",
          "type": "integer"
        },
        "nodeCount": {
          "description": "Node count of the cluster. (deprecated property)",
          "type": "integer"
        },
        "integrationRuntimeName": {
          "description": "Attached integration runtime name of data flow debug session.",
          "type": "string"
        },
        "sessionId": {
          "description": "The ID of data flow debug session.",
          "type": "string"
        },
        "startTime": {
          "description": "Start time of data flow debug session.",
          "type": "string"
        },
        "timeToLiveInMinutes": {
          "description": "Compute type of the cluster.",
          "type": "integer"
        },
        "lastActivityTime": {
          "description": "Last activity time of data flow debug session.",
          "type": "string"
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "GetDataFactoryOperationStatusResponse": {
      "description": "Response body structure for get data factory operation status.",
      "type": "object",
      "properties": {
        "status": {
          "description": "Status of the operation.",
          "type": "string"
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "DataFlowResource": {
      "description": "Data flow resource type.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The resource type.",
          "readOnly": true
        },
        "etag": {
          "type": "string",
          "description": "Etag identifies change in the resource.",
          "readOnly": true
        },
        "properties": {
          "description": "Data flow properties.",
          "type": "object",
          "discriminator": "type",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of data flow."
            },
            "description": {
              "description": "The description of the data flow.",
              "type": "string"
            },
            "annotations": {
              "description": "List of tags that can be used for describing the data flow.",
              "type": "array",
              "items": {
                "type": "object"
              },
              "x-ms-identifiers": []
            },
            "folder": {
              "description": "The folder that this data flow is in. If not specified, Data flow will appear at the root level.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the folder that this data flow is in.",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "required": [
        "properties"
      ]
    },
    "DataFlowDebugResource": {
      "description": "Data flow debug resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The resource name."
        },
        "properties": {
          "description": "Data flow properties.",
          "type": "object",
          "discriminator": "type",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of data flow."
            },
            "description": {
              "description": "The description of the data flow.",
              "type": "string"
            },
            "annotations": {
              "description": "List of tags that can be used for describing the data flow.",
              "type": "array",
              "items": {
                "type": "object"
              },
              "x-ms-identifiers": []
            },
            "folder": {
              "description": "The folder that this data flow is in. If not specified, Data flow will appear at the root level.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the folder that this data flow is in.",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "required": [
        "properties"
      ]
    },
    "DataFlowReference": {
      "description": "Data flow reference type.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Data flow reference type.",
          "enum": [
            "DataFlowReference"
          ],
          "x-ms-enum": {
            "name": "DataFlowReferenceType",
            "modelAsString": true
          }
        },
        "referenceName": {
          "type": "string",
          "description": "Reference data flow name."
        },
        "datasetParameters": {
          "type": "object",
          "description": "Reference data flow parameters from dataset."
        },
        "parameters": {
          "description": "An object mapping parameter names to argument values.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      },
      "additionalProperties": {
        "type": "object"
      },
      "required": [
        "type",
        "referenceName"
      ]
    },
    "managedPrivateEndpointListResponse": {
      "description": "A list of managed private endpoint resources.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of managed private endpoints.",
          "items": {
            "description": "Managed private endpoint resource type.",
            "properties": {
              "id": {
                "type": "string",
                "description": "The resource identifier.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The resource name.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The resource type.",
                "readOnly": true
              },
              "etag": {
                "type": "string",
                "description": "Etag identifies change in the resource.",
                "readOnly": true
              },
              "properties": {
                "description": "Managed private endpoint properties.",
                "type": "object",
                "properties": {
                  "connectionState": {
                    "description": "The managed private endpoint connection state",
                    "type": "object",
                    "properties": {
                      "actionsRequired": {
                        "description": "The actions required on the managed private endpoint",
                        "type": "string",
                        "readOnly": true
                      },
                      "description": {
                        "description": "The managed private endpoint description",
                        "type": "string",
                        "readOnly": true
                      },
                      "status": {
                        "description": "The approval status",
                        "type": "string",
                        "readOnly": true
                      }
                    }
                  },
                  "fqdns": {
                    "description": "Fully qualified domain names",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "groupId": {
                    "description": "The groupId to which the managed private endpoint is created",
                    "type": "string"
                  },
                  "isReserved": {
                    "description": "Denotes whether the managed private endpoint is reserved",
                    "type": "boolean",
                    "readOnly": true
                  },
                  "privateLinkResourceId": {
                    "description": "The ARM resource ID of the resource to which the managed private endpoint is created",
                    "type": "string"
                  },
                  "provisioningState": {
                    "description": "The managed private endpoint provisioning state",
                    "type": "string",
                    "readOnly": true
                  }
                },
                "additionalProperties": {
                  "type": "object"
                }
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "CredentialListResponse": {
      "description": "A list of credential resources.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of credentials.",
          "items": {
            "description": "Credential resource type.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The resource identifier.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The resource name.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The resource type.",
                "readOnly": true
              },
              "etag": {
                "type": "string",
                "description": "Etag identifies change in the resource.",
                "readOnly": true
              },
              "properties": {
                "description": "Properties of credentials.",
                "type": "object",
                "discriminator": "type",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Type of credential."
                  },
                  "description": {
                    "description": "Credential description.",
                    "type": "string"
                  },
                  "annotations": {
                    "description": "List of tags that can be used for describing the Credential.",
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "x-ms-identifiers": []
                  }
                },
                "additionalProperties": {
                  "type": "object"
                },
                "required": [
                  "type"
                ]
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "ManagedPrivateEndpointResource": {
      "description": "Managed private endpoint resource type.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The resource type.",
          "readOnly": true
        },
        "etag": {
          "type": "string",
          "description": "Etag identifies change in the resource.",
          "readOnly": true
        },
        "properties": {
          "description": "Managed private endpoint properties.",
          "type": "object",
          "properties": {
            "connectionState": {
              "description": "The managed private endpoint connection state",
              "type": "object",
              "properties": {
                "actionsRequired": {
                  "description": "The actions required on the managed private endpoint",
                  "type": "string",
                  "readOnly": true
                },
                "description": {
                  "description": "The managed private endpoint description",
                  "type": "string",
                  "readOnly": true
                },
                "status": {
                  "description": "The approval status",
                  "type": "string",
                  "readOnly": true
                }
              }
            },
            "fqdns": {
              "description": "Fully qualified domain names",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "groupId": {
              "description": "The groupId to which the managed private endpoint is created",
              "type": "string"
            },
            "isReserved": {
              "description": "Denotes whether the managed private endpoint is reserved",
              "type": "boolean",
              "readOnly": true
            },
            "privateLinkResourceId": {
              "description": "The ARM resource ID of the resource to which the managed private endpoint is created",
              "type": "string"
            },
            "provisioningState": {
              "description": "The managed private endpoint provisioning state",
              "type": "string",
              "readOnly": true
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      },
      "required": [
        "properties"
      ]
    },
    "ManagedVirtualNetworkListResponse": {
      "description": "A list of managed Virtual Network resources.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of managed Virtual Networks.",
          "items": {
            "description": "Managed Virtual Network resource type.",
            "properties": {
              "id": {
                "type": "string",
                "description": "The resource identifier.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The resource name.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The resource type.",
                "readOnly": true
              },
              "etag": {
                "type": "string",
                "description": "Etag identifies change in the resource.",
                "readOnly": true
              },
              "properties": {
                "description": "Managed Virtual Network properties.",
                "type": "object",
                "properties": {
                  "vNetId": {
                    "description": "Managed Virtual Network ID.",
                    "type": "string",
                    "readOnly": true
                  },
                  "alias": {
                    "description": "Managed Virtual Network alias.",
                    "type": "string",
                    "readOnly": true
                  }
                },
                "additionalProperties": {
                  "type": "object"
                }
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "ManagedVirtualNetworkReference": {
      "description": "Managed Virtual Network reference type.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Managed Virtual Network reference type.",
          "enum": [
            "ManagedVirtualNetworkReference"
          ],
          "x-ms-enum": {
            "name": "ManagedVirtualNetworkReferenceType",
            "modelAsString": true
          }
        },
        "referenceName": {
          "type": "string",
          "description": "Reference ManagedVirtualNetwork name."
        }
      },
      "required": [
        "type",
        "referenceName"
      ]
    },
    "ManagedVirtualNetworkResource": {
      "description": "Managed Virtual Network resource type.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The resource type.",
          "readOnly": true
        },
        "etag": {
          "type": "string",
          "description": "Etag identifies change in the resource.",
          "readOnly": true
        },
        "properties": {
          "description": "Managed Virtual Network properties.",
          "type": "object",
          "properties": {
            "vNetId": {
              "description": "Managed Virtual Network ID.",
              "type": "string",
              "readOnly": true
            },
            "alias": {
              "description": "Managed Virtual Network alias.",
              "type": "string",
              "readOnly": true
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      },
      "required": [
        "properties"
      ]
    },
    "PrivateEndpointConnectionListResponse": {
      "description": "A list of linked service resources.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Private Endpoint Connections.",
          "items": {
            "description": "Private Endpoint Connection ARM resource.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The resource identifier.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The resource name.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The resource type.",
                "readOnly": true
              },
              "etag": {
                "type": "string",
                "description": "Etag identifies change in the resource.",
                "readOnly": true
              },
              "properties": {
                "description": "Core resource properties",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "type": "string",
                    "readOnly": true
                  },
                  "privateEndpoint": {
                    "description": "PrivateEndpoint of a remote private endpoint connection",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "readOnly": true
                      }
                    }
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "The state of a private link connection",
                    "type": "object",
                    "properties": {
                      "status": {
                        "description": "Status of a private link connection",
                        "type": "string"
                      },
                      "description": {
                        "description": "Description of a private link connection",
                        "type": "string"
                      },
                      "actionsRequired": {
                        "description": "ActionsRequired for a private link connection",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "PrivateEndpointConnectionResource": {
      "description": "Private Endpoint Connection ARM resource.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The resource type.",
          "readOnly": true
        },
        "etag": {
          "type": "string",
          "description": "Etag identifies change in the resource.",
          "readOnly": true
        },
        "properties": {
          "description": "Core resource properties",
          "type": "object",
          "properties": {
            "provisioningState": {
              "type": "string",
              "readOnly": true
            },
            "privateEndpoint": {
              "description": "PrivateEndpoint of a remote private endpoint connection",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "readOnly": true
                }
              }
            },
            "privateLinkServiceConnectionState": {
              "description": "The state of a private link connection",
              "type": "object",
              "properties": {
                "status": {
                  "description": "Status of a private link connection",
                  "type": "string"
                },
                "description": {
                  "description": "Description of a private link connection",
                  "type": "string"
                },
                "actionsRequired": {
                  "description": "ActionsRequired for a private link connection",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "RemotePrivateEndpointConnection": {
      "description": "A remote private endpoint connection",
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "readOnly": true
        },
        "privateEndpoint": {
          "description": "PrivateEndpoint of a remote private endpoint connection",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "readOnly": true
            }
          }
        },
        "privateLinkServiceConnectionState": {
          "description": "The state of a private link connection",
          "type": "object",
          "properties": {
            "status": {
              "description": "Status of a private link connection",
              "type": "string"
            },
            "description": {
              "description": "Description of a private link connection",
              "type": "string"
            },
            "actionsRequired": {
              "description": "ActionsRequired for a private link connection",
              "type": "string"
            }
          }
        }
      }
    },
    "ArmIdWrapper": {
      "description": "A wrapper for an ARM resource id",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PrivateLinkConnectionState": {
      "description": "The state of a private link connection",
      "type": "object",
      "properties": {
        "status": {
          "description": "Status of a private link connection",
          "type": "string"
        },
        "description": {
          "description": "Description of a private link connection",
          "type": "string"
        },
        "actionsRequired": {
          "description": "ActionsRequired for a private link connection",
          "type": "string"
        }
      }
    },
    "PrivateLinkConnectionApprovalRequestResource": {
      "description": "Private Endpoint Connection Approval ARM resource.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The resource type.",
          "readOnly": true
        },
        "etag": {
          "type": "string",
          "description": "Etag identifies change in the resource.",
          "readOnly": true
        },
        "properties": {
          "description": "Core resource properties",
          "type": "object",
          "properties": {
            "privateLinkServiceConnectionState": {
              "description": "The state of a private link connection",
              "type": "object",
              "properties": {
                "status": {
                  "description": "Status of a private link connection",
                  "type": "string"
                },
                "description": {
                  "description": "Description of a private link connection",
                  "type": "string"
                },
                "actionsRequired": {
                  "description": "ActionsRequired for a private link connection",
                  "type": "string"
                }
              }
            },
            "privateEndpoint": {
              "description": "The resource of private endpoint.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "The resource Id for private endpoint",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "PrivateLinkConnectionApprovalRequest": {
      "description": "A request to approve or reject a private endpoint connection",
      "type": "object",
      "properties": {
        "privateLinkServiceConnectionState": {
          "description": "The state of a private link connection",
          "type": "object",
          "properties": {
            "status": {
              "description": "Status of a private link connection",
              "type": "string"
            },
            "description": {
              "description": "Description of a private link connection",
              "type": "string"
            },
            "actionsRequired": {
              "description": "ActionsRequired for a private link connection",
              "type": "string"
            }
          }
        },
        "privateEndpoint": {
          "description": "The resource of private endpoint.",
          "type": "object",
          "properties": {
            "id": {
              "description": "The resource Id for private endpoint",
              "type": "string"
            }
          }
        }
      }
    },
    "PrivateEndpoint": {
      "description": "Private endpoint which a connection belongs to.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource Id for private endpoint",
          "type": "string"
        }
      }
    },
    "PrivateLinkResourcesWrapper": {
      "description": "Wrapper for a collection of private link resources",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "description": "A private link resource",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The resource identifier.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The resource name.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The resource type.",
                "readOnly": true
              },
              "etag": {
                "type": "string",
                "description": "Etag identifies change in the resource.",
                "readOnly": true
              },
              "properties": {
                "description": "Core resource properties",
                "type": "object",
                "properties": {
                  "groupId": {
                    "description": "GroupId of a private link resource",
                    "type": "string",
                    "readOnly": true
                  },
                  "requiredMembers": {
                    "description": "RequiredMembers of a private link resource",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "requiredZoneNames": {
                    "description": "RequiredZoneNames of a private link resource",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "PrivateLinkResource": {
      "description": "A private link resource",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The resource type.",
          "readOnly": true
        },
        "etag": {
          "type": "string",
          "description": "Etag identifies change in the resource.",
          "readOnly": true
        },
        "properties": {
          "description": "Core resource properties",
          "type": "object",
          "properties": {
            "groupId": {
              "description": "GroupId of a private link resource",
              "type": "string",
              "readOnly": true
            },
            "requiredMembers": {
              "description": "RequiredMembers of a private link resource",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "requiredZoneNames": {
              "description": "RequiredZoneNames of a private link resource",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            }
          }
        }
      }
    },
    "PrivateLinkResourceProperties": {
      "description": "Properties of a private link resource",
      "type": "object",
      "properties": {
        "groupId": {
          "description": "GroupId of a private link resource",
          "type": "string",
          "readOnly": true
        },
        "requiredMembers": {
          "description": "RequiredMembers of a private link resource",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "requiredZoneNames": {
          "description": "RequiredZoneNames of a private link resource",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "CredentialReference": {
      "description": "Credential reference type.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Credential reference type.",
          "enum": [
            "CredentialReference"
          ],
          "x-ms-enum": {
            "name": "CredentialReferenceType",
            "modelAsString": true
          }
        },
        "referenceName": {
          "type": "string",
          "description": "Reference credential name."
        }
      },
      "additionalProperties": {
        "type": "object"
      },
      "required": [
        "type",
        "referenceName"
      ]
    },
    "CredentialResource": {
      "description": "Credential resource type.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The resource type.",
          "readOnly": true
        },
        "etag": {
          "type": "string",
          "description": "Etag identifies change in the resource.",
          "readOnly": true
        },
        "properties": {
          "description": "Properties of credentials.",
          "type": "object",
          "discriminator": "type",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of credential."
            },
            "description": {
              "description": "Credential description.",
              "type": "string"
            },
            "annotations": {
              "description": "List of tags that can be used for describing the Credential.",
              "type": "array",
              "items": {
                "type": "object"
              },
              "x-ms-identifiers": []
            }
          },
          "additionalProperties": {
            "type": "object"
          },
          "required": [
            "type"
          ]
        }
      },
      "required": [
        "properties"
      ]
    }
  },
  "parameters": {
    "subscriptionId": {
      "name": "subscriptionId",
      "description": "The subscription identifier.",
      "in": "path",
      "required": true,
      "type": "string"
    },
    "resourceGroupName": {
      "name": "resourceGroupName",
      "description": "The resource group name.",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "factoryName": {
      "name": "factoryName",
      "description": "The factory name.",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
      "minLength": 3,
      "maxLength": 63,
      "x-ms-parameter-location": "method"
    },
    "locationId": {
      "name": "locationId",
      "description": "The location identifier.",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "linkedServiceName": {
      "name": "linkedServiceName",
      "description": "The linked service name.",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
      "minLength": 1,
      "maxLength": 260,
      "x-ms-parameter-location": "method"
    },
    "datasetName": {
      "name": "datasetName",
      "description": "The dataset name.",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
      "minLength": 1,
      "maxLength": 260,
      "x-ms-parameter-location": "method"
    },
    "pipelineName": {
      "name": "pipelineName",
      "description": "The pipeline name.",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
      "minLength": 1,
      "maxLength": 260,
      "x-ms-parameter-location": "method"
    },
    "triggerName": {
      "name": "triggerName",
      "description": "The trigger name.",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
      "minLength": 1,
      "maxLength": 260,
      "x-ms-parameter-location": "method"
    },
    "changeDataCaptureName": {
      "name": "changeDataCaptureName",
      "description": "The change data capture name.",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
      "minLength": 1,
      "maxLength": 260,
      "x-ms-parameter-location": "method"
    },
    "runId": {
      "name": "runId",
      "description": "The pipeline run identifier.",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "integrationRuntimeName": {
      "name": "integrationRuntimeName",
      "description": "The integration runtime name.",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
      "minLength": 3,
      "maxLength": 63,
      "x-ms-parameter-location": "method"
    },
    "nodeName": {
      "name": "nodeName",
      "description": "The integration runtime node name.",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-z0-9A-Z][a-z0-9A-Z_-]{0,149}$",
      "minLength": 1,
      "maxLength": 150,
      "x-ms-parameter-location": "method"
    },
    "dataFlowName": {
      "name": "dataFlowName",
      "description": "The data flow name.",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
      "minLength": 1,
      "maxLength": 260,
      "x-ms-parameter-location": "method"
    },
    "managedVirtualNetworkName": {
      "name": "managedVirtualNetworkName",
      "description": "Managed virtual network name",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^([_A-Za-z0-9]|([_A-Za-z0-9][-_A-Za-z0-9]{0,125}[_A-Za-z0-9]))$",
      "minLength": 1,
      "maxLength": 127,
      "x-ms-parameter-location": "method"
    },
    "credentialName": {
      "name": "credentialName",
      "description": "Credential name",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^([_A-Za-z0-9]|([_A-Za-z0-9][-_A-Za-z0-9]{0,125}[_A-Za-z0-9]))$",
      "minLength": 1,
      "maxLength": 127,
      "x-ms-parameter-location": "method"
    },
    "managedPrivateEndpointName": {
      "name": "managedPrivateEndpointName",
      "description": "Managed private endpoint name",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^([_A-Za-z0-9]|([_A-Za-z0-9][-_A-Za-z0-9]{0,125}[_A-Za-z0-9]))$",
      "minLength": 1,
      "maxLength": 127,
      "x-ms-parameter-location": "method"
    },
    "api-version": {
      "name": "api-version",
      "description": "The API version.",
      "in": "query",
      "required": true,
      "type": "string"
    },
    "privateEndpointConnectionName": {
      "name": "privateEndpointConnectionName",
      "description": "The private endpoint connection name.",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "globalParameterName": {
      "name": "globalParameterName",
      "description": "The global parameter name.",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
      "minLength": 1,
      "maxLength": 260,
      "x-ms-parameter-location": "method"
    }
  }
}