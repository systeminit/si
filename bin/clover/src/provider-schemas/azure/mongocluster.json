{
  "swagger": "2.0",
  "info": {
    "title": "Azure mongocluster",
    "version": "2025-09-01",
    "description": "Azure mongocluster service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/providers/Microsoft.DocumentDB/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of operations supported by the resource provider",
                  "items": {
                    "type": "object",
                    "title": "REST API Operation",
                    "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
                        "readOnly": true
                      },
                      "isDataAction": {
                        "type": "boolean",
                        "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
                        "readOnly": true
                      },
                      "display": {
                        "type": "object",
                        "description": "Localized display information for this particular operation.",
                        "properties": {
                          "provider": {
                            "type": "string",
                            "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
                            "readOnly": true
                          },
                          "resource": {
                            "type": "string",
                            "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
                            "readOnly": true
                          },
                          "operation": {
                            "type": "string",
                            "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
                            "readOnly": true
                          },
                          "description": {
                            "type": "string",
                            "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
                            "readOnly": true
                          }
                        }
                      },
                      "origin": {
                        "type": "string",
                        "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
                        "enum": [
                          "user",
                          "system",
                          "user,system"
                        ],
                        "x-ms-enum": {
                          "name": "Origin",
                          "modelAsString": true
                        },
                        "readOnly": true
                      },
                      "actionType": {
                        "type": "string",
                        "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
                        "enum": [
                          "Internal"
                        ],
                        "x-ms-enum": {
                          "name": "ActionType",
                          "modelAsString": true
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "URL to get the next set of operation list results (if there are any).",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/checkMongoClusterNameAvailability": {
      "post": {
        "operationId": "MongoClusters_CheckNameAvailability",
        "tags": [
          "MongoClusters"
        ],
        "description": "Check if mongo cluster name is available for use.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of the Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The CheckAvailability request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The check availability request body.",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the resource for which availability needs to be checked."
                },
                "type": {
                  "type": "string",
                  "description": "The resource type."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "The check availability result.",
              "properties": {
                "nameAvailable": {
                  "type": "boolean",
                  "description": "Indicates if the resource name is available."
                },
                "reason": {
                  "type": "string",
                  "description": "The reason why the given name is not available.",
                  "enum": [
                    "Invalid",
                    "AlreadyExists"
                  ],
                  "x-ms-enum": {
                    "name": "CheckNameAvailabilityReason",
                    "modelAsString": true
                  }
                },
                "message": {
                  "type": "string",
                  "description": "Detailed reason why the given name is available."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/mongoClusters": {
      "get": {
        "operationId": "MongoClusters_List",
        "tags": [
          "MongoClusters"
        ],
        "description": "List all the mongo clusters in a given subscription.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a MongoCluster list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The MongoCluster items on this page",
                  "items": {
                    "type": "object",
                    "description": "Represents a mongo cluster resource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "createMode": {
                            "description": "The mode to create a mongo cluster.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "string",
                            "enum": [
                              "Default",
                              "PointInTimeRestore",
                              "GeoReplica",
                              "Replica"
                            ],
                            "x-ms-enum": {
                              "name": "CreateMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Default",
                                  "value": "Default",
                                  "description": "Create a new mongo cluster."
                                },
                                {
                                  "name": "PointInTimeRestore",
                                  "value": "PointInTimeRestore",
                                  "description": "Create a mongo cluster from a restore point-in-time."
                                },
                                {
                                  "name": "GeoReplica",
                                  "value": "GeoReplica",
                                  "description": "Create a replica cluster in distinct geographic region from the source cluster."
                                },
                                {
                                  "name": "Replica",
                                  "value": "Replica",
                                  "description": "Create a replica cluster in the same geographic region as the source cluster."
                                }
                              ]
                            }
                          },
                          "restoreParameters": {
                            "description": "The parameters to create a point-in-time restore mongo cluster.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "object",
                            "properties": {
                              "pointInTimeUTC": {
                                "type": "string",
                                "format": "date-time",
                                "description": "UTC point in time to restore a mongo cluster"
                              },
                              "sourceResourceId": {
                                "description": "Resource ID to locate the source cluster to restore",
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.DocumentDB/mongoClusters"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "replicaParameters": {
                            "description": "The parameters to create a replica mongo cluster.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "object",
                            "properties": {
                              "sourceResourceId": {
                                "description": "The id of the replication source cluster.",
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.DocumentDB/mongoClusters"
                                    }
                                  ]
                                }
                              },
                              "sourceLocation": {
                                "description": "The location of the source cluster",
                                "type": "string"
                              }
                            },
                            "required": [
                              "sourceResourceId",
                              "sourceLocation"
                            ]
                          },
                          "administrator": {
                            "description": "The local administrator properties for the mongo cluster.",
                            "type": "object",
                            "properties": {
                              "userName": {
                                "type": "string",
                                "description": "The administrator user name.",
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "password": {
                                "type": "string",
                                "format": "password",
                                "description": "The administrator password.",
                                "x-ms-mutability": [
                                  "update",
                                  "create"
                                ],
                                "x-ms-secret": true
                              }
                            }
                          },
                          "serverVersion": {
                            "type": "string",
                            "description": "The Mongo DB server version. Defaults to the latest available version if not specified."
                          },
                          "connectionString": {
                            "type": "string",
                            "description": "The default mongo connection string for the cluster.",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "The provisioning state of the mongo cluster.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "InProgress",
                              "Updating",
                              "Dropping"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "InProgress",
                                  "value": "InProgress",
                                  "description": "An operation is in-progress on the resource."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "An update operation is in-progress on the resource."
                                },
                                {
                                  "name": "Dropping",
                                  "value": "Dropping",
                                  "description": "A drop operation is in-progress on the resource."
                                }
                              ]
                            }
                          },
                          "clusterStatus": {
                            "description": "The status of the mongo cluster.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Ready",
                              "Provisioning",
                              "Updating",
                              "Starting",
                              "Stopping",
                              "Stopped",
                              "Dropping"
                            ],
                            "x-ms-enum": {
                              "name": "MongoClusterStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Ready",
                                  "value": "Ready",
                                  "description": "The mongo cluster resource is ready for use."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The mongo cluster resource is being provisioned."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The mongo cluster resource is being updated."
                                },
                                {
                                  "name": "Starting",
                                  "value": "Starting",
                                  "description": "The mongo cluster resource is being started."
                                },
                                {
                                  "name": "Stopping",
                                  "value": "Stopping",
                                  "description": "The mongo cluster resource is being stopped."
                                },
                                {
                                  "name": "Stopped",
                                  "value": "Stopped",
                                  "description": "The mongo cluster resource is stopped."
                                },
                                {
                                  "name": "Dropping",
                                  "value": "Dropping",
                                  "description": "The mongo cluster resource is being dropped."
                                }
                              ]
                            }
                          },
                          "publicNetworkAccess": {
                            "description": "Whether or not public endpoint access is allowed for this mongo cluster.",
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "PublicNetworkAccess",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled",
                                  "description": "If set, mongo cluster can be accessed through private and public methods."
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "If set, the private endpoints are the exclusive access method."
                                }
                              ]
                            }
                          },
                          "highAvailability": {
                            "description": "The high availability properties of the mongo cluster.",
                            "type": "object",
                            "properties": {
                              "targetMode": {
                                "description": "The target high availability mode requested for the cluster.",
                                "type": "string",
                                "enum": [
                                  "Disabled",
                                  "SameZone",
                                  "ZoneRedundantPreferred"
                                ],
                                "x-ms-enum": {
                                  "name": "HighAvailabilityMode",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled",
                                      "description": "High availability mode is disabled. This mode is can see availability impact during faults or maintenance and is not recommended for production."
                                    },
                                    {
                                      "name": "SameZone",
                                      "value": "SameZone",
                                      "description": "High availability mode is enabled, where each server in a shard is placed in the same availability zone."
                                    },
                                    {
                                      "name": "ZoneRedundantPreferred",
                                      "value": "ZoneRedundantPreferred",
                                      "description": "High availability mode is enabled and preferences ZoneRedundant if availability zones capacity is available in the region, otherwise falls-back to provisioning with SameZone."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "storage": {
                            "description": "The storage properties of the mongo cluster.",
                            "type": "object",
                            "properties": {
                              "sizeGb": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The size of the data disk assigned to each server."
                              },
                              "type": {
                                "description": "The type of storage to provision the cluster servers with.",
                                "type": "string",
                                "enum": [
                                  "PremiumSSD",
                                  "PremiumSSDv2"
                                ],
                                "x-ms-enum": {
                                  "name": "StorageType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "PremiumSSD",
                                      "value": "PremiumSSD",
                                      "description": "Premium SSD for high performance workloads."
                                    },
                                    {
                                      "name": "PremiumSSDv2",
                                      "value": "PremiumSSDv2",
                                      "description": "Premium SSD v2 for very IO-intensive workloads. This is a preview option and has additional limitations."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "sharding": {
                            "description": "The sharding properties of the mongo cluster.",
                            "type": "object",
                            "properties": {
                              "shardCount": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Number of shards to provision on the cluster."
                              }
                            }
                          },
                          "compute": {
                            "description": "The compute properties of the mongo cluster.",
                            "type": "object",
                            "properties": {
                              "tier": {
                                "type": "string",
                                "description": "The compute tier to assign to the cluster, where each tier maps to a virtual-core and memory size. Example values: 'M30', 'M40'."
                              }
                            }
                          },
                          "backup": {
                            "description": "The backup properties of the mongo cluster.",
                            "type": "object",
                            "properties": {
                              "earliestRestoreTime": {
                                "type": "string",
                                "description": "Earliest restore timestamp in UTC ISO8601 format.",
                                "readOnly": true
                              }
                            }
                          },
                          "dataApi": {
                            "description": "The Data API properties of the mongo cluster.",
                            "type": "object",
                            "properties": {
                              "mode": {
                                "description": "The mode to indicate whether the Mongo Data API is enabled for a cluster.",
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "DataApiMode",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled",
                                      "description": "Mongo Data API is enabled for the cluster."
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled",
                                      "description": "Mongo Data API is disabled for the cluster."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "privateEndpointConnections": {
                            "type": "array",
                            "description": "List of private endpoint connections.",
                            "items": {
                              "type": "object",
                              "description": "The private endpoint connection resource.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "arm-id",
                                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the resource",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                                  "readOnly": true
                                },
                                "systemData": {
                                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "createdBy": {
                                      "type": "string",
                                      "description": "The identity that created the resource."
                                    },
                                    "createdByType": {
                                      "type": "string",
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "createdAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource creation (UTC)."
                                    },
                                    "lastModifiedBy": {
                                      "type": "string",
                                      "description": "The identity that last modified the resource."
                                    },
                                    "lastModifiedByType": {
                                      "type": "string",
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource last modification (UTC)"
                                    }
                                  }
                                },
                                "properties": {
                                  "description": "Resource properties.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "groupIds": {
                                      "type": "array",
                                      "description": "The group ids for the private endpoint resource.",
                                      "items": {
                                        "type": "string"
                                      },
                                      "readOnly": true
                                    },
                                    "privateEndpoint": {
                                      "description": "The private endpoint resource.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "The ARM identifier for private endpoint.",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                          "type": "string",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected"
                                          ],
                                          "x-ms-enum": {
                                            "name": "PrivateEndpointServiceConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The reason for approval/rejection of the connection."
                                        },
                                        "actionsRequired": {
                                          "type": "string",
                                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "The provisioning state of the private endpoint connection resource.",
                                      "type": "string",
                                      "enum": [
                                        "Succeeded",
                                        "Creating",
                                        "Deleting",
                                        "Failed"
                                      ],
                                      "x-ms-enum": {
                                        "name": "PrivateEndpointConnectionProvisioningState",
                                        "modelAsString": true
                                      },
                                      "readOnly": true
                                    }
                                  },
                                  "required": [
                                    "privateLinkServiceConnectionState"
                                  ]
                                }
                              }
                            },
                            "readOnly": true
                          },
                          "previewFeatures": {
                            "type": "array",
                            "description": "List of private endpoint connections.",
                            "items": {
                              "type": "string",
                              "description": "Preview features that can be enabled on a mongo cluster.",
                              "enum": [
                                "GeoReplicas"
                              ],
                              "x-ms-enum": {
                                "name": "PreviewFeature",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "GeoReplicas",
                                    "value": "GeoReplicas",
                                    "description": "Enables geo replicas preview feature. The feature must be set at create-time on new cluster to enable linking a geo-replica cluster to it."
                                  }
                                ]
                              }
                            }
                          },
                          "replica": {
                            "description": "The replication properties for the mongo cluster",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "sourceResourceId": {
                                "description": "The resource id the source cluster for the replica cluster.",
                                "readOnly": true,
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.DocumentDB/mongoClusters"
                                    }
                                  ]
                                }
                              },
                              "role": {
                                "description": "The replication role of the cluster",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "Primary",
                                  "AsyncReplica",
                                  "GeoAsyncReplica"
                                ],
                                "x-ms-enum": {
                                  "name": "ReplicationRole",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Primary",
                                      "value": "Primary",
                                      "description": "The cluster is a primary replica."
                                    },
                                    {
                                      "name": "AsyncReplica",
                                      "value": "AsyncReplica",
                                      "description": "The cluster is a local asynchronous replica."
                                    },
                                    {
                                      "name": "GeoAsyncReplica",
                                      "value": "GeoAsyncReplica",
                                      "description": "The cluster is a geo-asynchronous replica."
                                    }
                                  ]
                                }
                              },
                              "replicationState": {
                                "description": "The replication link state of the replica cluster.",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "Active",
                                  "Catchup",
                                  "Provisioning",
                                  "Updating",
                                  "Broken",
                                  "Reconfiguring"
                                ],
                                "x-ms-enum": {
                                  "name": "ReplicationState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Active",
                                      "value": "Active",
                                      "description": "Replication link is active."
                                    },
                                    {
                                      "name": "Catchup",
                                      "value": "Catchup",
                                      "description": "Replica is catching-up with the primary. This can occur after the replica is created or after a promotion is triggered."
                                    },
                                    {
                                      "name": "Provisioning",
                                      "value": "Provisioning",
                                      "description": "Replica and replication link to the primary is being created."
                                    },
                                    {
                                      "name": "Updating",
                                      "value": "Updating",
                                      "description": "Replication link is being updated due to a change on the replica or an upgrade."
                                    },
                                    {
                                      "name": "Broken",
                                      "value": "Broken",
                                      "description": "Replication link is broken and the replica may need to be recreated."
                                    },
                                    {
                                      "name": "Reconfiguring",
                                      "value": "Reconfiguring",
                                      "description": "Replication link is re-configuring due to a promotion event."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "infrastructureVersion": {
                            "type": "string",
                            "description": "The infrastructure version the cluster is provisioned on.",
                            "readOnly": true
                          },
                          "authConfig": {
                            "description": "The authentication configuration for the cluster.",
                            "type": "object",
                            "properties": {
                              "allowedModes": {
                                "type": "array",
                                "description": "Allowed authentication modes for data access on the cluster.",
                                "items": {
                                  "type": "string",
                                  "description": "The authentication modes supporting on the Mongo cluster.",
                                  "enum": [
                                    "NativeAuth",
                                    "MicrosoftEntraID"
                                  ],
                                  "x-ms-enum": {
                                    "name": "AuthenticationMode",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "NativeAuth",
                                        "value": "NativeAuth",
                                        "description": "Native mongo authentication mode using username and password with auth mechanism 'SCRAM-SHA-256'."
                                      },
                                      {
                                        "name": "MicrosoftEntraID",
                                        "value": "MicrosoftEntraID",
                                        "description": "Microsoft Entra ID authentication mode using Entra users assigned to the cluster and auth mechanism 'MONGODB-OIDC'."
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "encryption": {
                            "description": "The encryption configuration for the cluster. Depends on identity being configured.",
                            "type": "object",
                            "properties": {
                              "customerManagedKeyEncryption": {
                                "description": "Customer managed key encryption settings.",
                                "type": "object",
                                "properties": {
                                  "keyEncryptionKeyIdentity": {
                                    "description": "The identity used to access the key encryption key.",
                                    "type": "object",
                                    "properties": {
                                      "identityType": {
                                        "description": "The type of identity. Only 'UserAssignedIdentity' is supported.",
                                        "type": "string",
                                        "enum": [
                                          "UserAssignedIdentity"
                                        ],
                                        "x-ms-enum": {
                                          "name": "KeyEncryptionKeyIdentityType",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "UserAssignedIdentity",
                                              "value": "UserAssignedIdentity",
                                              "description": "User assigned identity."
                                            }
                                          ]
                                        }
                                      },
                                      "userAssignedIdentityResourceId": {
                                        "type": "string",
                                        "description": "The user assigned identity resource id."
                                      }
                                    }
                                  },
                                  "keyEncryptionKeyUrl": {
                                    "type": "string",
                                    "description": "The URI of the key vault key used for encryption."
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "identity": {
                        "description": "The managed service identities assigned to this resource.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "title": "User-Assigned Identities",
                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                            "additionalProperties": {
                              "x-nullable": true,
                              "type": "object",
                              "description": "User assigned identity properties",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID of the assigned identity.",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID of the assigned identity.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters": {
      "get": {
        "operationId": "MongoClusters_ListByResourceGroup",
        "tags": [
          "MongoClusters"
        ],
        "description": "List all the mongo clusters in a given resource group.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a MongoCluster list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The MongoCluster items on this page",
                  "items": {
                    "type": "object",
                    "description": "Represents a mongo cluster resource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "createMode": {
                            "description": "The mode to create a mongo cluster.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "string",
                            "enum": [
                              "Default",
                              "PointInTimeRestore",
                              "GeoReplica",
                              "Replica"
                            ],
                            "x-ms-enum": {
                              "name": "CreateMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Default",
                                  "value": "Default",
                                  "description": "Create a new mongo cluster."
                                },
                                {
                                  "name": "PointInTimeRestore",
                                  "value": "PointInTimeRestore",
                                  "description": "Create a mongo cluster from a restore point-in-time."
                                },
                                {
                                  "name": "GeoReplica",
                                  "value": "GeoReplica",
                                  "description": "Create a replica cluster in distinct geographic region from the source cluster."
                                },
                                {
                                  "name": "Replica",
                                  "value": "Replica",
                                  "description": "Create a replica cluster in the same geographic region as the source cluster."
                                }
                              ]
                            }
                          },
                          "restoreParameters": {
                            "description": "The parameters to create a point-in-time restore mongo cluster.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "object",
                            "properties": {
                              "pointInTimeUTC": {
                                "type": "string",
                                "format": "date-time",
                                "description": "UTC point in time to restore a mongo cluster"
                              },
                              "sourceResourceId": {
                                "description": "Resource ID to locate the source cluster to restore",
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.DocumentDB/mongoClusters"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "replicaParameters": {
                            "description": "The parameters to create a replica mongo cluster.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "object",
                            "properties": {
                              "sourceResourceId": {
                                "description": "The id of the replication source cluster.",
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.DocumentDB/mongoClusters"
                                    }
                                  ]
                                }
                              },
                              "sourceLocation": {
                                "description": "The location of the source cluster",
                                "type": "string"
                              }
                            },
                            "required": [
                              "sourceResourceId",
                              "sourceLocation"
                            ]
                          },
                          "administrator": {
                            "description": "The local administrator properties for the mongo cluster.",
                            "type": "object",
                            "properties": {
                              "userName": {
                                "type": "string",
                                "description": "The administrator user name.",
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "password": {
                                "type": "string",
                                "format": "password",
                                "description": "The administrator password.",
                                "x-ms-mutability": [
                                  "update",
                                  "create"
                                ],
                                "x-ms-secret": true
                              }
                            }
                          },
                          "serverVersion": {
                            "type": "string",
                            "description": "The Mongo DB server version. Defaults to the latest available version if not specified."
                          },
                          "connectionString": {
                            "type": "string",
                            "description": "The default mongo connection string for the cluster.",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "The provisioning state of the mongo cluster.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "InProgress",
                              "Updating",
                              "Dropping"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "InProgress",
                                  "value": "InProgress",
                                  "description": "An operation is in-progress on the resource."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "An update operation is in-progress on the resource."
                                },
                                {
                                  "name": "Dropping",
                                  "value": "Dropping",
                                  "description": "A drop operation is in-progress on the resource."
                                }
                              ]
                            }
                          },
                          "clusterStatus": {
                            "description": "The status of the mongo cluster.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Ready",
                              "Provisioning",
                              "Updating",
                              "Starting",
                              "Stopping",
                              "Stopped",
                              "Dropping"
                            ],
                            "x-ms-enum": {
                              "name": "MongoClusterStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Ready",
                                  "value": "Ready",
                                  "description": "The mongo cluster resource is ready for use."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The mongo cluster resource is being provisioned."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The mongo cluster resource is being updated."
                                },
                                {
                                  "name": "Starting",
                                  "value": "Starting",
                                  "description": "The mongo cluster resource is being started."
                                },
                                {
                                  "name": "Stopping",
                                  "value": "Stopping",
                                  "description": "The mongo cluster resource is being stopped."
                                },
                                {
                                  "name": "Stopped",
                                  "value": "Stopped",
                                  "description": "The mongo cluster resource is stopped."
                                },
                                {
                                  "name": "Dropping",
                                  "value": "Dropping",
                                  "description": "The mongo cluster resource is being dropped."
                                }
                              ]
                            }
                          },
                          "publicNetworkAccess": {
                            "description": "Whether or not public endpoint access is allowed for this mongo cluster.",
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "PublicNetworkAccess",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled",
                                  "description": "If set, mongo cluster can be accessed through private and public methods."
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "If set, the private endpoints are the exclusive access method."
                                }
                              ]
                            }
                          },
                          "highAvailability": {
                            "description": "The high availability properties of the mongo cluster.",
                            "type": "object",
                            "properties": {
                              "targetMode": {
                                "description": "The target high availability mode requested for the cluster.",
                                "type": "string",
                                "enum": [
                                  "Disabled",
                                  "SameZone",
                                  "ZoneRedundantPreferred"
                                ],
                                "x-ms-enum": {
                                  "name": "HighAvailabilityMode",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled",
                                      "description": "High availability mode is disabled. This mode is can see availability impact during faults or maintenance and is not recommended for production."
                                    },
                                    {
                                      "name": "SameZone",
                                      "value": "SameZone",
                                      "description": "High availability mode is enabled, where each server in a shard is placed in the same availability zone."
                                    },
                                    {
                                      "name": "ZoneRedundantPreferred",
                                      "value": "ZoneRedundantPreferred",
                                      "description": "High availability mode is enabled and preferences ZoneRedundant if availability zones capacity is available in the region, otherwise falls-back to provisioning with SameZone."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "storage": {
                            "description": "The storage properties of the mongo cluster.",
                            "type": "object",
                            "properties": {
                              "sizeGb": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The size of the data disk assigned to each server."
                              },
                              "type": {
                                "description": "The type of storage to provision the cluster servers with.",
                                "type": "string",
                                "enum": [
                                  "PremiumSSD",
                                  "PremiumSSDv2"
                                ],
                                "x-ms-enum": {
                                  "name": "StorageType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "PremiumSSD",
                                      "value": "PremiumSSD",
                                      "description": "Premium SSD for high performance workloads."
                                    },
                                    {
                                      "name": "PremiumSSDv2",
                                      "value": "PremiumSSDv2",
                                      "description": "Premium SSD v2 for very IO-intensive workloads. This is a preview option and has additional limitations."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "sharding": {
                            "description": "The sharding properties of the mongo cluster.",
                            "type": "object",
                            "properties": {
                              "shardCount": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Number of shards to provision on the cluster."
                              }
                            }
                          },
                          "compute": {
                            "description": "The compute properties of the mongo cluster.",
                            "type": "object",
                            "properties": {
                              "tier": {
                                "type": "string",
                                "description": "The compute tier to assign to the cluster, where each tier maps to a virtual-core and memory size. Example values: 'M30', 'M40'."
                              }
                            }
                          },
                          "backup": {
                            "description": "The backup properties of the mongo cluster.",
                            "type": "object",
                            "properties": {
                              "earliestRestoreTime": {
                                "type": "string",
                                "description": "Earliest restore timestamp in UTC ISO8601 format.",
                                "readOnly": true
                              }
                            }
                          },
                          "dataApi": {
                            "description": "The Data API properties of the mongo cluster.",
                            "type": "object",
                            "properties": {
                              "mode": {
                                "description": "The mode to indicate whether the Mongo Data API is enabled for a cluster.",
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "DataApiMode",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled",
                                      "description": "Mongo Data API is enabled for the cluster."
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled",
                                      "description": "Mongo Data API is disabled for the cluster."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "privateEndpointConnections": {
                            "type": "array",
                            "description": "List of private endpoint connections.",
                            "items": {
                              "type": "object",
                              "description": "The private endpoint connection resource.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "arm-id",
                                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the resource",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                                  "readOnly": true
                                },
                                "systemData": {
                                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "createdBy": {
                                      "type": "string",
                                      "description": "The identity that created the resource."
                                    },
                                    "createdByType": {
                                      "type": "string",
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "createdAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource creation (UTC)."
                                    },
                                    "lastModifiedBy": {
                                      "type": "string",
                                      "description": "The identity that last modified the resource."
                                    },
                                    "lastModifiedByType": {
                                      "type": "string",
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource last modification (UTC)"
                                    }
                                  }
                                },
                                "properties": {
                                  "description": "Resource properties.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "groupIds": {
                                      "type": "array",
                                      "description": "The group ids for the private endpoint resource.",
                                      "items": {
                                        "type": "string"
                                      },
                                      "readOnly": true
                                    },
                                    "privateEndpoint": {
                                      "description": "The private endpoint resource.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "The ARM identifier for private endpoint.",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                          "type": "string",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected"
                                          ],
                                          "x-ms-enum": {
                                            "name": "PrivateEndpointServiceConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The reason for approval/rejection of the connection."
                                        },
                                        "actionsRequired": {
                                          "type": "string",
                                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "The provisioning state of the private endpoint connection resource.",
                                      "type": "string",
                                      "enum": [
                                        "Succeeded",
                                        "Creating",
                                        "Deleting",
                                        "Failed"
                                      ],
                                      "x-ms-enum": {
                                        "name": "PrivateEndpointConnectionProvisioningState",
                                        "modelAsString": true
                                      },
                                      "readOnly": true
                                    }
                                  },
                                  "required": [
                                    "privateLinkServiceConnectionState"
                                  ]
                                }
                              }
                            },
                            "readOnly": true
                          },
                          "previewFeatures": {
                            "type": "array",
                            "description": "List of private endpoint connections.",
                            "items": {
                              "type": "string",
                              "description": "Preview features that can be enabled on a mongo cluster.",
                              "enum": [
                                "GeoReplicas"
                              ],
                              "x-ms-enum": {
                                "name": "PreviewFeature",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "GeoReplicas",
                                    "value": "GeoReplicas",
                                    "description": "Enables geo replicas preview feature. The feature must be set at create-time on new cluster to enable linking a geo-replica cluster to it."
                                  }
                                ]
                              }
                            }
                          },
                          "replica": {
                            "description": "The replication properties for the mongo cluster",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "sourceResourceId": {
                                "description": "The resource id the source cluster for the replica cluster.",
                                "readOnly": true,
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.DocumentDB/mongoClusters"
                                    }
                                  ]
                                }
                              },
                              "role": {
                                "description": "The replication role of the cluster",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "Primary",
                                  "AsyncReplica",
                                  "GeoAsyncReplica"
                                ],
                                "x-ms-enum": {
                                  "name": "ReplicationRole",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Primary",
                                      "value": "Primary",
                                      "description": "The cluster is a primary replica."
                                    },
                                    {
                                      "name": "AsyncReplica",
                                      "value": "AsyncReplica",
                                      "description": "The cluster is a local asynchronous replica."
                                    },
                                    {
                                      "name": "GeoAsyncReplica",
                                      "value": "GeoAsyncReplica",
                                      "description": "The cluster is a geo-asynchronous replica."
                                    }
                                  ]
                                }
                              },
                              "replicationState": {
                                "description": "The replication link state of the replica cluster.",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "Active",
                                  "Catchup",
                                  "Provisioning",
                                  "Updating",
                                  "Broken",
                                  "Reconfiguring"
                                ],
                                "x-ms-enum": {
                                  "name": "ReplicationState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Active",
                                      "value": "Active",
                                      "description": "Replication link is active."
                                    },
                                    {
                                      "name": "Catchup",
                                      "value": "Catchup",
                                      "description": "Replica is catching-up with the primary. This can occur after the replica is created or after a promotion is triggered."
                                    },
                                    {
                                      "name": "Provisioning",
                                      "value": "Provisioning",
                                      "description": "Replica and replication link to the primary is being created."
                                    },
                                    {
                                      "name": "Updating",
                                      "value": "Updating",
                                      "description": "Replication link is being updated due to a change on the replica or an upgrade."
                                    },
                                    {
                                      "name": "Broken",
                                      "value": "Broken",
                                      "description": "Replication link is broken and the replica may need to be recreated."
                                    },
                                    {
                                      "name": "Reconfiguring",
                                      "value": "Reconfiguring",
                                      "description": "Replication link is re-configuring due to a promotion event."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "infrastructureVersion": {
                            "type": "string",
                            "description": "The infrastructure version the cluster is provisioned on.",
                            "readOnly": true
                          },
                          "authConfig": {
                            "description": "The authentication configuration for the cluster.",
                            "type": "object",
                            "properties": {
                              "allowedModes": {
                                "type": "array",
                                "description": "Allowed authentication modes for data access on the cluster.",
                                "items": {
                                  "type": "string",
                                  "description": "The authentication modes supporting on the Mongo cluster.",
                                  "enum": [
                                    "NativeAuth",
                                    "MicrosoftEntraID"
                                  ],
                                  "x-ms-enum": {
                                    "name": "AuthenticationMode",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "NativeAuth",
                                        "value": "NativeAuth",
                                        "description": "Native mongo authentication mode using username and password with auth mechanism 'SCRAM-SHA-256'."
                                      },
                                      {
                                        "name": "MicrosoftEntraID",
                                        "value": "MicrosoftEntraID",
                                        "description": "Microsoft Entra ID authentication mode using Entra users assigned to the cluster and auth mechanism 'MONGODB-OIDC'."
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "encryption": {
                            "description": "The encryption configuration for the cluster. Depends on identity being configured.",
                            "type": "object",
                            "properties": {
                              "customerManagedKeyEncryption": {
                                "description": "Customer managed key encryption settings.",
                                "type": "object",
                                "properties": {
                                  "keyEncryptionKeyIdentity": {
                                    "description": "The identity used to access the key encryption key.",
                                    "type": "object",
                                    "properties": {
                                      "identityType": {
                                        "description": "The type of identity. Only 'UserAssignedIdentity' is supported.",
                                        "type": "string",
                                        "enum": [
                                          "UserAssignedIdentity"
                                        ],
                                        "x-ms-enum": {
                                          "name": "KeyEncryptionKeyIdentityType",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "UserAssignedIdentity",
                                              "value": "UserAssignedIdentity",
                                              "description": "User assigned identity."
                                            }
                                          ]
                                        }
                                      },
                                      "userAssignedIdentityResourceId": {
                                        "type": "string",
                                        "description": "The user assigned identity resource id."
                                      }
                                    }
                                  },
                                  "keyEncryptionKeyUrl": {
                                    "type": "string",
                                    "description": "The URI of the key vault key used for encryption."
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "identity": {
                        "description": "The managed service identities assigned to this resource.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "title": "User-Assigned Identities",
                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                            "additionalProperties": {
                              "x-nullable": true,
                              "type": "object",
                              "description": "User assigned identity properties",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID of the assigned identity.",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID of the assigned identity.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}": {
      "get": {
        "operationId": "MongoClusters_Get",
        "tags": [
          "MongoClusters"
        ],
        "description": "Gets information about a mongo cluster.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Represents a mongo cluster resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "createMode": {
                      "description": "The mode to create a mongo cluster.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "enum": [
                        "Default",
                        "PointInTimeRestore",
                        "GeoReplica",
                        "Replica"
                      ],
                      "x-ms-enum": {
                        "name": "CreateMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Default",
                            "value": "Default",
                            "description": "Create a new mongo cluster."
                          },
                          {
                            "name": "PointInTimeRestore",
                            "value": "PointInTimeRestore",
                            "description": "Create a mongo cluster from a restore point-in-time."
                          },
                          {
                            "name": "GeoReplica",
                            "value": "GeoReplica",
                            "description": "Create a replica cluster in distinct geographic region from the source cluster."
                          },
                          {
                            "name": "Replica",
                            "value": "Replica",
                            "description": "Create a replica cluster in the same geographic region as the source cluster."
                          }
                        ]
                      }
                    },
                    "restoreParameters": {
                      "description": "The parameters to create a point-in-time restore mongo cluster.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "pointInTimeUTC": {
                          "type": "string",
                          "format": "date-time",
                          "description": "UTC point in time to restore a mongo cluster"
                        },
                        "sourceResourceId": {
                          "description": "Resource ID to locate the source cluster to restore",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.DocumentDB/mongoClusters"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "replicaParameters": {
                      "description": "The parameters to create a replica mongo cluster.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "sourceResourceId": {
                          "description": "The id of the replication source cluster.",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.DocumentDB/mongoClusters"
                              }
                            ]
                          }
                        },
                        "sourceLocation": {
                          "description": "The location of the source cluster",
                          "type": "string"
                        }
                      },
                      "required": [
                        "sourceResourceId",
                        "sourceLocation"
                      ]
                    },
                    "administrator": {
                      "description": "The local administrator properties for the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "userName": {
                          "type": "string",
                          "description": "The administrator user name.",
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ]
                        },
                        "password": {
                          "type": "string",
                          "format": "password",
                          "description": "The administrator password.",
                          "x-ms-mutability": [
                            "update",
                            "create"
                          ],
                          "x-ms-secret": true
                        }
                      }
                    },
                    "serverVersion": {
                      "type": "string",
                      "description": "The Mongo DB server version. Defaults to the latest available version if not specified."
                    },
                    "connectionString": {
                      "type": "string",
                      "description": "The default mongo connection string for the cluster.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the mongo cluster.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Updating",
                        "Dropping"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "An operation is in-progress on the resource."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "An update operation is in-progress on the resource."
                          },
                          {
                            "name": "Dropping",
                            "value": "Dropping",
                            "description": "A drop operation is in-progress on the resource."
                          }
                        ]
                      }
                    },
                    "clusterStatus": {
                      "description": "The status of the mongo cluster.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Ready",
                        "Provisioning",
                        "Updating",
                        "Starting",
                        "Stopping",
                        "Stopped",
                        "Dropping"
                      ],
                      "x-ms-enum": {
                        "name": "MongoClusterStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Ready",
                            "value": "Ready",
                            "description": "The mongo cluster resource is ready for use."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The mongo cluster resource is being provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The mongo cluster resource is being updated."
                          },
                          {
                            "name": "Starting",
                            "value": "Starting",
                            "description": "The mongo cluster resource is being started."
                          },
                          {
                            "name": "Stopping",
                            "value": "Stopping",
                            "description": "The mongo cluster resource is being stopped."
                          },
                          {
                            "name": "Stopped",
                            "value": "Stopped",
                            "description": "The mongo cluster resource is stopped."
                          },
                          {
                            "name": "Dropping",
                            "value": "Dropping",
                            "description": "The mongo cluster resource is being dropped."
                          }
                        ]
                      }
                    },
                    "publicNetworkAccess": {
                      "description": "Whether or not public endpoint access is allowed for this mongo cluster.",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "If set, mongo cluster can be accessed through private and public methods."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "If set, the private endpoints are the exclusive access method."
                          }
                        ]
                      }
                    },
                    "highAvailability": {
                      "description": "The high availability properties of the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "targetMode": {
                          "description": "The target high availability mode requested for the cluster.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "SameZone",
                            "ZoneRedundantPreferred"
                          ],
                          "x-ms-enum": {
                            "name": "HighAvailabilityMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "High availability mode is disabled. This mode is can see availability impact during faults or maintenance and is not recommended for production."
                              },
                              {
                                "name": "SameZone",
                                "value": "SameZone",
                                "description": "High availability mode is enabled, where each server in a shard is placed in the same availability zone."
                              },
                              {
                                "name": "ZoneRedundantPreferred",
                                "value": "ZoneRedundantPreferred",
                                "description": "High availability mode is enabled and preferences ZoneRedundant if availability zones capacity is available in the region, otherwise falls-back to provisioning with SameZone."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "storage": {
                      "description": "The storage properties of the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "sizeGb": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The size of the data disk assigned to each server."
                        },
                        "type": {
                          "description": "The type of storage to provision the cluster servers with.",
                          "type": "string",
                          "enum": [
                            "PremiumSSD",
                            "PremiumSSDv2"
                          ],
                          "x-ms-enum": {
                            "name": "StorageType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "PremiumSSD",
                                "value": "PremiumSSD",
                                "description": "Premium SSD for high performance workloads."
                              },
                              {
                                "name": "PremiumSSDv2",
                                "value": "PremiumSSDv2",
                                "description": "Premium SSD v2 for very IO-intensive workloads. This is a preview option and has additional limitations."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "sharding": {
                      "description": "The sharding properties of the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "shardCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Number of shards to provision on the cluster."
                        }
                      }
                    },
                    "compute": {
                      "description": "The compute properties of the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "tier": {
                          "type": "string",
                          "description": "The compute tier to assign to the cluster, where each tier maps to a virtual-core and memory size. Example values: 'M30', 'M40'."
                        }
                      }
                    },
                    "backup": {
                      "description": "The backup properties of the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "earliestRestoreTime": {
                          "type": "string",
                          "description": "Earliest restore timestamp in UTC ISO8601 format.",
                          "readOnly": true
                        }
                      }
                    },
                    "dataApi": {
                      "description": "The Data API properties of the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "description": "The mode to indicate whether the Mongo Data API is enabled for a cluster.",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "DataApiMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Mongo Data API is enabled for the cluster."
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Mongo Data API is disabled for the cluster."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "description": "List of private endpoint connections.",
                      "items": {
                        "type": "object",
                        "description": "The private endpoint connection resource.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the resource",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                            "readOnly": true
                          },
                          "systemData": {
                            "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          },
                          "properties": {
                            "description": "Resource properties.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "groupIds": {
                                "type": "array",
                                "description": "The group ids for the private endpoint resource.",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "privateEndpoint": {
                                "description": "The private endpoint resource.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The ARM identifier for private endpoint.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                },
                                "readOnly": true
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "previewFeatures": {
                      "type": "array",
                      "description": "List of private endpoint connections.",
                      "items": {
                        "type": "string",
                        "description": "Preview features that can be enabled on a mongo cluster.",
                        "enum": [
                          "GeoReplicas"
                        ],
                        "x-ms-enum": {
                          "name": "PreviewFeature",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "GeoReplicas",
                              "value": "GeoReplicas",
                              "description": "Enables geo replicas preview feature. The feature must be set at create-time on new cluster to enable linking a geo-replica cluster to it."
                            }
                          ]
                        }
                      }
                    },
                    "replica": {
                      "description": "The replication properties for the mongo cluster",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "sourceResourceId": {
                          "description": "The resource id the source cluster for the replica cluster.",
                          "readOnly": true,
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.DocumentDB/mongoClusters"
                              }
                            ]
                          }
                        },
                        "role": {
                          "description": "The replication role of the cluster",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Primary",
                            "AsyncReplica",
                            "GeoAsyncReplica"
                          ],
                          "x-ms-enum": {
                            "name": "ReplicationRole",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Primary",
                                "value": "Primary",
                                "description": "The cluster is a primary replica."
                              },
                              {
                                "name": "AsyncReplica",
                                "value": "AsyncReplica",
                                "description": "The cluster is a local asynchronous replica."
                              },
                              {
                                "name": "GeoAsyncReplica",
                                "value": "GeoAsyncReplica",
                                "description": "The cluster is a geo-asynchronous replica."
                              }
                            ]
                          }
                        },
                        "replicationState": {
                          "description": "The replication link state of the replica cluster.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Active",
                            "Catchup",
                            "Provisioning",
                            "Updating",
                            "Broken",
                            "Reconfiguring"
                          ],
                          "x-ms-enum": {
                            "name": "ReplicationState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Active",
                                "value": "Active",
                                "description": "Replication link is active."
                              },
                              {
                                "name": "Catchup",
                                "value": "Catchup",
                                "description": "Replica is catching-up with the primary. This can occur after the replica is created or after a promotion is triggered."
                              },
                              {
                                "name": "Provisioning",
                                "value": "Provisioning",
                                "description": "Replica and replication link to the primary is being created."
                              },
                              {
                                "name": "Updating",
                                "value": "Updating",
                                "description": "Replication link is being updated due to a change on the replica or an upgrade."
                              },
                              {
                                "name": "Broken",
                                "value": "Broken",
                                "description": "Replication link is broken and the replica may need to be recreated."
                              },
                              {
                                "name": "Reconfiguring",
                                "value": "Reconfiguring",
                                "description": "Replication link is re-configuring due to a promotion event."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "infrastructureVersion": {
                      "type": "string",
                      "description": "The infrastructure version the cluster is provisioned on.",
                      "readOnly": true
                    },
                    "authConfig": {
                      "description": "The authentication configuration for the cluster.",
                      "type": "object",
                      "properties": {
                        "allowedModes": {
                          "type": "array",
                          "description": "Allowed authentication modes for data access on the cluster.",
                          "items": {
                            "type": "string",
                            "description": "The authentication modes supporting on the Mongo cluster.",
                            "enum": [
                              "NativeAuth",
                              "MicrosoftEntraID"
                            ],
                            "x-ms-enum": {
                              "name": "AuthenticationMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "NativeAuth",
                                  "value": "NativeAuth",
                                  "description": "Native mongo authentication mode using username and password with auth mechanism 'SCRAM-SHA-256'."
                                },
                                {
                                  "name": "MicrosoftEntraID",
                                  "value": "MicrosoftEntraID",
                                  "description": "Microsoft Entra ID authentication mode using Entra users assigned to the cluster and auth mechanism 'MONGODB-OIDC'."
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "encryption": {
                      "description": "The encryption configuration for the cluster. Depends on identity being configured.",
                      "type": "object",
                      "properties": {
                        "customerManagedKeyEncryption": {
                          "description": "Customer managed key encryption settings.",
                          "type": "object",
                          "properties": {
                            "keyEncryptionKeyIdentity": {
                              "description": "The identity used to access the key encryption key.",
                              "type": "object",
                              "properties": {
                                "identityType": {
                                  "description": "The type of identity. Only 'UserAssignedIdentity' is supported.",
                                  "type": "string",
                                  "enum": [
                                    "UserAssignedIdentity"
                                  ],
                                  "x-ms-enum": {
                                    "name": "KeyEncryptionKeyIdentityType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "UserAssignedIdentity",
                                        "value": "UserAssignedIdentity",
                                        "description": "User assigned identity."
                                      }
                                    ]
                                  }
                                },
                                "userAssignedIdentityResourceId": {
                                  "type": "string",
                                  "description": "The user assigned identity resource id."
                                }
                              }
                            },
                            "keyEncryptionKeyUrl": {
                              "type": "string",
                              "description": "The URI of the key vault key used for encryption."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "MongoClusters_CreateOrUpdate",
        "tags": [
          "MongoClusters"
        ],
        "description": "Create or update a mongo cluster. Update overwrites all properties for the resource. To only modify some of the properties, use PATCH.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Represents a mongo cluster resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "createMode": {
                      "description": "The mode to create a mongo cluster.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "enum": [
                        "Default",
                        "PointInTimeRestore",
                        "GeoReplica",
                        "Replica"
                      ],
                      "x-ms-enum": {
                        "name": "CreateMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Default",
                            "value": "Default",
                            "description": "Create a new mongo cluster."
                          },
                          {
                            "name": "PointInTimeRestore",
                            "value": "PointInTimeRestore",
                            "description": "Create a mongo cluster from a restore point-in-time."
                          },
                          {
                            "name": "GeoReplica",
                            "value": "GeoReplica",
                            "description": "Create a replica cluster in distinct geographic region from the source cluster."
                          },
                          {
                            "name": "Replica",
                            "value": "Replica",
                            "description": "Create a replica cluster in the same geographic region as the source cluster."
                          }
                        ]
                      }
                    },
                    "restoreParameters": {
                      "description": "The parameters to create a point-in-time restore mongo cluster.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "pointInTimeUTC": {
                          "type": "string",
                          "format": "date-time",
                          "description": "UTC point in time to restore a mongo cluster"
                        },
                        "sourceResourceId": {
                          "description": "Resource ID to locate the source cluster to restore",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.DocumentDB/mongoClusters"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "replicaParameters": {
                      "description": "The parameters to create a replica mongo cluster.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "sourceResourceId": {
                          "description": "The id of the replication source cluster.",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.DocumentDB/mongoClusters"
                              }
                            ]
                          }
                        },
                        "sourceLocation": {
                          "description": "The location of the source cluster",
                          "type": "string"
                        }
                      },
                      "required": [
                        "sourceResourceId",
                        "sourceLocation"
                      ]
                    },
                    "administrator": {
                      "description": "The local administrator properties for the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "userName": {
                          "type": "string",
                          "description": "The administrator user name.",
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ]
                        },
                        "password": {
                          "type": "string",
                          "format": "password",
                          "description": "The administrator password.",
                          "x-ms-mutability": [
                            "update",
                            "create"
                          ],
                          "x-ms-secret": true
                        }
                      }
                    },
                    "serverVersion": {
                      "type": "string",
                      "description": "The Mongo DB server version. Defaults to the latest available version if not specified."
                    },
                    "connectionString": {
                      "type": "string",
                      "description": "The default mongo connection string for the cluster.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the mongo cluster.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Updating",
                        "Dropping"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "An operation is in-progress on the resource."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "An update operation is in-progress on the resource."
                          },
                          {
                            "name": "Dropping",
                            "value": "Dropping",
                            "description": "A drop operation is in-progress on the resource."
                          }
                        ]
                      }
                    },
                    "clusterStatus": {
                      "description": "The status of the mongo cluster.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Ready",
                        "Provisioning",
                        "Updating",
                        "Starting",
                        "Stopping",
                        "Stopped",
                        "Dropping"
                      ],
                      "x-ms-enum": {
                        "name": "MongoClusterStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Ready",
                            "value": "Ready",
                            "description": "The mongo cluster resource is ready for use."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The mongo cluster resource is being provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The mongo cluster resource is being updated."
                          },
                          {
                            "name": "Starting",
                            "value": "Starting",
                            "description": "The mongo cluster resource is being started."
                          },
                          {
                            "name": "Stopping",
                            "value": "Stopping",
                            "description": "The mongo cluster resource is being stopped."
                          },
                          {
                            "name": "Stopped",
                            "value": "Stopped",
                            "description": "The mongo cluster resource is stopped."
                          },
                          {
                            "name": "Dropping",
                            "value": "Dropping",
                            "description": "The mongo cluster resource is being dropped."
                          }
                        ]
                      }
                    },
                    "publicNetworkAccess": {
                      "description": "Whether or not public endpoint access is allowed for this mongo cluster.",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "If set, mongo cluster can be accessed through private and public methods."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "If set, the private endpoints are the exclusive access method."
                          }
                        ]
                      }
                    },
                    "highAvailability": {
                      "description": "The high availability properties of the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "targetMode": {
                          "description": "The target high availability mode requested for the cluster.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "SameZone",
                            "ZoneRedundantPreferred"
                          ],
                          "x-ms-enum": {
                            "name": "HighAvailabilityMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "High availability mode is disabled. This mode is can see availability impact during faults or maintenance and is not recommended for production."
                              },
                              {
                                "name": "SameZone",
                                "value": "SameZone",
                                "description": "High availability mode is enabled, where each server in a shard is placed in the same availability zone."
                              },
                              {
                                "name": "ZoneRedundantPreferred",
                                "value": "ZoneRedundantPreferred",
                                "description": "High availability mode is enabled and preferences ZoneRedundant if availability zones capacity is available in the region, otherwise falls-back to provisioning with SameZone."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "storage": {
                      "description": "The storage properties of the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "sizeGb": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The size of the data disk assigned to each server."
                        },
                        "type": {
                          "description": "The type of storage to provision the cluster servers with.",
                          "type": "string",
                          "enum": [
                            "PremiumSSD",
                            "PremiumSSDv2"
                          ],
                          "x-ms-enum": {
                            "name": "StorageType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "PremiumSSD",
                                "value": "PremiumSSD",
                                "description": "Premium SSD for high performance workloads."
                              },
                              {
                                "name": "PremiumSSDv2",
                                "value": "PremiumSSDv2",
                                "description": "Premium SSD v2 for very IO-intensive workloads. This is a preview option and has additional limitations."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "sharding": {
                      "description": "The sharding properties of the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "shardCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Number of shards to provision on the cluster."
                        }
                      }
                    },
                    "compute": {
                      "description": "The compute properties of the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "tier": {
                          "type": "string",
                          "description": "The compute tier to assign to the cluster, where each tier maps to a virtual-core and memory size. Example values: 'M30', 'M40'."
                        }
                      }
                    },
                    "backup": {
                      "description": "The backup properties of the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "earliestRestoreTime": {
                          "type": "string",
                          "description": "Earliest restore timestamp in UTC ISO8601 format.",
                          "readOnly": true
                        }
                      }
                    },
                    "dataApi": {
                      "description": "The Data API properties of the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "description": "The mode to indicate whether the Mongo Data API is enabled for a cluster.",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "DataApiMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Mongo Data API is enabled for the cluster."
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Mongo Data API is disabled for the cluster."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "description": "List of private endpoint connections.",
                      "items": {
                        "type": "object",
                        "description": "The private endpoint connection resource.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the resource",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                            "readOnly": true
                          },
                          "systemData": {
                            "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          },
                          "properties": {
                            "description": "Resource properties.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "groupIds": {
                                "type": "array",
                                "description": "The group ids for the private endpoint resource.",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "privateEndpoint": {
                                "description": "The private endpoint resource.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The ARM identifier for private endpoint.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                },
                                "readOnly": true
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "previewFeatures": {
                      "type": "array",
                      "description": "List of private endpoint connections.",
                      "items": {
                        "type": "string",
                        "description": "Preview features that can be enabled on a mongo cluster.",
                        "enum": [
                          "GeoReplicas"
                        ],
                        "x-ms-enum": {
                          "name": "PreviewFeature",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "GeoReplicas",
                              "value": "GeoReplicas",
                              "description": "Enables geo replicas preview feature. The feature must be set at create-time on new cluster to enable linking a geo-replica cluster to it."
                            }
                          ]
                        }
                      }
                    },
                    "replica": {
                      "description": "The replication properties for the mongo cluster",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "sourceResourceId": {
                          "description": "The resource id the source cluster for the replica cluster.",
                          "readOnly": true,
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.DocumentDB/mongoClusters"
                              }
                            ]
                          }
                        },
                        "role": {
                          "description": "The replication role of the cluster",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Primary",
                            "AsyncReplica",
                            "GeoAsyncReplica"
                          ],
                          "x-ms-enum": {
                            "name": "ReplicationRole",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Primary",
                                "value": "Primary",
                                "description": "The cluster is a primary replica."
                              },
                              {
                                "name": "AsyncReplica",
                                "value": "AsyncReplica",
                                "description": "The cluster is a local asynchronous replica."
                              },
                              {
                                "name": "GeoAsyncReplica",
                                "value": "GeoAsyncReplica",
                                "description": "The cluster is a geo-asynchronous replica."
                              }
                            ]
                          }
                        },
                        "replicationState": {
                          "description": "The replication link state of the replica cluster.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Active",
                            "Catchup",
                            "Provisioning",
                            "Updating",
                            "Broken",
                            "Reconfiguring"
                          ],
                          "x-ms-enum": {
                            "name": "ReplicationState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Active",
                                "value": "Active",
                                "description": "Replication link is active."
                              },
                              {
                                "name": "Catchup",
                                "value": "Catchup",
                                "description": "Replica is catching-up with the primary. This can occur after the replica is created or after a promotion is triggered."
                              },
                              {
                                "name": "Provisioning",
                                "value": "Provisioning",
                                "description": "Replica and replication link to the primary is being created."
                              },
                              {
                                "name": "Updating",
                                "value": "Updating",
                                "description": "Replication link is being updated due to a change on the replica or an upgrade."
                              },
                              {
                                "name": "Broken",
                                "value": "Broken",
                                "description": "Replication link is broken and the replica may need to be recreated."
                              },
                              {
                                "name": "Reconfiguring",
                                "value": "Reconfiguring",
                                "description": "Replication link is re-configuring due to a promotion event."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "infrastructureVersion": {
                      "type": "string",
                      "description": "The infrastructure version the cluster is provisioned on.",
                      "readOnly": true
                    },
                    "authConfig": {
                      "description": "The authentication configuration for the cluster.",
                      "type": "object",
                      "properties": {
                        "allowedModes": {
                          "type": "array",
                          "description": "Allowed authentication modes for data access on the cluster.",
                          "items": {
                            "type": "string",
                            "description": "The authentication modes supporting on the Mongo cluster.",
                            "enum": [
                              "NativeAuth",
                              "MicrosoftEntraID"
                            ],
                            "x-ms-enum": {
                              "name": "AuthenticationMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "NativeAuth",
                                  "value": "NativeAuth",
                                  "description": "Native mongo authentication mode using username and password with auth mechanism 'SCRAM-SHA-256'."
                                },
                                {
                                  "name": "MicrosoftEntraID",
                                  "value": "MicrosoftEntraID",
                                  "description": "Microsoft Entra ID authentication mode using Entra users assigned to the cluster and auth mechanism 'MONGODB-OIDC'."
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "encryption": {
                      "description": "The encryption configuration for the cluster. Depends on identity being configured.",
                      "type": "object",
                      "properties": {
                        "customerManagedKeyEncryption": {
                          "description": "Customer managed key encryption settings.",
                          "type": "object",
                          "properties": {
                            "keyEncryptionKeyIdentity": {
                              "description": "The identity used to access the key encryption key.",
                              "type": "object",
                              "properties": {
                                "identityType": {
                                  "description": "The type of identity. Only 'UserAssignedIdentity' is supported.",
                                  "type": "string",
                                  "enum": [
                                    "UserAssignedIdentity"
                                  ],
                                  "x-ms-enum": {
                                    "name": "KeyEncryptionKeyIdentityType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "UserAssignedIdentity",
                                        "value": "UserAssignedIdentity",
                                        "description": "User assigned identity."
                                      }
                                    ]
                                  }
                                },
                                "userAssignedIdentityResourceId": {
                                  "type": "string",
                                  "description": "The user assigned identity resource id."
                                }
                              }
                            },
                            "keyEncryptionKeyUrl": {
                              "type": "string",
                              "description": "The URI of the key vault key used for encryption."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'MongoCluster' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Represents a mongo cluster resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "createMode": {
                      "description": "The mode to create a mongo cluster.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "enum": [
                        "Default",
                        "PointInTimeRestore",
                        "GeoReplica",
                        "Replica"
                      ],
                      "x-ms-enum": {
                        "name": "CreateMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Default",
                            "value": "Default",
                            "description": "Create a new mongo cluster."
                          },
                          {
                            "name": "PointInTimeRestore",
                            "value": "PointInTimeRestore",
                            "description": "Create a mongo cluster from a restore point-in-time."
                          },
                          {
                            "name": "GeoReplica",
                            "value": "GeoReplica",
                            "description": "Create a replica cluster in distinct geographic region from the source cluster."
                          },
                          {
                            "name": "Replica",
                            "value": "Replica",
                            "description": "Create a replica cluster in the same geographic region as the source cluster."
                          }
                        ]
                      }
                    },
                    "restoreParameters": {
                      "description": "The parameters to create a point-in-time restore mongo cluster.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "pointInTimeUTC": {
                          "type": "string",
                          "format": "date-time",
                          "description": "UTC point in time to restore a mongo cluster"
                        },
                        "sourceResourceId": {
                          "description": "Resource ID to locate the source cluster to restore",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.DocumentDB/mongoClusters"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "replicaParameters": {
                      "description": "The parameters to create a replica mongo cluster.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "sourceResourceId": {
                          "description": "The id of the replication source cluster.",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.DocumentDB/mongoClusters"
                              }
                            ]
                          }
                        },
                        "sourceLocation": {
                          "description": "The location of the source cluster",
                          "type": "string"
                        }
                      },
                      "required": [
                        "sourceResourceId",
                        "sourceLocation"
                      ]
                    },
                    "administrator": {
                      "description": "The local administrator properties for the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "userName": {
                          "type": "string",
                          "description": "The administrator user name.",
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ]
                        },
                        "password": {
                          "type": "string",
                          "format": "password",
                          "description": "The administrator password.",
                          "x-ms-mutability": [
                            "update",
                            "create"
                          ],
                          "x-ms-secret": true
                        }
                      }
                    },
                    "serverVersion": {
                      "type": "string",
                      "description": "The Mongo DB server version. Defaults to the latest available version if not specified."
                    },
                    "connectionString": {
                      "type": "string",
                      "description": "The default mongo connection string for the cluster.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the mongo cluster.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Updating",
                        "Dropping"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "An operation is in-progress on the resource."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "An update operation is in-progress on the resource."
                          },
                          {
                            "name": "Dropping",
                            "value": "Dropping",
                            "description": "A drop operation is in-progress on the resource."
                          }
                        ]
                      }
                    },
                    "clusterStatus": {
                      "description": "The status of the mongo cluster.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Ready",
                        "Provisioning",
                        "Updating",
                        "Starting",
                        "Stopping",
                        "Stopped",
                        "Dropping"
                      ],
                      "x-ms-enum": {
                        "name": "MongoClusterStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Ready",
                            "value": "Ready",
                            "description": "The mongo cluster resource is ready for use."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The mongo cluster resource is being provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The mongo cluster resource is being updated."
                          },
                          {
                            "name": "Starting",
                            "value": "Starting",
                            "description": "The mongo cluster resource is being started."
                          },
                          {
                            "name": "Stopping",
                            "value": "Stopping",
                            "description": "The mongo cluster resource is being stopped."
                          },
                          {
                            "name": "Stopped",
                            "value": "Stopped",
                            "description": "The mongo cluster resource is stopped."
                          },
                          {
                            "name": "Dropping",
                            "value": "Dropping",
                            "description": "The mongo cluster resource is being dropped."
                          }
                        ]
                      }
                    },
                    "publicNetworkAccess": {
                      "description": "Whether or not public endpoint access is allowed for this mongo cluster.",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "If set, mongo cluster can be accessed through private and public methods."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "If set, the private endpoints are the exclusive access method."
                          }
                        ]
                      }
                    },
                    "highAvailability": {
                      "description": "The high availability properties of the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "targetMode": {
                          "description": "The target high availability mode requested for the cluster.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "SameZone",
                            "ZoneRedundantPreferred"
                          ],
                          "x-ms-enum": {
                            "name": "HighAvailabilityMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "High availability mode is disabled. This mode is can see availability impact during faults or maintenance and is not recommended for production."
                              },
                              {
                                "name": "SameZone",
                                "value": "SameZone",
                                "description": "High availability mode is enabled, where each server in a shard is placed in the same availability zone."
                              },
                              {
                                "name": "ZoneRedundantPreferred",
                                "value": "ZoneRedundantPreferred",
                                "description": "High availability mode is enabled and preferences ZoneRedundant if availability zones capacity is available in the region, otherwise falls-back to provisioning with SameZone."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "storage": {
                      "description": "The storage properties of the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "sizeGb": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The size of the data disk assigned to each server."
                        },
                        "type": {
                          "description": "The type of storage to provision the cluster servers with.",
                          "type": "string",
                          "enum": [
                            "PremiumSSD",
                            "PremiumSSDv2"
                          ],
                          "x-ms-enum": {
                            "name": "StorageType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "PremiumSSD",
                                "value": "PremiumSSD",
                                "description": "Premium SSD for high performance workloads."
                              },
                              {
                                "name": "PremiumSSDv2",
                                "value": "PremiumSSDv2",
                                "description": "Premium SSD v2 for very IO-intensive workloads. This is a preview option and has additional limitations."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "sharding": {
                      "description": "The sharding properties of the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "shardCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Number of shards to provision on the cluster."
                        }
                      }
                    },
                    "compute": {
                      "description": "The compute properties of the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "tier": {
                          "type": "string",
                          "description": "The compute tier to assign to the cluster, where each tier maps to a virtual-core and memory size. Example values: 'M30', 'M40'."
                        }
                      }
                    },
                    "backup": {
                      "description": "The backup properties of the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "earliestRestoreTime": {
                          "type": "string",
                          "description": "Earliest restore timestamp in UTC ISO8601 format.",
                          "readOnly": true
                        }
                      }
                    },
                    "dataApi": {
                      "description": "The Data API properties of the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "description": "The mode to indicate whether the Mongo Data API is enabled for a cluster.",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "DataApiMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Mongo Data API is enabled for the cluster."
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Mongo Data API is disabled for the cluster."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "description": "List of private endpoint connections.",
                      "items": {
                        "type": "object",
                        "description": "The private endpoint connection resource.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the resource",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                            "readOnly": true
                          },
                          "systemData": {
                            "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          },
                          "properties": {
                            "description": "Resource properties.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "groupIds": {
                                "type": "array",
                                "description": "The group ids for the private endpoint resource.",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "privateEndpoint": {
                                "description": "The private endpoint resource.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The ARM identifier for private endpoint.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                },
                                "readOnly": true
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "previewFeatures": {
                      "type": "array",
                      "description": "List of private endpoint connections.",
                      "items": {
                        "type": "string",
                        "description": "Preview features that can be enabled on a mongo cluster.",
                        "enum": [
                          "GeoReplicas"
                        ],
                        "x-ms-enum": {
                          "name": "PreviewFeature",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "GeoReplicas",
                              "value": "GeoReplicas",
                              "description": "Enables geo replicas preview feature. The feature must be set at create-time on new cluster to enable linking a geo-replica cluster to it."
                            }
                          ]
                        }
                      }
                    },
                    "replica": {
                      "description": "The replication properties for the mongo cluster",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "sourceResourceId": {
                          "description": "The resource id the source cluster for the replica cluster.",
                          "readOnly": true,
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.DocumentDB/mongoClusters"
                              }
                            ]
                          }
                        },
                        "role": {
                          "description": "The replication role of the cluster",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Primary",
                            "AsyncReplica",
                            "GeoAsyncReplica"
                          ],
                          "x-ms-enum": {
                            "name": "ReplicationRole",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Primary",
                                "value": "Primary",
                                "description": "The cluster is a primary replica."
                              },
                              {
                                "name": "AsyncReplica",
                                "value": "AsyncReplica",
                                "description": "The cluster is a local asynchronous replica."
                              },
                              {
                                "name": "GeoAsyncReplica",
                                "value": "GeoAsyncReplica",
                                "description": "The cluster is a geo-asynchronous replica."
                              }
                            ]
                          }
                        },
                        "replicationState": {
                          "description": "The replication link state of the replica cluster.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Active",
                            "Catchup",
                            "Provisioning",
                            "Updating",
                            "Broken",
                            "Reconfiguring"
                          ],
                          "x-ms-enum": {
                            "name": "ReplicationState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Active",
                                "value": "Active",
                                "description": "Replication link is active."
                              },
                              {
                                "name": "Catchup",
                                "value": "Catchup",
                                "description": "Replica is catching-up with the primary. This can occur after the replica is created or after a promotion is triggered."
                              },
                              {
                                "name": "Provisioning",
                                "value": "Provisioning",
                                "description": "Replica and replication link to the primary is being created."
                              },
                              {
                                "name": "Updating",
                                "value": "Updating",
                                "description": "Replication link is being updated due to a change on the replica or an upgrade."
                              },
                              {
                                "name": "Broken",
                                "value": "Broken",
                                "description": "Replication link is broken and the replica may need to be recreated."
                              },
                              {
                                "name": "Reconfiguring",
                                "value": "Reconfiguring",
                                "description": "Replication link is re-configuring due to a promotion event."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "infrastructureVersion": {
                      "type": "string",
                      "description": "The infrastructure version the cluster is provisioned on.",
                      "readOnly": true
                    },
                    "authConfig": {
                      "description": "The authentication configuration for the cluster.",
                      "type": "object",
                      "properties": {
                        "allowedModes": {
                          "type": "array",
                          "description": "Allowed authentication modes for data access on the cluster.",
                          "items": {
                            "type": "string",
                            "description": "The authentication modes supporting on the Mongo cluster.",
                            "enum": [
                              "NativeAuth",
                              "MicrosoftEntraID"
                            ],
                            "x-ms-enum": {
                              "name": "AuthenticationMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "NativeAuth",
                                  "value": "NativeAuth",
                                  "description": "Native mongo authentication mode using username and password with auth mechanism 'SCRAM-SHA-256'."
                                },
                                {
                                  "name": "MicrosoftEntraID",
                                  "value": "MicrosoftEntraID",
                                  "description": "Microsoft Entra ID authentication mode using Entra users assigned to the cluster and auth mechanism 'MONGODB-OIDC'."
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "encryption": {
                      "description": "The encryption configuration for the cluster. Depends on identity being configured.",
                      "type": "object",
                      "properties": {
                        "customerManagedKeyEncryption": {
                          "description": "Customer managed key encryption settings.",
                          "type": "object",
                          "properties": {
                            "keyEncryptionKeyIdentity": {
                              "description": "The identity used to access the key encryption key.",
                              "type": "object",
                              "properties": {
                                "identityType": {
                                  "description": "The type of identity. Only 'UserAssignedIdentity' is supported.",
                                  "type": "string",
                                  "enum": [
                                    "UserAssignedIdentity"
                                  ],
                                  "x-ms-enum": {
                                    "name": "KeyEncryptionKeyIdentityType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "UserAssignedIdentity",
                                        "value": "UserAssignedIdentity",
                                        "description": "User assigned identity."
                                      }
                                    ]
                                  }
                                },
                                "userAssignedIdentityResourceId": {
                                  "type": "string",
                                  "description": "The user assigned identity resource id."
                                }
                              }
                            },
                            "keyEncryptionKeyUrl": {
                              "type": "string",
                              "description": "The URI of the key vault key used for encryption."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'MongoCluster' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Represents a mongo cluster resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "createMode": {
                      "description": "The mode to create a mongo cluster.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "enum": [
                        "Default",
                        "PointInTimeRestore",
                        "GeoReplica",
                        "Replica"
                      ],
                      "x-ms-enum": {
                        "name": "CreateMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Default",
                            "value": "Default",
                            "description": "Create a new mongo cluster."
                          },
                          {
                            "name": "PointInTimeRestore",
                            "value": "PointInTimeRestore",
                            "description": "Create a mongo cluster from a restore point-in-time."
                          },
                          {
                            "name": "GeoReplica",
                            "value": "GeoReplica",
                            "description": "Create a replica cluster in distinct geographic region from the source cluster."
                          },
                          {
                            "name": "Replica",
                            "value": "Replica",
                            "description": "Create a replica cluster in the same geographic region as the source cluster."
                          }
                        ]
                      }
                    },
                    "restoreParameters": {
                      "description": "The parameters to create a point-in-time restore mongo cluster.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "pointInTimeUTC": {
                          "type": "string",
                          "format": "date-time",
                          "description": "UTC point in time to restore a mongo cluster"
                        },
                        "sourceResourceId": {
                          "description": "Resource ID to locate the source cluster to restore",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.DocumentDB/mongoClusters"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "replicaParameters": {
                      "description": "The parameters to create a replica mongo cluster.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "sourceResourceId": {
                          "description": "The id of the replication source cluster.",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.DocumentDB/mongoClusters"
                              }
                            ]
                          }
                        },
                        "sourceLocation": {
                          "description": "The location of the source cluster",
                          "type": "string"
                        }
                      },
                      "required": [
                        "sourceResourceId",
                        "sourceLocation"
                      ]
                    },
                    "administrator": {
                      "description": "The local administrator properties for the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "userName": {
                          "type": "string",
                          "description": "The administrator user name.",
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ]
                        },
                        "password": {
                          "type": "string",
                          "format": "password",
                          "description": "The administrator password.",
                          "x-ms-mutability": [
                            "update",
                            "create"
                          ],
                          "x-ms-secret": true
                        }
                      }
                    },
                    "serverVersion": {
                      "type": "string",
                      "description": "The Mongo DB server version. Defaults to the latest available version if not specified."
                    },
                    "connectionString": {
                      "type": "string",
                      "description": "The default mongo connection string for the cluster.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the mongo cluster.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Updating",
                        "Dropping"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "An operation is in-progress on the resource."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "An update operation is in-progress on the resource."
                          },
                          {
                            "name": "Dropping",
                            "value": "Dropping",
                            "description": "A drop operation is in-progress on the resource."
                          }
                        ]
                      }
                    },
                    "clusterStatus": {
                      "description": "The status of the mongo cluster.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Ready",
                        "Provisioning",
                        "Updating",
                        "Starting",
                        "Stopping",
                        "Stopped",
                        "Dropping"
                      ],
                      "x-ms-enum": {
                        "name": "MongoClusterStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Ready",
                            "value": "Ready",
                            "description": "The mongo cluster resource is ready for use."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The mongo cluster resource is being provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The mongo cluster resource is being updated."
                          },
                          {
                            "name": "Starting",
                            "value": "Starting",
                            "description": "The mongo cluster resource is being started."
                          },
                          {
                            "name": "Stopping",
                            "value": "Stopping",
                            "description": "The mongo cluster resource is being stopped."
                          },
                          {
                            "name": "Stopped",
                            "value": "Stopped",
                            "description": "The mongo cluster resource is stopped."
                          },
                          {
                            "name": "Dropping",
                            "value": "Dropping",
                            "description": "The mongo cluster resource is being dropped."
                          }
                        ]
                      }
                    },
                    "publicNetworkAccess": {
                      "description": "Whether or not public endpoint access is allowed for this mongo cluster.",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "If set, mongo cluster can be accessed through private and public methods."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "If set, the private endpoints are the exclusive access method."
                          }
                        ]
                      }
                    },
                    "highAvailability": {
                      "description": "The high availability properties of the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "targetMode": {
                          "description": "The target high availability mode requested for the cluster.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "SameZone",
                            "ZoneRedundantPreferred"
                          ],
                          "x-ms-enum": {
                            "name": "HighAvailabilityMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "High availability mode is disabled. This mode is can see availability impact during faults or maintenance and is not recommended for production."
                              },
                              {
                                "name": "SameZone",
                                "value": "SameZone",
                                "description": "High availability mode is enabled, where each server in a shard is placed in the same availability zone."
                              },
                              {
                                "name": "ZoneRedundantPreferred",
                                "value": "ZoneRedundantPreferred",
                                "description": "High availability mode is enabled and preferences ZoneRedundant if availability zones capacity is available in the region, otherwise falls-back to provisioning with SameZone."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "storage": {
                      "description": "The storage properties of the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "sizeGb": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The size of the data disk assigned to each server."
                        },
                        "type": {
                          "description": "The type of storage to provision the cluster servers with.",
                          "type": "string",
                          "enum": [
                            "PremiumSSD",
                            "PremiumSSDv2"
                          ],
                          "x-ms-enum": {
                            "name": "StorageType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "PremiumSSD",
                                "value": "PremiumSSD",
                                "description": "Premium SSD for high performance workloads."
                              },
                              {
                                "name": "PremiumSSDv2",
                                "value": "PremiumSSDv2",
                                "description": "Premium SSD v2 for very IO-intensive workloads. This is a preview option and has additional limitations."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "sharding": {
                      "description": "The sharding properties of the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "shardCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Number of shards to provision on the cluster."
                        }
                      }
                    },
                    "compute": {
                      "description": "The compute properties of the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "tier": {
                          "type": "string",
                          "description": "The compute tier to assign to the cluster, where each tier maps to a virtual-core and memory size. Example values: 'M30', 'M40'."
                        }
                      }
                    },
                    "backup": {
                      "description": "The backup properties of the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "earliestRestoreTime": {
                          "type": "string",
                          "description": "Earliest restore timestamp in UTC ISO8601 format.",
                          "readOnly": true
                        }
                      }
                    },
                    "dataApi": {
                      "description": "The Data API properties of the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "description": "The mode to indicate whether the Mongo Data API is enabled for a cluster.",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "DataApiMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Mongo Data API is enabled for the cluster."
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Mongo Data API is disabled for the cluster."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "description": "List of private endpoint connections.",
                      "items": {
                        "type": "object",
                        "description": "The private endpoint connection resource.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the resource",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                            "readOnly": true
                          },
                          "systemData": {
                            "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          },
                          "properties": {
                            "description": "Resource properties.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "groupIds": {
                                "type": "array",
                                "description": "The group ids for the private endpoint resource.",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "privateEndpoint": {
                                "description": "The private endpoint resource.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The ARM identifier for private endpoint.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                },
                                "readOnly": true
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "previewFeatures": {
                      "type": "array",
                      "description": "List of private endpoint connections.",
                      "items": {
                        "type": "string",
                        "description": "Preview features that can be enabled on a mongo cluster.",
                        "enum": [
                          "GeoReplicas"
                        ],
                        "x-ms-enum": {
                          "name": "PreviewFeature",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "GeoReplicas",
                              "value": "GeoReplicas",
                              "description": "Enables geo replicas preview feature. The feature must be set at create-time on new cluster to enable linking a geo-replica cluster to it."
                            }
                          ]
                        }
                      }
                    },
                    "replica": {
                      "description": "The replication properties for the mongo cluster",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "sourceResourceId": {
                          "description": "The resource id the source cluster for the replica cluster.",
                          "readOnly": true,
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.DocumentDB/mongoClusters"
                              }
                            ]
                          }
                        },
                        "role": {
                          "description": "The replication role of the cluster",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Primary",
                            "AsyncReplica",
                            "GeoAsyncReplica"
                          ],
                          "x-ms-enum": {
                            "name": "ReplicationRole",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Primary",
                                "value": "Primary",
                                "description": "The cluster is a primary replica."
                              },
                              {
                                "name": "AsyncReplica",
                                "value": "AsyncReplica",
                                "description": "The cluster is a local asynchronous replica."
                              },
                              {
                                "name": "GeoAsyncReplica",
                                "value": "GeoAsyncReplica",
                                "description": "The cluster is a geo-asynchronous replica."
                              }
                            ]
                          }
                        },
                        "replicationState": {
                          "description": "The replication link state of the replica cluster.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Active",
                            "Catchup",
                            "Provisioning",
                            "Updating",
                            "Broken",
                            "Reconfiguring"
                          ],
                          "x-ms-enum": {
                            "name": "ReplicationState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Active",
                                "value": "Active",
                                "description": "Replication link is active."
                              },
                              {
                                "name": "Catchup",
                                "value": "Catchup",
                                "description": "Replica is catching-up with the primary. This can occur after the replica is created or after a promotion is triggered."
                              },
                              {
                                "name": "Provisioning",
                                "value": "Provisioning",
                                "description": "Replica and replication link to the primary is being created."
                              },
                              {
                                "name": "Updating",
                                "value": "Updating",
                                "description": "Replication link is being updated due to a change on the replica or an upgrade."
                              },
                              {
                                "name": "Broken",
                                "value": "Broken",
                                "description": "Replication link is broken and the replica may need to be recreated."
                              },
                              {
                                "name": "Reconfiguring",
                                "value": "Reconfiguring",
                                "description": "Replication link is re-configuring due to a promotion event."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "infrastructureVersion": {
                      "type": "string",
                      "description": "The infrastructure version the cluster is provisioned on.",
                      "readOnly": true
                    },
                    "authConfig": {
                      "description": "The authentication configuration for the cluster.",
                      "type": "object",
                      "properties": {
                        "allowedModes": {
                          "type": "array",
                          "description": "Allowed authentication modes for data access on the cluster.",
                          "items": {
                            "type": "string",
                            "description": "The authentication modes supporting on the Mongo cluster.",
                            "enum": [
                              "NativeAuth",
                              "MicrosoftEntraID"
                            ],
                            "x-ms-enum": {
                              "name": "AuthenticationMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "NativeAuth",
                                  "value": "NativeAuth",
                                  "description": "Native mongo authentication mode using username and password with auth mechanism 'SCRAM-SHA-256'."
                                },
                                {
                                  "name": "MicrosoftEntraID",
                                  "value": "MicrosoftEntraID",
                                  "description": "Microsoft Entra ID authentication mode using Entra users assigned to the cluster and auth mechanism 'MONGODB-OIDC'."
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "encryption": {
                      "description": "The encryption configuration for the cluster. Depends on identity being configured.",
                      "type": "object",
                      "properties": {
                        "customerManagedKeyEncryption": {
                          "description": "Customer managed key encryption settings.",
                          "type": "object",
                          "properties": {
                            "keyEncryptionKeyIdentity": {
                              "description": "The identity used to access the key encryption key.",
                              "type": "object",
                              "properties": {
                                "identityType": {
                                  "description": "The type of identity. Only 'UserAssignedIdentity' is supported.",
                                  "type": "string",
                                  "enum": [
                                    "UserAssignedIdentity"
                                  ],
                                  "x-ms-enum": {
                                    "name": "KeyEncryptionKeyIdentityType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "UserAssignedIdentity",
                                        "value": "UserAssignedIdentity",
                                        "description": "User assigned identity."
                                      }
                                    ]
                                  }
                                },
                                "userAssignedIdentityResourceId": {
                                  "type": "string",
                                  "description": "The user assigned identity resource id."
                                }
                              }
                            },
                            "keyEncryptionKeyUrl": {
                              "type": "string",
                              "description": "The URI of the key vault key used for encryption."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "MongoClusters_Update",
        "tags": [
          "MongoClusters"
        ],
        "description": "Updates an existing mongo cluster. The request body can contain one to many of the properties present in the normal mongo cluster definition.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The type used for update operations of the MongoCluster.",
              "properties": {
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "administrator": {
                      "description": "The local administrator properties for the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "userName": {
                          "type": "string",
                          "description": "The administrator user name.",
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ]
                        },
                        "password": {
                          "type": "string",
                          "format": "password",
                          "description": "The administrator password.",
                          "x-ms-mutability": [
                            "update",
                            "create"
                          ],
                          "x-ms-secret": true
                        }
                      }
                    },
                    "serverVersion": {
                      "type": "string",
                      "description": "The Mongo DB server version. Defaults to the latest available version if not specified."
                    },
                    "publicNetworkAccess": {
                      "description": "Whether or not public endpoint access is allowed for this mongo cluster.",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "If set, mongo cluster can be accessed through private and public methods."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "If set, the private endpoints are the exclusive access method."
                          }
                        ]
                      }
                    },
                    "highAvailability": {
                      "description": "The high availability properties of the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "targetMode": {
                          "description": "The target high availability mode requested for the cluster.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "SameZone",
                            "ZoneRedundantPreferred"
                          ],
                          "x-ms-enum": {
                            "name": "HighAvailabilityMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "High availability mode is disabled. This mode is can see availability impact during faults or maintenance and is not recommended for production."
                              },
                              {
                                "name": "SameZone",
                                "value": "SameZone",
                                "description": "High availability mode is enabled, where each server in a shard is placed in the same availability zone."
                              },
                              {
                                "name": "ZoneRedundantPreferred",
                                "value": "ZoneRedundantPreferred",
                                "description": "High availability mode is enabled and preferences ZoneRedundant if availability zones capacity is available in the region, otherwise falls-back to provisioning with SameZone."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "storage": {
                      "description": "The storage properties of the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "sizeGb": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The size of the data disk assigned to each server."
                        },
                        "type": {
                          "description": "The type of storage to provision the cluster servers with.",
                          "type": "string",
                          "enum": [
                            "PremiumSSD",
                            "PremiumSSDv2"
                          ],
                          "x-ms-enum": {
                            "name": "StorageType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "PremiumSSD",
                                "value": "PremiumSSD",
                                "description": "Premium SSD for high performance workloads."
                              },
                              {
                                "name": "PremiumSSDv2",
                                "value": "PremiumSSDv2",
                                "description": "Premium SSD v2 for very IO-intensive workloads. This is a preview option and has additional limitations."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "sharding": {
                      "description": "The sharding properties of the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "shardCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Number of shards to provision on the cluster."
                        }
                      }
                    },
                    "compute": {
                      "description": "The compute properties of the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "tier": {
                          "type": "string",
                          "description": "The compute tier to assign to the cluster, where each tier maps to a virtual-core and memory size. Example values: 'M30', 'M40'."
                        }
                      }
                    },
                    "backup": {
                      "description": "The backup properties of the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "earliestRestoreTime": {
                          "type": "string",
                          "description": "Earliest restore timestamp in UTC ISO8601 format.",
                          "readOnly": true
                        }
                      }
                    },
                    "dataApi": {
                      "description": "The Data API properties of the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "description": "The mode to indicate whether the Mongo Data API is enabled for a cluster.",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "DataApiMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Mongo Data API is enabled for the cluster."
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Mongo Data API is disabled for the cluster."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "previewFeatures": {
                      "type": "array",
                      "description": "List of private endpoint connections.",
                      "items": {
                        "type": "string",
                        "description": "Preview features that can be enabled on a mongo cluster.",
                        "enum": [
                          "GeoReplicas"
                        ],
                        "x-ms-enum": {
                          "name": "PreviewFeature",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "GeoReplicas",
                              "value": "GeoReplicas",
                              "description": "Enables geo replicas preview feature. The feature must be set at create-time on new cluster to enable linking a geo-replica cluster to it."
                            }
                          ]
                        }
                      }
                    },
                    "authConfig": {
                      "description": "The authentication configuration for the cluster.",
                      "type": "object",
                      "properties": {
                        "allowedModes": {
                          "type": "array",
                          "description": "Allowed authentication modes for data access on the cluster.",
                          "items": {
                            "type": "string",
                            "description": "The authentication modes supporting on the Mongo cluster.",
                            "enum": [
                              "NativeAuth",
                              "MicrosoftEntraID"
                            ],
                            "x-ms-enum": {
                              "name": "AuthenticationMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "NativeAuth",
                                  "value": "NativeAuth",
                                  "description": "Native mongo authentication mode using username and password with auth mechanism 'SCRAM-SHA-256'."
                                },
                                {
                                  "name": "MicrosoftEntraID",
                                  "value": "MicrosoftEntraID",
                                  "description": "Microsoft Entra ID authentication mode using Entra users assigned to the cluster and auth mechanism 'MONGODB-OIDC'."
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "encryption": {
                      "description": "The encryption configuration for the cluster. Depends on identity being configured.",
                      "type": "object",
                      "properties": {
                        "customerManagedKeyEncryption": {
                          "description": "Customer managed key encryption settings.",
                          "type": "object",
                          "properties": {
                            "keyEncryptionKeyIdentity": {
                              "description": "The identity used to access the key encryption key.",
                              "type": "object",
                              "properties": {
                                "identityType": {
                                  "description": "The type of identity. Only 'UserAssignedIdentity' is supported.",
                                  "type": "string",
                                  "enum": [
                                    "UserAssignedIdentity"
                                  ],
                                  "x-ms-enum": {
                                    "name": "KeyEncryptionKeyIdentityType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "UserAssignedIdentity",
                                        "value": "UserAssignedIdentity",
                                        "description": "User assigned identity."
                                      }
                                    ]
                                  }
                                },
                                "userAssignedIdentityResourceId": {
                                  "type": "string",
                                  "description": "The user assigned identity resource id."
                                }
                              }
                            },
                            "keyEncryptionKeyUrl": {
                              "type": "string",
                              "description": "The URI of the key vault key used for encryption."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Represents a mongo cluster resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "createMode": {
                      "description": "The mode to create a mongo cluster.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "enum": [
                        "Default",
                        "PointInTimeRestore",
                        "GeoReplica",
                        "Replica"
                      ],
                      "x-ms-enum": {
                        "name": "CreateMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Default",
                            "value": "Default",
                            "description": "Create a new mongo cluster."
                          },
                          {
                            "name": "PointInTimeRestore",
                            "value": "PointInTimeRestore",
                            "description": "Create a mongo cluster from a restore point-in-time."
                          },
                          {
                            "name": "GeoReplica",
                            "value": "GeoReplica",
                            "description": "Create a replica cluster in distinct geographic region from the source cluster."
                          },
                          {
                            "name": "Replica",
                            "value": "Replica",
                            "description": "Create a replica cluster in the same geographic region as the source cluster."
                          }
                        ]
                      }
                    },
                    "restoreParameters": {
                      "description": "The parameters to create a point-in-time restore mongo cluster.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "pointInTimeUTC": {
                          "type": "string",
                          "format": "date-time",
                          "description": "UTC point in time to restore a mongo cluster"
                        },
                        "sourceResourceId": {
                          "description": "Resource ID to locate the source cluster to restore",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.DocumentDB/mongoClusters"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "replicaParameters": {
                      "description": "The parameters to create a replica mongo cluster.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "sourceResourceId": {
                          "description": "The id of the replication source cluster.",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.DocumentDB/mongoClusters"
                              }
                            ]
                          }
                        },
                        "sourceLocation": {
                          "description": "The location of the source cluster",
                          "type": "string"
                        }
                      },
                      "required": [
                        "sourceResourceId",
                        "sourceLocation"
                      ]
                    },
                    "administrator": {
                      "description": "The local administrator properties for the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "userName": {
                          "type": "string",
                          "description": "The administrator user name.",
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ]
                        },
                        "password": {
                          "type": "string",
                          "format": "password",
                          "description": "The administrator password.",
                          "x-ms-mutability": [
                            "update",
                            "create"
                          ],
                          "x-ms-secret": true
                        }
                      }
                    },
                    "serverVersion": {
                      "type": "string",
                      "description": "The Mongo DB server version. Defaults to the latest available version if not specified."
                    },
                    "connectionString": {
                      "type": "string",
                      "description": "The default mongo connection string for the cluster.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the mongo cluster.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Updating",
                        "Dropping"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "An operation is in-progress on the resource."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "An update operation is in-progress on the resource."
                          },
                          {
                            "name": "Dropping",
                            "value": "Dropping",
                            "description": "A drop operation is in-progress on the resource."
                          }
                        ]
                      }
                    },
                    "clusterStatus": {
                      "description": "The status of the mongo cluster.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Ready",
                        "Provisioning",
                        "Updating",
                        "Starting",
                        "Stopping",
                        "Stopped",
                        "Dropping"
                      ],
                      "x-ms-enum": {
                        "name": "MongoClusterStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Ready",
                            "value": "Ready",
                            "description": "The mongo cluster resource is ready for use."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The mongo cluster resource is being provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The mongo cluster resource is being updated."
                          },
                          {
                            "name": "Starting",
                            "value": "Starting",
                            "description": "The mongo cluster resource is being started."
                          },
                          {
                            "name": "Stopping",
                            "value": "Stopping",
                            "description": "The mongo cluster resource is being stopped."
                          },
                          {
                            "name": "Stopped",
                            "value": "Stopped",
                            "description": "The mongo cluster resource is stopped."
                          },
                          {
                            "name": "Dropping",
                            "value": "Dropping",
                            "description": "The mongo cluster resource is being dropped."
                          }
                        ]
                      }
                    },
                    "publicNetworkAccess": {
                      "description": "Whether or not public endpoint access is allowed for this mongo cluster.",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "If set, mongo cluster can be accessed through private and public methods."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "If set, the private endpoints are the exclusive access method."
                          }
                        ]
                      }
                    },
                    "highAvailability": {
                      "description": "The high availability properties of the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "targetMode": {
                          "description": "The target high availability mode requested for the cluster.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "SameZone",
                            "ZoneRedundantPreferred"
                          ],
                          "x-ms-enum": {
                            "name": "HighAvailabilityMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "High availability mode is disabled. This mode is can see availability impact during faults or maintenance and is not recommended for production."
                              },
                              {
                                "name": "SameZone",
                                "value": "SameZone",
                                "description": "High availability mode is enabled, where each server in a shard is placed in the same availability zone."
                              },
                              {
                                "name": "ZoneRedundantPreferred",
                                "value": "ZoneRedundantPreferred",
                                "description": "High availability mode is enabled and preferences ZoneRedundant if availability zones capacity is available in the region, otherwise falls-back to provisioning with SameZone."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "storage": {
                      "description": "The storage properties of the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "sizeGb": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The size of the data disk assigned to each server."
                        },
                        "type": {
                          "description": "The type of storage to provision the cluster servers with.",
                          "type": "string",
                          "enum": [
                            "PremiumSSD",
                            "PremiumSSDv2"
                          ],
                          "x-ms-enum": {
                            "name": "StorageType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "PremiumSSD",
                                "value": "PremiumSSD",
                                "description": "Premium SSD for high performance workloads."
                              },
                              {
                                "name": "PremiumSSDv2",
                                "value": "PremiumSSDv2",
                                "description": "Premium SSD v2 for very IO-intensive workloads. This is a preview option and has additional limitations."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "sharding": {
                      "description": "The sharding properties of the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "shardCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Number of shards to provision on the cluster."
                        }
                      }
                    },
                    "compute": {
                      "description": "The compute properties of the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "tier": {
                          "type": "string",
                          "description": "The compute tier to assign to the cluster, where each tier maps to a virtual-core and memory size. Example values: 'M30', 'M40'."
                        }
                      }
                    },
                    "backup": {
                      "description": "The backup properties of the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "earliestRestoreTime": {
                          "type": "string",
                          "description": "Earliest restore timestamp in UTC ISO8601 format.",
                          "readOnly": true
                        }
                      }
                    },
                    "dataApi": {
                      "description": "The Data API properties of the mongo cluster.",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "description": "The mode to indicate whether the Mongo Data API is enabled for a cluster.",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "DataApiMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Mongo Data API is enabled for the cluster."
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Mongo Data API is disabled for the cluster."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "description": "List of private endpoint connections.",
                      "items": {
                        "type": "object",
                        "description": "The private endpoint connection resource.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the resource",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                            "readOnly": true
                          },
                          "systemData": {
                            "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          },
                          "properties": {
                            "description": "Resource properties.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "groupIds": {
                                "type": "array",
                                "description": "The group ids for the private endpoint resource.",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "privateEndpoint": {
                                "description": "The private endpoint resource.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The ARM identifier for private endpoint.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                },
                                "readOnly": true
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "previewFeatures": {
                      "type": "array",
                      "description": "List of private endpoint connections.",
                      "items": {
                        "type": "string",
                        "description": "Preview features that can be enabled on a mongo cluster.",
                        "enum": [
                          "GeoReplicas"
                        ],
                        "x-ms-enum": {
                          "name": "PreviewFeature",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "GeoReplicas",
                              "value": "GeoReplicas",
                              "description": "Enables geo replicas preview feature. The feature must be set at create-time on new cluster to enable linking a geo-replica cluster to it."
                            }
                          ]
                        }
                      }
                    },
                    "replica": {
                      "description": "The replication properties for the mongo cluster",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "sourceResourceId": {
                          "description": "The resource id the source cluster for the replica cluster.",
                          "readOnly": true,
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.DocumentDB/mongoClusters"
                              }
                            ]
                          }
                        },
                        "role": {
                          "description": "The replication role of the cluster",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Primary",
                            "AsyncReplica",
                            "GeoAsyncReplica"
                          ],
                          "x-ms-enum": {
                            "name": "ReplicationRole",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Primary",
                                "value": "Primary",
                                "description": "The cluster is a primary replica."
                              },
                              {
                                "name": "AsyncReplica",
                                "value": "AsyncReplica",
                                "description": "The cluster is a local asynchronous replica."
                              },
                              {
                                "name": "GeoAsyncReplica",
                                "value": "GeoAsyncReplica",
                                "description": "The cluster is a geo-asynchronous replica."
                              }
                            ]
                          }
                        },
                        "replicationState": {
                          "description": "The replication link state of the replica cluster.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Active",
                            "Catchup",
                            "Provisioning",
                            "Updating",
                            "Broken",
                            "Reconfiguring"
                          ],
                          "x-ms-enum": {
                            "name": "ReplicationState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Active",
                                "value": "Active",
                                "description": "Replication link is active."
                              },
                              {
                                "name": "Catchup",
                                "value": "Catchup",
                                "description": "Replica is catching-up with the primary. This can occur after the replica is created or after a promotion is triggered."
                              },
                              {
                                "name": "Provisioning",
                                "value": "Provisioning",
                                "description": "Replica and replication link to the primary is being created."
                              },
                              {
                                "name": "Updating",
                                "value": "Updating",
                                "description": "Replication link is being updated due to a change on the replica or an upgrade."
                              },
                              {
                                "name": "Broken",
                                "value": "Broken",
                                "description": "Replication link is broken and the replica may need to be recreated."
                              },
                              {
                                "name": "Reconfiguring",
                                "value": "Reconfiguring",
                                "description": "Replication link is re-configuring due to a promotion event."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "infrastructureVersion": {
                      "type": "string",
                      "description": "The infrastructure version the cluster is provisioned on.",
                      "readOnly": true
                    },
                    "authConfig": {
                      "description": "The authentication configuration for the cluster.",
                      "type": "object",
                      "properties": {
                        "allowedModes": {
                          "type": "array",
                          "description": "Allowed authentication modes for data access on the cluster.",
                          "items": {
                            "type": "string",
                            "description": "The authentication modes supporting on the Mongo cluster.",
                            "enum": [
                              "NativeAuth",
                              "MicrosoftEntraID"
                            ],
                            "x-ms-enum": {
                              "name": "AuthenticationMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "NativeAuth",
                                  "value": "NativeAuth",
                                  "description": "Native mongo authentication mode using username and password with auth mechanism 'SCRAM-SHA-256'."
                                },
                                {
                                  "name": "MicrosoftEntraID",
                                  "value": "MicrosoftEntraID",
                                  "description": "Microsoft Entra ID authentication mode using Entra users assigned to the cluster and auth mechanism 'MONGODB-OIDC'."
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "encryption": {
                      "description": "The encryption configuration for the cluster. Depends on identity being configured.",
                      "type": "object",
                      "properties": {
                        "customerManagedKeyEncryption": {
                          "description": "Customer managed key encryption settings.",
                          "type": "object",
                          "properties": {
                            "keyEncryptionKeyIdentity": {
                              "description": "The identity used to access the key encryption key.",
                              "type": "object",
                              "properties": {
                                "identityType": {
                                  "description": "The type of identity. Only 'UserAssignedIdentity' is supported.",
                                  "type": "string",
                                  "enum": [
                                    "UserAssignedIdentity"
                                  ],
                                  "x-ms-enum": {
                                    "name": "KeyEncryptionKeyIdentityType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "UserAssignedIdentity",
                                        "value": "UserAssignedIdentity",
                                        "description": "User assigned identity."
                                      }
                                    ]
                                  }
                                },
                                "userAssignedIdentityResourceId": {
                                  "type": "string",
                                  "description": "The user assigned identity resource id."
                                }
                              }
                            },
                            "keyEncryptionKeyUrl": {
                              "type": "string",
                              "description": "The URI of the key vault key used for encryption."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "MongoClusters_Delete",
        "tags": [
          "MongoClusters"
        ],
        "description": "Deletes a mongo cluster.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}/firewallRules": {
      "get": {
        "operationId": "FirewallRules_ListByMongoCluster",
        "tags": [
          "FirewallRules"
        ],
        "description": "List all the firewall rules in a given mongo cluster.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a FirewallRule list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The FirewallRule items on this page",
                  "items": {
                    "type": "object",
                    "description": "Represents a mongo cluster firewall rule.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The provisioning state of the firewall rule.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "InProgress",
                              "Updating",
                              "Dropping"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "InProgress",
                                  "value": "InProgress",
                                  "description": "An operation is in-progress on the resource."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "An update operation is in-progress on the resource."
                                },
                                {
                                  "name": "Dropping",
                                  "value": "Dropping",
                                  "description": "A drop operation is in-progress on the resource."
                                }
                              ]
                            }
                          },
                          "startIpAddress": {
                            "type": "string",
                            "description": "The start IP address of the mongo cluster firewall rule. Must be IPv4 format.",
                            "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
                          },
                          "endIpAddress": {
                            "type": "string",
                            "description": "The end IP address of the mongo cluster firewall rule. Must be IPv4 format.",
                            "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
                          }
                        },
                        "required": [
                          "startIpAddress",
                          "endIpAddress"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}/firewallRules/{firewallRuleName}": {
      "get": {
        "operationId": "FirewallRules_Get",
        "tags": [
          "FirewallRules"
        ],
        "description": "Gets information about a mongo cluster firewall rule.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "firewallRuleName",
            "in": "path",
            "description": "The name of the mongo cluster firewall rule.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9][-_.a-zA-Z0-9]*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Represents a mongo cluster firewall rule.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state of the firewall rule.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Updating",
                        "Dropping"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "An operation is in-progress on the resource."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "An update operation is in-progress on the resource."
                          },
                          {
                            "name": "Dropping",
                            "value": "Dropping",
                            "description": "A drop operation is in-progress on the resource."
                          }
                        ]
                      }
                    },
                    "startIpAddress": {
                      "type": "string",
                      "description": "The start IP address of the mongo cluster firewall rule. Must be IPv4 format.",
                      "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
                    },
                    "endIpAddress": {
                      "type": "string",
                      "description": "The end IP address of the mongo cluster firewall rule. Must be IPv4 format.",
                      "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
                    }
                  },
                  "required": [
                    "startIpAddress",
                    "endIpAddress"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "FirewallRules_CreateOrUpdate",
        "tags": [
          "FirewallRules"
        ],
        "description": "Creates a new firewall rule or updates an existing firewall rule on a mongo cluster.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "firewallRuleName",
            "in": "path",
            "description": "The name of the mongo cluster firewall rule.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9][-_.a-zA-Z0-9]*"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Represents a mongo cluster firewall rule.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state of the firewall rule.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Updating",
                        "Dropping"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "An operation is in-progress on the resource."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "An update operation is in-progress on the resource."
                          },
                          {
                            "name": "Dropping",
                            "value": "Dropping",
                            "description": "A drop operation is in-progress on the resource."
                          }
                        ]
                      }
                    },
                    "startIpAddress": {
                      "type": "string",
                      "description": "The start IP address of the mongo cluster firewall rule. Must be IPv4 format.",
                      "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
                    },
                    "endIpAddress": {
                      "type": "string",
                      "description": "The end IP address of the mongo cluster firewall rule. Must be IPv4 format.",
                      "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
                    }
                  },
                  "required": [
                    "startIpAddress",
                    "endIpAddress"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'FirewallRule' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Represents a mongo cluster firewall rule.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state of the firewall rule.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Updating",
                        "Dropping"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "An operation is in-progress on the resource."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "An update operation is in-progress on the resource."
                          },
                          {
                            "name": "Dropping",
                            "value": "Dropping",
                            "description": "A drop operation is in-progress on the resource."
                          }
                        ]
                      }
                    },
                    "startIpAddress": {
                      "type": "string",
                      "description": "The start IP address of the mongo cluster firewall rule. Must be IPv4 format.",
                      "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
                    },
                    "endIpAddress": {
                      "type": "string",
                      "description": "The end IP address of the mongo cluster firewall rule. Must be IPv4 format.",
                      "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
                    }
                  },
                  "required": [
                    "startIpAddress",
                    "endIpAddress"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'FirewallRule' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Represents a mongo cluster firewall rule.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state of the firewall rule.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Updating",
                        "Dropping"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "An operation is in-progress on the resource."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "An update operation is in-progress on the resource."
                          },
                          {
                            "name": "Dropping",
                            "value": "Dropping",
                            "description": "A drop operation is in-progress on the resource."
                          }
                        ]
                      }
                    },
                    "startIpAddress": {
                      "type": "string",
                      "description": "The start IP address of the mongo cluster firewall rule. Must be IPv4 format.",
                      "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
                    },
                    "endIpAddress": {
                      "type": "string",
                      "description": "The end IP address of the mongo cluster firewall rule. Must be IPv4 format.",
                      "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
                    }
                  },
                  "required": [
                    "startIpAddress",
                    "endIpAddress"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "FirewallRules_Delete",
        "tags": [
          "FirewallRules"
        ],
        "description": "Deletes a mongo cluster firewall rule.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "firewallRuleName",
            "in": "path",
            "description": "The name of the mongo cluster firewall rule.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9][-_.a-zA-Z0-9]*"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}/listConnectionStrings": {
      "post": {
        "operationId": "MongoClusters_ListConnectionStrings",
        "tags": [
          "MongoClusters"
        ],
        "description": "List mongo cluster connection strings. This includes the default connection string using SCRAM-SHA-256, as well as other connection strings supported by the cluster.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The connection strings for the given mongo cluster.",
              "properties": {
                "connectionStrings": {
                  "type": "array",
                  "description": "An array that contains the connection strings for a mongo cluster.",
                  "items": {
                    "type": "object",
                    "description": "Connection string for the mongo cluster",
                    "properties": {
                      "connectionString": {
                        "type": "string",
                        "description": "Value of the connection string",
                        "readOnly": true
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the connection string",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the connection string.",
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}/privateEndpointConnections": {
      "get": {
        "operationId": "PrivateEndpointConnections_ListByMongoCluster",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "List existing private connections",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a PrivateEndpointConnectionResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The PrivateEndpointConnectionResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "groupIds": {
                            "type": "array",
                            "description": "The group ids for the private endpoint resource.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "privateEndpoint": {
                            "description": "The private endpoint resource.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The ARM identifier for private endpoint.",
                                "readOnly": true
                              }
                            }
                          },
                          "privateLinkServiceConnectionState": {
                            "description": "A collection of information about the state of the connection between service consumer and provider.",
                            "type": "object",
                            "properties": {
                              "status": {
                                "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                "type": "string",
                                "enum": [
                                  "Pending",
                                  "Approved",
                                  "Rejected"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointServiceConnectionStatus",
                                  "modelAsString": true
                                }
                              },
                              "description": {
                                "type": "string",
                                "description": "The reason for approval/rejection of the connection."
                              },
                              "actionsRequired": {
                                "type": "string",
                                "description": "A message indicating if changes on the service provider require any updates on the consumer."
                              }
                            }
                          },
                          "provisioningState": {
                            "description": "The provisioning state of the private endpoint connection resource.",
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Creating",
                              "Deleting",
                              "Failed"
                            ],
                            "x-ms-enum": {
                              "name": "PrivateEndpointConnectionProvisioningState",
                              "modelAsString": true
                            },
                            "readOnly": true
                          }
                        },
                        "required": [
                          "privateLinkServiceConnectionState"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "operationId": "PrivateEndpointConnections_Get",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Get a specific private connection",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection associated with the Azure resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "groupIds": {
                      "type": "array",
                      "description": "The group ids for the private endpoint resource.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "privateEndpoint": {
                      "description": "The private endpoint resource.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ARM identifier for private endpoint.",
                          "readOnly": true
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateEndpointServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The reason for approval/rejection of the connection."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the private endpoint connection resource.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Creating",
                        "Deleting",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateEndpointConnectionProvisioningState",
                        "modelAsString": true
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "PrivateEndpointConnections_Create",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Create a Private endpoint connection",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection associated with the Azure resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "groupIds": {
                      "type": "array",
                      "description": "The group ids for the private endpoint resource.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "privateEndpoint": {
                      "description": "The private endpoint resource.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ARM identifier for private endpoint.",
                          "readOnly": true
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateEndpointServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The reason for approval/rejection of the connection."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the private endpoint connection resource.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Creating",
                        "Deleting",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateEndpointConnectionProvisioningState",
                        "modelAsString": true
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PrivateEndpointConnectionResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "groupIds": {
                      "type": "array",
                      "description": "The group ids for the private endpoint resource.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "privateEndpoint": {
                      "description": "The private endpoint resource.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ARM identifier for private endpoint.",
                          "readOnly": true
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateEndpointServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The reason for approval/rejection of the connection."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the private endpoint connection resource.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Creating",
                        "Deleting",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateEndpointConnectionProvisioningState",
                        "modelAsString": true
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'PrivateEndpointConnectionResource' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "groupIds": {
                      "type": "array",
                      "description": "The group ids for the private endpoint resource.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "privateEndpoint": {
                      "description": "The private endpoint resource.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ARM identifier for private endpoint.",
                          "readOnly": true
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateEndpointServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The reason for approval/rejection of the connection."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the private endpoint connection resource.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Creating",
                        "Deleting",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateEndpointConnectionProvisioningState",
                        "modelAsString": true
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "PrivateEndpointConnections_Delete",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Delete the private endpoint connection",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection associated with the Azure resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}/privateLinkResources": {
      "get": {
        "operationId": "PrivateLinks_ListByMongoCluster",
        "tags": [
          "PrivateLinks"
        ],
        "description": "list private links on the given resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a PrivateLinkResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The PrivateLinkResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "groupId": {
                            "type": "string",
                            "description": "The private link resource group id.",
                            "readOnly": true
                          },
                          "requiredMembers": {
                            "type": "array",
                            "description": "The private link resource required member names.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "requiredZoneNames": {
                            "type": "array",
                            "description": "The private link resource private link DNS zone name.",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}/promote": {
      "post": {
        "operationId": "MongoClusters_Promote",
        "tags": [
          "MongoClusters"
        ],
        "description": "Promotes a replica mongo cluster to a primary role.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Promote replica request properties.",
              "properties": {
                "promoteOption": {
                  "description": "The promote option to apply to the operation.",
                  "type": "string",
                  "enum": [
                    "Forced"
                  ],
                  "x-ms-enum": {
                    "name": "PromoteOption",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Forced",
                        "value": "Forced",
                        "description": "Promote option forces the promotion without waiting for the replica to be caught up to the primary. This can result in data-loss so should only be used during disaster recovery scenarios."
                      }
                    ]
                  }
                },
                "mode": {
                  "description": "The mode to apply to the promote operation. Value is optional and default value is 'Switchover'.",
                  "type": "string",
                  "enum": [
                    "Switchover"
                  ],
                  "x-ms-enum": {
                    "name": "PromoteMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Switchover",
                        "value": "Switchover",
                        "description": "Promotion will switch the current replica cluster to the primary role and the original primary will be switched to a replica role, maintaining the replication link."
                      }
                    ]
                  }
                }
              },
              "required": [
                "promoteOption"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}/replicas": {
      "get": {
        "operationId": "Replicas_ListByParent",
        "tags": [
          "Replicas"
        ],
        "description": "List all the replicas for the mongo cluster.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Replica list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Replica items on this page",
                  "items": {
                    "type": "object",
                    "description": "Represents a mongo cluster replica.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "createMode": {
                            "description": "The mode to create a mongo cluster.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "string",
                            "enum": [
                              "Default",
                              "PointInTimeRestore",
                              "GeoReplica",
                              "Replica"
                            ],
                            "x-ms-enum": {
                              "name": "CreateMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Default",
                                  "value": "Default",
                                  "description": "Create a new mongo cluster."
                                },
                                {
                                  "name": "PointInTimeRestore",
                                  "value": "PointInTimeRestore",
                                  "description": "Create a mongo cluster from a restore point-in-time."
                                },
                                {
                                  "name": "GeoReplica",
                                  "value": "GeoReplica",
                                  "description": "Create a replica cluster in distinct geographic region from the source cluster."
                                },
                                {
                                  "name": "Replica",
                                  "value": "Replica",
                                  "description": "Create a replica cluster in the same geographic region as the source cluster."
                                }
                              ]
                            }
                          },
                          "restoreParameters": {
                            "description": "The parameters to create a point-in-time restore mongo cluster.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "object",
                            "properties": {
                              "pointInTimeUTC": {
                                "type": "string",
                                "format": "date-time",
                                "description": "UTC point in time to restore a mongo cluster"
                              },
                              "sourceResourceId": {
                                "description": "Resource ID to locate the source cluster to restore",
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.DocumentDB/mongoClusters"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "replicaParameters": {
                            "description": "The parameters to create a replica mongo cluster.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "object",
                            "properties": {
                              "sourceResourceId": {
                                "description": "The id of the replication source cluster.",
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.DocumentDB/mongoClusters"
                                    }
                                  ]
                                }
                              },
                              "sourceLocation": {
                                "description": "The location of the source cluster",
                                "type": "string"
                              }
                            },
                            "required": [
                              "sourceResourceId",
                              "sourceLocation"
                            ]
                          },
                          "administrator": {
                            "description": "The local administrator properties for the mongo cluster.",
                            "type": "object",
                            "properties": {
                              "userName": {
                                "type": "string",
                                "description": "The administrator user name.",
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "password": {
                                "type": "string",
                                "format": "password",
                                "description": "The administrator password.",
                                "x-ms-mutability": [
                                  "update",
                                  "create"
                                ],
                                "x-ms-secret": true
                              }
                            }
                          },
                          "serverVersion": {
                            "type": "string",
                            "description": "The Mongo DB server version. Defaults to the latest available version if not specified."
                          },
                          "connectionString": {
                            "type": "string",
                            "description": "The default mongo connection string for the cluster.",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "The provisioning state of the mongo cluster.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "InProgress",
                              "Updating",
                              "Dropping"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "InProgress",
                                  "value": "InProgress",
                                  "description": "An operation is in-progress on the resource."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "An update operation is in-progress on the resource."
                                },
                                {
                                  "name": "Dropping",
                                  "value": "Dropping",
                                  "description": "A drop operation is in-progress on the resource."
                                }
                              ]
                            }
                          },
                          "clusterStatus": {
                            "description": "The status of the mongo cluster.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Ready",
                              "Provisioning",
                              "Updating",
                              "Starting",
                              "Stopping",
                              "Stopped",
                              "Dropping"
                            ],
                            "x-ms-enum": {
                              "name": "MongoClusterStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Ready",
                                  "value": "Ready",
                                  "description": "The mongo cluster resource is ready for use."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The mongo cluster resource is being provisioned."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The mongo cluster resource is being updated."
                                },
                                {
                                  "name": "Starting",
                                  "value": "Starting",
                                  "description": "The mongo cluster resource is being started."
                                },
                                {
                                  "name": "Stopping",
                                  "value": "Stopping",
                                  "description": "The mongo cluster resource is being stopped."
                                },
                                {
                                  "name": "Stopped",
                                  "value": "Stopped",
                                  "description": "The mongo cluster resource is stopped."
                                },
                                {
                                  "name": "Dropping",
                                  "value": "Dropping",
                                  "description": "The mongo cluster resource is being dropped."
                                }
                              ]
                            }
                          },
                          "publicNetworkAccess": {
                            "description": "Whether or not public endpoint access is allowed for this mongo cluster.",
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "PublicNetworkAccess",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled",
                                  "description": "If set, mongo cluster can be accessed through private and public methods."
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "If set, the private endpoints are the exclusive access method."
                                }
                              ]
                            }
                          },
                          "highAvailability": {
                            "description": "The high availability properties of the mongo cluster.",
                            "type": "object",
                            "properties": {
                              "targetMode": {
                                "description": "The target high availability mode requested for the cluster.",
                                "type": "string",
                                "enum": [
                                  "Disabled",
                                  "SameZone",
                                  "ZoneRedundantPreferred"
                                ],
                                "x-ms-enum": {
                                  "name": "HighAvailabilityMode",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled",
                                      "description": "High availability mode is disabled. This mode is can see availability impact during faults or maintenance and is not recommended for production."
                                    },
                                    {
                                      "name": "SameZone",
                                      "value": "SameZone",
                                      "description": "High availability mode is enabled, where each server in a shard is placed in the same availability zone."
                                    },
                                    {
                                      "name": "ZoneRedundantPreferred",
                                      "value": "ZoneRedundantPreferred",
                                      "description": "High availability mode is enabled and preferences ZoneRedundant if availability zones capacity is available in the region, otherwise falls-back to provisioning with SameZone."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "storage": {
                            "description": "The storage properties of the mongo cluster.",
                            "type": "object",
                            "properties": {
                              "sizeGb": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The size of the data disk assigned to each server."
                              },
                              "type": {
                                "description": "The type of storage to provision the cluster servers with.",
                                "type": "string",
                                "enum": [
                                  "PremiumSSD",
                                  "PremiumSSDv2"
                                ],
                                "x-ms-enum": {
                                  "name": "StorageType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "PremiumSSD",
                                      "value": "PremiumSSD",
                                      "description": "Premium SSD for high performance workloads."
                                    },
                                    {
                                      "name": "PremiumSSDv2",
                                      "value": "PremiumSSDv2",
                                      "description": "Premium SSD v2 for very IO-intensive workloads. This is a preview option and has additional limitations."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "sharding": {
                            "description": "The sharding properties of the mongo cluster.",
                            "type": "object",
                            "properties": {
                              "shardCount": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Number of shards to provision on the cluster."
                              }
                            }
                          },
                          "compute": {
                            "description": "The compute properties of the mongo cluster.",
                            "type": "object",
                            "properties": {
                              "tier": {
                                "type": "string",
                                "description": "The compute tier to assign to the cluster, where each tier maps to a virtual-core and memory size. Example values: 'M30', 'M40'."
                              }
                            }
                          },
                          "backup": {
                            "description": "The backup properties of the mongo cluster.",
                            "type": "object",
                            "properties": {
                              "earliestRestoreTime": {
                                "type": "string",
                                "description": "Earliest restore timestamp in UTC ISO8601 format.",
                                "readOnly": true
                              }
                            }
                          },
                          "dataApi": {
                            "description": "The Data API properties of the mongo cluster.",
                            "type": "object",
                            "properties": {
                              "mode": {
                                "description": "The mode to indicate whether the Mongo Data API is enabled for a cluster.",
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "DataApiMode",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled",
                                      "description": "Mongo Data API is enabled for the cluster."
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled",
                                      "description": "Mongo Data API is disabled for the cluster."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "privateEndpointConnections": {
                            "type": "array",
                            "description": "List of private endpoint connections.",
                            "items": {
                              "type": "object",
                              "description": "The private endpoint connection resource.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "arm-id",
                                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the resource",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                                  "readOnly": true
                                },
                                "systemData": {
                                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "createdBy": {
                                      "type": "string",
                                      "description": "The identity that created the resource."
                                    },
                                    "createdByType": {
                                      "type": "string",
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "createdAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource creation (UTC)."
                                    },
                                    "lastModifiedBy": {
                                      "type": "string",
                                      "description": "The identity that last modified the resource."
                                    },
                                    "lastModifiedByType": {
                                      "type": "string",
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource last modification (UTC)"
                                    }
                                  }
                                },
                                "properties": {
                                  "description": "Resource properties.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "groupIds": {
                                      "type": "array",
                                      "description": "The group ids for the private endpoint resource.",
                                      "items": {
                                        "type": "string"
                                      },
                                      "readOnly": true
                                    },
                                    "privateEndpoint": {
                                      "description": "The private endpoint resource.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "The ARM identifier for private endpoint.",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                          "type": "string",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected"
                                          ],
                                          "x-ms-enum": {
                                            "name": "PrivateEndpointServiceConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The reason for approval/rejection of the connection."
                                        },
                                        "actionsRequired": {
                                          "type": "string",
                                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "The provisioning state of the private endpoint connection resource.",
                                      "type": "string",
                                      "enum": [
                                        "Succeeded",
                                        "Creating",
                                        "Deleting",
                                        "Failed"
                                      ],
                                      "x-ms-enum": {
                                        "name": "PrivateEndpointConnectionProvisioningState",
                                        "modelAsString": true
                                      },
                                      "readOnly": true
                                    }
                                  },
                                  "required": [
                                    "privateLinkServiceConnectionState"
                                  ]
                                }
                              }
                            },
                            "readOnly": true
                          },
                          "previewFeatures": {
                            "type": "array",
                            "description": "List of private endpoint connections.",
                            "items": {
                              "type": "string",
                              "description": "Preview features that can be enabled on a mongo cluster.",
                              "enum": [
                                "GeoReplicas"
                              ],
                              "x-ms-enum": {
                                "name": "PreviewFeature",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "GeoReplicas",
                                    "value": "GeoReplicas",
                                    "description": "Enables geo replicas preview feature. The feature must be set at create-time on new cluster to enable linking a geo-replica cluster to it."
                                  }
                                ]
                              }
                            }
                          },
                          "replica": {
                            "description": "The replication properties for the mongo cluster",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "sourceResourceId": {
                                "description": "The resource id the source cluster for the replica cluster.",
                                "readOnly": true,
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.DocumentDB/mongoClusters"
                                    }
                                  ]
                                }
                              },
                              "role": {
                                "description": "The replication role of the cluster",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "Primary",
                                  "AsyncReplica",
                                  "GeoAsyncReplica"
                                ],
                                "x-ms-enum": {
                                  "name": "ReplicationRole",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Primary",
                                      "value": "Primary",
                                      "description": "The cluster is a primary replica."
                                    },
                                    {
                                      "name": "AsyncReplica",
                                      "value": "AsyncReplica",
                                      "description": "The cluster is a local asynchronous replica."
                                    },
                                    {
                                      "name": "GeoAsyncReplica",
                                      "value": "GeoAsyncReplica",
                                      "description": "The cluster is a geo-asynchronous replica."
                                    }
                                  ]
                                }
                              },
                              "replicationState": {
                                "description": "The replication link state of the replica cluster.",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "Active",
                                  "Catchup",
                                  "Provisioning",
                                  "Updating",
                                  "Broken",
                                  "Reconfiguring"
                                ],
                                "x-ms-enum": {
                                  "name": "ReplicationState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Active",
                                      "value": "Active",
                                      "description": "Replication link is active."
                                    },
                                    {
                                      "name": "Catchup",
                                      "value": "Catchup",
                                      "description": "Replica is catching-up with the primary. This can occur after the replica is created or after a promotion is triggered."
                                    },
                                    {
                                      "name": "Provisioning",
                                      "value": "Provisioning",
                                      "description": "Replica and replication link to the primary is being created."
                                    },
                                    {
                                      "name": "Updating",
                                      "value": "Updating",
                                      "description": "Replication link is being updated due to a change on the replica or an upgrade."
                                    },
                                    {
                                      "name": "Broken",
                                      "value": "Broken",
                                      "description": "Replication link is broken and the replica may need to be recreated."
                                    },
                                    {
                                      "name": "Reconfiguring",
                                      "value": "Reconfiguring",
                                      "description": "Replication link is re-configuring due to a promotion event."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "infrastructureVersion": {
                            "type": "string",
                            "description": "The infrastructure version the cluster is provisioned on.",
                            "readOnly": true
                          },
                          "authConfig": {
                            "description": "The authentication configuration for the cluster.",
                            "type": "object",
                            "properties": {
                              "allowedModes": {
                                "type": "array",
                                "description": "Allowed authentication modes for data access on the cluster.",
                                "items": {
                                  "type": "string",
                                  "description": "The authentication modes supporting on the Mongo cluster.",
                                  "enum": [
                                    "NativeAuth",
                                    "MicrosoftEntraID"
                                  ],
                                  "x-ms-enum": {
                                    "name": "AuthenticationMode",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "NativeAuth",
                                        "value": "NativeAuth",
                                        "description": "Native mongo authentication mode using username and password with auth mechanism 'SCRAM-SHA-256'."
                                      },
                                      {
                                        "name": "MicrosoftEntraID",
                                        "value": "MicrosoftEntraID",
                                        "description": "Microsoft Entra ID authentication mode using Entra users assigned to the cluster and auth mechanism 'MONGODB-OIDC'."
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "encryption": {
                            "description": "The encryption configuration for the cluster. Depends on identity being configured.",
                            "type": "object",
                            "properties": {
                              "customerManagedKeyEncryption": {
                                "description": "Customer managed key encryption settings.",
                                "type": "object",
                                "properties": {
                                  "keyEncryptionKeyIdentity": {
                                    "description": "The identity used to access the key encryption key.",
                                    "type": "object",
                                    "properties": {
                                      "identityType": {
                                        "description": "The type of identity. Only 'UserAssignedIdentity' is supported.",
                                        "type": "string",
                                        "enum": [
                                          "UserAssignedIdentity"
                                        ],
                                        "x-ms-enum": {
                                          "name": "KeyEncryptionKeyIdentityType",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "UserAssignedIdentity",
                                              "value": "UserAssignedIdentity",
                                              "description": "User assigned identity."
                                            }
                                          ]
                                        }
                                      },
                                      "userAssignedIdentityResourceId": {
                                        "type": "string",
                                        "description": "The user assigned identity resource id."
                                      }
                                    }
                                  },
                                  "keyEncryptionKeyUrl": {
                                    "type": "string",
                                    "description": "The URI of the key vault key used for encryption."
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}/users": {
      "get": {
        "operationId": "Users_ListByMongoCluster",
        "tags": [
          "Users"
        ],
        "description": "List all the users on a mongo cluster.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a User list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The User items on this page",
                  "items": {
                    "type": "object",
                    "description": "Represents a Mongo cluster user.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The provisioning state of the user.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "InProgress",
                              "Updating",
                              "Dropping"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "InProgress",
                                  "value": "InProgress",
                                  "description": "An operation is in-progress on the resource."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "An update operation is in-progress on the resource."
                                },
                                {
                                  "name": "Dropping",
                                  "value": "Dropping",
                                  "description": "A drop operation is in-progress on the resource."
                                }
                              ]
                            }
                          },
                          "identityProvider": {
                            "description": "The user's identity provider definition.",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "The type of identity provider that the user belongs to.",
                                "type": "string",
                                "enum": [
                                  "MicrosoftEntraID"
                                ],
                                "x-ms-enum": {
                                  "name": "IdentityProviderType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "MicrosoftEntraID",
                                      "value": "MicrosoftEntraID",
                                      "description": "Microsoft Entra ID provider."
                                    }
                                  ]
                                }
                              }
                            },
                            "discriminator": "type",
                            "required": [
                              "type"
                            ]
                          },
                          "roles": {
                            "type": "array",
                            "description": "Database roles that are assigned to the user.",
                            "items": {
                              "type": "object",
                              "description": "Database role definition that is assigned to a user.",
                              "properties": {
                                "db": {
                                  "type": "string",
                                  "description": "Database scope that the role is assigned to."
                                },
                                "role": {
                                  "description": "The role that is assigned to the user on the database scope.",
                                  "type": "string",
                                  "enum": [
                                    "root"
                                  ],
                                  "x-ms-enum": {
                                    "name": "UserRole",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Root",
                                        "value": "root",
                                        "description": "Root role permissions on the target scope."
                                      }
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "db",
                                "role"
                              ]
                            },
                            "x-ms-identifiers": []
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}/users/{userName}": {
      "get": {
        "operationId": "Users_Get",
        "tags": [
          "Users"
        ],
        "description": "Gets the defintion of a Mongo cluster user.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the mongo cluster user.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9\\-]*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Represents a Mongo cluster user.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state of the user.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Updating",
                        "Dropping"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "An operation is in-progress on the resource."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "An update operation is in-progress on the resource."
                          },
                          {
                            "name": "Dropping",
                            "value": "Dropping",
                            "description": "A drop operation is in-progress on the resource."
                          }
                        ]
                      }
                    },
                    "identityProvider": {
                      "description": "The user's identity provider definition.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The type of identity provider that the user belongs to.",
                          "type": "string",
                          "enum": [
                            "MicrosoftEntraID"
                          ],
                          "x-ms-enum": {
                            "name": "IdentityProviderType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "MicrosoftEntraID",
                                "value": "MicrosoftEntraID",
                                "description": "Microsoft Entra ID provider."
                              }
                            ]
                          }
                        }
                      },
                      "discriminator": "type",
                      "required": [
                        "type"
                      ]
                    },
                    "roles": {
                      "type": "array",
                      "description": "Database roles that are assigned to the user.",
                      "items": {
                        "type": "object",
                        "description": "Database role definition that is assigned to a user.",
                        "properties": {
                          "db": {
                            "type": "string",
                            "description": "Database scope that the role is assigned to."
                          },
                          "role": {
                            "description": "The role that is assigned to the user on the database scope.",
                            "type": "string",
                            "enum": [
                              "root"
                            ],
                            "x-ms-enum": {
                              "name": "UserRole",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Root",
                                  "value": "root",
                                  "description": "Root role permissions on the target scope."
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "db",
                          "role"
                        ]
                      },
                      "x-ms-identifiers": []
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Users_CreateOrUpdate",
        "tags": [
          "Users"
        ],
        "description": "Creates a new user or updates an existing user on a mongo cluster.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the mongo cluster user.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9\\-]*"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Represents a Mongo cluster user.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state of the user.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Updating",
                        "Dropping"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "An operation is in-progress on the resource."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "An update operation is in-progress on the resource."
                          },
                          {
                            "name": "Dropping",
                            "value": "Dropping",
                            "description": "A drop operation is in-progress on the resource."
                          }
                        ]
                      }
                    },
                    "identityProvider": {
                      "description": "The user's identity provider definition.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The type of identity provider that the user belongs to.",
                          "type": "string",
                          "enum": [
                            "MicrosoftEntraID"
                          ],
                          "x-ms-enum": {
                            "name": "IdentityProviderType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "MicrosoftEntraID",
                                "value": "MicrosoftEntraID",
                                "description": "Microsoft Entra ID provider."
                              }
                            ]
                          }
                        }
                      },
                      "discriminator": "type",
                      "required": [
                        "type"
                      ]
                    },
                    "roles": {
                      "type": "array",
                      "description": "Database roles that are assigned to the user.",
                      "items": {
                        "type": "object",
                        "description": "Database role definition that is assigned to a user.",
                        "properties": {
                          "db": {
                            "type": "string",
                            "description": "Database scope that the role is assigned to."
                          },
                          "role": {
                            "description": "The role that is assigned to the user on the database scope.",
                            "type": "string",
                            "enum": [
                              "root"
                            ],
                            "x-ms-enum": {
                              "name": "UserRole",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Root",
                                  "value": "root",
                                  "description": "Root role permissions on the target scope."
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "db",
                          "role"
                        ]
                      },
                      "x-ms-identifiers": []
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'User' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Represents a Mongo cluster user.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state of the user.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Updating",
                        "Dropping"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "An operation is in-progress on the resource."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "An update operation is in-progress on the resource."
                          },
                          {
                            "name": "Dropping",
                            "value": "Dropping",
                            "description": "A drop operation is in-progress on the resource."
                          }
                        ]
                      }
                    },
                    "identityProvider": {
                      "description": "The user's identity provider definition.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The type of identity provider that the user belongs to.",
                          "type": "string",
                          "enum": [
                            "MicrosoftEntraID"
                          ],
                          "x-ms-enum": {
                            "name": "IdentityProviderType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "MicrosoftEntraID",
                                "value": "MicrosoftEntraID",
                                "description": "Microsoft Entra ID provider."
                              }
                            ]
                          }
                        }
                      },
                      "discriminator": "type",
                      "required": [
                        "type"
                      ]
                    },
                    "roles": {
                      "type": "array",
                      "description": "Database roles that are assigned to the user.",
                      "items": {
                        "type": "object",
                        "description": "Database role definition that is assigned to a user.",
                        "properties": {
                          "db": {
                            "type": "string",
                            "description": "Database scope that the role is assigned to."
                          },
                          "role": {
                            "description": "The role that is assigned to the user on the database scope.",
                            "type": "string",
                            "enum": [
                              "root"
                            ],
                            "x-ms-enum": {
                              "name": "UserRole",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Root",
                                  "value": "root",
                                  "description": "Root role permissions on the target scope."
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "db",
                          "role"
                        ]
                      },
                      "x-ms-identifiers": []
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource 'User' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Represents a Mongo cluster user.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state of the user.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Updating",
                        "Dropping"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "An operation is in-progress on the resource."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "An update operation is in-progress on the resource."
                          },
                          {
                            "name": "Dropping",
                            "value": "Dropping",
                            "description": "A drop operation is in-progress on the resource."
                          }
                        ]
                      }
                    },
                    "identityProvider": {
                      "description": "The user's identity provider definition.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The type of identity provider that the user belongs to.",
                          "type": "string",
                          "enum": [
                            "MicrosoftEntraID"
                          ],
                          "x-ms-enum": {
                            "name": "IdentityProviderType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "MicrosoftEntraID",
                                "value": "MicrosoftEntraID",
                                "description": "Microsoft Entra ID provider."
                              }
                            ]
                          }
                        }
                      },
                      "discriminator": "type",
                      "required": [
                        "type"
                      ]
                    },
                    "roles": {
                      "type": "array",
                      "description": "Database roles that are assigned to the user.",
                      "items": {
                        "type": "object",
                        "description": "Database role definition that is assigned to a user.",
                        "properties": {
                          "db": {
                            "type": "string",
                            "description": "Database scope that the role is assigned to."
                          },
                          "role": {
                            "description": "The role that is assigned to the user on the database scope.",
                            "type": "string",
                            "enum": [
                              "root"
                            ],
                            "x-ms-enum": {
                              "name": "UserRole",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Root",
                                  "value": "root",
                                  "description": "Root role permissions on the target scope."
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "db",
                          "role"
                        ]
                      },
                      "x-ms-identifiers": []
                    }
                  }
                }
              }
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Users_Delete",
        "tags": [
          "Users"
        ],
        "description": "Deletes a mongo cluster user.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the mongo cluster user.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9\\-]*"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    }
  },
  "definitions": {
    "AdministratorProperties": {
      "type": "object",
      "description": "The local administrator login properties.",
      "properties": {
        "userName": {
          "type": "string",
          "description": "The administrator user name.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "password": {
          "type": "string",
          "format": "password",
          "description": "The administrator password.",
          "x-ms-mutability": [
            "update",
            "create"
          ],
          "x-ms-secret": true
        }
      }
    },
    "AuthConfigProperties": {
      "type": "object",
      "description": "The authentication configuration for the Mongo cluster.",
      "properties": {
        "allowedModes": {
          "type": "array",
          "description": "Allowed authentication modes for data access on the cluster.",
          "items": {
            "type": "string",
            "description": "The authentication modes supporting on the Mongo cluster.",
            "enum": [
              "NativeAuth",
              "MicrosoftEntraID"
            ],
            "x-ms-enum": {
              "name": "AuthenticationMode",
              "modelAsString": true,
              "values": [
                {
                  "name": "NativeAuth",
                  "value": "NativeAuth",
                  "description": "Native mongo authentication mode using username and password with auth mechanism 'SCRAM-SHA-256'."
                },
                {
                  "name": "MicrosoftEntraID",
                  "value": "MicrosoftEntraID",
                  "description": "Microsoft Entra ID authentication mode using Entra users assigned to the cluster and auth mechanism 'MONGODB-OIDC'."
                }
              ]
            }
          }
        }
      }
    },
    "AuthenticationMode": {
      "type": "string",
      "description": "The authentication modes supporting on the Mongo cluster.",
      "enum": [
        "NativeAuth",
        "MicrosoftEntraID"
      ],
      "x-ms-enum": {
        "name": "AuthenticationMode",
        "modelAsString": true,
        "values": [
          {
            "name": "NativeAuth",
            "value": "NativeAuth",
            "description": "Native mongo authentication mode using username and password with auth mechanism 'SCRAM-SHA-256'."
          },
          {
            "name": "MicrosoftEntraID",
            "value": "MicrosoftEntraID",
            "description": "Microsoft Entra ID authentication mode using Entra users assigned to the cluster and auth mechanism 'MONGODB-OIDC'."
          }
        ]
      }
    },
    "Azure.Core.azureLocation": {
      "type": "string",
      "description": "Represents an Azure geography region where supported resource providers live."
    },
    "BackupProperties": {
      "type": "object",
      "description": "The backup properties of the cluster. This includes the earliest restore time and retention settings.",
      "properties": {
        "earliestRestoreTime": {
          "type": "string",
          "description": "Earliest restore timestamp in UTC ISO8601 format.",
          "readOnly": true
        }
      }
    },
    "ComputeProperties": {
      "type": "object",
      "description": "The compute properties of the cluster. This includes the virtual-cores/memory and scaling options applied to servers in the cluster.",
      "properties": {
        "tier": {
          "type": "string",
          "description": "The compute tier to assign to the cluster, where each tier maps to a virtual-core and memory size. Example values: 'M30', 'M40'."
        }
      }
    },
    "ConnectionString": {
      "type": "object",
      "description": "Connection string for the mongo cluster",
      "properties": {
        "connectionString": {
          "type": "string",
          "description": "Value of the connection string",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description of the connection string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Name of the connection string.",
          "readOnly": true
        }
      }
    },
    "CreateMode": {
      "type": "string",
      "description": "The mode that the Mongo Cluster is created with.",
      "enum": [
        "Default",
        "PointInTimeRestore",
        "GeoReplica",
        "Replica"
      ],
      "x-ms-enum": {
        "name": "CreateMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Default",
            "value": "Default",
            "description": "Create a new mongo cluster."
          },
          {
            "name": "PointInTimeRestore",
            "value": "PointInTimeRestore",
            "description": "Create a mongo cluster from a restore point-in-time."
          },
          {
            "name": "GeoReplica",
            "value": "GeoReplica",
            "description": "Create a replica cluster in distinct geographic region from the source cluster."
          },
          {
            "name": "Replica",
            "value": "Replica",
            "description": "Create a replica cluster in the same geographic region as the source cluster."
          }
        ]
      }
    },
    "CustomerManagedKeyEncryptionProperties": {
      "type": "object",
      "description": "Customer managed key encryption settings.",
      "properties": {
        "keyEncryptionKeyIdentity": {
          "description": "The identity used to access the key encryption key.",
          "type": "object",
          "properties": {
            "identityType": {
              "description": "The type of identity. Only 'UserAssignedIdentity' is supported.",
              "type": "string",
              "enum": [
                "UserAssignedIdentity"
              ],
              "x-ms-enum": {
                "name": "KeyEncryptionKeyIdentityType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "UserAssignedIdentity",
                    "value": "UserAssignedIdentity",
                    "description": "User assigned identity."
                  }
                ]
              }
            },
            "userAssignedIdentityResourceId": {
              "type": "string",
              "description": "The user assigned identity resource id."
            }
          }
        },
        "keyEncryptionKeyUrl": {
          "type": "string",
          "description": "The URI of the key vault key used for encryption."
        }
      }
    },
    "DataApiMode": {
      "type": "string",
      "description": "The mode to apply to the Mongo Data API.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "DataApiMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "Mongo Data API is enabled for the cluster."
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "Mongo Data API is disabled for the cluster."
          }
        ]
      }
    },
    "DataApiProperties": {
      "type": "object",
      "description": "Data API properties.",
      "properties": {
        "mode": {
          "description": "The mode to indicate whether the Mongo Data API is enabled for a cluster.",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "DataApiMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Mongo Data API is enabled for the cluster."
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Mongo Data API is disabled for the cluster."
              }
            ]
          }
        }
      }
    },
    "DatabaseRole": {
      "type": "object",
      "description": "Database role definition that is assigned to a user.",
      "properties": {
        "db": {
          "type": "string",
          "description": "Database scope that the role is assigned to."
        },
        "role": {
          "description": "The role that is assigned to the user on the database scope.",
          "type": "string",
          "enum": [
            "root"
          ],
          "x-ms-enum": {
            "name": "UserRole",
            "modelAsString": true,
            "values": [
              {
                "name": "Root",
                "value": "root",
                "description": "Root role permissions on the target scope."
              }
            ]
          }
        }
      },
      "required": [
        "db",
        "role"
      ]
    },
    "EncryptionProperties": {
      "type": "object",
      "description": "The encryption configuration for the mongo cluster.",
      "properties": {
        "customerManagedKeyEncryption": {
          "description": "Customer managed key encryption settings.",
          "type": "object",
          "properties": {
            "keyEncryptionKeyIdentity": {
              "description": "The identity used to access the key encryption key.",
              "type": "object",
              "properties": {
                "identityType": {
                  "description": "The type of identity. Only 'UserAssignedIdentity' is supported.",
                  "type": "string",
                  "enum": [
                    "UserAssignedIdentity"
                  ],
                  "x-ms-enum": {
                    "name": "KeyEncryptionKeyIdentityType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "UserAssignedIdentity",
                        "value": "UserAssignedIdentity",
                        "description": "User assigned identity."
                      }
                    ]
                  }
                },
                "userAssignedIdentityResourceId": {
                  "type": "string",
                  "description": "The user assigned identity resource id."
                }
              }
            },
            "keyEncryptionKeyUrl": {
              "type": "string",
              "description": "The URI of the key vault key used for encryption."
            }
          }
        }
      }
    },
    "EntraIdentityProvider": {
      "type": "object",
      "description": "Defines a Microsoft Entra ID Mongo user.",
      "properties": {
        "properties": {
          "description": "The Entra identity properties for the user.",
          "type": "object",
          "properties": {
            "principalType": {
              "description": "The principal type of the user.",
              "type": "string",
              "enum": [
                "user",
                "servicePrincipal"
              ],
              "x-ms-enum": {
                "name": "EntraPrincipalType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "User",
                    "value": "user",
                    "description": "Entra user type."
                  },
                  {
                    "name": "ServicePrincipal",
                    "value": "servicePrincipal",
                    "description": "Entra service principal type."
                  }
                ]
              }
            }
          },
          "required": [
            "principalType"
          ]
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "Defines a user's identity provider definition.",
          "properties": {
            "type": {
              "description": "The type of identity provider that the user belongs to.",
              "type": "string",
              "enum": [
                "MicrosoftEntraID"
              ],
              "x-ms-enum": {
                "name": "IdentityProviderType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "MicrosoftEntraID",
                    "value": "MicrosoftEntraID",
                    "description": "Microsoft Entra ID provider."
                  }
                ]
              }
            }
          },
          "discriminator": "type",
          "required": [
            "type"
          ]
        }
      ],
      "x-ms-discriminator-value": "MicrosoftEntraID"
    },
    "EntraIdentityProviderProperties": {
      "type": "object",
      "description": "Microsoft Entra ID provider properties.",
      "properties": {
        "principalType": {
          "description": "The principal type of the user.",
          "type": "string",
          "enum": [
            "user",
            "servicePrincipal"
          ],
          "x-ms-enum": {
            "name": "EntraPrincipalType",
            "modelAsString": true,
            "values": [
              {
                "name": "User",
                "value": "user",
                "description": "Entra user type."
              },
              {
                "name": "ServicePrincipal",
                "value": "servicePrincipal",
                "description": "Entra service principal type."
              }
            ]
          }
        }
      },
      "required": [
        "principalType"
      ]
    },
    "EntraPrincipalType": {
      "type": "string",
      "description": "Microsoft Entra ID principal types available for a Mongo user.",
      "enum": [
        "user",
        "servicePrincipal"
      ],
      "x-ms-enum": {
        "name": "EntraPrincipalType",
        "modelAsString": true,
        "values": [
          {
            "name": "User",
            "value": "user",
            "description": "Entra user type."
          },
          {
            "name": "ServicePrincipal",
            "value": "servicePrincipal",
            "description": "Entra service principal type."
          }
        ]
      }
    },
    "FirewallRule": {
      "type": "object",
      "description": "Represents a mongo cluster firewall rule.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "The provisioning state of the firewall rule.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "InProgress",
                "Updating",
                "Dropping"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "InProgress",
                    "value": "InProgress",
                    "description": "An operation is in-progress on the resource."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "An update operation is in-progress on the resource."
                  },
                  {
                    "name": "Dropping",
                    "value": "Dropping",
                    "description": "A drop operation is in-progress on the resource."
                  }
                ]
              }
            },
            "startIpAddress": {
              "type": "string",
              "description": "The start IP address of the mongo cluster firewall rule. Must be IPv4 format.",
              "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
            },
            "endIpAddress": {
              "type": "string",
              "description": "The end IP address of the mongo cluster firewall rule. Must be IPv4 format.",
              "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
            }
          },
          "required": [
            "startIpAddress",
            "endIpAddress"
          ]
        }
      }
    },
    "FirewallRuleListResult": {
      "type": "object",
      "description": "The response of a FirewallRule list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The FirewallRule items on this page",
          "items": {
            "type": "object",
            "description": "Represents a mongo cluster firewall rule.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "The provisioning state of the firewall rule.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "InProgress",
                      "Updating",
                      "Dropping"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "InProgress",
                          "value": "InProgress",
                          "description": "An operation is in-progress on the resource."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "An update operation is in-progress on the resource."
                        },
                        {
                          "name": "Dropping",
                          "value": "Dropping",
                          "description": "A drop operation is in-progress on the resource."
                        }
                      ]
                    }
                  },
                  "startIpAddress": {
                    "type": "string",
                    "description": "The start IP address of the mongo cluster firewall rule. Must be IPv4 format.",
                    "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
                  },
                  "endIpAddress": {
                    "type": "string",
                    "description": "The end IP address of the mongo cluster firewall rule. Must be IPv4 format.",
                    "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
                  }
                },
                "required": [
                  "startIpAddress",
                  "endIpAddress"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FirewallRuleProperties": {
      "type": "object",
      "description": "The properties of a mongo cluster firewall rule.",
      "properties": {
        "provisioningState": {
          "description": "The provisioning state of the firewall rule.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "InProgress",
            "Updating",
            "Dropping"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "InProgress",
                "value": "InProgress",
                "description": "An operation is in-progress on the resource."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "An update operation is in-progress on the resource."
              },
              {
                "name": "Dropping",
                "value": "Dropping",
                "description": "A drop operation is in-progress on the resource."
              }
            ]
          }
        },
        "startIpAddress": {
          "type": "string",
          "description": "The start IP address of the mongo cluster firewall rule. Must be IPv4 format.",
          "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
        },
        "endIpAddress": {
          "type": "string",
          "description": "The end IP address of the mongo cluster firewall rule. Must be IPv4 format.",
          "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
        }
      },
      "required": [
        "startIpAddress",
        "endIpAddress"
      ]
    },
    "HighAvailabilityMode": {
      "type": "string",
      "description": "The high availability modes for a cluster.",
      "enum": [
        "Disabled",
        "SameZone",
        "ZoneRedundantPreferred"
      ],
      "x-ms-enum": {
        "name": "HighAvailabilityMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "High availability mode is disabled. This mode is can see availability impact during faults or maintenance and is not recommended for production."
          },
          {
            "name": "SameZone",
            "value": "SameZone",
            "description": "High availability mode is enabled, where each server in a shard is placed in the same availability zone."
          },
          {
            "name": "ZoneRedundantPreferred",
            "value": "ZoneRedundantPreferred",
            "description": "High availability mode is enabled and preferences ZoneRedundant if availability zones capacity is available in the region, otherwise falls-back to provisioning with SameZone."
          }
        ]
      }
    },
    "HighAvailabilityProperties": {
      "type": "object",
      "description": "The high availability properties of the cluster.",
      "properties": {
        "targetMode": {
          "description": "The target high availability mode requested for the cluster.",
          "type": "string",
          "enum": [
            "Disabled",
            "SameZone",
            "ZoneRedundantPreferred"
          ],
          "x-ms-enum": {
            "name": "HighAvailabilityMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "High availability mode is disabled. This mode is can see availability impact during faults or maintenance and is not recommended for production."
              },
              {
                "name": "SameZone",
                "value": "SameZone",
                "description": "High availability mode is enabled, where each server in a shard is placed in the same availability zone."
              },
              {
                "name": "ZoneRedundantPreferred",
                "value": "ZoneRedundantPreferred",
                "description": "High availability mode is enabled and preferences ZoneRedundant if availability zones capacity is available in the region, otherwise falls-back to provisioning with SameZone."
              }
            ]
          }
        }
      }
    },
    "IdentityProvider": {
      "type": "object",
      "description": "Defines a user's identity provider definition.",
      "properties": {
        "type": {
          "description": "The type of identity provider that the user belongs to.",
          "type": "string",
          "enum": [
            "MicrosoftEntraID"
          ],
          "x-ms-enum": {
            "name": "IdentityProviderType",
            "modelAsString": true,
            "values": [
              {
                "name": "MicrosoftEntraID",
                "value": "MicrosoftEntraID",
                "description": "Microsoft Entra ID provider."
              }
            ]
          }
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "IdentityProviderType": {
      "type": "string",
      "description": "Identity provider types that a a user identity can belong to.",
      "enum": [
        "MicrosoftEntraID"
      ],
      "x-ms-enum": {
        "name": "IdentityProviderType",
        "modelAsString": true,
        "values": [
          {
            "name": "MicrosoftEntraID",
            "value": "MicrosoftEntraID",
            "description": "Microsoft Entra ID provider."
          }
        ]
      }
    },
    "IdentityUserProperties": {
      "type": "object",
      "description": "Identity provider Mongo user properties.",
      "properties": {
        "identityProvider": {
          "type": "object",
          "description": "Defines a user's identity provider definition.",
          "properties": {
            "type": {
              "description": "The type of identity provider that the user belongs to.",
              "type": "string",
              "enum": [
                "MicrosoftEntraID"
              ],
              "x-ms-enum": {
                "name": "IdentityProviderType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "MicrosoftEntraID",
                    "value": "MicrosoftEntraID",
                    "description": "Microsoft Entra ID provider."
                  }
                ]
              }
            }
          },
          "discriminator": "type",
          "required": [
            "type"
          ]
        },
        "roles": {
          "type": "array",
          "description": "Database roles that are assigned to the user.",
          "items": {
            "type": "object",
            "description": "Database role definition that is assigned to a user.",
            "properties": {
              "db": {
                "type": "string",
                "description": "Database scope that the role is assigned to."
              },
              "role": {
                "description": "The role that is assigned to the user on the database scope.",
                "type": "string",
                "enum": [
                  "root"
                ],
                "x-ms-enum": {
                  "name": "UserRole",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Root",
                      "value": "root",
                      "description": "Root role permissions on the target scope."
                    }
                  ]
                }
              }
            },
            "required": [
              "db",
              "role"
            ]
          },
          "x-ms-identifiers": []
        }
      }
    },
    "KeyEncryptionKeyIdentity": {
      "type": "object",
      "description": "The identity used for key encryption key.",
      "properties": {
        "identityType": {
          "description": "The type of identity. Only 'UserAssignedIdentity' is supported.",
          "type": "string",
          "enum": [
            "UserAssignedIdentity"
          ],
          "x-ms-enum": {
            "name": "KeyEncryptionKeyIdentityType",
            "modelAsString": true,
            "values": [
              {
                "name": "UserAssignedIdentity",
                "value": "UserAssignedIdentity",
                "description": "User assigned identity."
              }
            ]
          }
        },
        "userAssignedIdentityResourceId": {
          "type": "string",
          "description": "The user assigned identity resource id."
        }
      }
    },
    "KeyEncryptionKeyIdentityType": {
      "type": "string",
      "description": "The type of identity for key encryption key.",
      "enum": [
        "UserAssignedIdentity"
      ],
      "x-ms-enum": {
        "name": "KeyEncryptionKeyIdentityType",
        "modelAsString": true,
        "values": [
          {
            "name": "UserAssignedIdentity",
            "value": "UserAssignedIdentity",
            "description": "User assigned identity."
          }
        ]
      }
    },
    "ListConnectionStringsResult": {
      "type": "object",
      "description": "The connection strings for the given mongo cluster.",
      "properties": {
        "connectionStrings": {
          "type": "array",
          "description": "An array that contains the connection strings for a mongo cluster.",
          "items": {
            "type": "object",
            "description": "Connection string for the mongo cluster",
            "properties": {
              "connectionString": {
                "type": "string",
                "description": "Value of the connection string",
                "readOnly": true
              },
              "description": {
                "type": "string",
                "description": "Description of the connection string",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "Name of the connection string.",
                "readOnly": true
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "MongoCluster": {
      "type": "object",
      "description": "Represents a mongo cluster resource.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "createMode": {
              "description": "The mode to create a mongo cluster.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string",
              "enum": [
                "Default",
                "PointInTimeRestore",
                "GeoReplica",
                "Replica"
              ],
              "x-ms-enum": {
                "name": "CreateMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Default",
                    "value": "Default",
                    "description": "Create a new mongo cluster."
                  },
                  {
                    "name": "PointInTimeRestore",
                    "value": "PointInTimeRestore",
                    "description": "Create a mongo cluster from a restore point-in-time."
                  },
                  {
                    "name": "GeoReplica",
                    "value": "GeoReplica",
                    "description": "Create a replica cluster in distinct geographic region from the source cluster."
                  },
                  {
                    "name": "Replica",
                    "value": "Replica",
                    "description": "Create a replica cluster in the same geographic region as the source cluster."
                  }
                ]
              }
            },
            "restoreParameters": {
              "description": "The parameters to create a point-in-time restore mongo cluster.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "object",
              "properties": {
                "pointInTimeUTC": {
                  "type": "string",
                  "format": "date-time",
                  "description": "UTC point in time to restore a mongo cluster"
                },
                "sourceResourceId": {
                  "description": "Resource ID to locate the source cluster to restore",
                  "type": "string",
                  "format": "arm-id",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.DocumentDB/mongoClusters"
                      }
                    ]
                  }
                }
              }
            },
            "replicaParameters": {
              "description": "The parameters to create a replica mongo cluster.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "object",
              "properties": {
                "sourceResourceId": {
                  "description": "The id of the replication source cluster.",
                  "type": "string",
                  "format": "arm-id",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.DocumentDB/mongoClusters"
                      }
                    ]
                  }
                },
                "sourceLocation": {
                  "description": "The location of the source cluster",
                  "type": "string"
                }
              },
              "required": [
                "sourceResourceId",
                "sourceLocation"
              ]
            },
            "administrator": {
              "description": "The local administrator properties for the mongo cluster.",
              "type": "object",
              "properties": {
                "userName": {
                  "type": "string",
                  "description": "The administrator user name.",
                  "x-ms-mutability": [
                    "read",
                    "update",
                    "create"
                  ]
                },
                "password": {
                  "type": "string",
                  "format": "password",
                  "description": "The administrator password.",
                  "x-ms-mutability": [
                    "update",
                    "create"
                  ],
                  "x-ms-secret": true
                }
              }
            },
            "serverVersion": {
              "type": "string",
              "description": "The Mongo DB server version. Defaults to the latest available version if not specified."
            },
            "connectionString": {
              "type": "string",
              "description": "The default mongo connection string for the cluster.",
              "readOnly": true
            },
            "provisioningState": {
              "description": "The provisioning state of the mongo cluster.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "InProgress",
                "Updating",
                "Dropping"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "InProgress",
                    "value": "InProgress",
                    "description": "An operation is in-progress on the resource."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "An update operation is in-progress on the resource."
                  },
                  {
                    "name": "Dropping",
                    "value": "Dropping",
                    "description": "A drop operation is in-progress on the resource."
                  }
                ]
              }
            },
            "clusterStatus": {
              "description": "The status of the mongo cluster.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Ready",
                "Provisioning",
                "Updating",
                "Starting",
                "Stopping",
                "Stopped",
                "Dropping"
              ],
              "x-ms-enum": {
                "name": "MongoClusterStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Ready",
                    "value": "Ready",
                    "description": "The mongo cluster resource is ready for use."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "The mongo cluster resource is being provisioned."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "The mongo cluster resource is being updated."
                  },
                  {
                    "name": "Starting",
                    "value": "Starting",
                    "description": "The mongo cluster resource is being started."
                  },
                  {
                    "name": "Stopping",
                    "value": "Stopping",
                    "description": "The mongo cluster resource is being stopped."
                  },
                  {
                    "name": "Stopped",
                    "value": "Stopped",
                    "description": "The mongo cluster resource is stopped."
                  },
                  {
                    "name": "Dropping",
                    "value": "Dropping",
                    "description": "The mongo cluster resource is being dropped."
                  }
                ]
              }
            },
            "publicNetworkAccess": {
              "description": "Whether or not public endpoint access is allowed for this mongo cluster.",
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "PublicNetworkAccess",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "If set, mongo cluster can be accessed through private and public methods."
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "If set, the private endpoints are the exclusive access method."
                  }
                ]
              }
            },
            "highAvailability": {
              "description": "The high availability properties of the mongo cluster.",
              "type": "object",
              "properties": {
                "targetMode": {
                  "description": "The target high availability mode requested for the cluster.",
                  "type": "string",
                  "enum": [
                    "Disabled",
                    "SameZone",
                    "ZoneRedundantPreferred"
                  ],
                  "x-ms-enum": {
                    "name": "HighAvailabilityMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "High availability mode is disabled. This mode is can see availability impact during faults or maintenance and is not recommended for production."
                      },
                      {
                        "name": "SameZone",
                        "value": "SameZone",
                        "description": "High availability mode is enabled, where each server in a shard is placed in the same availability zone."
                      },
                      {
                        "name": "ZoneRedundantPreferred",
                        "value": "ZoneRedundantPreferred",
                        "description": "High availability mode is enabled and preferences ZoneRedundant if availability zones capacity is available in the region, otherwise falls-back to provisioning with SameZone."
                      }
                    ]
                  }
                }
              }
            },
            "storage": {
              "description": "The storage properties of the mongo cluster.",
              "type": "object",
              "properties": {
                "sizeGb": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The size of the data disk assigned to each server."
                },
                "type": {
                  "description": "The type of storage to provision the cluster servers with.",
                  "type": "string",
                  "enum": [
                    "PremiumSSD",
                    "PremiumSSDv2"
                  ],
                  "x-ms-enum": {
                    "name": "StorageType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "PremiumSSD",
                        "value": "PremiumSSD",
                        "description": "Premium SSD for high performance workloads."
                      },
                      {
                        "name": "PremiumSSDv2",
                        "value": "PremiumSSDv2",
                        "description": "Premium SSD v2 for very IO-intensive workloads. This is a preview option and has additional limitations."
                      }
                    ]
                  }
                }
              }
            },
            "sharding": {
              "description": "The sharding properties of the mongo cluster.",
              "type": "object",
              "properties": {
                "shardCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of shards to provision on the cluster."
                }
              }
            },
            "compute": {
              "description": "The compute properties of the mongo cluster.",
              "type": "object",
              "properties": {
                "tier": {
                  "type": "string",
                  "description": "The compute tier to assign to the cluster, where each tier maps to a virtual-core and memory size. Example values: 'M30', 'M40'."
                }
              }
            },
            "backup": {
              "description": "The backup properties of the mongo cluster.",
              "type": "object",
              "properties": {
                "earliestRestoreTime": {
                  "type": "string",
                  "description": "Earliest restore timestamp in UTC ISO8601 format.",
                  "readOnly": true
                }
              }
            },
            "dataApi": {
              "description": "The Data API properties of the mongo cluster.",
              "type": "object",
              "properties": {
                "mode": {
                  "description": "The mode to indicate whether the Mongo Data API is enabled for a cluster.",
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "DataApiMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled",
                        "description": "Mongo Data API is enabled for the cluster."
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "Mongo Data API is disabled for the cluster."
                      }
                    ]
                  }
                }
              }
            },
            "privateEndpointConnections": {
              "type": "array",
              "description": "List of private endpoint connections.",
              "items": {
                "type": "object",
                "description": "The private endpoint connection resource.",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                    "readOnly": true
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the resource",
                    "readOnly": true
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                    "readOnly": true
                  },
                  "systemData": {
                    "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "createdBy": {
                        "type": "string",
                        "description": "The identity that created the resource."
                      },
                      "createdByType": {
                        "type": "string",
                        "description": "The type of identity that created the resource.",
                        "enum": [
                          "User",
                          "Application",
                          "ManagedIdentity",
                          "Key"
                        ],
                        "x-ms-enum": {
                          "name": "createdByType",
                          "modelAsString": true
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of resource creation (UTC)."
                      },
                      "lastModifiedBy": {
                        "type": "string",
                        "description": "The identity that last modified the resource."
                      },
                      "lastModifiedByType": {
                        "type": "string",
                        "description": "The type of identity that last modified the resource.",
                        "enum": [
                          "User",
                          "Application",
                          "ManagedIdentity",
                          "Key"
                        ],
                        "x-ms-enum": {
                          "name": "createdByType",
                          "modelAsString": true
                        }
                      },
                      "lastModifiedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of resource last modification (UTC)"
                      }
                    }
                  },
                  "properties": {
                    "description": "Resource properties.",
                    "x-ms-client-flatten": true,
                    "type": "object",
                    "properties": {
                      "groupIds": {
                        "type": "array",
                        "description": "The group ids for the private endpoint resource.",
                        "items": {
                          "type": "string"
                        },
                        "readOnly": true
                      },
                      "privateEndpoint": {
                        "description": "The private endpoint resource.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ARM identifier for private endpoint.",
                            "readOnly": true
                          }
                        }
                      },
                      "privateLinkServiceConnectionState": {
                        "description": "A collection of information about the state of the connection between service consumer and provider.",
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                            "type": "string",
                            "enum": [
                              "Pending",
                              "Approved",
                              "Rejected"
                            ],
                            "x-ms-enum": {
                              "name": "PrivateEndpointServiceConnectionStatus",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "type": "string",
                            "description": "The reason for approval/rejection of the connection."
                          },
                          "actionsRequired": {
                            "type": "string",
                            "description": "A message indicating if changes on the service provider require any updates on the consumer."
                          }
                        }
                      },
                      "provisioningState": {
                        "description": "The provisioning state of the private endpoint connection resource.",
                        "type": "string",
                        "enum": [
                          "Succeeded",
                          "Creating",
                          "Deleting",
                          "Failed"
                        ],
                        "x-ms-enum": {
                          "name": "PrivateEndpointConnectionProvisioningState",
                          "modelAsString": true
                        },
                        "readOnly": true
                      }
                    },
                    "required": [
                      "privateLinkServiceConnectionState"
                    ]
                  }
                }
              },
              "readOnly": true
            },
            "previewFeatures": {
              "type": "array",
              "description": "List of private endpoint connections.",
              "items": {
                "type": "string",
                "description": "Preview features that can be enabled on a mongo cluster.",
                "enum": [
                  "GeoReplicas"
                ],
                "x-ms-enum": {
                  "name": "PreviewFeature",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "GeoReplicas",
                      "value": "GeoReplicas",
                      "description": "Enables geo replicas preview feature. The feature must be set at create-time on new cluster to enable linking a geo-replica cluster to it."
                    }
                  ]
                }
              }
            },
            "replica": {
              "description": "The replication properties for the mongo cluster",
              "readOnly": true,
              "type": "object",
              "properties": {
                "sourceResourceId": {
                  "description": "The resource id the source cluster for the replica cluster.",
                  "readOnly": true,
                  "type": "string",
                  "format": "arm-id",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.DocumentDB/mongoClusters"
                      }
                    ]
                  }
                },
                "role": {
                  "description": "The replication role of the cluster",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Primary",
                    "AsyncReplica",
                    "GeoAsyncReplica"
                  ],
                  "x-ms-enum": {
                    "name": "ReplicationRole",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Primary",
                        "value": "Primary",
                        "description": "The cluster is a primary replica."
                      },
                      {
                        "name": "AsyncReplica",
                        "value": "AsyncReplica",
                        "description": "The cluster is a local asynchronous replica."
                      },
                      {
                        "name": "GeoAsyncReplica",
                        "value": "GeoAsyncReplica",
                        "description": "The cluster is a geo-asynchronous replica."
                      }
                    ]
                  }
                },
                "replicationState": {
                  "description": "The replication link state of the replica cluster.",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Active",
                    "Catchup",
                    "Provisioning",
                    "Updating",
                    "Broken",
                    "Reconfiguring"
                  ],
                  "x-ms-enum": {
                    "name": "ReplicationState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Active",
                        "value": "Active",
                        "description": "Replication link is active."
                      },
                      {
                        "name": "Catchup",
                        "value": "Catchup",
                        "description": "Replica is catching-up with the primary. This can occur after the replica is created or after a promotion is triggered."
                      },
                      {
                        "name": "Provisioning",
                        "value": "Provisioning",
                        "description": "Replica and replication link to the primary is being created."
                      },
                      {
                        "name": "Updating",
                        "value": "Updating",
                        "description": "Replication link is being updated due to a change on the replica or an upgrade."
                      },
                      {
                        "name": "Broken",
                        "value": "Broken",
                        "description": "Replication link is broken and the replica may need to be recreated."
                      },
                      {
                        "name": "Reconfiguring",
                        "value": "Reconfiguring",
                        "description": "Replication link is re-configuring due to a promotion event."
                      }
                    ]
                  }
                }
              }
            },
            "infrastructureVersion": {
              "type": "string",
              "description": "The infrastructure version the cluster is provisioned on.",
              "readOnly": true
            },
            "authConfig": {
              "description": "The authentication configuration for the cluster.",
              "type": "object",
              "properties": {
                "allowedModes": {
                  "type": "array",
                  "description": "Allowed authentication modes for data access on the cluster.",
                  "items": {
                    "type": "string",
                    "description": "The authentication modes supporting on the Mongo cluster.",
                    "enum": [
                      "NativeAuth",
                      "MicrosoftEntraID"
                    ],
                    "x-ms-enum": {
                      "name": "AuthenticationMode",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "NativeAuth",
                          "value": "NativeAuth",
                          "description": "Native mongo authentication mode using username and password with auth mechanism 'SCRAM-SHA-256'."
                        },
                        {
                          "name": "MicrosoftEntraID",
                          "value": "MicrosoftEntraID",
                          "description": "Microsoft Entra ID authentication mode using Entra users assigned to the cluster and auth mechanism 'MONGODB-OIDC'."
                        }
                      ]
                    }
                  }
                }
              }
            },
            "encryption": {
              "description": "The encryption configuration for the cluster. Depends on identity being configured.",
              "type": "object",
              "properties": {
                "customerManagedKeyEncryption": {
                  "description": "Customer managed key encryption settings.",
                  "type": "object",
                  "properties": {
                    "keyEncryptionKeyIdentity": {
                      "description": "The identity used to access the key encryption key.",
                      "type": "object",
                      "properties": {
                        "identityType": {
                          "description": "The type of identity. Only 'UserAssignedIdentity' is supported.",
                          "type": "string",
                          "enum": [
                            "UserAssignedIdentity"
                          ],
                          "x-ms-enum": {
                            "name": "KeyEncryptionKeyIdentityType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "UserAssignedIdentity",
                                "value": "UserAssignedIdentity",
                                "description": "User assigned identity."
                              }
                            ]
                          }
                        },
                        "userAssignedIdentityResourceId": {
                          "type": "string",
                          "description": "The user assigned identity resource id."
                        }
                      }
                    },
                    "keyEncryptionKeyUrl": {
                      "type": "string",
                      "description": "The URI of the key vault key used for encryption."
                    }
                  }
                }
              }
            }
          }
        },
        "identity": {
          "description": "The managed service identities assigned to this resource.",
          "type": "object",
          "properties": {
            "principalId": {
              "type": "string",
              "format": "uuid",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "format": "uuid",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "title": "User-Assigned Identities",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "additionalProperties": {
                "x-nullable": true,
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        }
      }
    },
    "MongoClusterListResult": {
      "type": "object",
      "description": "The response of a MongoCluster list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The MongoCluster items on this page",
          "items": {
            "type": "object",
            "description": "Represents a mongo cluster resource.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "createMode": {
                    "description": "The mode to create a mongo cluster.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "type": "string",
                    "enum": [
                      "Default",
                      "PointInTimeRestore",
                      "GeoReplica",
                      "Replica"
                    ],
                    "x-ms-enum": {
                      "name": "CreateMode",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Default",
                          "value": "Default",
                          "description": "Create a new mongo cluster."
                        },
                        {
                          "name": "PointInTimeRestore",
                          "value": "PointInTimeRestore",
                          "description": "Create a mongo cluster from a restore point-in-time."
                        },
                        {
                          "name": "GeoReplica",
                          "value": "GeoReplica",
                          "description": "Create a replica cluster in distinct geographic region from the source cluster."
                        },
                        {
                          "name": "Replica",
                          "value": "Replica",
                          "description": "Create a replica cluster in the same geographic region as the source cluster."
                        }
                      ]
                    }
                  },
                  "restoreParameters": {
                    "description": "The parameters to create a point-in-time restore mongo cluster.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "type": "object",
                    "properties": {
                      "pointInTimeUTC": {
                        "type": "string",
                        "format": "date-time",
                        "description": "UTC point in time to restore a mongo cluster"
                      },
                      "sourceResourceId": {
                        "description": "Resource ID to locate the source cluster to restore",
                        "type": "string",
                        "format": "arm-id",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.DocumentDB/mongoClusters"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "replicaParameters": {
                    "description": "The parameters to create a replica mongo cluster.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "type": "object",
                    "properties": {
                      "sourceResourceId": {
                        "description": "The id of the replication source cluster.",
                        "type": "string",
                        "format": "arm-id",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.DocumentDB/mongoClusters"
                            }
                          ]
                        }
                      },
                      "sourceLocation": {
                        "description": "The location of the source cluster",
                        "type": "string"
                      }
                    },
                    "required": [
                      "sourceResourceId",
                      "sourceLocation"
                    ]
                  },
                  "administrator": {
                    "description": "The local administrator properties for the mongo cluster.",
                    "type": "object",
                    "properties": {
                      "userName": {
                        "type": "string",
                        "description": "The administrator user name.",
                        "x-ms-mutability": [
                          "read",
                          "update",
                          "create"
                        ]
                      },
                      "password": {
                        "type": "string",
                        "format": "password",
                        "description": "The administrator password.",
                        "x-ms-mutability": [
                          "update",
                          "create"
                        ],
                        "x-ms-secret": true
                      }
                    }
                  },
                  "serverVersion": {
                    "type": "string",
                    "description": "The Mongo DB server version. Defaults to the latest available version if not specified."
                  },
                  "connectionString": {
                    "type": "string",
                    "description": "The default mongo connection string for the cluster.",
                    "readOnly": true
                  },
                  "provisioningState": {
                    "description": "The provisioning state of the mongo cluster.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "InProgress",
                      "Updating",
                      "Dropping"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "InProgress",
                          "value": "InProgress",
                          "description": "An operation is in-progress on the resource."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "An update operation is in-progress on the resource."
                        },
                        {
                          "name": "Dropping",
                          "value": "Dropping",
                          "description": "A drop operation is in-progress on the resource."
                        }
                      ]
                    }
                  },
                  "clusterStatus": {
                    "description": "The status of the mongo cluster.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Ready",
                      "Provisioning",
                      "Updating",
                      "Starting",
                      "Stopping",
                      "Stopped",
                      "Dropping"
                    ],
                    "x-ms-enum": {
                      "name": "MongoClusterStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Ready",
                          "value": "Ready",
                          "description": "The mongo cluster resource is ready for use."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "The mongo cluster resource is being provisioned."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "The mongo cluster resource is being updated."
                        },
                        {
                          "name": "Starting",
                          "value": "Starting",
                          "description": "The mongo cluster resource is being started."
                        },
                        {
                          "name": "Stopping",
                          "value": "Stopping",
                          "description": "The mongo cluster resource is being stopped."
                        },
                        {
                          "name": "Stopped",
                          "value": "Stopped",
                          "description": "The mongo cluster resource is stopped."
                        },
                        {
                          "name": "Dropping",
                          "value": "Dropping",
                          "description": "The mongo cluster resource is being dropped."
                        }
                      ]
                    }
                  },
                  "publicNetworkAccess": {
                    "description": "Whether or not public endpoint access is allowed for this mongo cluster.",
                    "type": "string",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "PublicNetworkAccess",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Enabled",
                          "value": "Enabled",
                          "description": "If set, mongo cluster can be accessed through private and public methods."
                        },
                        {
                          "name": "Disabled",
                          "value": "Disabled",
                          "description": "If set, the private endpoints are the exclusive access method."
                        }
                      ]
                    }
                  },
                  "highAvailability": {
                    "description": "The high availability properties of the mongo cluster.",
                    "type": "object",
                    "properties": {
                      "targetMode": {
                        "description": "The target high availability mode requested for the cluster.",
                        "type": "string",
                        "enum": [
                          "Disabled",
                          "SameZone",
                          "ZoneRedundantPreferred"
                        ],
                        "x-ms-enum": {
                          "name": "HighAvailabilityMode",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Disabled",
                              "value": "Disabled",
                              "description": "High availability mode is disabled. This mode is can see availability impact during faults or maintenance and is not recommended for production."
                            },
                            {
                              "name": "SameZone",
                              "value": "SameZone",
                              "description": "High availability mode is enabled, where each server in a shard is placed in the same availability zone."
                            },
                            {
                              "name": "ZoneRedundantPreferred",
                              "value": "ZoneRedundantPreferred",
                              "description": "High availability mode is enabled and preferences ZoneRedundant if availability zones capacity is available in the region, otherwise falls-back to provisioning with SameZone."
                            }
                          ]
                        }
                      }
                    }
                  },
                  "storage": {
                    "description": "The storage properties of the mongo cluster.",
                    "type": "object",
                    "properties": {
                      "sizeGb": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The size of the data disk assigned to each server."
                      },
                      "type": {
                        "description": "The type of storage to provision the cluster servers with.",
                        "type": "string",
                        "enum": [
                          "PremiumSSD",
                          "PremiumSSDv2"
                        ],
                        "x-ms-enum": {
                          "name": "StorageType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "PremiumSSD",
                              "value": "PremiumSSD",
                              "description": "Premium SSD for high performance workloads."
                            },
                            {
                              "name": "PremiumSSDv2",
                              "value": "PremiumSSDv2",
                              "description": "Premium SSD v2 for very IO-intensive workloads. This is a preview option and has additional limitations."
                            }
                          ]
                        }
                      }
                    }
                  },
                  "sharding": {
                    "description": "The sharding properties of the mongo cluster.",
                    "type": "object",
                    "properties": {
                      "shardCount": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of shards to provision on the cluster."
                      }
                    }
                  },
                  "compute": {
                    "description": "The compute properties of the mongo cluster.",
                    "type": "object",
                    "properties": {
                      "tier": {
                        "type": "string",
                        "description": "The compute tier to assign to the cluster, where each tier maps to a virtual-core and memory size. Example values: 'M30', 'M40'."
                      }
                    }
                  },
                  "backup": {
                    "description": "The backup properties of the mongo cluster.",
                    "type": "object",
                    "properties": {
                      "earliestRestoreTime": {
                        "type": "string",
                        "description": "Earliest restore timestamp in UTC ISO8601 format.",
                        "readOnly": true
                      }
                    }
                  },
                  "dataApi": {
                    "description": "The Data API properties of the mongo cluster.",
                    "type": "object",
                    "properties": {
                      "mode": {
                        "description": "The mode to indicate whether the Mongo Data API is enabled for a cluster.",
                        "type": "string",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "DataApiMode",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Enabled",
                              "value": "Enabled",
                              "description": "Mongo Data API is enabled for the cluster."
                            },
                            {
                              "name": "Disabled",
                              "value": "Disabled",
                              "description": "Mongo Data API is disabled for the cluster."
                            }
                          ]
                        }
                      }
                    }
                  },
                  "privateEndpointConnections": {
                    "type": "array",
                    "description": "List of private endpoint connections.",
                    "items": {
                      "type": "object",
                      "description": "The private endpoint connection resource.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the resource",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                          "readOnly": true
                        },
                        "systemData": {
                          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "createdBy": {
                              "type": "string",
                              "description": "The identity that created the resource."
                            },
                            "createdByType": {
                              "type": "string",
                              "description": "The type of identity that created the resource.",
                              "enum": [
                                "User",
                                "Application",
                                "ManagedIdentity",
                                "Key"
                              ],
                              "x-ms-enum": {
                                "name": "createdByType",
                                "modelAsString": true
                              }
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp of resource creation (UTC)."
                            },
                            "lastModifiedBy": {
                              "type": "string",
                              "description": "The identity that last modified the resource."
                            },
                            "lastModifiedByType": {
                              "type": "string",
                              "description": "The type of identity that last modified the resource.",
                              "enum": [
                                "User",
                                "Application",
                                "ManagedIdentity",
                                "Key"
                              ],
                              "x-ms-enum": {
                                "name": "createdByType",
                                "modelAsString": true
                              }
                            },
                            "lastModifiedAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp of resource last modification (UTC)"
                            }
                          }
                        },
                        "properties": {
                          "description": "Resource properties.",
                          "x-ms-client-flatten": true,
                          "type": "object",
                          "properties": {
                            "groupIds": {
                              "type": "array",
                              "description": "The group ids for the private endpoint resource.",
                              "items": {
                                "type": "string"
                              },
                              "readOnly": true
                            },
                            "privateEndpoint": {
                              "description": "The private endpoint resource.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The ARM identifier for private endpoint.",
                                  "readOnly": true
                                }
                              }
                            },
                            "privateLinkServiceConnectionState": {
                              "description": "A collection of information about the state of the connection between service consumer and provider.",
                              "type": "object",
                              "properties": {
                                "status": {
                                  "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                  "type": "string",
                                  "enum": [
                                    "Pending",
                                    "Approved",
                                    "Rejected"
                                  ],
                                  "x-ms-enum": {
                                    "name": "PrivateEndpointServiceConnectionStatus",
                                    "modelAsString": true
                                  }
                                },
                                "description": {
                                  "type": "string",
                                  "description": "The reason for approval/rejection of the connection."
                                },
                                "actionsRequired": {
                                  "type": "string",
                                  "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                }
                              }
                            },
                            "provisioningState": {
                              "description": "The provisioning state of the private endpoint connection resource.",
                              "type": "string",
                              "enum": [
                                "Succeeded",
                                "Creating",
                                "Deleting",
                                "Failed"
                              ],
                              "x-ms-enum": {
                                "name": "PrivateEndpointConnectionProvisioningState",
                                "modelAsString": true
                              },
                              "readOnly": true
                            }
                          },
                          "required": [
                            "privateLinkServiceConnectionState"
                          ]
                        }
                      }
                    },
                    "readOnly": true
                  },
                  "previewFeatures": {
                    "type": "array",
                    "description": "List of private endpoint connections.",
                    "items": {
                      "type": "string",
                      "description": "Preview features that can be enabled on a mongo cluster.",
                      "enum": [
                        "GeoReplicas"
                      ],
                      "x-ms-enum": {
                        "name": "PreviewFeature",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "GeoReplicas",
                            "value": "GeoReplicas",
                            "description": "Enables geo replicas preview feature. The feature must be set at create-time on new cluster to enable linking a geo-replica cluster to it."
                          }
                        ]
                      }
                    }
                  },
                  "replica": {
                    "description": "The replication properties for the mongo cluster",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "sourceResourceId": {
                        "description": "The resource id the source cluster for the replica cluster.",
                        "readOnly": true,
                        "type": "string",
                        "format": "arm-id",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.DocumentDB/mongoClusters"
                            }
                          ]
                        }
                      },
                      "role": {
                        "description": "The replication role of the cluster",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "Primary",
                          "AsyncReplica",
                          "GeoAsyncReplica"
                        ],
                        "x-ms-enum": {
                          "name": "ReplicationRole",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Primary",
                              "value": "Primary",
                              "description": "The cluster is a primary replica."
                            },
                            {
                              "name": "AsyncReplica",
                              "value": "AsyncReplica",
                              "description": "The cluster is a local asynchronous replica."
                            },
                            {
                              "name": "GeoAsyncReplica",
                              "value": "GeoAsyncReplica",
                              "description": "The cluster is a geo-asynchronous replica."
                            }
                          ]
                        }
                      },
                      "replicationState": {
                        "description": "The replication link state of the replica cluster.",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "Active",
                          "Catchup",
                          "Provisioning",
                          "Updating",
                          "Broken",
                          "Reconfiguring"
                        ],
                        "x-ms-enum": {
                          "name": "ReplicationState",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Active",
                              "value": "Active",
                              "description": "Replication link is active."
                            },
                            {
                              "name": "Catchup",
                              "value": "Catchup",
                              "description": "Replica is catching-up with the primary. This can occur after the replica is created or after a promotion is triggered."
                            },
                            {
                              "name": "Provisioning",
                              "value": "Provisioning",
                              "description": "Replica and replication link to the primary is being created."
                            },
                            {
                              "name": "Updating",
                              "value": "Updating",
                              "description": "Replication link is being updated due to a change on the replica or an upgrade."
                            },
                            {
                              "name": "Broken",
                              "value": "Broken",
                              "description": "Replication link is broken and the replica may need to be recreated."
                            },
                            {
                              "name": "Reconfiguring",
                              "value": "Reconfiguring",
                              "description": "Replication link is re-configuring due to a promotion event."
                            }
                          ]
                        }
                      }
                    }
                  },
                  "infrastructureVersion": {
                    "type": "string",
                    "description": "The infrastructure version the cluster is provisioned on.",
                    "readOnly": true
                  },
                  "authConfig": {
                    "description": "The authentication configuration for the cluster.",
                    "type": "object",
                    "properties": {
                      "allowedModes": {
                        "type": "array",
                        "description": "Allowed authentication modes for data access on the cluster.",
                        "items": {
                          "type": "string",
                          "description": "The authentication modes supporting on the Mongo cluster.",
                          "enum": [
                            "NativeAuth",
                            "MicrosoftEntraID"
                          ],
                          "x-ms-enum": {
                            "name": "AuthenticationMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "NativeAuth",
                                "value": "NativeAuth",
                                "description": "Native mongo authentication mode using username and password with auth mechanism 'SCRAM-SHA-256'."
                              },
                              {
                                "name": "MicrosoftEntraID",
                                "value": "MicrosoftEntraID",
                                "description": "Microsoft Entra ID authentication mode using Entra users assigned to the cluster and auth mechanism 'MONGODB-OIDC'."
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "encryption": {
                    "description": "The encryption configuration for the cluster. Depends on identity being configured.",
                    "type": "object",
                    "properties": {
                      "customerManagedKeyEncryption": {
                        "description": "Customer managed key encryption settings.",
                        "type": "object",
                        "properties": {
                          "keyEncryptionKeyIdentity": {
                            "description": "The identity used to access the key encryption key.",
                            "type": "object",
                            "properties": {
                              "identityType": {
                                "description": "The type of identity. Only 'UserAssignedIdentity' is supported.",
                                "type": "string",
                                "enum": [
                                  "UserAssignedIdentity"
                                ],
                                "x-ms-enum": {
                                  "name": "KeyEncryptionKeyIdentityType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "UserAssignedIdentity",
                                      "value": "UserAssignedIdentity",
                                      "description": "User assigned identity."
                                    }
                                  ]
                                }
                              },
                              "userAssignedIdentityResourceId": {
                                "type": "string",
                                "description": "The user assigned identity resource id."
                              }
                            }
                          },
                          "keyEncryptionKeyUrl": {
                            "type": "string",
                            "description": "The URI of the key vault key used for encryption."
                          }
                        }
                      }
                    }
                  }
                }
              },
              "identity": {
                "description": "The managed service identities assigned to this resource.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "tenantId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                    "enum": [
                      "None",
                      "SystemAssigned",
                      "UserAssigned",
                      "SystemAssigned,UserAssigned"
                    ],
                    "x-ms-enum": {
                      "name": "ManagedServiceIdentityType",
                      "modelAsString": true
                    }
                  },
                  "userAssignedIdentities": {
                    "type": "object",
                    "title": "User-Assigned Identities",
                    "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                    "additionalProperties": {
                      "x-nullable": true,
                      "type": "object",
                      "description": "User assigned identity properties",
                      "properties": {
                        "principalId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The principal ID of the assigned identity.",
                          "readOnly": true
                        },
                        "clientId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The client ID of the assigned identity.",
                          "readOnly": true
                        }
                      }
                    }
                  }
                },
                "required": [
                  "type"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "MongoClusterProperties": {
      "type": "object",
      "description": "The properties of a mongo cluster.",
      "properties": {
        "createMode": {
          "description": "The mode to create a mongo cluster.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "string",
          "enum": [
            "Default",
            "PointInTimeRestore",
            "GeoReplica",
            "Replica"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Default",
                "value": "Default",
                "description": "Create a new mongo cluster."
              },
              {
                "name": "PointInTimeRestore",
                "value": "PointInTimeRestore",
                "description": "Create a mongo cluster from a restore point-in-time."
              },
              {
                "name": "GeoReplica",
                "value": "GeoReplica",
                "description": "Create a replica cluster in distinct geographic region from the source cluster."
              },
              {
                "name": "Replica",
                "value": "Replica",
                "description": "Create a replica cluster in the same geographic region as the source cluster."
              }
            ]
          }
        },
        "restoreParameters": {
          "description": "The parameters to create a point-in-time restore mongo cluster.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "properties": {
            "pointInTimeUTC": {
              "type": "string",
              "format": "date-time",
              "description": "UTC point in time to restore a mongo cluster"
            },
            "sourceResourceId": {
              "description": "Resource ID to locate the source cluster to restore",
              "type": "string",
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.DocumentDB/mongoClusters"
                  }
                ]
              }
            }
          }
        },
        "replicaParameters": {
          "description": "The parameters to create a replica mongo cluster.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "properties": {
            "sourceResourceId": {
              "description": "The id of the replication source cluster.",
              "type": "string",
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.DocumentDB/mongoClusters"
                  }
                ]
              }
            },
            "sourceLocation": {
              "description": "The location of the source cluster",
              "type": "string"
            }
          },
          "required": [
            "sourceResourceId",
            "sourceLocation"
          ]
        },
        "administrator": {
          "description": "The local administrator properties for the mongo cluster.",
          "type": "object",
          "properties": {
            "userName": {
              "type": "string",
              "description": "The administrator user name.",
              "x-ms-mutability": [
                "read",
                "update",
                "create"
              ]
            },
            "password": {
              "type": "string",
              "format": "password",
              "description": "The administrator password.",
              "x-ms-mutability": [
                "update",
                "create"
              ],
              "x-ms-secret": true
            }
          }
        },
        "serverVersion": {
          "type": "string",
          "description": "The Mongo DB server version. Defaults to the latest available version if not specified."
        },
        "connectionString": {
          "type": "string",
          "description": "The default mongo connection string for the cluster.",
          "readOnly": true
        },
        "provisioningState": {
          "description": "The provisioning state of the mongo cluster.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "InProgress",
            "Updating",
            "Dropping"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "InProgress",
                "value": "InProgress",
                "description": "An operation is in-progress on the resource."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "An update operation is in-progress on the resource."
              },
              {
                "name": "Dropping",
                "value": "Dropping",
                "description": "A drop operation is in-progress on the resource."
              }
            ]
          }
        },
        "clusterStatus": {
          "description": "The status of the mongo cluster.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Ready",
            "Provisioning",
            "Updating",
            "Starting",
            "Stopping",
            "Stopped",
            "Dropping"
          ],
          "x-ms-enum": {
            "name": "MongoClusterStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Ready",
                "value": "Ready",
                "description": "The mongo cluster resource is ready for use."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "The mongo cluster resource is being provisioned."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "The mongo cluster resource is being updated."
              },
              {
                "name": "Starting",
                "value": "Starting",
                "description": "The mongo cluster resource is being started."
              },
              {
                "name": "Stopping",
                "value": "Stopping",
                "description": "The mongo cluster resource is being stopped."
              },
              {
                "name": "Stopped",
                "value": "Stopped",
                "description": "The mongo cluster resource is stopped."
              },
              {
                "name": "Dropping",
                "value": "Dropping",
                "description": "The mongo cluster resource is being dropped."
              }
            ]
          }
        },
        "publicNetworkAccess": {
          "description": "Whether or not public endpoint access is allowed for this mongo cluster.",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "If set, mongo cluster can be accessed through private and public methods."
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "If set, the private endpoints are the exclusive access method."
              }
            ]
          }
        },
        "highAvailability": {
          "description": "The high availability properties of the mongo cluster.",
          "type": "object",
          "properties": {
            "targetMode": {
              "description": "The target high availability mode requested for the cluster.",
              "type": "string",
              "enum": [
                "Disabled",
                "SameZone",
                "ZoneRedundantPreferred"
              ],
              "x-ms-enum": {
                "name": "HighAvailabilityMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "High availability mode is disabled. This mode is can see availability impact during faults or maintenance and is not recommended for production."
                  },
                  {
                    "name": "SameZone",
                    "value": "SameZone",
                    "description": "High availability mode is enabled, where each server in a shard is placed in the same availability zone."
                  },
                  {
                    "name": "ZoneRedundantPreferred",
                    "value": "ZoneRedundantPreferred",
                    "description": "High availability mode is enabled and preferences ZoneRedundant if availability zones capacity is available in the region, otherwise falls-back to provisioning with SameZone."
                  }
                ]
              }
            }
          }
        },
        "storage": {
          "description": "The storage properties of the mongo cluster.",
          "type": "object",
          "properties": {
            "sizeGb": {
              "type": "integer",
              "format": "int64",
              "description": "The size of the data disk assigned to each server."
            },
            "type": {
              "description": "The type of storage to provision the cluster servers with.",
              "type": "string",
              "enum": [
                "PremiumSSD",
                "PremiumSSDv2"
              ],
              "x-ms-enum": {
                "name": "StorageType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "PremiumSSD",
                    "value": "PremiumSSD",
                    "description": "Premium SSD for high performance workloads."
                  },
                  {
                    "name": "PremiumSSDv2",
                    "value": "PremiumSSDv2",
                    "description": "Premium SSD v2 for very IO-intensive workloads. This is a preview option and has additional limitations."
                  }
                ]
              }
            }
          }
        },
        "sharding": {
          "description": "The sharding properties of the mongo cluster.",
          "type": "object",
          "properties": {
            "shardCount": {
              "type": "integer",
              "format": "int32",
              "description": "Number of shards to provision on the cluster."
            }
          }
        },
        "compute": {
          "description": "The compute properties of the mongo cluster.",
          "type": "object",
          "properties": {
            "tier": {
              "type": "string",
              "description": "The compute tier to assign to the cluster, where each tier maps to a virtual-core and memory size. Example values: 'M30', 'M40'."
            }
          }
        },
        "backup": {
          "description": "The backup properties of the mongo cluster.",
          "type": "object",
          "properties": {
            "earliestRestoreTime": {
              "type": "string",
              "description": "Earliest restore timestamp in UTC ISO8601 format.",
              "readOnly": true
            }
          }
        },
        "dataApi": {
          "description": "The Data API properties of the mongo cluster.",
          "type": "object",
          "properties": {
            "mode": {
              "description": "The mode to indicate whether the Mongo Data API is enabled for a cluster.",
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "DataApiMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "Mongo Data API is enabled for the cluster."
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "Mongo Data API is disabled for the cluster."
                  }
                ]
              }
            }
          }
        },
        "privateEndpointConnections": {
          "type": "array",
          "description": "List of private endpoint connections.",
          "items": {
            "type": "object",
            "description": "The private endpoint connection resource.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Resource properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "groupIds": {
                    "type": "array",
                    "description": "The group ids for the private endpoint resource.",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "privateEndpoint": {
                    "description": "The private endpoint resource.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ARM identifier for private endpoint.",
                        "readOnly": true
                      }
                    }
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "A collection of information about the state of the connection between service consumer and provider.",
                    "type": "object",
                    "properties": {
                      "status": {
                        "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                        "type": "string",
                        "enum": [
                          "Pending",
                          "Approved",
                          "Rejected"
                        ],
                        "x-ms-enum": {
                          "name": "PrivateEndpointServiceConnectionStatus",
                          "modelAsString": true
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "The reason for approval/rejection of the connection."
                      },
                      "actionsRequired": {
                        "type": "string",
                        "description": "A message indicating if changes on the service provider require any updates on the consumer."
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "The provisioning state of the private endpoint connection resource.",
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Creating",
                      "Deleting",
                      "Failed"
                    ],
                    "x-ms-enum": {
                      "name": "PrivateEndpointConnectionProvisioningState",
                      "modelAsString": true
                    },
                    "readOnly": true
                  }
                },
                "required": [
                  "privateLinkServiceConnectionState"
                ]
              }
            }
          },
          "readOnly": true
        },
        "previewFeatures": {
          "type": "array",
          "description": "List of private endpoint connections.",
          "items": {
            "type": "string",
            "description": "Preview features that can be enabled on a mongo cluster.",
            "enum": [
              "GeoReplicas"
            ],
            "x-ms-enum": {
              "name": "PreviewFeature",
              "modelAsString": true,
              "values": [
                {
                  "name": "GeoReplicas",
                  "value": "GeoReplicas",
                  "description": "Enables geo replicas preview feature. The feature must be set at create-time on new cluster to enable linking a geo-replica cluster to it."
                }
              ]
            }
          }
        },
        "replica": {
          "description": "The replication properties for the mongo cluster",
          "readOnly": true,
          "type": "object",
          "properties": {
            "sourceResourceId": {
              "description": "The resource id the source cluster for the replica cluster.",
              "readOnly": true,
              "type": "string",
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.DocumentDB/mongoClusters"
                  }
                ]
              }
            },
            "role": {
              "description": "The replication role of the cluster",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Primary",
                "AsyncReplica",
                "GeoAsyncReplica"
              ],
              "x-ms-enum": {
                "name": "ReplicationRole",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Primary",
                    "value": "Primary",
                    "description": "The cluster is a primary replica."
                  },
                  {
                    "name": "AsyncReplica",
                    "value": "AsyncReplica",
                    "description": "The cluster is a local asynchronous replica."
                  },
                  {
                    "name": "GeoAsyncReplica",
                    "value": "GeoAsyncReplica",
                    "description": "The cluster is a geo-asynchronous replica."
                  }
                ]
              }
            },
            "replicationState": {
              "description": "The replication link state of the replica cluster.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Active",
                "Catchup",
                "Provisioning",
                "Updating",
                "Broken",
                "Reconfiguring"
              ],
              "x-ms-enum": {
                "name": "ReplicationState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Active",
                    "value": "Active",
                    "description": "Replication link is active."
                  },
                  {
                    "name": "Catchup",
                    "value": "Catchup",
                    "description": "Replica is catching-up with the primary. This can occur after the replica is created or after a promotion is triggered."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "Replica and replication link to the primary is being created."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "Replication link is being updated due to a change on the replica or an upgrade."
                  },
                  {
                    "name": "Broken",
                    "value": "Broken",
                    "description": "Replication link is broken and the replica may need to be recreated."
                  },
                  {
                    "name": "Reconfiguring",
                    "value": "Reconfiguring",
                    "description": "Replication link is re-configuring due to a promotion event."
                  }
                ]
              }
            }
          }
        },
        "infrastructureVersion": {
          "type": "string",
          "description": "The infrastructure version the cluster is provisioned on.",
          "readOnly": true
        },
        "authConfig": {
          "description": "The authentication configuration for the cluster.",
          "type": "object",
          "properties": {
            "allowedModes": {
              "type": "array",
              "description": "Allowed authentication modes for data access on the cluster.",
              "items": {
                "type": "string",
                "description": "The authentication modes supporting on the Mongo cluster.",
                "enum": [
                  "NativeAuth",
                  "MicrosoftEntraID"
                ],
                "x-ms-enum": {
                  "name": "AuthenticationMode",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "NativeAuth",
                      "value": "NativeAuth",
                      "description": "Native mongo authentication mode using username and password with auth mechanism 'SCRAM-SHA-256'."
                    },
                    {
                      "name": "MicrosoftEntraID",
                      "value": "MicrosoftEntraID",
                      "description": "Microsoft Entra ID authentication mode using Entra users assigned to the cluster and auth mechanism 'MONGODB-OIDC'."
                    }
                  ]
                }
              }
            }
          }
        },
        "encryption": {
          "description": "The encryption configuration for the cluster. Depends on identity being configured.",
          "type": "object",
          "properties": {
            "customerManagedKeyEncryption": {
              "description": "Customer managed key encryption settings.",
              "type": "object",
              "properties": {
                "keyEncryptionKeyIdentity": {
                  "description": "The identity used to access the key encryption key.",
                  "type": "object",
                  "properties": {
                    "identityType": {
                      "description": "The type of identity. Only 'UserAssignedIdentity' is supported.",
                      "type": "string",
                      "enum": [
                        "UserAssignedIdentity"
                      ],
                      "x-ms-enum": {
                        "name": "KeyEncryptionKeyIdentityType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "UserAssignedIdentity",
                            "value": "UserAssignedIdentity",
                            "description": "User assigned identity."
                          }
                        ]
                      }
                    },
                    "userAssignedIdentityResourceId": {
                      "type": "string",
                      "description": "The user assigned identity resource id."
                    }
                  }
                },
                "keyEncryptionKeyUrl": {
                  "type": "string",
                  "description": "The URI of the key vault key used for encryption."
                }
              }
            }
          }
        }
      }
    },
    "MongoClusterReplicaParameters": {
      "type": "object",
      "description": "Parameters used for replica operations.",
      "properties": {
        "sourceResourceId": {
          "description": "The id of the replication source cluster.",
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.DocumentDB/mongoClusters"
              }
            ]
          }
        },
        "sourceLocation": {
          "description": "The location of the source cluster",
          "type": "string"
        }
      },
      "required": [
        "sourceResourceId",
        "sourceLocation"
      ]
    },
    "MongoClusterResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "Identifier for a mongo cluster resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.DocumentDB/mongoClusters"
          }
        ]
      }
    },
    "MongoClusterRestoreParameters": {
      "type": "object",
      "description": "Parameters used for restore operations",
      "properties": {
        "pointInTimeUTC": {
          "type": "string",
          "format": "date-time",
          "description": "UTC point in time to restore a mongo cluster"
        },
        "sourceResourceId": {
          "description": "Resource ID to locate the source cluster to restore",
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.DocumentDB/mongoClusters"
              }
            ]
          }
        }
      }
    },
    "MongoClusterStatus": {
      "type": "string",
      "description": "The status of the Mongo cluster resource.",
      "enum": [
        "Ready",
        "Provisioning",
        "Updating",
        "Starting",
        "Stopping",
        "Stopped",
        "Dropping"
      ],
      "x-ms-enum": {
        "name": "MongoClusterStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Ready",
            "value": "Ready",
            "description": "The mongo cluster resource is ready for use."
          },
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "The mongo cluster resource is being provisioned."
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "The mongo cluster resource is being updated."
          },
          {
            "name": "Starting",
            "value": "Starting",
            "description": "The mongo cluster resource is being started."
          },
          {
            "name": "Stopping",
            "value": "Stopping",
            "description": "The mongo cluster resource is being stopped."
          },
          {
            "name": "Stopped",
            "value": "Stopped",
            "description": "The mongo cluster resource is stopped."
          },
          {
            "name": "Dropping",
            "value": "Dropping",
            "description": "The mongo cluster resource is being dropped."
          }
        ]
      }
    },
    "MongoClusterUpdate": {
      "type": "object",
      "description": "The type used for update operations of the MongoCluster.",
      "properties": {
        "identity": {
          "description": "The managed service identities assigned to this resource.",
          "type": "object",
          "properties": {
            "principalId": {
              "type": "string",
              "format": "uuid",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "format": "uuid",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "title": "User-Assigned Identities",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "additionalProperties": {
                "x-nullable": true,
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "administrator": {
              "description": "The local administrator properties for the mongo cluster.",
              "type": "object",
              "properties": {
                "userName": {
                  "type": "string",
                  "description": "The administrator user name.",
                  "x-ms-mutability": [
                    "read",
                    "update",
                    "create"
                  ]
                },
                "password": {
                  "type": "string",
                  "format": "password",
                  "description": "The administrator password.",
                  "x-ms-mutability": [
                    "update",
                    "create"
                  ],
                  "x-ms-secret": true
                }
              }
            },
            "serverVersion": {
              "type": "string",
              "description": "The Mongo DB server version. Defaults to the latest available version if not specified."
            },
            "publicNetworkAccess": {
              "description": "Whether or not public endpoint access is allowed for this mongo cluster.",
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "PublicNetworkAccess",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "If set, mongo cluster can be accessed through private and public methods."
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "If set, the private endpoints are the exclusive access method."
                  }
                ]
              }
            },
            "highAvailability": {
              "description": "The high availability properties of the mongo cluster.",
              "type": "object",
              "properties": {
                "targetMode": {
                  "description": "The target high availability mode requested for the cluster.",
                  "type": "string",
                  "enum": [
                    "Disabled",
                    "SameZone",
                    "ZoneRedundantPreferred"
                  ],
                  "x-ms-enum": {
                    "name": "HighAvailabilityMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "High availability mode is disabled. This mode is can see availability impact during faults or maintenance and is not recommended for production."
                      },
                      {
                        "name": "SameZone",
                        "value": "SameZone",
                        "description": "High availability mode is enabled, where each server in a shard is placed in the same availability zone."
                      },
                      {
                        "name": "ZoneRedundantPreferred",
                        "value": "ZoneRedundantPreferred",
                        "description": "High availability mode is enabled and preferences ZoneRedundant if availability zones capacity is available in the region, otherwise falls-back to provisioning with SameZone."
                      }
                    ]
                  }
                }
              }
            },
            "storage": {
              "description": "The storage properties of the mongo cluster.",
              "type": "object",
              "properties": {
                "sizeGb": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The size of the data disk assigned to each server."
                },
                "type": {
                  "description": "The type of storage to provision the cluster servers with.",
                  "type": "string",
                  "enum": [
                    "PremiumSSD",
                    "PremiumSSDv2"
                  ],
                  "x-ms-enum": {
                    "name": "StorageType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "PremiumSSD",
                        "value": "PremiumSSD",
                        "description": "Premium SSD for high performance workloads."
                      },
                      {
                        "name": "PremiumSSDv2",
                        "value": "PremiumSSDv2",
                        "description": "Premium SSD v2 for very IO-intensive workloads. This is a preview option and has additional limitations."
                      }
                    ]
                  }
                }
              }
            },
            "sharding": {
              "description": "The sharding properties of the mongo cluster.",
              "type": "object",
              "properties": {
                "shardCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of shards to provision on the cluster."
                }
              }
            },
            "compute": {
              "description": "The compute properties of the mongo cluster.",
              "type": "object",
              "properties": {
                "tier": {
                  "type": "string",
                  "description": "The compute tier to assign to the cluster, where each tier maps to a virtual-core and memory size. Example values: 'M30', 'M40'."
                }
              }
            },
            "backup": {
              "description": "The backup properties of the mongo cluster.",
              "type": "object",
              "properties": {
                "earliestRestoreTime": {
                  "type": "string",
                  "description": "Earliest restore timestamp in UTC ISO8601 format.",
                  "readOnly": true
                }
              }
            },
            "dataApi": {
              "description": "The Data API properties of the mongo cluster.",
              "type": "object",
              "properties": {
                "mode": {
                  "description": "The mode to indicate whether the Mongo Data API is enabled for a cluster.",
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "DataApiMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled",
                        "description": "Mongo Data API is enabled for the cluster."
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "Mongo Data API is disabled for the cluster."
                      }
                    ]
                  }
                }
              }
            },
            "previewFeatures": {
              "type": "array",
              "description": "List of private endpoint connections.",
              "items": {
                "type": "string",
                "description": "Preview features that can be enabled on a mongo cluster.",
                "enum": [
                  "GeoReplicas"
                ],
                "x-ms-enum": {
                  "name": "PreviewFeature",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "GeoReplicas",
                      "value": "GeoReplicas",
                      "description": "Enables geo replicas preview feature. The feature must be set at create-time on new cluster to enable linking a geo-replica cluster to it."
                    }
                  ]
                }
              }
            },
            "authConfig": {
              "description": "The authentication configuration for the cluster.",
              "type": "object",
              "properties": {
                "allowedModes": {
                  "type": "array",
                  "description": "Allowed authentication modes for data access on the cluster.",
                  "items": {
                    "type": "string",
                    "description": "The authentication modes supporting on the Mongo cluster.",
                    "enum": [
                      "NativeAuth",
                      "MicrosoftEntraID"
                    ],
                    "x-ms-enum": {
                      "name": "AuthenticationMode",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "NativeAuth",
                          "value": "NativeAuth",
                          "description": "Native mongo authentication mode using username and password with auth mechanism 'SCRAM-SHA-256'."
                        },
                        {
                          "name": "MicrosoftEntraID",
                          "value": "MicrosoftEntraID",
                          "description": "Microsoft Entra ID authentication mode using Entra users assigned to the cluster and auth mechanism 'MONGODB-OIDC'."
                        }
                      ]
                    }
                  }
                }
              }
            },
            "encryption": {
              "description": "The encryption configuration for the cluster. Depends on identity being configured.",
              "type": "object",
              "properties": {
                "customerManagedKeyEncryption": {
                  "description": "Customer managed key encryption settings.",
                  "type": "object",
                  "properties": {
                    "keyEncryptionKeyIdentity": {
                      "description": "The identity used to access the key encryption key.",
                      "type": "object",
                      "properties": {
                        "identityType": {
                          "description": "The type of identity. Only 'UserAssignedIdentity' is supported.",
                          "type": "string",
                          "enum": [
                            "UserAssignedIdentity"
                          ],
                          "x-ms-enum": {
                            "name": "KeyEncryptionKeyIdentityType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "UserAssignedIdentity",
                                "value": "UserAssignedIdentity",
                                "description": "User assigned identity."
                              }
                            ]
                          }
                        },
                        "userAssignedIdentityResourceId": {
                          "type": "string",
                          "description": "The user assigned identity resource id."
                        }
                      }
                    },
                    "keyEncryptionKeyUrl": {
                      "type": "string",
                      "description": "The URI of the key vault key used for encryption."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "MongoClusterUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the MongoCluster.",
      "properties": {
        "administrator": {
          "description": "The local administrator properties for the mongo cluster.",
          "type": "object",
          "properties": {
            "userName": {
              "type": "string",
              "description": "The administrator user name.",
              "x-ms-mutability": [
                "read",
                "update",
                "create"
              ]
            },
            "password": {
              "type": "string",
              "format": "password",
              "description": "The administrator password.",
              "x-ms-mutability": [
                "update",
                "create"
              ],
              "x-ms-secret": true
            }
          }
        },
        "serverVersion": {
          "type": "string",
          "description": "The Mongo DB server version. Defaults to the latest available version if not specified."
        },
        "publicNetworkAccess": {
          "description": "Whether or not public endpoint access is allowed for this mongo cluster.",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "If set, mongo cluster can be accessed through private and public methods."
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "If set, the private endpoints are the exclusive access method."
              }
            ]
          }
        },
        "highAvailability": {
          "description": "The high availability properties of the mongo cluster.",
          "type": "object",
          "properties": {
            "targetMode": {
              "description": "The target high availability mode requested for the cluster.",
              "type": "string",
              "enum": [
                "Disabled",
                "SameZone",
                "ZoneRedundantPreferred"
              ],
              "x-ms-enum": {
                "name": "HighAvailabilityMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "High availability mode is disabled. This mode is can see availability impact during faults or maintenance and is not recommended for production."
                  },
                  {
                    "name": "SameZone",
                    "value": "SameZone",
                    "description": "High availability mode is enabled, where each server in a shard is placed in the same availability zone."
                  },
                  {
                    "name": "ZoneRedundantPreferred",
                    "value": "ZoneRedundantPreferred",
                    "description": "High availability mode is enabled and preferences ZoneRedundant if availability zones capacity is available in the region, otherwise falls-back to provisioning with SameZone."
                  }
                ]
              }
            }
          }
        },
        "storage": {
          "description": "The storage properties of the mongo cluster.",
          "type": "object",
          "properties": {
            "sizeGb": {
              "type": "integer",
              "format": "int64",
              "description": "The size of the data disk assigned to each server."
            },
            "type": {
              "description": "The type of storage to provision the cluster servers with.",
              "type": "string",
              "enum": [
                "PremiumSSD",
                "PremiumSSDv2"
              ],
              "x-ms-enum": {
                "name": "StorageType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "PremiumSSD",
                    "value": "PremiumSSD",
                    "description": "Premium SSD for high performance workloads."
                  },
                  {
                    "name": "PremiumSSDv2",
                    "value": "PremiumSSDv2",
                    "description": "Premium SSD v2 for very IO-intensive workloads. This is a preview option and has additional limitations."
                  }
                ]
              }
            }
          }
        },
        "sharding": {
          "description": "The sharding properties of the mongo cluster.",
          "type": "object",
          "properties": {
            "shardCount": {
              "type": "integer",
              "format": "int32",
              "description": "Number of shards to provision on the cluster."
            }
          }
        },
        "compute": {
          "description": "The compute properties of the mongo cluster.",
          "type": "object",
          "properties": {
            "tier": {
              "type": "string",
              "description": "The compute tier to assign to the cluster, where each tier maps to a virtual-core and memory size. Example values: 'M30', 'M40'."
            }
          }
        },
        "backup": {
          "description": "The backup properties of the mongo cluster.",
          "type": "object",
          "properties": {
            "earliestRestoreTime": {
              "type": "string",
              "description": "Earliest restore timestamp in UTC ISO8601 format.",
              "readOnly": true
            }
          }
        },
        "dataApi": {
          "description": "The Data API properties of the mongo cluster.",
          "type": "object",
          "properties": {
            "mode": {
              "description": "The mode to indicate whether the Mongo Data API is enabled for a cluster.",
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "DataApiMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "Mongo Data API is enabled for the cluster."
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "Mongo Data API is disabled for the cluster."
                  }
                ]
              }
            }
          }
        },
        "previewFeatures": {
          "type": "array",
          "description": "List of private endpoint connections.",
          "items": {
            "type": "string",
            "description": "Preview features that can be enabled on a mongo cluster.",
            "enum": [
              "GeoReplicas"
            ],
            "x-ms-enum": {
              "name": "PreviewFeature",
              "modelAsString": true,
              "values": [
                {
                  "name": "GeoReplicas",
                  "value": "GeoReplicas",
                  "description": "Enables geo replicas preview feature. The feature must be set at create-time on new cluster to enable linking a geo-replica cluster to it."
                }
              ]
            }
          }
        },
        "authConfig": {
          "description": "The authentication configuration for the cluster.",
          "type": "object",
          "properties": {
            "allowedModes": {
              "type": "array",
              "description": "Allowed authentication modes for data access on the cluster.",
              "items": {
                "type": "string",
                "description": "The authentication modes supporting on the Mongo cluster.",
                "enum": [
                  "NativeAuth",
                  "MicrosoftEntraID"
                ],
                "x-ms-enum": {
                  "name": "AuthenticationMode",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "NativeAuth",
                      "value": "NativeAuth",
                      "description": "Native mongo authentication mode using username and password with auth mechanism 'SCRAM-SHA-256'."
                    },
                    {
                      "name": "MicrosoftEntraID",
                      "value": "MicrosoftEntraID",
                      "description": "Microsoft Entra ID authentication mode using Entra users assigned to the cluster and auth mechanism 'MONGODB-OIDC'."
                    }
                  ]
                }
              }
            }
          }
        },
        "encryption": {
          "description": "The encryption configuration for the cluster. Depends on identity being configured.",
          "type": "object",
          "properties": {
            "customerManagedKeyEncryption": {
              "description": "Customer managed key encryption settings.",
              "type": "object",
              "properties": {
                "keyEncryptionKeyIdentity": {
                  "description": "The identity used to access the key encryption key.",
                  "type": "object",
                  "properties": {
                    "identityType": {
                      "description": "The type of identity. Only 'UserAssignedIdentity' is supported.",
                      "type": "string",
                      "enum": [
                        "UserAssignedIdentity"
                      ],
                      "x-ms-enum": {
                        "name": "KeyEncryptionKeyIdentityType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "UserAssignedIdentity",
                            "value": "UserAssignedIdentity",
                            "description": "User assigned identity."
                          }
                        ]
                      }
                    },
                    "userAssignedIdentityResourceId": {
                      "type": "string",
                      "description": "The user assigned identity resource id."
                    }
                  }
                },
                "keyEncryptionKeyUrl": {
                  "type": "string",
                  "description": "The URI of the key vault key used for encryption."
                }
              }
            }
          }
        }
      }
    },
    "PreviewFeature": {
      "type": "string",
      "description": "Preview features that can be enabled on a mongo cluster.",
      "enum": [
        "GeoReplicas"
      ],
      "x-ms-enum": {
        "name": "PreviewFeature",
        "modelAsString": true,
        "values": [
          {
            "name": "GeoReplicas",
            "value": "GeoReplicas",
            "description": "Enables geo replicas preview feature. The feature must be set at create-time on new cluster to enable linking a geo-replica cluster to it."
          }
        ]
      }
    },
    "PrivateEndpointConnectionResource": {
      "type": "object",
      "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "groupIds": {
              "type": "array",
              "description": "The group ids for the private endpoint resource.",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "privateEndpoint": {
              "description": "The private endpoint resource.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ARM identifier for private endpoint.",
                  "readOnly": true
                }
              }
            },
            "privateLinkServiceConnectionState": {
              "description": "A collection of information about the state of the connection between service consumer and provider.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                  "type": "string",
                  "enum": [
                    "Pending",
                    "Approved",
                    "Rejected"
                  ],
                  "x-ms-enum": {
                    "name": "PrivateEndpointServiceConnectionStatus",
                    "modelAsString": true
                  }
                },
                "description": {
                  "type": "string",
                  "description": "The reason for approval/rejection of the connection."
                },
                "actionsRequired": {
                  "type": "string",
                  "description": "A message indicating if changes on the service provider require any updates on the consumer."
                }
              }
            },
            "provisioningState": {
              "description": "The provisioning state of the private endpoint connection resource.",
              "type": "string",
              "enum": [
                "Succeeded",
                "Creating",
                "Deleting",
                "Failed"
              ],
              "x-ms-enum": {
                "name": "PrivateEndpointConnectionProvisioningState",
                "modelAsString": true
              },
              "readOnly": true
            }
          },
          "required": [
            "privateLinkServiceConnectionState"
          ]
        }
      }
    },
    "PrivateEndpointConnectionResourceListResult": {
      "type": "object",
      "description": "The response of a PrivateEndpointConnectionResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PrivateEndpointConnectionResource items on this page",
          "items": {
            "type": "object",
            "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "groupIds": {
                    "type": "array",
                    "description": "The group ids for the private endpoint resource.",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "privateEndpoint": {
                    "description": "The private endpoint resource.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ARM identifier for private endpoint.",
                        "readOnly": true
                      }
                    }
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "A collection of information about the state of the connection between service consumer and provider.",
                    "type": "object",
                    "properties": {
                      "status": {
                        "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                        "type": "string",
                        "enum": [
                          "Pending",
                          "Approved",
                          "Rejected"
                        ],
                        "x-ms-enum": {
                          "name": "PrivateEndpointServiceConnectionStatus",
                          "modelAsString": true
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "The reason for approval/rejection of the connection."
                      },
                      "actionsRequired": {
                        "type": "string",
                        "description": "A message indicating if changes on the service provider require any updates on the consumer."
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "The provisioning state of the private endpoint connection resource.",
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Creating",
                      "Deleting",
                      "Failed"
                    ],
                    "x-ms-enum": {
                      "name": "PrivateEndpointConnectionProvisioningState",
                      "modelAsString": true
                    },
                    "readOnly": true
                  }
                },
                "required": [
                  "privateLinkServiceConnectionState"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PrivateLinkResource": {
      "type": "object",
      "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "groupId": {
              "type": "string",
              "description": "The private link resource group id.",
              "readOnly": true
            },
            "requiredMembers": {
              "type": "array",
              "description": "The private link resource required member names.",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "requiredZoneNames": {
              "type": "array",
              "description": "The private link resource private link DNS zone name.",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "PrivateLinkResourceListResult": {
      "type": "object",
      "description": "The response of a PrivateLinkResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PrivateLinkResource items on this page",
          "items": {
            "type": "object",
            "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "groupId": {
                    "type": "string",
                    "description": "The private link resource group id.",
                    "readOnly": true
                  },
                  "requiredMembers": {
                    "type": "array",
                    "description": "The private link resource required member names.",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "requiredZoneNames": {
                    "type": "array",
                    "description": "The private link resource private link DNS zone name.",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PromoteMode": {
      "type": "string",
      "description": "The mode to apply to a promote operation.",
      "enum": [
        "Switchover"
      ],
      "x-ms-enum": {
        "name": "PromoteMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Switchover",
            "value": "Switchover",
            "description": "Promotion will switch the current replica cluster to the primary role and the original primary will be switched to a replica role, maintaining the replication link."
          }
        ]
      }
    },
    "PromoteOption": {
      "type": "string",
      "description": "The option to apply to a promote operation.",
      "enum": [
        "Forced"
      ],
      "x-ms-enum": {
        "name": "PromoteOption",
        "modelAsString": true,
        "values": [
          {
            "name": "Forced",
            "value": "Forced",
            "description": "Promote option forces the promotion without waiting for the replica to be caught up to the primary. This can result in data-loss so should only be used during disaster recovery scenarios."
          }
        ]
      }
    },
    "PromoteReplicaRequest": {
      "type": "object",
      "description": "Promote replica request properties.",
      "properties": {
        "promoteOption": {
          "description": "The promote option to apply to the operation.",
          "type": "string",
          "enum": [
            "Forced"
          ],
          "x-ms-enum": {
            "name": "PromoteOption",
            "modelAsString": true,
            "values": [
              {
                "name": "Forced",
                "value": "Forced",
                "description": "Promote option forces the promotion without waiting for the replica to be caught up to the primary. This can result in data-loss so should only be used during disaster recovery scenarios."
              }
            ]
          }
        },
        "mode": {
          "description": "The mode to apply to the promote operation. Value is optional and default value is 'Switchover'.",
          "type": "string",
          "enum": [
            "Switchover"
          ],
          "x-ms-enum": {
            "name": "PromoteMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Switchover",
                "value": "Switchover",
                "description": "Promotion will switch the current replica cluster to the primary role and the original primary will be switched to a replica role, maintaining the replication link."
              }
            ]
          }
        }
      },
      "required": [
        "promoteOption"
      ]
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The provisioning state of the last accepted operation.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "InProgress",
        "Updating",
        "Dropping"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "InProgress",
            "value": "InProgress",
            "description": "An operation is in-progress on the resource."
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "An update operation is in-progress on the resource."
          },
          {
            "name": "Dropping",
            "value": "Dropping",
            "description": "A drop operation is in-progress on the resource."
          }
        ]
      },
      "readOnly": true
    },
    "PublicNetworkAccess": {
      "type": "string",
      "description": "Whether or not public endpoint access is allowed for this Mongo cluster.  Value is optional and default value is 'Enabled'",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "PublicNetworkAccess",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "If set, mongo cluster can be accessed through private and public methods."
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "If set, the private endpoints are the exclusive access method."
          }
        ]
      }
    },
    "Replica": {
      "type": "object",
      "description": "Represents a mongo cluster replica.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "createMode": {
              "description": "The mode to create a mongo cluster.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string",
              "enum": [
                "Default",
                "PointInTimeRestore",
                "GeoReplica",
                "Replica"
              ],
              "x-ms-enum": {
                "name": "CreateMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Default",
                    "value": "Default",
                    "description": "Create a new mongo cluster."
                  },
                  {
                    "name": "PointInTimeRestore",
                    "value": "PointInTimeRestore",
                    "description": "Create a mongo cluster from a restore point-in-time."
                  },
                  {
                    "name": "GeoReplica",
                    "value": "GeoReplica",
                    "description": "Create a replica cluster in distinct geographic region from the source cluster."
                  },
                  {
                    "name": "Replica",
                    "value": "Replica",
                    "description": "Create a replica cluster in the same geographic region as the source cluster."
                  }
                ]
              }
            },
            "restoreParameters": {
              "description": "The parameters to create a point-in-time restore mongo cluster.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "object",
              "properties": {
                "pointInTimeUTC": {
                  "type": "string",
                  "format": "date-time",
                  "description": "UTC point in time to restore a mongo cluster"
                },
                "sourceResourceId": {
                  "description": "Resource ID to locate the source cluster to restore",
                  "type": "string",
                  "format": "arm-id",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.DocumentDB/mongoClusters"
                      }
                    ]
                  }
                }
              }
            },
            "replicaParameters": {
              "description": "The parameters to create a replica mongo cluster.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "object",
              "properties": {
                "sourceResourceId": {
                  "description": "The id of the replication source cluster.",
                  "type": "string",
                  "format": "arm-id",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.DocumentDB/mongoClusters"
                      }
                    ]
                  }
                },
                "sourceLocation": {
                  "description": "The location of the source cluster",
                  "type": "string"
                }
              },
              "required": [
                "sourceResourceId",
                "sourceLocation"
              ]
            },
            "administrator": {
              "description": "The local administrator properties for the mongo cluster.",
              "type": "object",
              "properties": {
                "userName": {
                  "type": "string",
                  "description": "The administrator user name.",
                  "x-ms-mutability": [
                    "read",
                    "update",
                    "create"
                  ]
                },
                "password": {
                  "type": "string",
                  "format": "password",
                  "description": "The administrator password.",
                  "x-ms-mutability": [
                    "update",
                    "create"
                  ],
                  "x-ms-secret": true
                }
              }
            },
            "serverVersion": {
              "type": "string",
              "description": "The Mongo DB server version. Defaults to the latest available version if not specified."
            },
            "connectionString": {
              "type": "string",
              "description": "The default mongo connection string for the cluster.",
              "readOnly": true
            },
            "provisioningState": {
              "description": "The provisioning state of the mongo cluster.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "InProgress",
                "Updating",
                "Dropping"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "InProgress",
                    "value": "InProgress",
                    "description": "An operation is in-progress on the resource."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "An update operation is in-progress on the resource."
                  },
                  {
                    "name": "Dropping",
                    "value": "Dropping",
                    "description": "A drop operation is in-progress on the resource."
                  }
                ]
              }
            },
            "clusterStatus": {
              "description": "The status of the mongo cluster.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Ready",
                "Provisioning",
                "Updating",
                "Starting",
                "Stopping",
                "Stopped",
                "Dropping"
              ],
              "x-ms-enum": {
                "name": "MongoClusterStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Ready",
                    "value": "Ready",
                    "description": "The mongo cluster resource is ready for use."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "The mongo cluster resource is being provisioned."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "The mongo cluster resource is being updated."
                  },
                  {
                    "name": "Starting",
                    "value": "Starting",
                    "description": "The mongo cluster resource is being started."
                  },
                  {
                    "name": "Stopping",
                    "value": "Stopping",
                    "description": "The mongo cluster resource is being stopped."
                  },
                  {
                    "name": "Stopped",
                    "value": "Stopped",
                    "description": "The mongo cluster resource is stopped."
                  },
                  {
                    "name": "Dropping",
                    "value": "Dropping",
                    "description": "The mongo cluster resource is being dropped."
                  }
                ]
              }
            },
            "publicNetworkAccess": {
              "description": "Whether or not public endpoint access is allowed for this mongo cluster.",
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "PublicNetworkAccess",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "If set, mongo cluster can be accessed through private and public methods."
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "If set, the private endpoints are the exclusive access method."
                  }
                ]
              }
            },
            "highAvailability": {
              "description": "The high availability properties of the mongo cluster.",
              "type": "object",
              "properties": {
                "targetMode": {
                  "description": "The target high availability mode requested for the cluster.",
                  "type": "string",
                  "enum": [
                    "Disabled",
                    "SameZone",
                    "ZoneRedundantPreferred"
                  ],
                  "x-ms-enum": {
                    "name": "HighAvailabilityMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "High availability mode is disabled. This mode is can see availability impact during faults or maintenance and is not recommended for production."
                      },
                      {
                        "name": "SameZone",
                        "value": "SameZone",
                        "description": "High availability mode is enabled, where each server in a shard is placed in the same availability zone."
                      },
                      {
                        "name": "ZoneRedundantPreferred",
                        "value": "ZoneRedundantPreferred",
                        "description": "High availability mode is enabled and preferences ZoneRedundant if availability zones capacity is available in the region, otherwise falls-back to provisioning with SameZone."
                      }
                    ]
                  }
                }
              }
            },
            "storage": {
              "description": "The storage properties of the mongo cluster.",
              "type": "object",
              "properties": {
                "sizeGb": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The size of the data disk assigned to each server."
                },
                "type": {
                  "description": "The type of storage to provision the cluster servers with.",
                  "type": "string",
                  "enum": [
                    "PremiumSSD",
                    "PremiumSSDv2"
                  ],
                  "x-ms-enum": {
                    "name": "StorageType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "PremiumSSD",
                        "value": "PremiumSSD",
                        "description": "Premium SSD for high performance workloads."
                      },
                      {
                        "name": "PremiumSSDv2",
                        "value": "PremiumSSDv2",
                        "description": "Premium SSD v2 for very IO-intensive workloads. This is a preview option and has additional limitations."
                      }
                    ]
                  }
                }
              }
            },
            "sharding": {
              "description": "The sharding properties of the mongo cluster.",
              "type": "object",
              "properties": {
                "shardCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of shards to provision on the cluster."
                }
              }
            },
            "compute": {
              "description": "The compute properties of the mongo cluster.",
              "type": "object",
              "properties": {
                "tier": {
                  "type": "string",
                  "description": "The compute tier to assign to the cluster, where each tier maps to a virtual-core and memory size. Example values: 'M30', 'M40'."
                }
              }
            },
            "backup": {
              "description": "The backup properties of the mongo cluster.",
              "type": "object",
              "properties": {
                "earliestRestoreTime": {
                  "type": "string",
                  "description": "Earliest restore timestamp in UTC ISO8601 format.",
                  "readOnly": true
                }
              }
            },
            "dataApi": {
              "description": "The Data API properties of the mongo cluster.",
              "type": "object",
              "properties": {
                "mode": {
                  "description": "The mode to indicate whether the Mongo Data API is enabled for a cluster.",
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "DataApiMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled",
                        "description": "Mongo Data API is enabled for the cluster."
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "Mongo Data API is disabled for the cluster."
                      }
                    ]
                  }
                }
              }
            },
            "privateEndpointConnections": {
              "type": "array",
              "description": "List of private endpoint connections.",
              "items": {
                "type": "object",
                "description": "The private endpoint connection resource.",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                    "readOnly": true
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the resource",
                    "readOnly": true
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                    "readOnly": true
                  },
                  "systemData": {
                    "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "createdBy": {
                        "type": "string",
                        "description": "The identity that created the resource."
                      },
                      "createdByType": {
                        "type": "string",
                        "description": "The type of identity that created the resource.",
                        "enum": [
                          "User",
                          "Application",
                          "ManagedIdentity",
                          "Key"
                        ],
                        "x-ms-enum": {
                          "name": "createdByType",
                          "modelAsString": true
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of resource creation (UTC)."
                      },
                      "lastModifiedBy": {
                        "type": "string",
                        "description": "The identity that last modified the resource."
                      },
                      "lastModifiedByType": {
                        "type": "string",
                        "description": "The type of identity that last modified the resource.",
                        "enum": [
                          "User",
                          "Application",
                          "ManagedIdentity",
                          "Key"
                        ],
                        "x-ms-enum": {
                          "name": "createdByType",
                          "modelAsString": true
                        }
                      },
                      "lastModifiedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of resource last modification (UTC)"
                      }
                    }
                  },
                  "properties": {
                    "description": "Resource properties.",
                    "x-ms-client-flatten": true,
                    "type": "object",
                    "properties": {
                      "groupIds": {
                        "type": "array",
                        "description": "The group ids for the private endpoint resource.",
                        "items": {
                          "type": "string"
                        },
                        "readOnly": true
                      },
                      "privateEndpoint": {
                        "description": "The private endpoint resource.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ARM identifier for private endpoint.",
                            "readOnly": true
                          }
                        }
                      },
                      "privateLinkServiceConnectionState": {
                        "description": "A collection of information about the state of the connection between service consumer and provider.",
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                            "type": "string",
                            "enum": [
                              "Pending",
                              "Approved",
                              "Rejected"
                            ],
                            "x-ms-enum": {
                              "name": "PrivateEndpointServiceConnectionStatus",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "type": "string",
                            "description": "The reason for approval/rejection of the connection."
                          },
                          "actionsRequired": {
                            "type": "string",
                            "description": "A message indicating if changes on the service provider require any updates on the consumer."
                          }
                        }
                      },
                      "provisioningState": {
                        "description": "The provisioning state of the private endpoint connection resource.",
                        "type": "string",
                        "enum": [
                          "Succeeded",
                          "Creating",
                          "Deleting",
                          "Failed"
                        ],
                        "x-ms-enum": {
                          "name": "PrivateEndpointConnectionProvisioningState",
                          "modelAsString": true
                        },
                        "readOnly": true
                      }
                    },
                    "required": [
                      "privateLinkServiceConnectionState"
                    ]
                  }
                }
              },
              "readOnly": true
            },
            "previewFeatures": {
              "type": "array",
              "description": "List of private endpoint connections.",
              "items": {
                "type": "string",
                "description": "Preview features that can be enabled on a mongo cluster.",
                "enum": [
                  "GeoReplicas"
                ],
                "x-ms-enum": {
                  "name": "PreviewFeature",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "GeoReplicas",
                      "value": "GeoReplicas",
                      "description": "Enables geo replicas preview feature. The feature must be set at create-time on new cluster to enable linking a geo-replica cluster to it."
                    }
                  ]
                }
              }
            },
            "replica": {
              "description": "The replication properties for the mongo cluster",
              "readOnly": true,
              "type": "object",
              "properties": {
                "sourceResourceId": {
                  "description": "The resource id the source cluster for the replica cluster.",
                  "readOnly": true,
                  "type": "string",
                  "format": "arm-id",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.DocumentDB/mongoClusters"
                      }
                    ]
                  }
                },
                "role": {
                  "description": "The replication role of the cluster",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Primary",
                    "AsyncReplica",
                    "GeoAsyncReplica"
                  ],
                  "x-ms-enum": {
                    "name": "ReplicationRole",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Primary",
                        "value": "Primary",
                        "description": "The cluster is a primary replica."
                      },
                      {
                        "name": "AsyncReplica",
                        "value": "AsyncReplica",
                        "description": "The cluster is a local asynchronous replica."
                      },
                      {
                        "name": "GeoAsyncReplica",
                        "value": "GeoAsyncReplica",
                        "description": "The cluster is a geo-asynchronous replica."
                      }
                    ]
                  }
                },
                "replicationState": {
                  "description": "The replication link state of the replica cluster.",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Active",
                    "Catchup",
                    "Provisioning",
                    "Updating",
                    "Broken",
                    "Reconfiguring"
                  ],
                  "x-ms-enum": {
                    "name": "ReplicationState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Active",
                        "value": "Active",
                        "description": "Replication link is active."
                      },
                      {
                        "name": "Catchup",
                        "value": "Catchup",
                        "description": "Replica is catching-up with the primary. This can occur after the replica is created or after a promotion is triggered."
                      },
                      {
                        "name": "Provisioning",
                        "value": "Provisioning",
                        "description": "Replica and replication link to the primary is being created."
                      },
                      {
                        "name": "Updating",
                        "value": "Updating",
                        "description": "Replication link is being updated due to a change on the replica or an upgrade."
                      },
                      {
                        "name": "Broken",
                        "value": "Broken",
                        "description": "Replication link is broken and the replica may need to be recreated."
                      },
                      {
                        "name": "Reconfiguring",
                        "value": "Reconfiguring",
                        "description": "Replication link is re-configuring due to a promotion event."
                      }
                    ]
                  }
                }
              }
            },
            "infrastructureVersion": {
              "type": "string",
              "description": "The infrastructure version the cluster is provisioned on.",
              "readOnly": true
            },
            "authConfig": {
              "description": "The authentication configuration for the cluster.",
              "type": "object",
              "properties": {
                "allowedModes": {
                  "type": "array",
                  "description": "Allowed authentication modes for data access on the cluster.",
                  "items": {
                    "type": "string",
                    "description": "The authentication modes supporting on the Mongo cluster.",
                    "enum": [
                      "NativeAuth",
                      "MicrosoftEntraID"
                    ],
                    "x-ms-enum": {
                      "name": "AuthenticationMode",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "NativeAuth",
                          "value": "NativeAuth",
                          "description": "Native mongo authentication mode using username and password with auth mechanism 'SCRAM-SHA-256'."
                        },
                        {
                          "name": "MicrosoftEntraID",
                          "value": "MicrosoftEntraID",
                          "description": "Microsoft Entra ID authentication mode using Entra users assigned to the cluster and auth mechanism 'MONGODB-OIDC'."
                        }
                      ]
                    }
                  }
                }
              }
            },
            "encryption": {
              "description": "The encryption configuration for the cluster. Depends on identity being configured.",
              "type": "object",
              "properties": {
                "customerManagedKeyEncryption": {
                  "description": "Customer managed key encryption settings.",
                  "type": "object",
                  "properties": {
                    "keyEncryptionKeyIdentity": {
                      "description": "The identity used to access the key encryption key.",
                      "type": "object",
                      "properties": {
                        "identityType": {
                          "description": "The type of identity. Only 'UserAssignedIdentity' is supported.",
                          "type": "string",
                          "enum": [
                            "UserAssignedIdentity"
                          ],
                          "x-ms-enum": {
                            "name": "KeyEncryptionKeyIdentityType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "UserAssignedIdentity",
                                "value": "UserAssignedIdentity",
                                "description": "User assigned identity."
                              }
                            ]
                          }
                        },
                        "userAssignedIdentityResourceId": {
                          "type": "string",
                          "description": "The user assigned identity resource id."
                        }
                      }
                    },
                    "keyEncryptionKeyUrl": {
                      "type": "string",
                      "description": "The URI of the key vault key used for encryption."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "ReplicaListResult": {
      "type": "object",
      "description": "The response of a Replica list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Replica items on this page",
          "items": {
            "type": "object",
            "description": "Represents a mongo cluster replica.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "createMode": {
                    "description": "The mode to create a mongo cluster.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "type": "string",
                    "enum": [
                      "Default",
                      "PointInTimeRestore",
                      "GeoReplica",
                      "Replica"
                    ],
                    "x-ms-enum": {
                      "name": "CreateMode",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Default",
                          "value": "Default",
                          "description": "Create a new mongo cluster."
                        },
                        {
                          "name": "PointInTimeRestore",
                          "value": "PointInTimeRestore",
                          "description": "Create a mongo cluster from a restore point-in-time."
                        },
                        {
                          "name": "GeoReplica",
                          "value": "GeoReplica",
                          "description": "Create a replica cluster in distinct geographic region from the source cluster."
                        },
                        {
                          "name": "Replica",
                          "value": "Replica",
                          "description": "Create a replica cluster in the same geographic region as the source cluster."
                        }
                      ]
                    }
                  },
                  "restoreParameters": {
                    "description": "The parameters to create a point-in-time restore mongo cluster.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "type": "object",
                    "properties": {
                      "pointInTimeUTC": {
                        "type": "string",
                        "format": "date-time",
                        "description": "UTC point in time to restore a mongo cluster"
                      },
                      "sourceResourceId": {
                        "description": "Resource ID to locate the source cluster to restore",
                        "type": "string",
                        "format": "arm-id",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.DocumentDB/mongoClusters"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "replicaParameters": {
                    "description": "The parameters to create a replica mongo cluster.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "type": "object",
                    "properties": {
                      "sourceResourceId": {
                        "description": "The id of the replication source cluster.",
                        "type": "string",
                        "format": "arm-id",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.DocumentDB/mongoClusters"
                            }
                          ]
                        }
                      },
                      "sourceLocation": {
                        "description": "The location of the source cluster",
                        "type": "string"
                      }
                    },
                    "required": [
                      "sourceResourceId",
                      "sourceLocation"
                    ]
                  },
                  "administrator": {
                    "description": "The local administrator properties for the mongo cluster.",
                    "type": "object",
                    "properties": {
                      "userName": {
                        "type": "string",
                        "description": "The administrator user name.",
                        "x-ms-mutability": [
                          "read",
                          "update",
                          "create"
                        ]
                      },
                      "password": {
                        "type": "string",
                        "format": "password",
                        "description": "The administrator password.",
                        "x-ms-mutability": [
                          "update",
                          "create"
                        ],
                        "x-ms-secret": true
                      }
                    }
                  },
                  "serverVersion": {
                    "type": "string",
                    "description": "The Mongo DB server version. Defaults to the latest available version if not specified."
                  },
                  "connectionString": {
                    "type": "string",
                    "description": "The default mongo connection string for the cluster.",
                    "readOnly": true
                  },
                  "provisioningState": {
                    "description": "The provisioning state of the mongo cluster.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "InProgress",
                      "Updating",
                      "Dropping"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "InProgress",
                          "value": "InProgress",
                          "description": "An operation is in-progress on the resource."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "An update operation is in-progress on the resource."
                        },
                        {
                          "name": "Dropping",
                          "value": "Dropping",
                          "description": "A drop operation is in-progress on the resource."
                        }
                      ]
                    }
                  },
                  "clusterStatus": {
                    "description": "The status of the mongo cluster.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Ready",
                      "Provisioning",
                      "Updating",
                      "Starting",
                      "Stopping",
                      "Stopped",
                      "Dropping"
                    ],
                    "x-ms-enum": {
                      "name": "MongoClusterStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Ready",
                          "value": "Ready",
                          "description": "The mongo cluster resource is ready for use."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "The mongo cluster resource is being provisioned."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "The mongo cluster resource is being updated."
                        },
                        {
                          "name": "Starting",
                          "value": "Starting",
                          "description": "The mongo cluster resource is being started."
                        },
                        {
                          "name": "Stopping",
                          "value": "Stopping",
                          "description": "The mongo cluster resource is being stopped."
                        },
                        {
                          "name": "Stopped",
                          "value": "Stopped",
                          "description": "The mongo cluster resource is stopped."
                        },
                        {
                          "name": "Dropping",
                          "value": "Dropping",
                          "description": "The mongo cluster resource is being dropped."
                        }
                      ]
                    }
                  },
                  "publicNetworkAccess": {
                    "description": "Whether or not public endpoint access is allowed for this mongo cluster.",
                    "type": "string",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "PublicNetworkAccess",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Enabled",
                          "value": "Enabled",
                          "description": "If set, mongo cluster can be accessed through private and public methods."
                        },
                        {
                          "name": "Disabled",
                          "value": "Disabled",
                          "description": "If set, the private endpoints are the exclusive access method."
                        }
                      ]
                    }
                  },
                  "highAvailability": {
                    "description": "The high availability properties of the mongo cluster.",
                    "type": "object",
                    "properties": {
                      "targetMode": {
                        "description": "The target high availability mode requested for the cluster.",
                        "type": "string",
                        "enum": [
                          "Disabled",
                          "SameZone",
                          "ZoneRedundantPreferred"
                        ],
                        "x-ms-enum": {
                          "name": "HighAvailabilityMode",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Disabled",
                              "value": "Disabled",
                              "description": "High availability mode is disabled. This mode is can see availability impact during faults or maintenance and is not recommended for production."
                            },
                            {
                              "name": "SameZone",
                              "value": "SameZone",
                              "description": "High availability mode is enabled, where each server in a shard is placed in the same availability zone."
                            },
                            {
                              "name": "ZoneRedundantPreferred",
                              "value": "ZoneRedundantPreferred",
                              "description": "High availability mode is enabled and preferences ZoneRedundant if availability zones capacity is available in the region, otherwise falls-back to provisioning with SameZone."
                            }
                          ]
                        }
                      }
                    }
                  },
                  "storage": {
                    "description": "The storage properties of the mongo cluster.",
                    "type": "object",
                    "properties": {
                      "sizeGb": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The size of the data disk assigned to each server."
                      },
                      "type": {
                        "description": "The type of storage to provision the cluster servers with.",
                        "type": "string",
                        "enum": [
                          "PremiumSSD",
                          "PremiumSSDv2"
                        ],
                        "x-ms-enum": {
                          "name": "StorageType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "PremiumSSD",
                              "value": "PremiumSSD",
                              "description": "Premium SSD for high performance workloads."
                            },
                            {
                              "name": "PremiumSSDv2",
                              "value": "PremiumSSDv2",
                              "description": "Premium SSD v2 for very IO-intensive workloads. This is a preview option and has additional limitations."
                            }
                          ]
                        }
                      }
                    }
                  },
                  "sharding": {
                    "description": "The sharding properties of the mongo cluster.",
                    "type": "object",
                    "properties": {
                      "shardCount": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of shards to provision on the cluster."
                      }
                    }
                  },
                  "compute": {
                    "description": "The compute properties of the mongo cluster.",
                    "type": "object",
                    "properties": {
                      "tier": {
                        "type": "string",
                        "description": "The compute tier to assign to the cluster, where each tier maps to a virtual-core and memory size. Example values: 'M30', 'M40'."
                      }
                    }
                  },
                  "backup": {
                    "description": "The backup properties of the mongo cluster.",
                    "type": "object",
                    "properties": {
                      "earliestRestoreTime": {
                        "type": "string",
                        "description": "Earliest restore timestamp in UTC ISO8601 format.",
                        "readOnly": true
                      }
                    }
                  },
                  "dataApi": {
                    "description": "The Data API properties of the mongo cluster.",
                    "type": "object",
                    "properties": {
                      "mode": {
                        "description": "The mode to indicate whether the Mongo Data API is enabled for a cluster.",
                        "type": "string",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "DataApiMode",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Enabled",
                              "value": "Enabled",
                              "description": "Mongo Data API is enabled for the cluster."
                            },
                            {
                              "name": "Disabled",
                              "value": "Disabled",
                              "description": "Mongo Data API is disabled for the cluster."
                            }
                          ]
                        }
                      }
                    }
                  },
                  "privateEndpointConnections": {
                    "type": "array",
                    "description": "List of private endpoint connections.",
                    "items": {
                      "type": "object",
                      "description": "The private endpoint connection resource.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the resource",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                          "readOnly": true
                        },
                        "systemData": {
                          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "createdBy": {
                              "type": "string",
                              "description": "The identity that created the resource."
                            },
                            "createdByType": {
                              "type": "string",
                              "description": "The type of identity that created the resource.",
                              "enum": [
                                "User",
                                "Application",
                                "ManagedIdentity",
                                "Key"
                              ],
                              "x-ms-enum": {
                                "name": "createdByType",
                                "modelAsString": true
                              }
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp of resource creation (UTC)."
                            },
                            "lastModifiedBy": {
                              "type": "string",
                              "description": "The identity that last modified the resource."
                            },
                            "lastModifiedByType": {
                              "type": "string",
                              "description": "The type of identity that last modified the resource.",
                              "enum": [
                                "User",
                                "Application",
                                "ManagedIdentity",
                                "Key"
                              ],
                              "x-ms-enum": {
                                "name": "createdByType",
                                "modelAsString": true
                              }
                            },
                            "lastModifiedAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp of resource last modification (UTC)"
                            }
                          }
                        },
                        "properties": {
                          "description": "Resource properties.",
                          "x-ms-client-flatten": true,
                          "type": "object",
                          "properties": {
                            "groupIds": {
                              "type": "array",
                              "description": "The group ids for the private endpoint resource.",
                              "items": {
                                "type": "string"
                              },
                              "readOnly": true
                            },
                            "privateEndpoint": {
                              "description": "The private endpoint resource.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The ARM identifier for private endpoint.",
                                  "readOnly": true
                                }
                              }
                            },
                            "privateLinkServiceConnectionState": {
                              "description": "A collection of information about the state of the connection between service consumer and provider.",
                              "type": "object",
                              "properties": {
                                "status": {
                                  "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                  "type": "string",
                                  "enum": [
                                    "Pending",
                                    "Approved",
                                    "Rejected"
                                  ],
                                  "x-ms-enum": {
                                    "name": "PrivateEndpointServiceConnectionStatus",
                                    "modelAsString": true
                                  }
                                },
                                "description": {
                                  "type": "string",
                                  "description": "The reason for approval/rejection of the connection."
                                },
                                "actionsRequired": {
                                  "type": "string",
                                  "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                }
                              }
                            },
                            "provisioningState": {
                              "description": "The provisioning state of the private endpoint connection resource.",
                              "type": "string",
                              "enum": [
                                "Succeeded",
                                "Creating",
                                "Deleting",
                                "Failed"
                              ],
                              "x-ms-enum": {
                                "name": "PrivateEndpointConnectionProvisioningState",
                                "modelAsString": true
                              },
                              "readOnly": true
                            }
                          },
                          "required": [
                            "privateLinkServiceConnectionState"
                          ]
                        }
                      }
                    },
                    "readOnly": true
                  },
                  "previewFeatures": {
                    "type": "array",
                    "description": "List of private endpoint connections.",
                    "items": {
                      "type": "string",
                      "description": "Preview features that can be enabled on a mongo cluster.",
                      "enum": [
                        "GeoReplicas"
                      ],
                      "x-ms-enum": {
                        "name": "PreviewFeature",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "GeoReplicas",
                            "value": "GeoReplicas",
                            "description": "Enables geo replicas preview feature. The feature must be set at create-time on new cluster to enable linking a geo-replica cluster to it."
                          }
                        ]
                      }
                    }
                  },
                  "replica": {
                    "description": "The replication properties for the mongo cluster",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "sourceResourceId": {
                        "description": "The resource id the source cluster for the replica cluster.",
                        "readOnly": true,
                        "type": "string",
                        "format": "arm-id",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.DocumentDB/mongoClusters"
                            }
                          ]
                        }
                      },
                      "role": {
                        "description": "The replication role of the cluster",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "Primary",
                          "AsyncReplica",
                          "GeoAsyncReplica"
                        ],
                        "x-ms-enum": {
                          "name": "ReplicationRole",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Primary",
                              "value": "Primary",
                              "description": "The cluster is a primary replica."
                            },
                            {
                              "name": "AsyncReplica",
                              "value": "AsyncReplica",
                              "description": "The cluster is a local asynchronous replica."
                            },
                            {
                              "name": "GeoAsyncReplica",
                              "value": "GeoAsyncReplica",
                              "description": "The cluster is a geo-asynchronous replica."
                            }
                          ]
                        }
                      },
                      "replicationState": {
                        "description": "The replication link state of the replica cluster.",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "Active",
                          "Catchup",
                          "Provisioning",
                          "Updating",
                          "Broken",
                          "Reconfiguring"
                        ],
                        "x-ms-enum": {
                          "name": "ReplicationState",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Active",
                              "value": "Active",
                              "description": "Replication link is active."
                            },
                            {
                              "name": "Catchup",
                              "value": "Catchup",
                              "description": "Replica is catching-up with the primary. This can occur after the replica is created or after a promotion is triggered."
                            },
                            {
                              "name": "Provisioning",
                              "value": "Provisioning",
                              "description": "Replica and replication link to the primary is being created."
                            },
                            {
                              "name": "Updating",
                              "value": "Updating",
                              "description": "Replication link is being updated due to a change on the replica or an upgrade."
                            },
                            {
                              "name": "Broken",
                              "value": "Broken",
                              "description": "Replication link is broken and the replica may need to be recreated."
                            },
                            {
                              "name": "Reconfiguring",
                              "value": "Reconfiguring",
                              "description": "Replication link is re-configuring due to a promotion event."
                            }
                          ]
                        }
                      }
                    }
                  },
                  "infrastructureVersion": {
                    "type": "string",
                    "description": "The infrastructure version the cluster is provisioned on.",
                    "readOnly": true
                  },
                  "authConfig": {
                    "description": "The authentication configuration for the cluster.",
                    "type": "object",
                    "properties": {
                      "allowedModes": {
                        "type": "array",
                        "description": "Allowed authentication modes for data access on the cluster.",
                        "items": {
                          "type": "string",
                          "description": "The authentication modes supporting on the Mongo cluster.",
                          "enum": [
                            "NativeAuth",
                            "MicrosoftEntraID"
                          ],
                          "x-ms-enum": {
                            "name": "AuthenticationMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "NativeAuth",
                                "value": "NativeAuth",
                                "description": "Native mongo authentication mode using username and password with auth mechanism 'SCRAM-SHA-256'."
                              },
                              {
                                "name": "MicrosoftEntraID",
                                "value": "MicrosoftEntraID",
                                "description": "Microsoft Entra ID authentication mode using Entra users assigned to the cluster and auth mechanism 'MONGODB-OIDC'."
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "encryption": {
                    "description": "The encryption configuration for the cluster. Depends on identity being configured.",
                    "type": "object",
                    "properties": {
                      "customerManagedKeyEncryption": {
                        "description": "Customer managed key encryption settings.",
                        "type": "object",
                        "properties": {
                          "keyEncryptionKeyIdentity": {
                            "description": "The identity used to access the key encryption key.",
                            "type": "object",
                            "properties": {
                              "identityType": {
                                "description": "The type of identity. Only 'UserAssignedIdentity' is supported.",
                                "type": "string",
                                "enum": [
                                  "UserAssignedIdentity"
                                ],
                                "x-ms-enum": {
                                  "name": "KeyEncryptionKeyIdentityType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "UserAssignedIdentity",
                                      "value": "UserAssignedIdentity",
                                      "description": "User assigned identity."
                                    }
                                  ]
                                }
                              },
                              "userAssignedIdentityResourceId": {
                                "type": "string",
                                "description": "The user assigned identity resource id."
                              }
                            }
                          },
                          "keyEncryptionKeyUrl": {
                            "type": "string",
                            "description": "The URI of the key vault key used for encryption."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ReplicationProperties": {
      "type": "object",
      "description": "Replica properties of the mongo cluster.",
      "properties": {
        "sourceResourceId": {
          "description": "The resource id the source cluster for the replica cluster.",
          "readOnly": true,
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.DocumentDB/mongoClusters"
              }
            ]
          }
        },
        "role": {
          "description": "The replication role of the cluster",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Primary",
            "AsyncReplica",
            "GeoAsyncReplica"
          ],
          "x-ms-enum": {
            "name": "ReplicationRole",
            "modelAsString": true,
            "values": [
              {
                "name": "Primary",
                "value": "Primary",
                "description": "The cluster is a primary replica."
              },
              {
                "name": "AsyncReplica",
                "value": "AsyncReplica",
                "description": "The cluster is a local asynchronous replica."
              },
              {
                "name": "GeoAsyncReplica",
                "value": "GeoAsyncReplica",
                "description": "The cluster is a geo-asynchronous replica."
              }
            ]
          }
        },
        "replicationState": {
          "description": "The replication link state of the replica cluster.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Active",
            "Catchup",
            "Provisioning",
            "Updating",
            "Broken",
            "Reconfiguring"
          ],
          "x-ms-enum": {
            "name": "ReplicationState",
            "modelAsString": true,
            "values": [
              {
                "name": "Active",
                "value": "Active",
                "description": "Replication link is active."
              },
              {
                "name": "Catchup",
                "value": "Catchup",
                "description": "Replica is catching-up with the primary. This can occur after the replica is created or after a promotion is triggered."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "Replica and replication link to the primary is being created."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "Replication link is being updated due to a change on the replica or an upgrade."
              },
              {
                "name": "Broken",
                "value": "Broken",
                "description": "Replication link is broken and the replica may need to be recreated."
              },
              {
                "name": "Reconfiguring",
                "value": "Reconfiguring",
                "description": "Replication link is re-configuring due to a promotion event."
              }
            ]
          }
        }
      }
    },
    "ReplicationRole": {
      "type": "string",
      "description": "Replication role of the mongo cluster.",
      "enum": [
        "Primary",
        "AsyncReplica",
        "GeoAsyncReplica"
      ],
      "x-ms-enum": {
        "name": "ReplicationRole",
        "modelAsString": true,
        "values": [
          {
            "name": "Primary",
            "value": "Primary",
            "description": "The cluster is a primary replica."
          },
          {
            "name": "AsyncReplica",
            "value": "AsyncReplica",
            "description": "The cluster is a local asynchronous replica."
          },
          {
            "name": "GeoAsyncReplica",
            "value": "GeoAsyncReplica",
            "description": "The cluster is a geo-asynchronous replica."
          }
        ]
      }
    },
    "ReplicationState": {
      "type": "string",
      "description": "The state of the replication link between the replica and source cluster.",
      "enum": [
        "Active",
        "Catchup",
        "Provisioning",
        "Updating",
        "Broken",
        "Reconfiguring"
      ],
      "x-ms-enum": {
        "name": "ReplicationState",
        "modelAsString": true,
        "values": [
          {
            "name": "Active",
            "value": "Active",
            "description": "Replication link is active."
          },
          {
            "name": "Catchup",
            "value": "Catchup",
            "description": "Replica is catching-up with the primary. This can occur after the replica is created or after a promotion is triggered."
          },
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "Replica and replication link to the primary is being created."
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "Replication link is being updated due to a change on the replica or an upgrade."
          },
          {
            "name": "Broken",
            "value": "Broken",
            "description": "Replication link is broken and the replica may need to be recreated."
          },
          {
            "name": "Reconfiguring",
            "value": "Reconfiguring",
            "description": "Replication link is re-configuring due to a promotion event."
          }
        ]
      }
    },
    "ShardingProperties": {
      "type": "object",
      "description": "The sharding properties of the cluster. This includes the shard count and scaling options for the cluster.",
      "properties": {
        "shardCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of shards to provision on the cluster."
        }
      }
    },
    "StorageProperties": {
      "type": "object",
      "description": "The storage properties of the cluster. This includes the data storage size and scaling applied to servers in the cluster.",
      "properties": {
        "sizeGb": {
          "type": "integer",
          "format": "int64",
          "description": "The size of the data disk assigned to each server."
        },
        "type": {
          "description": "The type of storage to provision the cluster servers with.",
          "type": "string",
          "enum": [
            "PremiumSSD",
            "PremiumSSDv2"
          ],
          "x-ms-enum": {
            "name": "StorageType",
            "modelAsString": true,
            "values": [
              {
                "name": "PremiumSSD",
                "value": "PremiumSSD",
                "description": "Premium SSD for high performance workloads."
              },
              {
                "name": "PremiumSSDv2",
                "value": "PremiumSSDv2",
                "description": "Premium SSD v2 for very IO-intensive workloads. This is a preview option and has additional limitations."
              }
            ]
          }
        }
      }
    },
    "StorageType": {
      "type": "string",
      "description": "The type of storage that a mongo cluster can be provisioned with.",
      "enum": [
        "PremiumSSD",
        "PremiumSSDv2"
      ],
      "x-ms-enum": {
        "name": "StorageType",
        "modelAsString": true,
        "values": [
          {
            "name": "PremiumSSD",
            "value": "PremiumSSD",
            "description": "Premium SSD for high performance workloads."
          },
          {
            "name": "PremiumSSDv2",
            "value": "PremiumSSDv2",
            "description": "Premium SSD v2 for very IO-intensive workloads. This is a preview option and has additional limitations."
          }
        ]
      }
    },
    "User": {
      "type": "object",
      "description": "Represents a Mongo cluster user.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "The provisioning state of the user.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "InProgress",
                "Updating",
                "Dropping"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "InProgress",
                    "value": "InProgress",
                    "description": "An operation is in-progress on the resource."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "An update operation is in-progress on the resource."
                  },
                  {
                    "name": "Dropping",
                    "value": "Dropping",
                    "description": "A drop operation is in-progress on the resource."
                  }
                ]
              }
            },
            "identityProvider": {
              "description": "The user's identity provider definition.",
              "type": "object",
              "properties": {
                "type": {
                  "description": "The type of identity provider that the user belongs to.",
                  "type": "string",
                  "enum": [
                    "MicrosoftEntraID"
                  ],
                  "x-ms-enum": {
                    "name": "IdentityProviderType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "MicrosoftEntraID",
                        "value": "MicrosoftEntraID",
                        "description": "Microsoft Entra ID provider."
                      }
                    ]
                  }
                }
              },
              "discriminator": "type",
              "required": [
                "type"
              ]
            },
            "roles": {
              "type": "array",
              "description": "Database roles that are assigned to the user.",
              "items": {
                "type": "object",
                "description": "Database role definition that is assigned to a user.",
                "properties": {
                  "db": {
                    "type": "string",
                    "description": "Database scope that the role is assigned to."
                  },
                  "role": {
                    "description": "The role that is assigned to the user on the database scope.",
                    "type": "string",
                    "enum": [
                      "root"
                    ],
                    "x-ms-enum": {
                      "name": "UserRole",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Root",
                          "value": "root",
                          "description": "Root role permissions on the target scope."
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "db",
                  "role"
                ]
              },
              "x-ms-identifiers": []
            }
          }
        }
      }
    },
    "UserListResult": {
      "type": "object",
      "description": "The response of a User list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The User items on this page",
          "items": {
            "type": "object",
            "description": "Represents a Mongo cluster user.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "The provisioning state of the user.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "InProgress",
                      "Updating",
                      "Dropping"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "InProgress",
                          "value": "InProgress",
                          "description": "An operation is in-progress on the resource."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "An update operation is in-progress on the resource."
                        },
                        {
                          "name": "Dropping",
                          "value": "Dropping",
                          "description": "A drop operation is in-progress on the resource."
                        }
                      ]
                    }
                  },
                  "identityProvider": {
                    "description": "The user's identity provider definition.",
                    "type": "object",
                    "properties": {
                      "type": {
                        "description": "The type of identity provider that the user belongs to.",
                        "type": "string",
                        "enum": [
                          "MicrosoftEntraID"
                        ],
                        "x-ms-enum": {
                          "name": "IdentityProviderType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "MicrosoftEntraID",
                              "value": "MicrosoftEntraID",
                              "description": "Microsoft Entra ID provider."
                            }
                          ]
                        }
                      }
                    },
                    "discriminator": "type",
                    "required": [
                      "type"
                    ]
                  },
                  "roles": {
                    "type": "array",
                    "description": "Database roles that are assigned to the user.",
                    "items": {
                      "type": "object",
                      "description": "Database role definition that is assigned to a user.",
                      "properties": {
                        "db": {
                          "type": "string",
                          "description": "Database scope that the role is assigned to."
                        },
                        "role": {
                          "description": "The role that is assigned to the user on the database scope.",
                          "type": "string",
                          "enum": [
                            "root"
                          ],
                          "x-ms-enum": {
                            "name": "UserRole",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Root",
                                "value": "root",
                                "description": "Root role permissions on the target scope."
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "db",
                        "role"
                      ]
                    },
                    "x-ms-identifiers": []
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "UserProperties": {
      "type": "object",
      "description": "Definition of Mongo user resource on a cluster.",
      "properties": {
        "provisioningState": {
          "description": "The provisioning state of the user.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "InProgress",
            "Updating",
            "Dropping"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "InProgress",
                "value": "InProgress",
                "description": "An operation is in-progress on the resource."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "An update operation is in-progress on the resource."
              },
              {
                "name": "Dropping",
                "value": "Dropping",
                "description": "A drop operation is in-progress on the resource."
              }
            ]
          }
        },
        "identityProvider": {
          "description": "The user's identity provider definition.",
          "type": "object",
          "properties": {
            "type": {
              "description": "The type of identity provider that the user belongs to.",
              "type": "string",
              "enum": [
                "MicrosoftEntraID"
              ],
              "x-ms-enum": {
                "name": "IdentityProviderType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "MicrosoftEntraID",
                    "value": "MicrosoftEntraID",
                    "description": "Microsoft Entra ID provider."
                  }
                ]
              }
            }
          },
          "discriminator": "type",
          "required": [
            "type"
          ]
        },
        "roles": {
          "type": "array",
          "description": "Database roles that are assigned to the user.",
          "items": {
            "type": "object",
            "description": "Database role definition that is assigned to a user.",
            "properties": {
              "db": {
                "type": "string",
                "description": "Database scope that the role is assigned to."
              },
              "role": {
                "description": "The role that is assigned to the user on the database scope.",
                "type": "string",
                "enum": [
                  "root"
                ],
                "x-ms-enum": {
                  "name": "UserRole",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Root",
                      "value": "root",
                      "description": "Root role permissions on the target scope."
                    }
                  ]
                }
              }
            },
            "required": [
              "db",
              "role"
            ]
          },
          "x-ms-identifiers": []
        }
      }
    },
    "UserRole": {
      "type": "string",
      "description": "Built-in database role that can be assigned to a user.",
      "enum": [
        "root"
      ],
      "x-ms-enum": {
        "name": "UserRole",
        "modelAsString": true,
        "values": [
          {
            "name": "Root",
            "value": "root",
            "description": "Root role permissions on the target scope."
          }
        ]
      }
    }
  },
  "parameters": {}
}