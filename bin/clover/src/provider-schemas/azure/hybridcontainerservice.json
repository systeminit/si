{
  "swagger": "2.0",
  "info": {
    "title": "Azure hybridcontainerservice",
    "version": "2024-01-01",
    "description": "Azure hybridcontainerservice service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/{connectedClusterResourceUri}/providers/Microsoft.HybridContainerService/provisionedClusterInstances/default": {
      "get": {
        "operationId": "provisionedClusterInstances_Get",
        "summary": "Gets the provisioned cluster instance",
        "description": "Gets the provisioned cluster instance",
        "parameters": [
          {
            "name": "connectedClusterResourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified Azure Resource Manager identifier of the connected cluster resource.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the provisionedClusterInstances resource",
            "schema": {
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "linuxProfile": {
                      "description": "The profile for Linux VMs in the provisioned cluster.",
                      "type": "object",
                      "properties": {
                        "ssh": {
                          "type": "object",
                          "properties": {
                            "publicKeys": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "keyData": {
                                    "type": "string",
                                    "description": "Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers."
                                  }
                                }
                              },
                              "x-ms-identifiers": [],
                              "description": "The list of SSH public keys used to authenticate with VMs. A maximum of 1 key may be specified."
                            }
                          },
                          "description": "SSH configuration for VMs of the provisioned cluster."
                        }
                      }
                    },
                    "controlPlane": {
                      "description": "The profile for control plane of the provisioned cluster.",
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Number of control plane nodes. The default value is 1, and the count should be an odd number",
                          "default": 1
                        },
                        "vmSize": {
                          "type": "string",
                          "description": "VM sku size of the control plane nodes"
                        },
                        "controlPlaneEndpoint": {
                          "type": "object",
                          "description": "IP Address of the Kubernetes API server",
                          "properties": {
                            "hostIP": {
                              "type": "string",
                              "description": "IP address of the Kubernetes API server"
                            }
                          }
                        }
                      }
                    },
                    "kubernetesVersion": {
                      "type": "string",
                      "description": "The version of Kubernetes in use by the provisioned cluster."
                    },
                    "networkProfile": {
                      "description": "The network configuration profile for the provisioned cluster.",
                      "type": "object",
                      "properties": {
                        "loadBalancerProfile": {
                          "type": "object",
                          "description": "Profile of the HA Proxy load balancer.",
                          "properties": {
                            "count": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Number of HA Proxy load balancer VMs. The default value is 0.",
                              "default": 0
                            }
                          }
                        },
                        "networkPolicy": {
                          "type": "string",
                          "description": "Network policy used for building Kubernetes network. Possible values include: 'calico'.",
                          "enum": [
                            "calico"
                          ],
                          "default": "calico",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "networkPolicy"
                          }
                        },
                        "podCidr": {
                          "type": "string",
                          "description": "A CIDR notation IP Address range from which to assign pod IPs."
                        }
                      }
                    },
                    "storageProfile": {
                      "description": "The storage configuration profile for the provisioned cluster.",
                      "type": "object",
                      "properties": {
                        "smbCsiDriver": {
                          "description": "SMB CSI Driver settings for the storage profile.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean",
                              "default": true,
                              "description": "Indicates whether to enable SMB CSI Driver. The default value is true."
                            }
                          }
                        },
                        "nfsCsiDriver": {
                          "description": "NFS CSI Driver settings for the storage profile.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean",
                              "default": true,
                              "description": "Indicates whether to enable NFS CSI Driver. The default value is true."
                            }
                          }
                        }
                      }
                    },
                    "clusterVMAccessProfile": {
                      "description": "The SSH restricted access profile for the VMs in the provisioned cluster.",
                      "type": "object",
                      "properties": {
                        "authorizedIPRanges": {
                          "type": "string",
                          "description": "IP Address or CIDR for SSH access to VMs in the provisioned cluster"
                        }
                      }
                    },
                    "agentPoolProfiles": {
                      "type": "array",
                      "items": {
                        "description": "Profile of the default agent pool along with a name parameter",
                        "properties": {
                          "osType": {
                            "type": "string",
                            "description": "OSType to be used to specify OS type for the VMs. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'",
                            "enum": [
                              "Linux",
                              "Windows"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "osType"
                            },
                            "default": "Linux"
                          },
                          "osSKU": {
                            "type": "string",
                            "enum": [
                              "CBLMariner",
                              "Windows2019",
                              "Windows2022"
                            ],
                            "x-ms-enum": {
                              "name": "OSSKU",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "CBLMariner",
                                  "description": "Use Mariner as the OS for node images."
                                },
                                {
                                  "value": "Windows2019",
                                  "description": "Use Windows2019 as the OS for node images."
                                },
                                {
                                  "value": "Windows2022",
                                  "description": "Use Windows2022 as the OS for node images."
                                }
                              ]
                            },
                            "description": "Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows."
                          },
                          "nodeLabels": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "The node labels to be persisted across all nodes in agent pool."
                          },
                          "nodeTaints": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule."
                          },
                          "maxCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum number of nodes for auto-scaling"
                          },
                          "minCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The minimum number of nodes for auto-scaling"
                          },
                          "enableAutoScaling": {
                            "type": "boolean",
                            "description": "Whether to enable auto-scaler. Default value is false",
                            "default": false
                          },
                          "maxPods": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum number of pods that can run on a node."
                          },
                          "count": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Number of nodes in the agent pool. The default value is 1.",
                            "default": 1
                          },
                          "vmSize": {
                            "type": "string",
                            "description": "The VM sku size of the agent pool node VMs."
                          },
                          "kubernetesVersion": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Version of Kubernetes in use by the agent pool. This is inherited from the kubernetesVersion of the provisioned cluster."
                          },
                          "name": {
                            "type": "string",
                            "description": "Unique name of the default agent pool in the context of the provisioned cluster. Default value is <clusterName>-nodepool1"
                          }
                        }
                      },
                      "x-ms-identifiers": [],
                      "description": "The agent pool properties for the provisioned cluster."
                    },
                    "cloudProviderProfile": {
                      "description": "The profile for the underlying cloud infrastructure provider for the provisioned cluster.",
                      "type": "object",
                      "properties": {
                        "infraNetworkProfile": {
                          "type": "object",
                          "description": "The profile for the infrastructure networks used by the provisioned cluster",
                          "properties": {
                            "vnetSubnetIds": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.AzureStackHCI/logicalNetworks"
                                    },
                                    {
                                      "type": "Microsoft.HybridContainerService/virtualNetworks"
                                    }
                                  ]
                                }
                              },
                              "description": "List of ARM resource Ids (maximum 1) for the infrastructure network object e.g. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/logicalNetworks/{logicalNetworkName}"
                            }
                          }
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The status of the latest long running operation for the provisioned cluster.",
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Upgrading",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ResourceProvisioningState"
                      }
                    },
                    "status": {
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "controlPlaneStatus": {
                          "type": "array",
                          "items": {
                            "description": "The status profile of the addons and other kubernetes components",
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the addon or component"
                              },
                              "phase": {
                                "type": "string",
                                "description": "Observed phase of the addon or component on the provisioned cluster. Possible values include: 'pending', 'provisioning', 'provisioning {HelmChartInstalled}', 'provisioning {MSICertificateDownloaded}', 'provisioned', 'deleting', 'failed', 'upgrading'",
                                "enum": [
                                  "pending",
                                  "provisioning",
                                  "provisioning {HelmChartInstalled}",
                                  "provisioning {MSICertificateDownloaded}",
                                  "provisioned",
                                  "deleting",
                                  "failed",
                                  "upgrading"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "addonPhase"
                                }
                              },
                              "ready": {
                                "type": "boolean",
                                "description": "Indicates whether the addon or component is ready"
                              },
                              "errorMessage": {
                                "type": "string",
                                "description": "Observed error message from the addon or component"
                              }
                            }
                          },
                          "x-ms-identifiers": [],
                          "description": "The detailed status of the provisioned cluster components including addons."
                        },
                        "currentState": {
                          "description": "The current state of the provisioned cluster.",
                          "type": "string",
                          "readOnly": true,
                          "enum": [
                            "Succeeded",
                            "Failed",
                            "Canceled",
                            "Pending",
                            "Creating",
                            "Deleting",
                            "Updating",
                            "Upgrading",
                            "Accepted"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "ResourceProvisioningState"
                          }
                        },
                        "errorMessage": {
                          "type": "string",
                          "description": "Error messages during a provisioned cluster operation or steady state."
                        }
                      },
                      "description": "The observed status of the provisioned cluster."
                    },
                    "licenseProfile": {
                      "description": "The license profile of the provisioned cluster.",
                      "type": "object",
                      "properties": {
                        "azureHybridBenefit": {
                          "type": "string",
                          "description": "Indicates whether Azure Hybrid Benefit is opted in. Default value is false",
                          "enum": [
                            "True",
                            "False",
                            "NotApplicable"
                          ],
                          "default": "NotApplicable",
                          "x-ms-enum": {
                            "name": "AzureHybridBenefit",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "autoScalerProfile": {
                      "type": "object",
                      "properties": {
                        "balance-similar-node-groups": {
                          "type": "string",
                          "title": "Detects similar node pools and balances the number of nodes between them.",
                          "description": "Valid values are 'true' and 'false'"
                        },
                        "expander": {
                          "type": "string",
                          "enum": [
                            "least-waste",
                            "most-pods",
                            "priority",
                            "random"
                          ],
                          "x-ms-enum": {
                            "name": "expander",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "least-waste",
                                "description": "Selects the node group that will have the least idle CPU (if tied, unused memory) after scale-up. This is useful when you have different classes of nodes, for example, high CPU or high memory nodes, and only want to expand those when there are pending pods that need a lot of those resources."
                              },
                              {
                                "value": "most-pods",
                                "description": "Selects the node group that would be able to schedule the most pods when scaling up. This is useful when you are using nodeSelector to make sure certain pods land on certain nodes. Note that this won't cause the autoscaler to select bigger nodes vs. smaller, as it can add multiple smaller nodes at once."
                              },
                              {
                                "value": "priority",
                                "description": "Selects the node group that has the highest priority assigned by the user. It's configuration is described in more details [here](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/expander/priority/readme.md)."
                              },
                              {
                                "value": "random",
                                "description": "Used when you don't have a particular need for the node groups to scale differently."
                              }
                            ]
                          },
                          "title": "The expander to use when scaling up",
                          "description": "If not specified, the default is 'random'. See [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders) for more information."
                        },
                        "max-empty-bulk-delete": {
                          "type": "string",
                          "title": "The maximum number of empty nodes that can be deleted at the same time. This must be a positive integer.",
                          "description": "The default is 10."
                        },
                        "max-graceful-termination-sec": {
                          "type": "string",
                          "title": "The maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node.",
                          "description": "The default is 600."
                        },
                        "max-node-provision-time": {
                          "type": "string",
                          "title": "The maximum time the autoscaler waits for a node to be provisioned.",
                          "description": "The default is '15m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                        },
                        "max-total-unready-percentage": {
                          "type": "string",
                          "title": "The maximum percentage of unready nodes in the cluster. After this percentage is exceeded, cluster autoscaler halts operations.",
                          "description": "The default is 45. The maximum is 100 and the minimum is 0."
                        },
                        "new-pod-scale-up-delay": {
                          "type": "string",
                          "title": "Ignore unscheduled pods before they're a certain age.",
                          "description": "For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they're a certain age. The default is '0s'. Values must be an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours, etc)."
                        },
                        "ok-total-unready-count": {
                          "type": "string",
                          "title": "The number of allowed unready nodes, irrespective of max-total-unready-percentage.",
                          "description": "This must be an integer. The default is 3."
                        },
                        "scan-interval": {
                          "type": "string",
                          "title": "How often cluster is reevaluated for scale up or down.",
                          "description": "The default is '10'. Values must be an integer number of seconds."
                        },
                        "scale-down-delay-after-add": {
                          "type": "string",
                          "title": "How long after scale up that scale down evaluation resumes",
                          "description": "The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                        },
                        "scale-down-delay-after-delete": {
                          "type": "string",
                          "title": "How long after node deletion that scale down evaluation resumes.",
                          "description": "The default is the scan-interval. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                        },
                        "scale-down-delay-after-failure": {
                          "type": "string",
                          "title": "How long after scale down failure that scale down evaluation resumes.",
                          "description": "The default is '3m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                        },
                        "scale-down-unneeded-time": {
                          "type": "string",
                          "title": "How long a node should be unneeded before it is eligible for scale down.",
                          "description": "The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                        },
                        "scale-down-unready-time": {
                          "type": "string",
                          "title": "How long an unready node should be unneeded before it is eligible for scale down",
                          "description": "The default is '20m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                        },
                        "scale-down-utilization-threshold": {
                          "type": "string",
                          "title": "Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down.",
                          "description": "The default is '0.5'."
                        },
                        "skip-nodes-with-local-storage": {
                          "type": "string",
                          "title": "If cluster autoscaler will skip deleting nodes with pods with local storage, for example, EmptyDir or HostPath.",
                          "description": "The default is true."
                        },
                        "skip-nodes-with-system-pods": {
                          "type": "string",
                          "title": "If cluster autoscaler will skip deleting nodes with pods from kube-system (except for DaemonSet or mirror pods)",
                          "description": "The default is true."
                        }
                      },
                      "description": "Parameters to be applied to the cluster-autoscaler when auto scaling is enabled for the provisioned cluster."
                    }
                  },
                  "description": "Properties of the provisioned cluster."
                },
                "extendedLocation": {
                  "type": "object",
                  "description": "Extended location pointing to the underlying infrastructure",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type. Allowed value: 'CustomLocation'",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ExtendedLocationTypes"
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "ARM Id of the extended location."
                    }
                  }
                }
              },
              "description": "The provisioned cluster resource definition."
            }
          }
        }
      },
      "put": {
        "operationId": "provisionedClusterInstances_CreateOrUpdate",
        "summary": "Creates or updates the provisioned cluster instance",
        "description": "Creates or updates the provisioned cluster instance",
        "parameters": [
          {
            "name": "connectedClusterResourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified Azure Resource Manager identifier of the connected cluster resource.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "provisionedClusterInstance",
            "in": "body",
            "required": true,
            "description": "Provisioned Cluster resource definition",
            "schema": {
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "linuxProfile": {
                      "description": "The profile for Linux VMs in the provisioned cluster.",
                      "type": "object",
                      "properties": {
                        "ssh": {
                          "type": "object",
                          "properties": {
                            "publicKeys": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "keyData": {
                                    "type": "string",
                                    "description": "Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers."
                                  }
                                }
                              },
                              "x-ms-identifiers": [],
                              "description": "The list of SSH public keys used to authenticate with VMs. A maximum of 1 key may be specified."
                            }
                          },
                          "description": "SSH configuration for VMs of the provisioned cluster."
                        }
                      }
                    },
                    "controlPlane": {
                      "description": "The profile for control plane of the provisioned cluster.",
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Number of control plane nodes. The default value is 1, and the count should be an odd number",
                          "default": 1
                        },
                        "vmSize": {
                          "type": "string",
                          "description": "VM sku size of the control plane nodes"
                        },
                        "controlPlaneEndpoint": {
                          "type": "object",
                          "description": "IP Address of the Kubernetes API server",
                          "properties": {
                            "hostIP": {
                              "type": "string",
                              "description": "IP address of the Kubernetes API server"
                            }
                          }
                        }
                      }
                    },
                    "kubernetesVersion": {
                      "type": "string",
                      "description": "The version of Kubernetes in use by the provisioned cluster."
                    },
                    "networkProfile": {
                      "description": "The network configuration profile for the provisioned cluster.",
                      "type": "object",
                      "properties": {
                        "loadBalancerProfile": {
                          "type": "object",
                          "description": "Profile of the HA Proxy load balancer.",
                          "properties": {
                            "count": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Number of HA Proxy load balancer VMs. The default value is 0.",
                              "default": 0
                            }
                          }
                        },
                        "networkPolicy": {
                          "type": "string",
                          "description": "Network policy used for building Kubernetes network. Possible values include: 'calico'.",
                          "enum": [
                            "calico"
                          ],
                          "default": "calico",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "networkPolicy"
                          }
                        },
                        "podCidr": {
                          "type": "string",
                          "description": "A CIDR notation IP Address range from which to assign pod IPs."
                        }
                      }
                    },
                    "storageProfile": {
                      "description": "The storage configuration profile for the provisioned cluster.",
                      "type": "object",
                      "properties": {
                        "smbCsiDriver": {
                          "description": "SMB CSI Driver settings for the storage profile.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean",
                              "default": true,
                              "description": "Indicates whether to enable SMB CSI Driver. The default value is true."
                            }
                          }
                        },
                        "nfsCsiDriver": {
                          "description": "NFS CSI Driver settings for the storage profile.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean",
                              "default": true,
                              "description": "Indicates whether to enable NFS CSI Driver. The default value is true."
                            }
                          }
                        }
                      }
                    },
                    "clusterVMAccessProfile": {
                      "description": "The SSH restricted access profile for the VMs in the provisioned cluster.",
                      "type": "object",
                      "properties": {
                        "authorizedIPRanges": {
                          "type": "string",
                          "description": "IP Address or CIDR for SSH access to VMs in the provisioned cluster"
                        }
                      }
                    },
                    "agentPoolProfiles": {
                      "type": "array",
                      "items": {
                        "description": "Profile of the default agent pool along with a name parameter",
                        "properties": {
                          "osType": {
                            "type": "string",
                            "description": "OSType to be used to specify OS type for the VMs. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'",
                            "enum": [
                              "Linux",
                              "Windows"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "osType"
                            },
                            "default": "Linux"
                          },
                          "osSKU": {
                            "type": "string",
                            "enum": [
                              "CBLMariner",
                              "Windows2019",
                              "Windows2022"
                            ],
                            "x-ms-enum": {
                              "name": "OSSKU",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "CBLMariner",
                                  "description": "Use Mariner as the OS for node images."
                                },
                                {
                                  "value": "Windows2019",
                                  "description": "Use Windows2019 as the OS for node images."
                                },
                                {
                                  "value": "Windows2022",
                                  "description": "Use Windows2022 as the OS for node images."
                                }
                              ]
                            },
                            "description": "Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows."
                          },
                          "nodeLabels": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "The node labels to be persisted across all nodes in agent pool."
                          },
                          "nodeTaints": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule."
                          },
                          "maxCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum number of nodes for auto-scaling"
                          },
                          "minCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The minimum number of nodes for auto-scaling"
                          },
                          "enableAutoScaling": {
                            "type": "boolean",
                            "description": "Whether to enable auto-scaler. Default value is false",
                            "default": false
                          },
                          "maxPods": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum number of pods that can run on a node."
                          },
                          "count": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Number of nodes in the agent pool. The default value is 1.",
                            "default": 1
                          },
                          "vmSize": {
                            "type": "string",
                            "description": "The VM sku size of the agent pool node VMs."
                          },
                          "kubernetesVersion": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Version of Kubernetes in use by the agent pool. This is inherited from the kubernetesVersion of the provisioned cluster."
                          },
                          "name": {
                            "type": "string",
                            "description": "Unique name of the default agent pool in the context of the provisioned cluster. Default value is <clusterName>-nodepool1"
                          }
                        }
                      },
                      "x-ms-identifiers": [],
                      "description": "The agent pool properties for the provisioned cluster."
                    },
                    "cloudProviderProfile": {
                      "description": "The profile for the underlying cloud infrastructure provider for the provisioned cluster.",
                      "type": "object",
                      "properties": {
                        "infraNetworkProfile": {
                          "type": "object",
                          "description": "The profile for the infrastructure networks used by the provisioned cluster",
                          "properties": {
                            "vnetSubnetIds": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.AzureStackHCI/logicalNetworks"
                                    },
                                    {
                                      "type": "Microsoft.HybridContainerService/virtualNetworks"
                                    }
                                  ]
                                }
                              },
                              "description": "List of ARM resource Ids (maximum 1) for the infrastructure network object e.g. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/logicalNetworks/{logicalNetworkName}"
                            }
                          }
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The status of the latest long running operation for the provisioned cluster.",
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Upgrading",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ResourceProvisioningState"
                      }
                    },
                    "status": {
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "controlPlaneStatus": {
                          "type": "array",
                          "items": {
                            "description": "The status profile of the addons and other kubernetes components",
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the addon or component"
                              },
                              "phase": {
                                "type": "string",
                                "description": "Observed phase of the addon or component on the provisioned cluster. Possible values include: 'pending', 'provisioning', 'provisioning {HelmChartInstalled}', 'provisioning {MSICertificateDownloaded}', 'provisioned', 'deleting', 'failed', 'upgrading'",
                                "enum": [
                                  "pending",
                                  "provisioning",
                                  "provisioning {HelmChartInstalled}",
                                  "provisioning {MSICertificateDownloaded}",
                                  "provisioned",
                                  "deleting",
                                  "failed",
                                  "upgrading"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "addonPhase"
                                }
                              },
                              "ready": {
                                "type": "boolean",
                                "description": "Indicates whether the addon or component is ready"
                              },
                              "errorMessage": {
                                "type": "string",
                                "description": "Observed error message from the addon or component"
                              }
                            }
                          },
                          "x-ms-identifiers": [],
                          "description": "The detailed status of the provisioned cluster components including addons."
                        },
                        "currentState": {
                          "description": "The current state of the provisioned cluster.",
                          "type": "string",
                          "readOnly": true,
                          "enum": [
                            "Succeeded",
                            "Failed",
                            "Canceled",
                            "Pending",
                            "Creating",
                            "Deleting",
                            "Updating",
                            "Upgrading",
                            "Accepted"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "ResourceProvisioningState"
                          }
                        },
                        "errorMessage": {
                          "type": "string",
                          "description": "Error messages during a provisioned cluster operation or steady state."
                        }
                      },
                      "description": "The observed status of the provisioned cluster."
                    },
                    "licenseProfile": {
                      "description": "The license profile of the provisioned cluster.",
                      "type": "object",
                      "properties": {
                        "azureHybridBenefit": {
                          "type": "string",
                          "description": "Indicates whether Azure Hybrid Benefit is opted in. Default value is false",
                          "enum": [
                            "True",
                            "False",
                            "NotApplicable"
                          ],
                          "default": "NotApplicable",
                          "x-ms-enum": {
                            "name": "AzureHybridBenefit",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "autoScalerProfile": {
                      "type": "object",
                      "properties": {
                        "balance-similar-node-groups": {
                          "type": "string",
                          "title": "Detects similar node pools and balances the number of nodes between them.",
                          "description": "Valid values are 'true' and 'false'"
                        },
                        "expander": {
                          "type": "string",
                          "enum": [
                            "least-waste",
                            "most-pods",
                            "priority",
                            "random"
                          ],
                          "x-ms-enum": {
                            "name": "expander",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "least-waste",
                                "description": "Selects the node group that will have the least idle CPU (if tied, unused memory) after scale-up. This is useful when you have different classes of nodes, for example, high CPU or high memory nodes, and only want to expand those when there are pending pods that need a lot of those resources."
                              },
                              {
                                "value": "most-pods",
                                "description": "Selects the node group that would be able to schedule the most pods when scaling up. This is useful when you are using nodeSelector to make sure certain pods land on certain nodes. Note that this won't cause the autoscaler to select bigger nodes vs. smaller, as it can add multiple smaller nodes at once."
                              },
                              {
                                "value": "priority",
                                "description": "Selects the node group that has the highest priority assigned by the user. It's configuration is described in more details [here](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/expander/priority/readme.md)."
                              },
                              {
                                "value": "random",
                                "description": "Used when you don't have a particular need for the node groups to scale differently."
                              }
                            ]
                          },
                          "title": "The expander to use when scaling up",
                          "description": "If not specified, the default is 'random'. See [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders) for more information."
                        },
                        "max-empty-bulk-delete": {
                          "type": "string",
                          "title": "The maximum number of empty nodes that can be deleted at the same time. This must be a positive integer.",
                          "description": "The default is 10."
                        },
                        "max-graceful-termination-sec": {
                          "type": "string",
                          "title": "The maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node.",
                          "description": "The default is 600."
                        },
                        "max-node-provision-time": {
                          "type": "string",
                          "title": "The maximum time the autoscaler waits for a node to be provisioned.",
                          "description": "The default is '15m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                        },
                        "max-total-unready-percentage": {
                          "type": "string",
                          "title": "The maximum percentage of unready nodes in the cluster. After this percentage is exceeded, cluster autoscaler halts operations.",
                          "description": "The default is 45. The maximum is 100 and the minimum is 0."
                        },
                        "new-pod-scale-up-delay": {
                          "type": "string",
                          "title": "Ignore unscheduled pods before they're a certain age.",
                          "description": "For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they're a certain age. The default is '0s'. Values must be an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours, etc)."
                        },
                        "ok-total-unready-count": {
                          "type": "string",
                          "title": "The number of allowed unready nodes, irrespective of max-total-unready-percentage.",
                          "description": "This must be an integer. The default is 3."
                        },
                        "scan-interval": {
                          "type": "string",
                          "title": "How often cluster is reevaluated for scale up or down.",
                          "description": "The default is '10'. Values must be an integer number of seconds."
                        },
                        "scale-down-delay-after-add": {
                          "type": "string",
                          "title": "How long after scale up that scale down evaluation resumes",
                          "description": "The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                        },
                        "scale-down-delay-after-delete": {
                          "type": "string",
                          "title": "How long after node deletion that scale down evaluation resumes.",
                          "description": "The default is the scan-interval. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                        },
                        "scale-down-delay-after-failure": {
                          "type": "string",
                          "title": "How long after scale down failure that scale down evaluation resumes.",
                          "description": "The default is '3m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                        },
                        "scale-down-unneeded-time": {
                          "type": "string",
                          "title": "How long a node should be unneeded before it is eligible for scale down.",
                          "description": "The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                        },
                        "scale-down-unready-time": {
                          "type": "string",
                          "title": "How long an unready node should be unneeded before it is eligible for scale down",
                          "description": "The default is '20m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                        },
                        "scale-down-utilization-threshold": {
                          "type": "string",
                          "title": "Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down.",
                          "description": "The default is '0.5'."
                        },
                        "skip-nodes-with-local-storage": {
                          "type": "string",
                          "title": "If cluster autoscaler will skip deleting nodes with pods with local storage, for example, EmptyDir or HostPath.",
                          "description": "The default is true."
                        },
                        "skip-nodes-with-system-pods": {
                          "type": "string",
                          "title": "If cluster autoscaler will skip deleting nodes with pods from kube-system (except for DaemonSet or mirror pods)",
                          "description": "The default is true."
                        }
                      },
                      "description": "Parameters to be applied to the cluster-autoscaler when auto scaling is enabled for the provisioned cluster."
                    }
                  },
                  "description": "Properties of the provisioned cluster."
                },
                "extendedLocation": {
                  "type": "object",
                  "description": "Extended location pointing to the underlying infrastructure",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type. Allowed value: 'CustomLocation'",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ExtendedLocationTypes"
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "ARM Id of the extended location."
                    }
                  }
                }
              },
              "description": "The provisioned cluster resource definition."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updates the provisionedClusterInstances resource.",
            "schema": {
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "linuxProfile": {
                      "description": "The profile for Linux VMs in the provisioned cluster.",
                      "type": "object",
                      "properties": {
                        "ssh": {
                          "type": "object",
                          "properties": {
                            "publicKeys": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "keyData": {
                                    "type": "string",
                                    "description": "Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers."
                                  }
                                }
                              },
                              "x-ms-identifiers": [],
                              "description": "The list of SSH public keys used to authenticate with VMs. A maximum of 1 key may be specified."
                            }
                          },
                          "description": "SSH configuration for VMs of the provisioned cluster."
                        }
                      }
                    },
                    "controlPlane": {
                      "description": "The profile for control plane of the provisioned cluster.",
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Number of control plane nodes. The default value is 1, and the count should be an odd number",
                          "default": 1
                        },
                        "vmSize": {
                          "type": "string",
                          "description": "VM sku size of the control plane nodes"
                        },
                        "controlPlaneEndpoint": {
                          "type": "object",
                          "description": "IP Address of the Kubernetes API server",
                          "properties": {
                            "hostIP": {
                              "type": "string",
                              "description": "IP address of the Kubernetes API server"
                            }
                          }
                        }
                      }
                    },
                    "kubernetesVersion": {
                      "type": "string",
                      "description": "The version of Kubernetes in use by the provisioned cluster."
                    },
                    "networkProfile": {
                      "description": "The network configuration profile for the provisioned cluster.",
                      "type": "object",
                      "properties": {
                        "loadBalancerProfile": {
                          "type": "object",
                          "description": "Profile of the HA Proxy load balancer.",
                          "properties": {
                            "count": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Number of HA Proxy load balancer VMs. The default value is 0.",
                              "default": 0
                            }
                          }
                        },
                        "networkPolicy": {
                          "type": "string",
                          "description": "Network policy used for building Kubernetes network. Possible values include: 'calico'.",
                          "enum": [
                            "calico"
                          ],
                          "default": "calico",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "networkPolicy"
                          }
                        },
                        "podCidr": {
                          "type": "string",
                          "description": "A CIDR notation IP Address range from which to assign pod IPs."
                        }
                      }
                    },
                    "storageProfile": {
                      "description": "The storage configuration profile for the provisioned cluster.",
                      "type": "object",
                      "properties": {
                        "smbCsiDriver": {
                          "description": "SMB CSI Driver settings for the storage profile.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean",
                              "default": true,
                              "description": "Indicates whether to enable SMB CSI Driver. The default value is true."
                            }
                          }
                        },
                        "nfsCsiDriver": {
                          "description": "NFS CSI Driver settings for the storage profile.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean",
                              "default": true,
                              "description": "Indicates whether to enable NFS CSI Driver. The default value is true."
                            }
                          }
                        }
                      }
                    },
                    "clusterVMAccessProfile": {
                      "description": "The SSH restricted access profile for the VMs in the provisioned cluster.",
                      "type": "object",
                      "properties": {
                        "authorizedIPRanges": {
                          "type": "string",
                          "description": "IP Address or CIDR for SSH access to VMs in the provisioned cluster"
                        }
                      }
                    },
                    "agentPoolProfiles": {
                      "type": "array",
                      "items": {
                        "description": "Profile of the default agent pool along with a name parameter",
                        "properties": {
                          "osType": {
                            "type": "string",
                            "description": "OSType to be used to specify OS type for the VMs. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'",
                            "enum": [
                              "Linux",
                              "Windows"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "osType"
                            },
                            "default": "Linux"
                          },
                          "osSKU": {
                            "type": "string",
                            "enum": [
                              "CBLMariner",
                              "Windows2019",
                              "Windows2022"
                            ],
                            "x-ms-enum": {
                              "name": "OSSKU",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "CBLMariner",
                                  "description": "Use Mariner as the OS for node images."
                                },
                                {
                                  "value": "Windows2019",
                                  "description": "Use Windows2019 as the OS for node images."
                                },
                                {
                                  "value": "Windows2022",
                                  "description": "Use Windows2022 as the OS for node images."
                                }
                              ]
                            },
                            "description": "Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows."
                          },
                          "nodeLabels": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "The node labels to be persisted across all nodes in agent pool."
                          },
                          "nodeTaints": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule."
                          },
                          "maxCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum number of nodes for auto-scaling"
                          },
                          "minCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The minimum number of nodes for auto-scaling"
                          },
                          "enableAutoScaling": {
                            "type": "boolean",
                            "description": "Whether to enable auto-scaler. Default value is false",
                            "default": false
                          },
                          "maxPods": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum number of pods that can run on a node."
                          },
                          "count": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Number of nodes in the agent pool. The default value is 1.",
                            "default": 1
                          },
                          "vmSize": {
                            "type": "string",
                            "description": "The VM sku size of the agent pool node VMs."
                          },
                          "kubernetesVersion": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Version of Kubernetes in use by the agent pool. This is inherited from the kubernetesVersion of the provisioned cluster."
                          },
                          "name": {
                            "type": "string",
                            "description": "Unique name of the default agent pool in the context of the provisioned cluster. Default value is <clusterName>-nodepool1"
                          }
                        }
                      },
                      "x-ms-identifiers": [],
                      "description": "The agent pool properties for the provisioned cluster."
                    },
                    "cloudProviderProfile": {
                      "description": "The profile for the underlying cloud infrastructure provider for the provisioned cluster.",
                      "type": "object",
                      "properties": {
                        "infraNetworkProfile": {
                          "type": "object",
                          "description": "The profile for the infrastructure networks used by the provisioned cluster",
                          "properties": {
                            "vnetSubnetIds": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.AzureStackHCI/logicalNetworks"
                                    },
                                    {
                                      "type": "Microsoft.HybridContainerService/virtualNetworks"
                                    }
                                  ]
                                }
                              },
                              "description": "List of ARM resource Ids (maximum 1) for the infrastructure network object e.g. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/logicalNetworks/{logicalNetworkName}"
                            }
                          }
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The status of the latest long running operation for the provisioned cluster.",
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Upgrading",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ResourceProvisioningState"
                      }
                    },
                    "status": {
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "controlPlaneStatus": {
                          "type": "array",
                          "items": {
                            "description": "The status profile of the addons and other kubernetes components",
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the addon or component"
                              },
                              "phase": {
                                "type": "string",
                                "description": "Observed phase of the addon or component on the provisioned cluster. Possible values include: 'pending', 'provisioning', 'provisioning {HelmChartInstalled}', 'provisioning {MSICertificateDownloaded}', 'provisioned', 'deleting', 'failed', 'upgrading'",
                                "enum": [
                                  "pending",
                                  "provisioning",
                                  "provisioning {HelmChartInstalled}",
                                  "provisioning {MSICertificateDownloaded}",
                                  "provisioned",
                                  "deleting",
                                  "failed",
                                  "upgrading"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "addonPhase"
                                }
                              },
                              "ready": {
                                "type": "boolean",
                                "description": "Indicates whether the addon or component is ready"
                              },
                              "errorMessage": {
                                "type": "string",
                                "description": "Observed error message from the addon or component"
                              }
                            }
                          },
                          "x-ms-identifiers": [],
                          "description": "The detailed status of the provisioned cluster components including addons."
                        },
                        "currentState": {
                          "description": "The current state of the provisioned cluster.",
                          "type": "string",
                          "readOnly": true,
                          "enum": [
                            "Succeeded",
                            "Failed",
                            "Canceled",
                            "Pending",
                            "Creating",
                            "Deleting",
                            "Updating",
                            "Upgrading",
                            "Accepted"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "ResourceProvisioningState"
                          }
                        },
                        "errorMessage": {
                          "type": "string",
                          "description": "Error messages during a provisioned cluster operation or steady state."
                        }
                      },
                      "description": "The observed status of the provisioned cluster."
                    },
                    "licenseProfile": {
                      "description": "The license profile of the provisioned cluster.",
                      "type": "object",
                      "properties": {
                        "azureHybridBenefit": {
                          "type": "string",
                          "description": "Indicates whether Azure Hybrid Benefit is opted in. Default value is false",
                          "enum": [
                            "True",
                            "False",
                            "NotApplicable"
                          ],
                          "default": "NotApplicable",
                          "x-ms-enum": {
                            "name": "AzureHybridBenefit",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "autoScalerProfile": {
                      "type": "object",
                      "properties": {
                        "balance-similar-node-groups": {
                          "type": "string",
                          "title": "Detects similar node pools and balances the number of nodes between them.",
                          "description": "Valid values are 'true' and 'false'"
                        },
                        "expander": {
                          "type": "string",
                          "enum": [
                            "least-waste",
                            "most-pods",
                            "priority",
                            "random"
                          ],
                          "x-ms-enum": {
                            "name": "expander",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "least-waste",
                                "description": "Selects the node group that will have the least idle CPU (if tied, unused memory) after scale-up. This is useful when you have different classes of nodes, for example, high CPU or high memory nodes, and only want to expand those when there are pending pods that need a lot of those resources."
                              },
                              {
                                "value": "most-pods",
                                "description": "Selects the node group that would be able to schedule the most pods when scaling up. This is useful when you are using nodeSelector to make sure certain pods land on certain nodes. Note that this won't cause the autoscaler to select bigger nodes vs. smaller, as it can add multiple smaller nodes at once."
                              },
                              {
                                "value": "priority",
                                "description": "Selects the node group that has the highest priority assigned by the user. It's configuration is described in more details [here](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/expander/priority/readme.md)."
                              },
                              {
                                "value": "random",
                                "description": "Used when you don't have a particular need for the node groups to scale differently."
                              }
                            ]
                          },
                          "title": "The expander to use when scaling up",
                          "description": "If not specified, the default is 'random'. See [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders) for more information."
                        },
                        "max-empty-bulk-delete": {
                          "type": "string",
                          "title": "The maximum number of empty nodes that can be deleted at the same time. This must be a positive integer.",
                          "description": "The default is 10."
                        },
                        "max-graceful-termination-sec": {
                          "type": "string",
                          "title": "The maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node.",
                          "description": "The default is 600."
                        },
                        "max-node-provision-time": {
                          "type": "string",
                          "title": "The maximum time the autoscaler waits for a node to be provisioned.",
                          "description": "The default is '15m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                        },
                        "max-total-unready-percentage": {
                          "type": "string",
                          "title": "The maximum percentage of unready nodes in the cluster. After this percentage is exceeded, cluster autoscaler halts operations.",
                          "description": "The default is 45. The maximum is 100 and the minimum is 0."
                        },
                        "new-pod-scale-up-delay": {
                          "type": "string",
                          "title": "Ignore unscheduled pods before they're a certain age.",
                          "description": "For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they're a certain age. The default is '0s'. Values must be an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours, etc)."
                        },
                        "ok-total-unready-count": {
                          "type": "string",
                          "title": "The number of allowed unready nodes, irrespective of max-total-unready-percentage.",
                          "description": "This must be an integer. The default is 3."
                        },
                        "scan-interval": {
                          "type": "string",
                          "title": "How often cluster is reevaluated for scale up or down.",
                          "description": "The default is '10'. Values must be an integer number of seconds."
                        },
                        "scale-down-delay-after-add": {
                          "type": "string",
                          "title": "How long after scale up that scale down evaluation resumes",
                          "description": "The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                        },
                        "scale-down-delay-after-delete": {
                          "type": "string",
                          "title": "How long after node deletion that scale down evaluation resumes.",
                          "description": "The default is the scan-interval. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                        },
                        "scale-down-delay-after-failure": {
                          "type": "string",
                          "title": "How long after scale down failure that scale down evaluation resumes.",
                          "description": "The default is '3m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                        },
                        "scale-down-unneeded-time": {
                          "type": "string",
                          "title": "How long a node should be unneeded before it is eligible for scale down.",
                          "description": "The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                        },
                        "scale-down-unready-time": {
                          "type": "string",
                          "title": "How long an unready node should be unneeded before it is eligible for scale down",
                          "description": "The default is '20m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                        },
                        "scale-down-utilization-threshold": {
                          "type": "string",
                          "title": "Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down.",
                          "description": "The default is '0.5'."
                        },
                        "skip-nodes-with-local-storage": {
                          "type": "string",
                          "title": "If cluster autoscaler will skip deleting nodes with pods with local storage, for example, EmptyDir or HostPath.",
                          "description": "The default is true."
                        },
                        "skip-nodes-with-system-pods": {
                          "type": "string",
                          "title": "If cluster autoscaler will skip deleting nodes with pods from kube-system (except for DaemonSet or mirror pods)",
                          "description": "The default is true."
                        }
                      },
                      "description": "Parameters to be applied to the cluster-autoscaler when auto scaling is enabled for the provisioned cluster."
                    }
                  },
                  "description": "Properties of the provisioned cluster."
                },
                "extendedLocation": {
                  "type": "object",
                  "description": "Extended location pointing to the underlying infrastructure",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type. Allowed value: 'CustomLocation'",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ExtendedLocationTypes"
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "ARM Id of the extended location."
                    }
                  }
                }
              },
              "description": "The provisioned cluster resource definition."
            }
          },
          "201": {
            "description": "Creates the provisionedClusterInstances resource.",
            "schema": {
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "linuxProfile": {
                      "description": "The profile for Linux VMs in the provisioned cluster.",
                      "type": "object",
                      "properties": {
                        "ssh": {
                          "type": "object",
                          "properties": {
                            "publicKeys": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "keyData": {
                                    "type": "string",
                                    "description": "Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers."
                                  }
                                }
                              },
                              "x-ms-identifiers": [],
                              "description": "The list of SSH public keys used to authenticate with VMs. A maximum of 1 key may be specified."
                            }
                          },
                          "description": "SSH configuration for VMs of the provisioned cluster."
                        }
                      }
                    },
                    "controlPlane": {
                      "description": "The profile for control plane of the provisioned cluster.",
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Number of control plane nodes. The default value is 1, and the count should be an odd number",
                          "default": 1
                        },
                        "vmSize": {
                          "type": "string",
                          "description": "VM sku size of the control plane nodes"
                        },
                        "controlPlaneEndpoint": {
                          "type": "object",
                          "description": "IP Address of the Kubernetes API server",
                          "properties": {
                            "hostIP": {
                              "type": "string",
                              "description": "IP address of the Kubernetes API server"
                            }
                          }
                        }
                      }
                    },
                    "kubernetesVersion": {
                      "type": "string",
                      "description": "The version of Kubernetes in use by the provisioned cluster."
                    },
                    "networkProfile": {
                      "description": "The network configuration profile for the provisioned cluster.",
                      "type": "object",
                      "properties": {
                        "loadBalancerProfile": {
                          "type": "object",
                          "description": "Profile of the HA Proxy load balancer.",
                          "properties": {
                            "count": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Number of HA Proxy load balancer VMs. The default value is 0.",
                              "default": 0
                            }
                          }
                        },
                        "networkPolicy": {
                          "type": "string",
                          "description": "Network policy used for building Kubernetes network. Possible values include: 'calico'.",
                          "enum": [
                            "calico"
                          ],
                          "default": "calico",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "networkPolicy"
                          }
                        },
                        "podCidr": {
                          "type": "string",
                          "description": "A CIDR notation IP Address range from which to assign pod IPs."
                        }
                      }
                    },
                    "storageProfile": {
                      "description": "The storage configuration profile for the provisioned cluster.",
                      "type": "object",
                      "properties": {
                        "smbCsiDriver": {
                          "description": "SMB CSI Driver settings for the storage profile.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean",
                              "default": true,
                              "description": "Indicates whether to enable SMB CSI Driver. The default value is true."
                            }
                          }
                        },
                        "nfsCsiDriver": {
                          "description": "NFS CSI Driver settings for the storage profile.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean",
                              "default": true,
                              "description": "Indicates whether to enable NFS CSI Driver. The default value is true."
                            }
                          }
                        }
                      }
                    },
                    "clusterVMAccessProfile": {
                      "description": "The SSH restricted access profile for the VMs in the provisioned cluster.",
                      "type": "object",
                      "properties": {
                        "authorizedIPRanges": {
                          "type": "string",
                          "description": "IP Address or CIDR for SSH access to VMs in the provisioned cluster"
                        }
                      }
                    },
                    "agentPoolProfiles": {
                      "type": "array",
                      "items": {
                        "description": "Profile of the default agent pool along with a name parameter",
                        "properties": {
                          "osType": {
                            "type": "string",
                            "description": "OSType to be used to specify OS type for the VMs. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'",
                            "enum": [
                              "Linux",
                              "Windows"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "osType"
                            },
                            "default": "Linux"
                          },
                          "osSKU": {
                            "type": "string",
                            "enum": [
                              "CBLMariner",
                              "Windows2019",
                              "Windows2022"
                            ],
                            "x-ms-enum": {
                              "name": "OSSKU",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "CBLMariner",
                                  "description": "Use Mariner as the OS for node images."
                                },
                                {
                                  "value": "Windows2019",
                                  "description": "Use Windows2019 as the OS for node images."
                                },
                                {
                                  "value": "Windows2022",
                                  "description": "Use Windows2022 as the OS for node images."
                                }
                              ]
                            },
                            "description": "Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows."
                          },
                          "nodeLabels": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "The node labels to be persisted across all nodes in agent pool."
                          },
                          "nodeTaints": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule."
                          },
                          "maxCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum number of nodes for auto-scaling"
                          },
                          "minCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The minimum number of nodes for auto-scaling"
                          },
                          "enableAutoScaling": {
                            "type": "boolean",
                            "description": "Whether to enable auto-scaler. Default value is false",
                            "default": false
                          },
                          "maxPods": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum number of pods that can run on a node."
                          },
                          "count": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Number of nodes in the agent pool. The default value is 1.",
                            "default": 1
                          },
                          "vmSize": {
                            "type": "string",
                            "description": "The VM sku size of the agent pool node VMs."
                          },
                          "kubernetesVersion": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Version of Kubernetes in use by the agent pool. This is inherited from the kubernetesVersion of the provisioned cluster."
                          },
                          "name": {
                            "type": "string",
                            "description": "Unique name of the default agent pool in the context of the provisioned cluster. Default value is <clusterName>-nodepool1"
                          }
                        }
                      },
                      "x-ms-identifiers": [],
                      "description": "The agent pool properties for the provisioned cluster."
                    },
                    "cloudProviderProfile": {
                      "description": "The profile for the underlying cloud infrastructure provider for the provisioned cluster.",
                      "type": "object",
                      "properties": {
                        "infraNetworkProfile": {
                          "type": "object",
                          "description": "The profile for the infrastructure networks used by the provisioned cluster",
                          "properties": {
                            "vnetSubnetIds": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.AzureStackHCI/logicalNetworks"
                                    },
                                    {
                                      "type": "Microsoft.HybridContainerService/virtualNetworks"
                                    }
                                  ]
                                }
                              },
                              "description": "List of ARM resource Ids (maximum 1) for the infrastructure network object e.g. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/logicalNetworks/{logicalNetworkName}"
                            }
                          }
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The status of the latest long running operation for the provisioned cluster.",
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Upgrading",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ResourceProvisioningState"
                      }
                    },
                    "status": {
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "controlPlaneStatus": {
                          "type": "array",
                          "items": {
                            "description": "The status profile of the addons and other kubernetes components",
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the addon or component"
                              },
                              "phase": {
                                "type": "string",
                                "description": "Observed phase of the addon or component on the provisioned cluster. Possible values include: 'pending', 'provisioning', 'provisioning {HelmChartInstalled}', 'provisioning {MSICertificateDownloaded}', 'provisioned', 'deleting', 'failed', 'upgrading'",
                                "enum": [
                                  "pending",
                                  "provisioning",
                                  "provisioning {HelmChartInstalled}",
                                  "provisioning {MSICertificateDownloaded}",
                                  "provisioned",
                                  "deleting",
                                  "failed",
                                  "upgrading"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "addonPhase"
                                }
                              },
                              "ready": {
                                "type": "boolean",
                                "description": "Indicates whether the addon or component is ready"
                              },
                              "errorMessage": {
                                "type": "string",
                                "description": "Observed error message from the addon or component"
                              }
                            }
                          },
                          "x-ms-identifiers": [],
                          "description": "The detailed status of the provisioned cluster components including addons."
                        },
                        "currentState": {
                          "description": "The current state of the provisioned cluster.",
                          "type": "string",
                          "readOnly": true,
                          "enum": [
                            "Succeeded",
                            "Failed",
                            "Canceled",
                            "Pending",
                            "Creating",
                            "Deleting",
                            "Updating",
                            "Upgrading",
                            "Accepted"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "ResourceProvisioningState"
                          }
                        },
                        "errorMessage": {
                          "type": "string",
                          "description": "Error messages during a provisioned cluster operation or steady state."
                        }
                      },
                      "description": "The observed status of the provisioned cluster."
                    },
                    "licenseProfile": {
                      "description": "The license profile of the provisioned cluster.",
                      "type": "object",
                      "properties": {
                        "azureHybridBenefit": {
                          "type": "string",
                          "description": "Indicates whether Azure Hybrid Benefit is opted in. Default value is false",
                          "enum": [
                            "True",
                            "False",
                            "NotApplicable"
                          ],
                          "default": "NotApplicable",
                          "x-ms-enum": {
                            "name": "AzureHybridBenefit",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "autoScalerProfile": {
                      "type": "object",
                      "properties": {
                        "balance-similar-node-groups": {
                          "type": "string",
                          "title": "Detects similar node pools and balances the number of nodes between them.",
                          "description": "Valid values are 'true' and 'false'"
                        },
                        "expander": {
                          "type": "string",
                          "enum": [
                            "least-waste",
                            "most-pods",
                            "priority",
                            "random"
                          ],
                          "x-ms-enum": {
                            "name": "expander",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "least-waste",
                                "description": "Selects the node group that will have the least idle CPU (if tied, unused memory) after scale-up. This is useful when you have different classes of nodes, for example, high CPU or high memory nodes, and only want to expand those when there are pending pods that need a lot of those resources."
                              },
                              {
                                "value": "most-pods",
                                "description": "Selects the node group that would be able to schedule the most pods when scaling up. This is useful when you are using nodeSelector to make sure certain pods land on certain nodes. Note that this won't cause the autoscaler to select bigger nodes vs. smaller, as it can add multiple smaller nodes at once."
                              },
                              {
                                "value": "priority",
                                "description": "Selects the node group that has the highest priority assigned by the user. It's configuration is described in more details [here](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/expander/priority/readme.md)."
                              },
                              {
                                "value": "random",
                                "description": "Used when you don't have a particular need for the node groups to scale differently."
                              }
                            ]
                          },
                          "title": "The expander to use when scaling up",
                          "description": "If not specified, the default is 'random'. See [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders) for more information."
                        },
                        "max-empty-bulk-delete": {
                          "type": "string",
                          "title": "The maximum number of empty nodes that can be deleted at the same time. This must be a positive integer.",
                          "description": "The default is 10."
                        },
                        "max-graceful-termination-sec": {
                          "type": "string",
                          "title": "The maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node.",
                          "description": "The default is 600."
                        },
                        "max-node-provision-time": {
                          "type": "string",
                          "title": "The maximum time the autoscaler waits for a node to be provisioned.",
                          "description": "The default is '15m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                        },
                        "max-total-unready-percentage": {
                          "type": "string",
                          "title": "The maximum percentage of unready nodes in the cluster. After this percentage is exceeded, cluster autoscaler halts operations.",
                          "description": "The default is 45. The maximum is 100 and the minimum is 0."
                        },
                        "new-pod-scale-up-delay": {
                          "type": "string",
                          "title": "Ignore unscheduled pods before they're a certain age.",
                          "description": "For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they're a certain age. The default is '0s'. Values must be an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours, etc)."
                        },
                        "ok-total-unready-count": {
                          "type": "string",
                          "title": "The number of allowed unready nodes, irrespective of max-total-unready-percentage.",
                          "description": "This must be an integer. The default is 3."
                        },
                        "scan-interval": {
                          "type": "string",
                          "title": "How often cluster is reevaluated for scale up or down.",
                          "description": "The default is '10'. Values must be an integer number of seconds."
                        },
                        "scale-down-delay-after-add": {
                          "type": "string",
                          "title": "How long after scale up that scale down evaluation resumes",
                          "description": "The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                        },
                        "scale-down-delay-after-delete": {
                          "type": "string",
                          "title": "How long after node deletion that scale down evaluation resumes.",
                          "description": "The default is the scan-interval. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                        },
                        "scale-down-delay-after-failure": {
                          "type": "string",
                          "title": "How long after scale down failure that scale down evaluation resumes.",
                          "description": "The default is '3m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                        },
                        "scale-down-unneeded-time": {
                          "type": "string",
                          "title": "How long a node should be unneeded before it is eligible for scale down.",
                          "description": "The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                        },
                        "scale-down-unready-time": {
                          "type": "string",
                          "title": "How long an unready node should be unneeded before it is eligible for scale down",
                          "description": "The default is '20m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                        },
                        "scale-down-utilization-threshold": {
                          "type": "string",
                          "title": "Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down.",
                          "description": "The default is '0.5'."
                        },
                        "skip-nodes-with-local-storage": {
                          "type": "string",
                          "title": "If cluster autoscaler will skip deleting nodes with pods with local storage, for example, EmptyDir or HostPath.",
                          "description": "The default is true."
                        },
                        "skip-nodes-with-system-pods": {
                          "type": "string",
                          "title": "If cluster autoscaler will skip deleting nodes with pods from kube-system (except for DaemonSet or mirror pods)",
                          "description": "The default is true."
                        }
                      },
                      "description": "Parameters to be applied to the cluster-autoscaler when auto scaling is enabled for the provisioned cluster."
                    }
                  },
                  "description": "Properties of the provisioned cluster."
                },
                "extendedLocation": {
                  "type": "object",
                  "description": "Extended location pointing to the underlying infrastructure",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type. Allowed value: 'CustomLocation'",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ExtendedLocationTypes"
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "ARM Id of the extended location."
                    }
                  }
                }
              },
              "description": "The provisioned cluster resource definition."
            }
          }
        }
      },
      "delete": {
        "operationId": "provisionedClusterInstances_Delete",
        "summary": "Deletes the provisioned cluster instance",
        "description": "Deletes the provisioned cluster instance",
        "parameters": [
          {
            "name": "connectedClusterResourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified Azure Resource Manager identifier of the connected cluster resource.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No content"
          }
        }
      }
    },
    "/{connectedClusterResourceUri}/providers/Microsoft.HybridContainerService/provisionedClusterInstances": {
      "get": {
        "operationId": "provisionedClusterInstances_List",
        "summary": "Lists the ProvisionedClusterInstance resource associated with the ConnectedCluster",
        "description": "Lists the ProvisionedClusterInstance resource associated with the ConnectedCluster",
        "parameters": [
          {
            "name": "connectedClusterResourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified Azure Resource Manager identifier of the connected cluster resource.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Lists the ProvisionedClusterInstance resource associated with the ConnectedCluster",
            "schema": {
              "type": "object",
              "description": "Lists the ProvisionedClusterInstance resource associated with the ConnectedCluster.",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-ms-azure-resource": true,
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "type": "object",
                        "properties": {
                          "linuxProfile": {
                            "description": "The profile for Linux VMs in the provisioned cluster.",
                            "type": "object",
                            "properties": {
                              "ssh": {
                                "type": "object",
                                "properties": {
                                  "publicKeys": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "keyData": {
                                          "type": "string",
                                          "description": "Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers."
                                        }
                                      }
                                    },
                                    "x-ms-identifiers": [],
                                    "description": "The list of SSH public keys used to authenticate with VMs. A maximum of 1 key may be specified."
                                  }
                                },
                                "description": "SSH configuration for VMs of the provisioned cluster."
                              }
                            }
                          },
                          "controlPlane": {
                            "description": "The profile for control plane of the provisioned cluster.",
                            "type": "object",
                            "properties": {
                              "count": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Number of control plane nodes. The default value is 1, and the count should be an odd number",
                                "default": 1
                              },
                              "vmSize": {
                                "type": "string",
                                "description": "VM sku size of the control plane nodes"
                              },
                              "controlPlaneEndpoint": {
                                "type": "object",
                                "description": "IP Address of the Kubernetes API server",
                                "properties": {
                                  "hostIP": {
                                    "type": "string",
                                    "description": "IP address of the Kubernetes API server"
                                  }
                                }
                              }
                            }
                          },
                          "kubernetesVersion": {
                            "type": "string",
                            "description": "The version of Kubernetes in use by the provisioned cluster."
                          },
                          "networkProfile": {
                            "description": "The network configuration profile for the provisioned cluster.",
                            "type": "object",
                            "properties": {
                              "loadBalancerProfile": {
                                "type": "object",
                                "description": "Profile of the HA Proxy load balancer.",
                                "properties": {
                                  "count": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Number of HA Proxy load balancer VMs. The default value is 0.",
                                    "default": 0
                                  }
                                }
                              },
                              "networkPolicy": {
                                "type": "string",
                                "description": "Network policy used for building Kubernetes network. Possible values include: 'calico'.",
                                "enum": [
                                  "calico"
                                ],
                                "default": "calico",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "networkPolicy"
                                }
                              },
                              "podCidr": {
                                "type": "string",
                                "description": "A CIDR notation IP Address range from which to assign pod IPs."
                              }
                            }
                          },
                          "storageProfile": {
                            "description": "The storage configuration profile for the provisioned cluster.",
                            "type": "object",
                            "properties": {
                              "smbCsiDriver": {
                                "description": "SMB CSI Driver settings for the storage profile.",
                                "type": "object",
                                "properties": {
                                  "enabled": {
                                    "type": "boolean",
                                    "default": true,
                                    "description": "Indicates whether to enable SMB CSI Driver. The default value is true."
                                  }
                                }
                              },
                              "nfsCsiDriver": {
                                "description": "NFS CSI Driver settings for the storage profile.",
                                "type": "object",
                                "properties": {
                                  "enabled": {
                                    "type": "boolean",
                                    "default": true,
                                    "description": "Indicates whether to enable NFS CSI Driver. The default value is true."
                                  }
                                }
                              }
                            }
                          },
                          "clusterVMAccessProfile": {
                            "description": "The SSH restricted access profile for the VMs in the provisioned cluster.",
                            "type": "object",
                            "properties": {
                              "authorizedIPRanges": {
                                "type": "string",
                                "description": "IP Address or CIDR for SSH access to VMs in the provisioned cluster"
                              }
                            }
                          },
                          "agentPoolProfiles": {
                            "type": "array",
                            "items": {
                              "description": "Profile of the default agent pool along with a name parameter",
                              "properties": {
                                "osType": {
                                  "type": "string",
                                  "description": "OSType to be used to specify OS type for the VMs. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'",
                                  "enum": [
                                    "Linux",
                                    "Windows"
                                  ],
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "osType"
                                  },
                                  "default": "Linux"
                                },
                                "osSKU": {
                                  "type": "string",
                                  "enum": [
                                    "CBLMariner",
                                    "Windows2019",
                                    "Windows2022"
                                  ],
                                  "x-ms-enum": {
                                    "name": "OSSKU",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "CBLMariner",
                                        "description": "Use Mariner as the OS for node images."
                                      },
                                      {
                                        "value": "Windows2019",
                                        "description": "Use Windows2019 as the OS for node images."
                                      },
                                      {
                                        "value": "Windows2022",
                                        "description": "Use Windows2022 as the OS for node images."
                                      }
                                    ]
                                  },
                                  "description": "Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows."
                                },
                                "nodeLabels": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "The node labels to be persisted across all nodes in agent pool."
                                },
                                "nodeTaints": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule."
                                },
                                "maxCount": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum number of nodes for auto-scaling"
                                },
                                "minCount": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The minimum number of nodes for auto-scaling"
                                },
                                "enableAutoScaling": {
                                  "type": "boolean",
                                  "description": "Whether to enable auto-scaler. Default value is false",
                                  "default": false
                                },
                                "maxPods": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum number of pods that can run on a node."
                                },
                                "count": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Number of nodes in the agent pool. The default value is 1.",
                                  "default": 1
                                },
                                "vmSize": {
                                  "type": "string",
                                  "description": "The VM sku size of the agent pool node VMs."
                                },
                                "kubernetesVersion": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "Version of Kubernetes in use by the agent pool. This is inherited from the kubernetesVersion of the provisioned cluster."
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Unique name of the default agent pool in the context of the provisioned cluster. Default value is <clusterName>-nodepool1"
                                }
                              }
                            },
                            "x-ms-identifiers": [],
                            "description": "The agent pool properties for the provisioned cluster."
                          },
                          "cloudProviderProfile": {
                            "description": "The profile for the underlying cloud infrastructure provider for the provisioned cluster.",
                            "type": "object",
                            "properties": {
                              "infraNetworkProfile": {
                                "type": "object",
                                "description": "The profile for the infrastructure networks used by the provisioned cluster",
                                "properties": {
                                  "vnetSubnetIds": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "format": "arm-id",
                                      "x-ms-arm-id-details": {
                                        "allowedResources": [
                                          {
                                            "type": "Microsoft.AzureStackHCI/logicalNetworks"
                                          },
                                          {
                                            "type": "Microsoft.HybridContainerService/virtualNetworks"
                                          }
                                        ]
                                      }
                                    },
                                    "description": "List of ARM resource Ids (maximum 1) for the infrastructure network object e.g. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/logicalNetworks/{logicalNetworkName}"
                                  }
                                }
                              }
                            }
                          },
                          "provisioningState": {
                            "description": "The status of the latest long running operation for the provisioned cluster.",
                            "type": "string",
                            "readOnly": true,
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Pending",
                              "Creating",
                              "Deleting",
                              "Updating",
                              "Upgrading",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "ResourceProvisioningState"
                            }
                          },
                          "status": {
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                              "controlPlaneStatus": {
                                "type": "array",
                                "items": {
                                  "description": "The status profile of the addons and other kubernetes components",
                                  "type": "object",
                                  "readOnly": true,
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Name of the addon or component"
                                    },
                                    "phase": {
                                      "type": "string",
                                      "description": "Observed phase of the addon or component on the provisioned cluster. Possible values include: 'pending', 'provisioning', 'provisioning {HelmChartInstalled}', 'provisioning {MSICertificateDownloaded}', 'provisioned', 'deleting', 'failed', 'upgrading'",
                                      "enum": [
                                        "pending",
                                        "provisioning",
                                        "provisioning {HelmChartInstalled}",
                                        "provisioning {MSICertificateDownloaded}",
                                        "provisioned",
                                        "deleting",
                                        "failed",
                                        "upgrading"
                                      ],
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "addonPhase"
                                      }
                                    },
                                    "ready": {
                                      "type": "boolean",
                                      "description": "Indicates whether the addon or component is ready"
                                    },
                                    "errorMessage": {
                                      "type": "string",
                                      "description": "Observed error message from the addon or component"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [],
                                "description": "The detailed status of the provisioned cluster components including addons."
                              },
                              "currentState": {
                                "description": "The current state of the provisioned cluster.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Failed",
                                  "Canceled",
                                  "Pending",
                                  "Creating",
                                  "Deleting",
                                  "Updating",
                                  "Upgrading",
                                  "Accepted"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "ResourceProvisioningState"
                                }
                              },
                              "errorMessage": {
                                "type": "string",
                                "description": "Error messages during a provisioned cluster operation or steady state."
                              }
                            },
                            "description": "The observed status of the provisioned cluster."
                          },
                          "licenseProfile": {
                            "description": "The license profile of the provisioned cluster.",
                            "type": "object",
                            "properties": {
                              "azureHybridBenefit": {
                                "type": "string",
                                "description": "Indicates whether Azure Hybrid Benefit is opted in. Default value is false",
                                "enum": [
                                  "True",
                                  "False",
                                  "NotApplicable"
                                ],
                                "default": "NotApplicable",
                                "x-ms-enum": {
                                  "name": "AzureHybridBenefit",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "autoScalerProfile": {
                            "type": "object",
                            "properties": {
                              "balance-similar-node-groups": {
                                "type": "string",
                                "title": "Detects similar node pools and balances the number of nodes between them.",
                                "description": "Valid values are 'true' and 'false'"
                              },
                              "expander": {
                                "type": "string",
                                "enum": [
                                  "least-waste",
                                  "most-pods",
                                  "priority",
                                  "random"
                                ],
                                "x-ms-enum": {
                                  "name": "expander",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "least-waste",
                                      "description": "Selects the node group that will have the least idle CPU (if tied, unused memory) after scale-up. This is useful when you have different classes of nodes, for example, high CPU or high memory nodes, and only want to expand those when there are pending pods that need a lot of those resources."
                                    },
                                    {
                                      "value": "most-pods",
                                      "description": "Selects the node group that would be able to schedule the most pods when scaling up. This is useful when you are using nodeSelector to make sure certain pods land on certain nodes. Note that this won't cause the autoscaler to select bigger nodes vs. smaller, as it can add multiple smaller nodes at once."
                                    },
                                    {
                                      "value": "priority",
                                      "description": "Selects the node group that has the highest priority assigned by the user. It's configuration is described in more details [here](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/expander/priority/readme.md)."
                                    },
                                    {
                                      "value": "random",
                                      "description": "Used when you don't have a particular need for the node groups to scale differently."
                                    }
                                  ]
                                },
                                "title": "The expander to use when scaling up",
                                "description": "If not specified, the default is 'random'. See [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders) for more information."
                              },
                              "max-empty-bulk-delete": {
                                "type": "string",
                                "title": "The maximum number of empty nodes that can be deleted at the same time. This must be a positive integer.",
                                "description": "The default is 10."
                              },
                              "max-graceful-termination-sec": {
                                "type": "string",
                                "title": "The maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node.",
                                "description": "The default is 600."
                              },
                              "max-node-provision-time": {
                                "type": "string",
                                "title": "The maximum time the autoscaler waits for a node to be provisioned.",
                                "description": "The default is '15m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                              },
                              "max-total-unready-percentage": {
                                "type": "string",
                                "title": "The maximum percentage of unready nodes in the cluster. After this percentage is exceeded, cluster autoscaler halts operations.",
                                "description": "The default is 45. The maximum is 100 and the minimum is 0."
                              },
                              "new-pod-scale-up-delay": {
                                "type": "string",
                                "title": "Ignore unscheduled pods before they're a certain age.",
                                "description": "For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they're a certain age. The default is '0s'. Values must be an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours, etc)."
                              },
                              "ok-total-unready-count": {
                                "type": "string",
                                "title": "The number of allowed unready nodes, irrespective of max-total-unready-percentage.",
                                "description": "This must be an integer. The default is 3."
                              },
                              "scan-interval": {
                                "type": "string",
                                "title": "How often cluster is reevaluated for scale up or down.",
                                "description": "The default is '10'. Values must be an integer number of seconds."
                              },
                              "scale-down-delay-after-add": {
                                "type": "string",
                                "title": "How long after scale up that scale down evaluation resumes",
                                "description": "The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                              },
                              "scale-down-delay-after-delete": {
                                "type": "string",
                                "title": "How long after node deletion that scale down evaluation resumes.",
                                "description": "The default is the scan-interval. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                              },
                              "scale-down-delay-after-failure": {
                                "type": "string",
                                "title": "How long after scale down failure that scale down evaluation resumes.",
                                "description": "The default is '3m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                              },
                              "scale-down-unneeded-time": {
                                "type": "string",
                                "title": "How long a node should be unneeded before it is eligible for scale down.",
                                "description": "The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                              },
                              "scale-down-unready-time": {
                                "type": "string",
                                "title": "How long an unready node should be unneeded before it is eligible for scale down",
                                "description": "The default is '20m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                              },
                              "scale-down-utilization-threshold": {
                                "type": "string",
                                "title": "Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down.",
                                "description": "The default is '0.5'."
                              },
                              "skip-nodes-with-local-storage": {
                                "type": "string",
                                "title": "If cluster autoscaler will skip deleting nodes with pods with local storage, for example, EmptyDir or HostPath.",
                                "description": "The default is true."
                              },
                              "skip-nodes-with-system-pods": {
                                "type": "string",
                                "title": "If cluster autoscaler will skip deleting nodes with pods from kube-system (except for DaemonSet or mirror pods)",
                                "description": "The default is true."
                              }
                            },
                            "description": "Parameters to be applied to the cluster-autoscaler when auto scaling is enabled for the provisioned cluster."
                          }
                        },
                        "description": "Properties of the provisioned cluster."
                      },
                      "extendedLocation": {
                        "type": "object",
                        "description": "Extended location pointing to the underlying infrastructure",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The extended location type. Allowed value: 'CustomLocation'",
                            "enum": [
                              "CustomLocation"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "ExtendedLocationTypes"
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "ARM Id of the extended location."
                          }
                        }
                      }
                    },
                    "description": "The provisioned cluster resource definition."
                  }
                },
                "nextLink": {
                  "type": "string"
                }
              },
              "x-ms-identifiers": []
            }
          }
        }
      }
    },
    "/{connectedClusterResourceUri}/providers/Microsoft.HybridContainerService/provisionedClusterInstances/default/upgradeProfiles/default": {
      "get": {
        "tags": [
          "provisionedClusterInstances"
        ],
        "operationId": "provisionedClusterInstances_GetUpgradeProfile",
        "summary": "Gets the upgrade profile of a provisioned cluster",
        "description": "Gets the upgrade profile of a provisioned cluster",
        "parameters": [
          {
            "name": "connectedClusterResourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified Azure Resource Manager identifier of the connected cluster resource.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of the upgrade profile.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning state of the resource",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Upgrading",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ResourceProvisioningState"
                      }
                    },
                    "controlPlaneProfile": {
                      "description": "The list of available kubernetes version upgrades for the control plane.",
                      "type": "object",
                      "properties": {
                        "kubernetesVersion": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The Kubernetes version (major.minor.patch)."
                        },
                        "osType": {
                          "type": "string",
                          "description": "OSType to be used to specify OS type for the VMs. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'",
                          "enum": [
                            "Linux",
                            "Windows"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "osType"
                          },
                          "default": "Linux",
                          "readOnly": true
                        },
                        "upgrades": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "kubernetesVersion": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The Kubernetes version (major.minor.patch)."
                              },
                              "isPreview": {
                                "type": "boolean",
                                "readOnly": true,
                                "description": "Whether the Kubernetes version is currently in preview."
                              }
                            },
                            "description": "The upgrade properties."
                          },
                          "x-ms-identifiers": [],
                          "description": "List of available kubernetes versions for upgrade."
                        }
                      }
                    }
                  },
                  "required": [
                    "controlPlaneProfile"
                  ]
                }
              },
              "required": [
                "properties"
              ],
              "description": "The list of available kubernetes version upgrades for the provisioned cluster."
            }
          }
        }
      }
    },
    "/{connectedClusterResourceUri}/providers/Microsoft.HybridContainerService/provisionedClusterInstances/default/hybridIdentityMetadata/default": {
      "put": {
        "operationId": "HybridIdentityMetadata_Put",
        "summary": "Creates the hybrid identity metadata resource",
        "description": "Creates the hybrid identity metadata proxy resource that facilitates the managed identity provisioning.",
        "parameters": [
          {
            "name": "connectedClusterResourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified Azure Resource Manager identifier of the connected cluster resource.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Hybrid Identity Metadata resource definition",
            "schema": {
              "description": "Defines the hybridIdentityMetadata.",
              "required": [
                "properties"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "resourceUid": {
                      "description": "Unique id of the parent provisioned cluster resource.",
                      "type": "string"
                    },
                    "publicKey": {
                      "description": "Onboarding public key for provisioning the Managed identity for the connected cluster.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning state of the resource",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Upgrading",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ResourceProvisioningState"
                      }
                    }
                  }
                }
              },
              "x-ms-azure-resource": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updates the hybridIdentityMetadata resource.",
            "schema": {
              "description": "Defines the hybridIdentityMetadata.",
              "required": [
                "properties"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "resourceUid": {
                      "description": "Unique id of the parent provisioned cluster resource.",
                      "type": "string"
                    },
                    "publicKey": {
                      "description": "Onboarding public key for provisioning the Managed identity for the connected cluster.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning state of the resource",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Upgrading",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ResourceProvisioningState"
                      }
                    }
                  }
                }
              },
              "x-ms-azure-resource": true
            }
          },
          "201": {
            "description": "Creates the hybridIdentityMetadata resource.",
            "schema": {
              "description": "Defines the hybridIdentityMetadata.",
              "required": [
                "properties"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "resourceUid": {
                      "description": "Unique id of the parent provisioned cluster resource.",
                      "type": "string"
                    },
                    "publicKey": {
                      "description": "Onboarding public key for provisioning the Managed identity for the connected cluster.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning state of the resource",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Upgrading",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ResourceProvisioningState"
                      }
                    }
                  }
                }
              },
              "x-ms-azure-resource": true
            }
          }
        }
      },
      "get": {
        "operationId": "HybridIdentityMetadata_Get",
        "summary": "Get the hybrid identity metadata resource",
        "description": "Get the hybrid identity metadata proxy resource.",
        "parameters": [
          {
            "name": "connectedClusterResourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified Azure Resource Manager identifier of the connected cluster resource.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Get the hybridIdentityMetadata resource for the provisioned cluster instance.",
            "schema": {
              "description": "Defines the hybridIdentityMetadata.",
              "required": [
                "properties"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "resourceUid": {
                      "description": "Unique id of the parent provisioned cluster resource.",
                      "type": "string"
                    },
                    "publicKey": {
                      "description": "Onboarding public key for provisioning the Managed identity for the connected cluster.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning state of the resource",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Upgrading",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ResourceProvisioningState"
                      }
                    }
                  }
                }
              },
              "x-ms-azure-resource": true
            }
          }
        }
      },
      "delete": {
        "operationId": "HybridIdentityMetadata_Delete",
        "summary": "Deletes the hybrid identity metadata resource",
        "description": "Deletes the hybrid identity metadata proxy resource.",
        "parameters": [
          {
            "name": "connectedClusterResourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified Azure Resource Manager identifier of the connected cluster resource.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/{connectedClusterResourceUri}/providers/Microsoft.HybridContainerService/provisionedClusterInstances/default/hybridIdentityMetadata": {
      "get": {
        "operationId": "HybridIdentityMetadata_ListByCluster",
        "summary": "Lists the hybrid identity metadata resources in a provisioned cluster instance",
        "description": "Lists the hybrid identity metadata proxy resource in a provisioned cluster instance.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectedClusterResourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified Azure Resource Manager identifier of the connected cluster resource.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "description": "List of hybridIdentityMetadata.",
              "type": "object",
              "properties": {
                "nextLink": {
                  "description": "Url to follow for getting next page of hybridIdentityMetadata.",
                  "type": "string"
                },
                "value": {
                  "description": "Array of hybridIdentityMetadata",
                  "type": "array",
                  "items": {
                    "description": "Defines the hybridIdentityMetadata.",
                    "required": [
                      "properties"
                    ],
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        },
                        "readOnly": true
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Resource properties.",
                        "type": "object",
                        "properties": {
                          "resourceUid": {
                            "description": "Unique id of the parent provisioned cluster resource.",
                            "type": "string"
                          },
                          "publicKey": {
                            "description": "Onboarding public key for provisioning the Managed identity for the connected cluster.",
                            "type": "string"
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "Provisioning state of the resource",
                            "readOnly": true,
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Pending",
                              "Creating",
                              "Deleting",
                              "Updating",
                              "Upgrading",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "ResourceProvisioningState"
                            }
                          }
                        }
                      }
                    },
                    "x-ms-azure-resource": true
                  }
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/{connectedClusterResourceUri}/providers/Microsoft.HybridContainerService/provisionedClusterInstances/default/agentPools/{agentPoolName}": {
      "get": {
        "operationId": "agentPool_Get",
        "summary": "Gets the specified agent pool in the provisioned cluster",
        "description": "Gets the specified agent pool in the provisioned cluster",
        "parameters": [
          {
            "name": "connectedClusterResourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified Azure Resource Manager identifier of the connected cluster resource.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "agentPoolName",
            "description": "Parameter for the name of the agent pool in the provisioned cluster.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]{2,11}$",
            "x-ms-parameter-location": "method",
            "maxLength": 12,
            "minLength": 3
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the agentPool resource.",
            "schema": {
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the agent pool resource",
                  "properties": {
                    "osType": {
                      "type": "string",
                      "description": "OSType to be used to specify OS type for the VMs. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'",
                      "enum": [
                        "Linux",
                        "Windows"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "osType"
                      },
                      "default": "Linux"
                    },
                    "osSKU": {
                      "type": "string",
                      "enum": [
                        "CBLMariner",
                        "Windows2019",
                        "Windows2022"
                      ],
                      "x-ms-enum": {
                        "name": "OSSKU",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "CBLMariner",
                            "description": "Use Mariner as the OS for node images."
                          },
                          {
                            "value": "Windows2019",
                            "description": "Use Windows2019 as the OS for node images."
                          },
                          {
                            "value": "Windows2022",
                            "description": "Use Windows2022 as the OS for node images."
                          }
                        ]
                      },
                      "description": "Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows."
                    },
                    "nodeLabels": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "The node labels to be persisted across all nodes in agent pool."
                    },
                    "nodeTaints": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule."
                    },
                    "maxCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum number of nodes for auto-scaling"
                    },
                    "minCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The minimum number of nodes for auto-scaling"
                    },
                    "enableAutoScaling": {
                      "type": "boolean",
                      "description": "Whether to enable auto-scaler. Default value is false",
                      "default": false
                    },
                    "maxPods": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum number of pods that can run on a node."
                    },
                    "count": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of nodes in the agent pool. The default value is 1.",
                      "default": 1
                    },
                    "vmSize": {
                      "type": "string",
                      "description": "The VM sku size of the agent pool node VMs."
                    },
                    "kubernetesVersion": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Version of Kubernetes in use by the agent pool. This is inherited from the kubernetesVersion of the provisioned cluster."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning state of the resource",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Upgrading",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ResourceProvisioningState"
                      }
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "currentState": {
                          "type": "string",
                          "description": "Provisioning state of the resource",
                          "readOnly": true,
                          "enum": [
                            "Succeeded",
                            "Failed",
                            "Canceled",
                            "Pending",
                            "Creating",
                            "Deleting",
                            "Updating",
                            "Upgrading",
                            "Accepted"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "ResourceProvisioningState"
                          }
                        },
                        "errorMessage": {
                          "type": "string",
                          "description": "Error messages during an agent pool operation or steady state."
                        },
                        "readyReplicas": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "Profile for agent pool properties that can be updated",
                            "properties": {
                              "count": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Number of nodes in the agent pool. The default value is 1.",
                                "default": 1
                              },
                              "vmSize": {
                                "type": "string",
                                "description": "The VM sku size of the agent pool node VMs."
                              },
                              "kubernetesVersion": {
                                "type": "string",
                                "readOnly": true,
                                "description": "Version of Kubernetes in use by the agent pool. This is inherited from the kubernetesVersion of the provisioned cluster."
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      },
                      "description": "The observed status of the agent pool."
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags"
                },
                "extendedLocation": {
                  "type": "object",
                  "description": "Extended location pointing to the underlying infrastructure",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type. Allowed value: 'CustomLocation'",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ExtendedLocationTypes"
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "ARM Id of the extended location."
                    }
                  }
                }
              },
              "description": "The agentPool resource definition"
            }
          }
        }
      },
      "put": {
        "operationId": "agentPool_CreateOrUpdate",
        "summary": "Creates or updates the agent pool in the provisioned cluster",
        "description": "Creates or updates the agent pool in the provisioned cluster",
        "parameters": [
          {
            "name": "connectedClusterResourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified Azure Resource Manager identifier of the connected cluster resource.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "agentPoolName",
            "description": "Parameter for the name of the agent pool in the provisioned cluster.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]{2,11}$",
            "x-ms-parameter-location": "method",
            "maxLength": 12,
            "minLength": 3
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "agentPool",
            "in": "body",
            "required": true,
            "description": "Agent Pool resource definition",
            "schema": {
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the agent pool resource",
                  "properties": {
                    "osType": {
                      "type": "string",
                      "description": "OSType to be used to specify OS type for the VMs. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'",
                      "enum": [
                        "Linux",
                        "Windows"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "osType"
                      },
                      "default": "Linux"
                    },
                    "osSKU": {
                      "type": "string",
                      "enum": [
                        "CBLMariner",
                        "Windows2019",
                        "Windows2022"
                      ],
                      "x-ms-enum": {
                        "name": "OSSKU",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "CBLMariner",
                            "description": "Use Mariner as the OS for node images."
                          },
                          {
                            "value": "Windows2019",
                            "description": "Use Windows2019 as the OS for node images."
                          },
                          {
                            "value": "Windows2022",
                            "description": "Use Windows2022 as the OS for node images."
                          }
                        ]
                      },
                      "description": "Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows."
                    },
                    "nodeLabels": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "The node labels to be persisted across all nodes in agent pool."
                    },
                    "nodeTaints": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule."
                    },
                    "maxCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum number of nodes for auto-scaling"
                    },
                    "minCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The minimum number of nodes for auto-scaling"
                    },
                    "enableAutoScaling": {
                      "type": "boolean",
                      "description": "Whether to enable auto-scaler. Default value is false",
                      "default": false
                    },
                    "maxPods": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum number of pods that can run on a node."
                    },
                    "count": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of nodes in the agent pool. The default value is 1.",
                      "default": 1
                    },
                    "vmSize": {
                      "type": "string",
                      "description": "The VM sku size of the agent pool node VMs."
                    },
                    "kubernetesVersion": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Version of Kubernetes in use by the agent pool. This is inherited from the kubernetesVersion of the provisioned cluster."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning state of the resource",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Upgrading",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ResourceProvisioningState"
                      }
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "currentState": {
                          "type": "string",
                          "description": "Provisioning state of the resource",
                          "readOnly": true,
                          "enum": [
                            "Succeeded",
                            "Failed",
                            "Canceled",
                            "Pending",
                            "Creating",
                            "Deleting",
                            "Updating",
                            "Upgrading",
                            "Accepted"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "ResourceProvisioningState"
                          }
                        },
                        "errorMessage": {
                          "type": "string",
                          "description": "Error messages during an agent pool operation or steady state."
                        },
                        "readyReplicas": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "Profile for agent pool properties that can be updated",
                            "properties": {
                              "count": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Number of nodes in the agent pool. The default value is 1.",
                                "default": 1
                              },
                              "vmSize": {
                                "type": "string",
                                "description": "The VM sku size of the agent pool node VMs."
                              },
                              "kubernetesVersion": {
                                "type": "string",
                                "readOnly": true,
                                "description": "Version of Kubernetes in use by the agent pool. This is inherited from the kubernetesVersion of the provisioned cluster."
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      },
                      "description": "The observed status of the agent pool."
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags"
                },
                "extendedLocation": {
                  "type": "object",
                  "description": "Extended location pointing to the underlying infrastructure",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type. Allowed value: 'CustomLocation'",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ExtendedLocationTypes"
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "ARM Id of the extended location."
                    }
                  }
                }
              },
              "description": "The agentPool resource definition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updates the agent pool in the provisionedClusterInstances resource.",
            "schema": {
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the agent pool resource",
                  "properties": {
                    "osType": {
                      "type": "string",
                      "description": "OSType to be used to specify OS type for the VMs. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'",
                      "enum": [
                        "Linux",
                        "Windows"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "osType"
                      },
                      "default": "Linux"
                    },
                    "osSKU": {
                      "type": "string",
                      "enum": [
                        "CBLMariner",
                        "Windows2019",
                        "Windows2022"
                      ],
                      "x-ms-enum": {
                        "name": "OSSKU",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "CBLMariner",
                            "description": "Use Mariner as the OS for node images."
                          },
                          {
                            "value": "Windows2019",
                            "description": "Use Windows2019 as the OS for node images."
                          },
                          {
                            "value": "Windows2022",
                            "description": "Use Windows2022 as the OS for node images."
                          }
                        ]
                      },
                      "description": "Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows."
                    },
                    "nodeLabels": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "The node labels to be persisted across all nodes in agent pool."
                    },
                    "nodeTaints": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule."
                    },
                    "maxCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum number of nodes for auto-scaling"
                    },
                    "minCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The minimum number of nodes for auto-scaling"
                    },
                    "enableAutoScaling": {
                      "type": "boolean",
                      "description": "Whether to enable auto-scaler. Default value is false",
                      "default": false
                    },
                    "maxPods": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum number of pods that can run on a node."
                    },
                    "count": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of nodes in the agent pool. The default value is 1.",
                      "default": 1
                    },
                    "vmSize": {
                      "type": "string",
                      "description": "The VM sku size of the agent pool node VMs."
                    },
                    "kubernetesVersion": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Version of Kubernetes in use by the agent pool. This is inherited from the kubernetesVersion of the provisioned cluster."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning state of the resource",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Upgrading",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ResourceProvisioningState"
                      }
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "currentState": {
                          "type": "string",
                          "description": "Provisioning state of the resource",
                          "readOnly": true,
                          "enum": [
                            "Succeeded",
                            "Failed",
                            "Canceled",
                            "Pending",
                            "Creating",
                            "Deleting",
                            "Updating",
                            "Upgrading",
                            "Accepted"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "ResourceProvisioningState"
                          }
                        },
                        "errorMessage": {
                          "type": "string",
                          "description": "Error messages during an agent pool operation or steady state."
                        },
                        "readyReplicas": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "Profile for agent pool properties that can be updated",
                            "properties": {
                              "count": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Number of nodes in the agent pool. The default value is 1.",
                                "default": 1
                              },
                              "vmSize": {
                                "type": "string",
                                "description": "The VM sku size of the agent pool node VMs."
                              },
                              "kubernetesVersion": {
                                "type": "string",
                                "readOnly": true,
                                "description": "Version of Kubernetes in use by the agent pool. This is inherited from the kubernetesVersion of the provisioned cluster."
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      },
                      "description": "The observed status of the agent pool."
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags"
                },
                "extendedLocation": {
                  "type": "object",
                  "description": "Extended location pointing to the underlying infrastructure",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type. Allowed value: 'CustomLocation'",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ExtendedLocationTypes"
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "ARM Id of the extended location."
                    }
                  }
                }
              },
              "description": "The agentPool resource definition"
            }
          },
          "201": {
            "description": "Creates the agent pool in the provisionedClusterInstances resource.",
            "schema": {
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the agent pool resource",
                  "properties": {
                    "osType": {
                      "type": "string",
                      "description": "OSType to be used to specify OS type for the VMs. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'",
                      "enum": [
                        "Linux",
                        "Windows"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "osType"
                      },
                      "default": "Linux"
                    },
                    "osSKU": {
                      "type": "string",
                      "enum": [
                        "CBLMariner",
                        "Windows2019",
                        "Windows2022"
                      ],
                      "x-ms-enum": {
                        "name": "OSSKU",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "CBLMariner",
                            "description": "Use Mariner as the OS for node images."
                          },
                          {
                            "value": "Windows2019",
                            "description": "Use Windows2019 as the OS for node images."
                          },
                          {
                            "value": "Windows2022",
                            "description": "Use Windows2022 as the OS for node images."
                          }
                        ]
                      },
                      "description": "Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows."
                    },
                    "nodeLabels": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "The node labels to be persisted across all nodes in agent pool."
                    },
                    "nodeTaints": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule."
                    },
                    "maxCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum number of nodes for auto-scaling"
                    },
                    "minCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The minimum number of nodes for auto-scaling"
                    },
                    "enableAutoScaling": {
                      "type": "boolean",
                      "description": "Whether to enable auto-scaler. Default value is false",
                      "default": false
                    },
                    "maxPods": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum number of pods that can run on a node."
                    },
                    "count": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of nodes in the agent pool. The default value is 1.",
                      "default": 1
                    },
                    "vmSize": {
                      "type": "string",
                      "description": "The VM sku size of the agent pool node VMs."
                    },
                    "kubernetesVersion": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Version of Kubernetes in use by the agent pool. This is inherited from the kubernetesVersion of the provisioned cluster."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning state of the resource",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Upgrading",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ResourceProvisioningState"
                      }
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "currentState": {
                          "type": "string",
                          "description": "Provisioning state of the resource",
                          "readOnly": true,
                          "enum": [
                            "Succeeded",
                            "Failed",
                            "Canceled",
                            "Pending",
                            "Creating",
                            "Deleting",
                            "Updating",
                            "Upgrading",
                            "Accepted"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "ResourceProvisioningState"
                          }
                        },
                        "errorMessage": {
                          "type": "string",
                          "description": "Error messages during an agent pool operation or steady state."
                        },
                        "readyReplicas": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "Profile for agent pool properties that can be updated",
                            "properties": {
                              "count": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Number of nodes in the agent pool. The default value is 1.",
                                "default": 1
                              },
                              "vmSize": {
                                "type": "string",
                                "description": "The VM sku size of the agent pool node VMs."
                              },
                              "kubernetesVersion": {
                                "type": "string",
                                "readOnly": true,
                                "description": "Version of Kubernetes in use by the agent pool. This is inherited from the kubernetesVersion of the provisioned cluster."
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      },
                      "description": "The observed status of the agent pool."
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags"
                },
                "extendedLocation": {
                  "type": "object",
                  "description": "Extended location pointing to the underlying infrastructure",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type. Allowed value: 'CustomLocation'",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ExtendedLocationTypes"
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "ARM Id of the extended location."
                    }
                  }
                }
              },
              "description": "The agentPool resource definition"
            }
          }
        }
      },
      "delete": {
        "operationId": "agentPool_Delete",
        "summary": "Deletes the specified agent pool in the provisioned cluster",
        "description": "Deletes the specified agent pool in the provisioned cluster",
        "parameters": [
          {
            "name": "connectedClusterResourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified Azure Resource Manager identifier of the connected cluster resource.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "agentPoolName",
            "description": "Parameter for the name of the agent pool in the provisioned cluster.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]{2,11}$",
            "x-ms-parameter-location": "method",
            "maxLength": 12,
            "minLength": 3
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No content"
          }
        }
      }
    },
    "/{connectedClusterResourceUri}/providers/Microsoft.HybridContainerService/provisionedClusterInstances/default/agentPools": {
      "get": {
        "operationId": "agentPool_ListByProvisionedCluster",
        "summary": "Gets the list of agent pools in the specified provisioned cluster",
        "description": "Gets the list of agent pools in the specified provisioned cluster",
        "parameters": [
          {
            "name": "connectedClusterResourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified Azure Resource Manager identifier of the connected cluster resource.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the list of agentPools in the provisionedClusterInstances resource.",
            "schema": {
              "type": "object",
              "description": "List of all agent pool resources associated with the provisioned cluster.",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-ms-azure-resource": true,
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties of the agent pool resource",
                        "properties": {
                          "osType": {
                            "type": "string",
                            "description": "OSType to be used to specify OS type for the VMs. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'",
                            "enum": [
                              "Linux",
                              "Windows"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "osType"
                            },
                            "default": "Linux"
                          },
                          "osSKU": {
                            "type": "string",
                            "enum": [
                              "CBLMariner",
                              "Windows2019",
                              "Windows2022"
                            ],
                            "x-ms-enum": {
                              "name": "OSSKU",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "CBLMariner",
                                  "description": "Use Mariner as the OS for node images."
                                },
                                {
                                  "value": "Windows2019",
                                  "description": "Use Windows2019 as the OS for node images."
                                },
                                {
                                  "value": "Windows2022",
                                  "description": "Use Windows2022 as the OS for node images."
                                }
                              ]
                            },
                            "description": "Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows."
                          },
                          "nodeLabels": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "The node labels to be persisted across all nodes in agent pool."
                          },
                          "nodeTaints": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule."
                          },
                          "maxCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum number of nodes for auto-scaling"
                          },
                          "minCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The minimum number of nodes for auto-scaling"
                          },
                          "enableAutoScaling": {
                            "type": "boolean",
                            "description": "Whether to enable auto-scaler. Default value is false",
                            "default": false
                          },
                          "maxPods": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum number of pods that can run on a node."
                          },
                          "count": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Number of nodes in the agent pool. The default value is 1.",
                            "default": 1
                          },
                          "vmSize": {
                            "type": "string",
                            "description": "The VM sku size of the agent pool node VMs."
                          },
                          "kubernetesVersion": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Version of Kubernetes in use by the agent pool. This is inherited from the kubernetesVersion of the provisioned cluster."
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "Provisioning state of the resource",
                            "readOnly": true,
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Pending",
                              "Creating",
                              "Deleting",
                              "Updating",
                              "Upgrading",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "ResourceProvisioningState"
                            }
                          },
                          "status": {
                            "type": "object",
                            "properties": {
                              "currentState": {
                                "type": "string",
                                "description": "Provisioning state of the resource",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Failed",
                                  "Canceled",
                                  "Pending",
                                  "Creating",
                                  "Deleting",
                                  "Updating",
                                  "Upgrading",
                                  "Accepted"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "ResourceProvisioningState"
                                }
                              },
                              "errorMessage": {
                                "type": "string",
                                "description": "Error messages during an agent pool operation or steady state."
                              },
                              "readyReplicas": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Profile for agent pool properties that can be updated",
                                  "properties": {
                                    "count": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of nodes in the agent pool. The default value is 1.",
                                      "default": 1
                                    },
                                    "vmSize": {
                                      "type": "string",
                                      "description": "The VM sku size of the agent pool node VMs."
                                    },
                                    "kubernetesVersion": {
                                      "type": "string",
                                      "readOnly": true,
                                      "description": "Version of Kubernetes in use by the agent pool. This is inherited from the kubernetesVersion of the provisioned cluster."
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            },
                            "description": "The observed status of the agent pool."
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Resource tags"
                      },
                      "extendedLocation": {
                        "type": "object",
                        "description": "Extended location pointing to the underlying infrastructure",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The extended location type. Allowed value: 'CustomLocation'",
                            "enum": [
                              "CustomLocation"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "ExtendedLocationTypes"
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "ARM Id of the extended location."
                          }
                        }
                      }
                    },
                    "description": "The agentPool resource definition"
                  }
                },
                "nextLink": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/{connectedClusterResourceUri}/providers/Microsoft.HybridContainerService/provisionedClusterInstances/default/listUserKubeconfig": {
      "post": {
        "tags": [
          "provisionedClusterInstances"
        ],
        "operationId": "provisionedClusterInstances_ListUserKubeconfig",
        "summary": "Lists the user credentials of the provisioned cluster (can only be used within private network)",
        "description": "Lists the user credentials of the provisioned cluster (can only be used within private network)",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "connectedClusterResourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified Azure Resource Manager identifier of the connected cluster resource.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Operation Id"
                },
                "name": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Operation Name"
                },
                "resourceId": {
                  "type": "string",
                  "format": "arm-id",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.HybridContainerService/provisionedClusterInstances"
                      }
                    ]
                  },
                  "readOnly": true,
                  "description": "ARM Resource Id of the provisioned cluster instance"
                },
                "status": {
                  "type": "string",
                  "description": "Provisioning state of the resource",
                  "readOnly": true,
                  "enum": [
                    "Succeeded",
                    "Failed",
                    "Canceled",
                    "Pending",
                    "Creating",
                    "Deleting",
                    "Updating",
                    "Upgrading",
                    "Accepted"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "ResourceProvisioningState"
                  }
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "kubeconfigs": {
                      "type": "array",
                      "readOnly": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The name of the credential."
                          },
                          "value": {
                            "type": "string",
                            "format": "byte",
                            "readOnly": true,
                            "description": "Base64-encoded Kubernetes configuration file."
                          }
                        },
                        "description": "The credential result response."
                      },
                      "x-ms-identifiers": [],
                      "description": "Base64-encoded Kubernetes configuration file."
                    }
                  }
                }
              },
              "description": "The list kubeconfig result response."
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/{connectedClusterResourceUri}/providers/Microsoft.HybridContainerService/provisionedClusterInstances/default/listAdminKubeconfig": {
      "post": {
        "tags": [
          "provisionedClusterInstances"
        ],
        "operationId": "provisionedClusterInstances_ListAdminKubeconfig",
        "summary": "Lists the admin credentials of the provisioned cluster (can only be used within private network)",
        "description": "Lists the admin credentials of the provisioned cluster (can only be used within private network)",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "connectedClusterResourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified Azure Resource Manager identifier of the connected cluster resource.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Operation Id"
                },
                "name": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Operation Name"
                },
                "resourceId": {
                  "type": "string",
                  "format": "arm-id",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.HybridContainerService/provisionedClusterInstances"
                      }
                    ]
                  },
                  "readOnly": true,
                  "description": "ARM Resource Id of the provisioned cluster instance"
                },
                "status": {
                  "type": "string",
                  "description": "Provisioning state of the resource",
                  "readOnly": true,
                  "enum": [
                    "Succeeded",
                    "Failed",
                    "Canceled",
                    "Pending",
                    "Creating",
                    "Deleting",
                    "Updating",
                    "Upgrading",
                    "Accepted"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "ResourceProvisioningState"
                  }
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "kubeconfigs": {
                      "type": "array",
                      "readOnly": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The name of the credential."
                          },
                          "value": {
                            "type": "string",
                            "format": "byte",
                            "readOnly": true,
                            "description": "Base64-encoded Kubernetes configuration file."
                          }
                        },
                        "description": "The credential result response."
                      },
                      "x-ms-identifiers": [],
                      "description": "Base64-encoded Kubernetes configuration file."
                    }
                  }
                }
              },
              "description": "The list kubeconfig result response."
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/{customLocationResourceUri}/providers/Microsoft.HybridContainerService/kubernetesVersions/default": {
      "get": {
        "operationId": "GetKubernetesVersions",
        "summary": "Lists the supported kubernetes versions",
        "description": "Lists the supported kubernetes versions for the specified custom location",
        "parameters": [
          {
            "name": "customLocationResourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified Azure Resource Manager identifier of the custom location resource.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Lists the supported kubernetes versions for the specified custom location",
            "schema": {
              "type": "object",
              "description": "The supported kubernetes versions.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "extendedLocation": {
                  "type": "object",
                  "description": "Extended location pointing to the underlying infrastructure",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type. Allowed value: 'CustomLocation'",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ExtendedLocationTypes"
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "ARM Id of the extended location."
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning state of the resource",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Upgrading",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ResourceProvisioningState"
                      }
                    },
                    "values": {
                      "type": "array",
                      "description": "List of supported Kubernetes versions",
                      "items": {
                        "type": "object",
                        "description": "Kubernetes version profile for given major.minor release",
                        "properties": {
                          "version": {
                            "type": "string",
                            "description": "major.minor version of Kubernetes release",
                            "readOnly": true
                          },
                          "isPreview": {
                            "type": "boolean",
                            "description": "Whether this version is in preview mode.",
                            "readOnly": true
                          },
                          "patchVersions": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "description": "Kubernetes Patch Version profile",
                              "properties": {
                                "readiness": {
                                  "type": "array",
                                  "description": "Indicates whether the kubernetes version image is ready or not",
                                  "x-ms-identifiers": [],
                                  "items": {
                                    "type": "object",
                                    "description": "Indicates whether the kubernetes version image is ready or not",
                                    "properties": {
                                      "osType": {
                                        "type": "string",
                                        "description": "The particular KubernetesVersion Image OS Type (Linux, Windows)",
                                        "readOnly": true,
                                        "enum": [
                                          "Windows",
                                          "Linux"
                                        ],
                                        "default": "Linux",
                                        "x-ms-enum": {
                                          "modelAsString": true,
                                          "name": "osType"
                                        }
                                      },
                                      "osSku": {
                                        "type": "string",
                                        "enum": [
                                          "CBLMariner",
                                          "Windows2019",
                                          "Windows2022"
                                        ],
                                        "x-ms-enum": {
                                          "name": "OSSKU",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "value": "CBLMariner",
                                              "description": "Use Mariner as the OS for node images."
                                            },
                                            {
                                              "value": "Windows2019",
                                              "description": "Use Windows2019 as the OS for node images."
                                            },
                                            {
                                              "value": "Windows2022",
                                              "description": "Use Windows2022 as the OS for node images."
                                            }
                                          ]
                                        },
                                        "description": "Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows."
                                      },
                                      "ready": {
                                        "type": "boolean",
                                        "description": "Whether the kubernetes version image is ready or not",
                                        "readOnly": true
                                      },
                                      "errorMessage": {
                                        "type": "string",
                                        "description": "The error message for version not being ready",
                                        "readOnly": true
                                      }
                                    }
                                  }
                                },
                                "upgrades": {
                                  "type": "array",
                                  "description": "Possible upgrade paths for given patch version",
                                  "x-ms-identifiers": [],
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "description": "Patch versions of a Kubernetes release",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "PutKubernetesVersions",
        "summary": "Puts the default kubernetes version resource type (one time operation, before listing the kubernetes versions)",
        "description": "Puts the default kubernetes version resource type (one time operation, before listing the kubernetes versions)",
        "parameters": [
          {
            "name": "customLocationResourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified Azure Resource Manager identifier of the custom location resource.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "kubernetesVersions",
            "in": "body",
            "required": true,
            "description": "Kubernetes Versions resource definition",
            "schema": {
              "type": "object",
              "description": "The supported kubernetes versions.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "extendedLocation": {
                  "type": "object",
                  "description": "Extended location pointing to the underlying infrastructure",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type. Allowed value: 'CustomLocation'",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ExtendedLocationTypes"
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "ARM Id of the extended location."
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning state of the resource",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Upgrading",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ResourceProvisioningState"
                      }
                    },
                    "values": {
                      "type": "array",
                      "description": "List of supported Kubernetes versions",
                      "items": {
                        "type": "object",
                        "description": "Kubernetes version profile for given major.minor release",
                        "properties": {
                          "version": {
                            "type": "string",
                            "description": "major.minor version of Kubernetes release",
                            "readOnly": true
                          },
                          "isPreview": {
                            "type": "boolean",
                            "description": "Whether this version is in preview mode.",
                            "readOnly": true
                          },
                          "patchVersions": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "description": "Kubernetes Patch Version profile",
                              "properties": {
                                "readiness": {
                                  "type": "array",
                                  "description": "Indicates whether the kubernetes version image is ready or not",
                                  "x-ms-identifiers": [],
                                  "items": {
                                    "type": "object",
                                    "description": "Indicates whether the kubernetes version image is ready or not",
                                    "properties": {
                                      "osType": {
                                        "type": "string",
                                        "description": "The particular KubernetesVersion Image OS Type (Linux, Windows)",
                                        "readOnly": true,
                                        "enum": [
                                          "Windows",
                                          "Linux"
                                        ],
                                        "default": "Linux",
                                        "x-ms-enum": {
                                          "modelAsString": true,
                                          "name": "osType"
                                        }
                                      },
                                      "osSku": {
                                        "type": "string",
                                        "enum": [
                                          "CBLMariner",
                                          "Windows2019",
                                          "Windows2022"
                                        ],
                                        "x-ms-enum": {
                                          "name": "OSSKU",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "value": "CBLMariner",
                                              "description": "Use Mariner as the OS for node images."
                                            },
                                            {
                                              "value": "Windows2019",
                                              "description": "Use Windows2019 as the OS for node images."
                                            },
                                            {
                                              "value": "Windows2022",
                                              "description": "Use Windows2022 as the OS for node images."
                                            }
                                          ]
                                        },
                                        "description": "Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows."
                                      },
                                      "ready": {
                                        "type": "boolean",
                                        "description": "Whether the kubernetes version image is ready or not",
                                        "readOnly": true
                                      },
                                      "errorMessage": {
                                        "type": "string",
                                        "description": "The error message for version not being ready",
                                        "readOnly": true
                                      }
                                    }
                                  }
                                },
                                "upgrades": {
                                  "type": "array",
                                  "description": "Possible upgrade paths for given patch version",
                                  "x-ms-identifiers": [],
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "description": "Patch versions of a Kubernetes release",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updates the default kubernetes version resource",
            "schema": {
              "type": "object",
              "description": "The supported kubernetes versions.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "extendedLocation": {
                  "type": "object",
                  "description": "Extended location pointing to the underlying infrastructure",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type. Allowed value: 'CustomLocation'",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ExtendedLocationTypes"
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "ARM Id of the extended location."
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning state of the resource",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Upgrading",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ResourceProvisioningState"
                      }
                    },
                    "values": {
                      "type": "array",
                      "description": "List of supported Kubernetes versions",
                      "items": {
                        "type": "object",
                        "description": "Kubernetes version profile for given major.minor release",
                        "properties": {
                          "version": {
                            "type": "string",
                            "description": "major.minor version of Kubernetes release",
                            "readOnly": true
                          },
                          "isPreview": {
                            "type": "boolean",
                            "description": "Whether this version is in preview mode.",
                            "readOnly": true
                          },
                          "patchVersions": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "description": "Kubernetes Patch Version profile",
                              "properties": {
                                "readiness": {
                                  "type": "array",
                                  "description": "Indicates whether the kubernetes version image is ready or not",
                                  "x-ms-identifiers": [],
                                  "items": {
                                    "type": "object",
                                    "description": "Indicates whether the kubernetes version image is ready or not",
                                    "properties": {
                                      "osType": {
                                        "type": "string",
                                        "description": "The particular KubernetesVersion Image OS Type (Linux, Windows)",
                                        "readOnly": true,
                                        "enum": [
                                          "Windows",
                                          "Linux"
                                        ],
                                        "default": "Linux",
                                        "x-ms-enum": {
                                          "modelAsString": true,
                                          "name": "osType"
                                        }
                                      },
                                      "osSku": {
                                        "type": "string",
                                        "enum": [
                                          "CBLMariner",
                                          "Windows2019",
                                          "Windows2022"
                                        ],
                                        "x-ms-enum": {
                                          "name": "OSSKU",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "value": "CBLMariner",
                                              "description": "Use Mariner as the OS for node images."
                                            },
                                            {
                                              "value": "Windows2019",
                                              "description": "Use Windows2019 as the OS for node images."
                                            },
                                            {
                                              "value": "Windows2022",
                                              "description": "Use Windows2022 as the OS for node images."
                                            }
                                          ]
                                        },
                                        "description": "Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows."
                                      },
                                      "ready": {
                                        "type": "boolean",
                                        "description": "Whether the kubernetes version image is ready or not",
                                        "readOnly": true
                                      },
                                      "errorMessage": {
                                        "type": "string",
                                        "description": "The error message for version not being ready",
                                        "readOnly": true
                                      }
                                    }
                                  }
                                },
                                "upgrades": {
                                  "type": "array",
                                  "description": "Possible upgrade paths for given patch version",
                                  "x-ms-identifiers": [],
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "description": "Patch versions of a Kubernetes release",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Creates the default kubernetes version resource",
            "schema": {
              "type": "object",
              "description": "The supported kubernetes versions.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "extendedLocation": {
                  "type": "object",
                  "description": "Extended location pointing to the underlying infrastructure",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type. Allowed value: 'CustomLocation'",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ExtendedLocationTypes"
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "ARM Id of the extended location."
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning state of the resource",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Upgrading",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ResourceProvisioningState"
                      }
                    },
                    "values": {
                      "type": "array",
                      "description": "List of supported Kubernetes versions",
                      "items": {
                        "type": "object",
                        "description": "Kubernetes version profile for given major.minor release",
                        "properties": {
                          "version": {
                            "type": "string",
                            "description": "major.minor version of Kubernetes release",
                            "readOnly": true
                          },
                          "isPreview": {
                            "type": "boolean",
                            "description": "Whether this version is in preview mode.",
                            "readOnly": true
                          },
                          "patchVersions": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "description": "Kubernetes Patch Version profile",
                              "properties": {
                                "readiness": {
                                  "type": "array",
                                  "description": "Indicates whether the kubernetes version image is ready or not",
                                  "x-ms-identifiers": [],
                                  "items": {
                                    "type": "object",
                                    "description": "Indicates whether the kubernetes version image is ready or not",
                                    "properties": {
                                      "osType": {
                                        "type": "string",
                                        "description": "The particular KubernetesVersion Image OS Type (Linux, Windows)",
                                        "readOnly": true,
                                        "enum": [
                                          "Windows",
                                          "Linux"
                                        ],
                                        "default": "Linux",
                                        "x-ms-enum": {
                                          "modelAsString": true,
                                          "name": "osType"
                                        }
                                      },
                                      "osSku": {
                                        "type": "string",
                                        "enum": [
                                          "CBLMariner",
                                          "Windows2019",
                                          "Windows2022"
                                        ],
                                        "x-ms-enum": {
                                          "name": "OSSKU",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "value": "CBLMariner",
                                              "description": "Use Mariner as the OS for node images."
                                            },
                                            {
                                              "value": "Windows2019",
                                              "description": "Use Windows2019 as the OS for node images."
                                            },
                                            {
                                              "value": "Windows2022",
                                              "description": "Use Windows2022 as the OS for node images."
                                            }
                                          ]
                                        },
                                        "description": "Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows."
                                      },
                                      "ready": {
                                        "type": "boolean",
                                        "description": "Whether the kubernetes version image is ready or not",
                                        "readOnly": true
                                      },
                                      "errorMessage": {
                                        "type": "string",
                                        "description": "The error message for version not being ready",
                                        "readOnly": true
                                      }
                                    }
                                  }
                                },
                                "upgrades": {
                                  "type": "array",
                                  "description": "Possible upgrade paths for given patch version",
                                  "x-ms-identifiers": [],
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "description": "Patch versions of a Kubernetes release",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "DeleteKubernetesVersions",
        "summary": "Deletes the default kubernetes version resource type",
        "description": "Delete the default kubernetes versions resource type",
        "parameters": [
          {
            "name": "customLocationResourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified Azure Resource Manager identifier of the custom location resource.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No content"
          }
        }
      }
    },
    "/{customLocationResourceUri}/providers/Microsoft.HybridContainerService/kubernetesVersions": {
      "get": {
        "operationId": "KubernetesVersions_List",
        "summary": "Lists the supported kubernetes versions",
        "description": "Lists the supported kubernetes versions for the specified custom location",
        "parameters": [
          {
            "name": "customLocationResourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified Azure Resource Manager identifier of the custom location resource.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Lists the supported kubernetes versions for the specified custom location",
            "schema": {
              "type": "object",
              "description": "List of supported kubernetes versions.",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "The supported kubernetes versions.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "extendedLocation": {
                        "type": "object",
                        "description": "Extended location pointing to the underlying infrastructure",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The extended location type. Allowed value: 'CustomLocation'",
                            "enum": [
                              "CustomLocation"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "ExtendedLocationTypes"
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "ARM Id of the extended location."
                          }
                        }
                      },
                      "properties": {
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "provisioningState": {
                            "type": "string",
                            "description": "Provisioning state of the resource",
                            "readOnly": true,
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Pending",
                              "Creating",
                              "Deleting",
                              "Updating",
                              "Upgrading",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "ResourceProvisioningState"
                            }
                          },
                          "values": {
                            "type": "array",
                            "description": "List of supported Kubernetes versions",
                            "items": {
                              "type": "object",
                              "description": "Kubernetes version profile for given major.minor release",
                              "properties": {
                                "version": {
                                  "type": "string",
                                  "description": "major.minor version of Kubernetes release",
                                  "readOnly": true
                                },
                                "isPreview": {
                                  "type": "boolean",
                                  "description": "Whether this version is in preview mode.",
                                  "readOnly": true
                                },
                                "patchVersions": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "object",
                                    "description": "Kubernetes Patch Version profile",
                                    "properties": {
                                      "readiness": {
                                        "type": "array",
                                        "description": "Indicates whether the kubernetes version image is ready or not",
                                        "x-ms-identifiers": [],
                                        "items": {
                                          "type": "object",
                                          "description": "Indicates whether the kubernetes version image is ready or not",
                                          "properties": {
                                            "osType": {
                                              "type": "string",
                                              "description": "The particular KubernetesVersion Image OS Type (Linux, Windows)",
                                              "readOnly": true,
                                              "enum": [
                                                "Windows",
                                                "Linux"
                                              ],
                                              "default": "Linux",
                                              "x-ms-enum": {
                                                "modelAsString": true,
                                                "name": "osType"
                                              }
                                            },
                                            "osSku": {
                                              "type": "string",
                                              "enum": [
                                                "CBLMariner",
                                                "Windows2019",
                                                "Windows2022"
                                              ],
                                              "x-ms-enum": {
                                                "name": "OSSKU",
                                                "modelAsString": true,
                                                "values": [
                                                  {
                                                    "value": "CBLMariner",
                                                    "description": "Use Mariner as the OS for node images."
                                                  },
                                                  {
                                                    "value": "Windows2019",
                                                    "description": "Use Windows2019 as the OS for node images."
                                                  },
                                                  {
                                                    "value": "Windows2022",
                                                    "description": "Use Windows2022 as the OS for node images."
                                                  }
                                                ]
                                              },
                                              "description": "Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows."
                                            },
                                            "ready": {
                                              "type": "boolean",
                                              "description": "Whether the kubernetes version image is ready or not",
                                              "readOnly": true
                                            },
                                            "errorMessage": {
                                              "type": "string",
                                              "description": "The error message for version not being ready",
                                              "readOnly": true
                                            }
                                          }
                                        }
                                      },
                                      "upgrades": {
                                        "type": "array",
                                        "description": "Possible upgrade paths for given patch version",
                                        "x-ms-identifiers": [],
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "description": "Patch versions of a Kubernetes release",
                                  "readOnly": true
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string"
                }
              },
              "x-ms-identifiers": []
            }
          }
        }
      }
    },
    "/{customLocationResourceUri}/providers/Microsoft.HybridContainerService/skus/default": {
      "get": {
        "operationId": "GetVMSkus",
        "summary": "Lists the supported VM skus",
        "description": "Lists the supported VM skus for the specified custom location",
        "parameters": [
          {
            "name": "customLocationResourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified Azure Resource Manager identifier of the custom location resource.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Lists the supported VM skus for the specified custom location",
            "schema": {
              "type": "object",
              "description": "The list of supported VM SKUs.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "extendedLocation": {
                  "type": "object",
                  "description": "Extended location pointing to the underlying infrastructure",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type. Allowed value: 'CustomLocation'",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ExtendedLocationTypes"
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "ARM Id of the extended location."
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning state of the resource",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Upgrading",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ResourceProvisioningState"
                      }
                    },
                    "values": {
                      "type": "array",
                      "description": "List of supported VM SKUs.",
                      "items": {
                        "type": "object",
                        "description": "The profile for supported VM SKUs",
                        "readOnly": true,
                        "properties": {
                          "resourceType": {
                            "type": "string",
                            "description": "The type of resource the SKU applies to.",
                            "readOnly": true
                          },
                          "capabilities": {
                            "type": "array",
                            "readOnly": true,
                            "description": "The list of name-value pairs to describe VM SKU capabilities like MemoryGB, vCPUs, etc.",
                            "items": {
                              "type": "object",
                              "description": "Describes the VM SKU capabilities like MemoryGB, vCPUs, etc.",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "Name of the VM SKU capability"
                                },
                                "value": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "Value of the VM SKU capability"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "name": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The name of the VM SKU"
                          },
                          "tier": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The tier of the VM SKU"
                          },
                          "size": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The size of the VM SKU"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "PutVMSkus",
        "summary": "Puts the default VM skus resource type (one time operation, before listing the VM skus)",
        "description": "Puts the default VM skus resource type (one time operation, before listing the VM skus)",
        "parameters": [
          {
            "name": "customLocationResourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified Azure Resource Manager identifier of the custom location resource.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "skus",
            "in": "body",
            "required": true,
            "description": "VM SKUs resource definition",
            "schema": {
              "type": "object",
              "description": "The list of supported VM SKUs.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "extendedLocation": {
                  "type": "object",
                  "description": "Extended location pointing to the underlying infrastructure",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type. Allowed value: 'CustomLocation'",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ExtendedLocationTypes"
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "ARM Id of the extended location."
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning state of the resource",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Upgrading",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ResourceProvisioningState"
                      }
                    },
                    "values": {
                      "type": "array",
                      "description": "List of supported VM SKUs.",
                      "items": {
                        "type": "object",
                        "description": "The profile for supported VM SKUs",
                        "readOnly": true,
                        "properties": {
                          "resourceType": {
                            "type": "string",
                            "description": "The type of resource the SKU applies to.",
                            "readOnly": true
                          },
                          "capabilities": {
                            "type": "array",
                            "readOnly": true,
                            "description": "The list of name-value pairs to describe VM SKU capabilities like MemoryGB, vCPUs, etc.",
                            "items": {
                              "type": "object",
                              "description": "Describes the VM SKU capabilities like MemoryGB, vCPUs, etc.",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "Name of the VM SKU capability"
                                },
                                "value": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "Value of the VM SKU capability"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "name": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The name of the VM SKU"
                          },
                          "tier": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The tier of the VM SKU"
                          },
                          "size": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The size of the VM SKU"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updates the default VM skus resource",
            "schema": {
              "type": "object",
              "description": "The list of supported VM SKUs.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "extendedLocation": {
                  "type": "object",
                  "description": "Extended location pointing to the underlying infrastructure",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type. Allowed value: 'CustomLocation'",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ExtendedLocationTypes"
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "ARM Id of the extended location."
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning state of the resource",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Upgrading",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ResourceProvisioningState"
                      }
                    },
                    "values": {
                      "type": "array",
                      "description": "List of supported VM SKUs.",
                      "items": {
                        "type": "object",
                        "description": "The profile for supported VM SKUs",
                        "readOnly": true,
                        "properties": {
                          "resourceType": {
                            "type": "string",
                            "description": "The type of resource the SKU applies to.",
                            "readOnly": true
                          },
                          "capabilities": {
                            "type": "array",
                            "readOnly": true,
                            "description": "The list of name-value pairs to describe VM SKU capabilities like MemoryGB, vCPUs, etc.",
                            "items": {
                              "type": "object",
                              "description": "Describes the VM SKU capabilities like MemoryGB, vCPUs, etc.",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "Name of the VM SKU capability"
                                },
                                "value": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "Value of the VM SKU capability"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "name": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The name of the VM SKU"
                          },
                          "tier": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The tier of the VM SKU"
                          },
                          "size": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The size of the VM SKU"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Creates the default VM skus resource",
            "schema": {
              "type": "object",
              "description": "The list of supported VM SKUs.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "extendedLocation": {
                  "type": "object",
                  "description": "Extended location pointing to the underlying infrastructure",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type. Allowed value: 'CustomLocation'",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ExtendedLocationTypes"
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "ARM Id of the extended location."
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning state of the resource",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Upgrading",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ResourceProvisioningState"
                      }
                    },
                    "values": {
                      "type": "array",
                      "description": "List of supported VM SKUs.",
                      "items": {
                        "type": "object",
                        "description": "The profile for supported VM SKUs",
                        "readOnly": true,
                        "properties": {
                          "resourceType": {
                            "type": "string",
                            "description": "The type of resource the SKU applies to.",
                            "readOnly": true
                          },
                          "capabilities": {
                            "type": "array",
                            "readOnly": true,
                            "description": "The list of name-value pairs to describe VM SKU capabilities like MemoryGB, vCPUs, etc.",
                            "items": {
                              "type": "object",
                              "description": "Describes the VM SKU capabilities like MemoryGB, vCPUs, etc.",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "Name of the VM SKU capability"
                                },
                                "value": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "Value of the VM SKU capability"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "name": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The name of the VM SKU"
                          },
                          "tier": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The tier of the VM SKU"
                          },
                          "size": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The size of the VM SKU"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "DeleteVMSkus",
        "summary": "Deletes the default VM skus resource type",
        "description": "Deletes the default VM skus resource type",
        "parameters": [
          {
            "name": "customLocationResourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified Azure Resource Manager identifier of the custom location resource.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No content"
          }
        }
      }
    },
    "/{customLocationResourceUri}/providers/Microsoft.HybridContainerService/skus": {
      "get": {
        "operationId": "VMSkus_List",
        "summary": "Lists the supported VM skus",
        "description": "Lists the supported VM skus for the specified custom location",
        "parameters": [
          {
            "name": "customLocationResourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified Azure Resource Manager identifier of the custom location resource.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Lists the supported VM skus for the specified custom location",
            "schema": {
              "type": "object",
              "description": "The list of supported VM SKUs.",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "The list of supported VM SKUs.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "extendedLocation": {
                        "type": "object",
                        "description": "Extended location pointing to the underlying infrastructure",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The extended location type. Allowed value: 'CustomLocation'",
                            "enum": [
                              "CustomLocation"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "ExtendedLocationTypes"
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "ARM Id of the extended location."
                          }
                        }
                      },
                      "properties": {
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "provisioningState": {
                            "type": "string",
                            "description": "Provisioning state of the resource",
                            "readOnly": true,
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Pending",
                              "Creating",
                              "Deleting",
                              "Updating",
                              "Upgrading",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "ResourceProvisioningState"
                            }
                          },
                          "values": {
                            "type": "array",
                            "description": "List of supported VM SKUs.",
                            "items": {
                              "type": "object",
                              "description": "The profile for supported VM SKUs",
                              "readOnly": true,
                              "properties": {
                                "resourceType": {
                                  "type": "string",
                                  "description": "The type of resource the SKU applies to.",
                                  "readOnly": true
                                },
                                "capabilities": {
                                  "type": "array",
                                  "readOnly": true,
                                  "description": "The list of name-value pairs to describe VM SKU capabilities like MemoryGB, vCPUs, etc.",
                                  "items": {
                                    "type": "object",
                                    "description": "Describes the VM SKU capabilities like MemoryGB, vCPUs, etc.",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "readOnly": true,
                                        "description": "Name of the VM SKU capability"
                                      },
                                      "value": {
                                        "type": "string",
                                        "readOnly": true,
                                        "description": "Value of the VM SKU capability"
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": []
                                },
                                "name": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The name of the VM SKU"
                                },
                                "tier": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The tier of the VM SKU"
                                },
                                "size": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The size of the VM SKU"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string"
                }
              },
              "x-ms-identifiers": []
            }
          }
        }
      }
    },
    "/providers/Microsoft.HybridContainerService/operations": {
      "get": {
        "operationId": "Operations_List",
        "description": "Lists the supported operations",
        "summary": "Lists the supported operations",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Describe the result of a successful operation.",
            "schema": {
              "type": "object",
              "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of operations supported by the resource provider",
                  "items": {
                    "type": "object",
                    "title": "REST API Operation",
                    "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
                        "readOnly": true
                      },
                      "isDataAction": {
                        "type": "boolean",
                        "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
                        "readOnly": true
                      },
                      "display": {
                        "type": "object",
                        "description": "Localized display information for this particular operation.",
                        "properties": {
                          "provider": {
                            "type": "string",
                            "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
                            "readOnly": true
                          },
                          "resource": {
                            "type": "string",
                            "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
                            "readOnly": true
                          },
                          "operation": {
                            "type": "string",
                            "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
                            "readOnly": true
                          },
                          "description": {
                            "type": "string",
                            "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
                            "readOnly": true
                          }
                        }
                      },
                      "origin": {
                        "type": "string",
                        "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
                        "enum": [
                          "user",
                          "system",
                          "user,system"
                        ],
                        "x-ms-enum": {
                          "name": "Origin",
                          "modelAsString": true
                        },
                        "readOnly": true
                      },
                      "actionType": {
                        "type": "string",
                        "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
                        "enum": [
                          "Internal"
                        ],
                        "x-ms-enum": {
                          "name": "ActionType",
                          "modelAsString": true
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "URL to get the next set of operation list results (if there are any).",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridContainerService/virtualNetworks/{virtualNetworkName}": {
      "get": {
        "operationId": "virtualNetworks_Retrieve",
        "summary": "Gets the specified virtual network resource",
        "description": "Gets the specified virtual network resource",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "virtualNetworkName",
            "description": "Parameter for the name of the virtual network",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$",
            "x-ms-parameter-location": "method",
            "maxLength": 64,
            "minLength": 3
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the virtualNetwork resource.",
            "schema": {
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "type": "object",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "infraVnetProfile": {
                      "type": "object",
                      "properties": {
                        "hci": {
                          "type": "object",
                          "properties": {
                            "mocGroup": {
                              "type": "string",
                              "description": "Group in MOC(Microsoft On-premises Cloud)"
                            },
                            "mocLocation": {
                              "type": "string",
                              "description": "Location in MOC(Microsoft On-premises Cloud)"
                            },
                            "mocVnetName": {
                              "type": "string",
                              "description": "Virtual Network name in MOC(Microsoft On-premises Cloud)"
                            }
                          },
                          "description": "Infrastructure network profile for HCI platform"
                        }
                      }
                    },
                    "vipPool": {
                      "type": "array",
                      "description": "Range of IP Addresses for Kubernetes API Server and services if using HA Proxy load balancer",
                      "x-ms-identifiers": [],
                      "items": {
                        "type": "object",
                        "properties": {
                          "endIP": {
                            "type": "string",
                            "description": "Ending IP address for the IP Pool"
                          },
                          "startIP": {
                            "type": "string",
                            "description": "Starting IP address for the IP Pool"
                          }
                        }
                      }
                    },
                    "vmipPool": {
                      "type": "array",
                      "description": "Range of IP Addresses for Kubernetes node VMs",
                      "x-ms-identifiers": [],
                      "items": {
                        "type": "object",
                        "properties": {
                          "endIP": {
                            "type": "string",
                            "description": "Ending IP address for the IP Pool"
                          },
                          "startIP": {
                            "type": "string",
                            "description": "Starting IP address for the IP Pool"
                          }
                        }
                      }
                    },
                    "dnsServers": {
                      "type": "array",
                      "description": "List of DNS server IP Addresses associated with the network",
                      "items": {
                        "type": "string"
                      }
                    },
                    "gateway": {
                      "type": "string",
                      "description": "IP Address of the Gateway associated with the network"
                    },
                    "ipAddressPrefix": {
                      "type": "string",
                      "description": "IP Address Prefix of the network"
                    },
                    "vlanID": {
                      "type": "integer",
                      "format": "int32",
                      "description": "VLAN Id used by the network"
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "provisioningState"
                      }
                    },
                    "status": {
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "operationStatus": {
                          "type": "object",
                          "description": "The detailed status of the long running operation.",
                          "properties": {
                            "error": {
                              "type": "object",
                              "description": "The error if any from the operation.",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "description": "The error code from the operation."
                                },
                                "message": {
                                  "type": "string",
                                  "description": "The error message from the operation."
                                }
                              }
                            },
                            "operationId": {
                              "type": "string",
                              "description": "The identifier of the operation."
                            },
                            "status": {
                              "type": "string",
                              "description": "The status of the operation."
                            }
                          }
                        }
                      },
                      "description": "Status of the virtual network resource"
                    }
                  },
                  "description": "Properties of the virtual network resource"
                },
                "extendedLocation": {
                  "type": "object",
                  "description": "Extended location pointing to the underlying infrastructure",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type. Allowed value: 'CustomLocation'",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ExtendedLocationTypes"
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "ARM Id of the extended location."
                    }
                  }
                }
              },
              "description": "The Virtual Network resource definition."
            }
          }
        }
      },
      "put": {
        "operationId": "virtualNetworks_CreateOrUpdate",
        "summary": "Creates or updates the virtual network resource",
        "description": "Creates or updates the virtual network resource",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "virtualNetworkName",
            "description": "Parameter for the name of the virtual network",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$",
            "x-ms-parameter-location": "method",
            "maxLength": 64,
            "minLength": 3
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "virtualNetworks",
            "in": "body",
            "required": true,
            "description": "Virtual Network resource definition",
            "schema": {
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "type": "object",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "infraVnetProfile": {
                      "type": "object",
                      "properties": {
                        "hci": {
                          "type": "object",
                          "properties": {
                            "mocGroup": {
                              "type": "string",
                              "description": "Group in MOC(Microsoft On-premises Cloud)"
                            },
                            "mocLocation": {
                              "type": "string",
                              "description": "Location in MOC(Microsoft On-premises Cloud)"
                            },
                            "mocVnetName": {
                              "type": "string",
                              "description": "Virtual Network name in MOC(Microsoft On-premises Cloud)"
                            }
                          },
                          "description": "Infrastructure network profile for HCI platform"
                        }
                      }
                    },
                    "vipPool": {
                      "type": "array",
                      "description": "Range of IP Addresses for Kubernetes API Server and services if using HA Proxy load balancer",
                      "x-ms-identifiers": [],
                      "items": {
                        "type": "object",
                        "properties": {
                          "endIP": {
                            "type": "string",
                            "description": "Ending IP address for the IP Pool"
                          },
                          "startIP": {
                            "type": "string",
                            "description": "Starting IP address for the IP Pool"
                          }
                        }
                      }
                    },
                    "vmipPool": {
                      "type": "array",
                      "description": "Range of IP Addresses for Kubernetes node VMs",
                      "x-ms-identifiers": [],
                      "items": {
                        "type": "object",
                        "properties": {
                          "endIP": {
                            "type": "string",
                            "description": "Ending IP address for the IP Pool"
                          },
                          "startIP": {
                            "type": "string",
                            "description": "Starting IP address for the IP Pool"
                          }
                        }
                      }
                    },
                    "dnsServers": {
                      "type": "array",
                      "description": "List of DNS server IP Addresses associated with the network",
                      "items": {
                        "type": "string"
                      }
                    },
                    "gateway": {
                      "type": "string",
                      "description": "IP Address of the Gateway associated with the network"
                    },
                    "ipAddressPrefix": {
                      "type": "string",
                      "description": "IP Address Prefix of the network"
                    },
                    "vlanID": {
                      "type": "integer",
                      "format": "int32",
                      "description": "VLAN Id used by the network"
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "provisioningState"
                      }
                    },
                    "status": {
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "operationStatus": {
                          "type": "object",
                          "description": "The detailed status of the long running operation.",
                          "properties": {
                            "error": {
                              "type": "object",
                              "description": "The error if any from the operation.",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "description": "The error code from the operation."
                                },
                                "message": {
                                  "type": "string",
                                  "description": "The error message from the operation."
                                }
                              }
                            },
                            "operationId": {
                              "type": "string",
                              "description": "The identifier of the operation."
                            },
                            "status": {
                              "type": "string",
                              "description": "The status of the operation."
                            }
                          }
                        }
                      },
                      "description": "Status of the virtual network resource"
                    }
                  },
                  "description": "Properties of the virtual network resource"
                },
                "extendedLocation": {
                  "type": "object",
                  "description": "Extended location pointing to the underlying infrastructure",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type. Allowed value: 'CustomLocation'",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ExtendedLocationTypes"
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "ARM Id of the extended location."
                    }
                  }
                }
              },
              "description": "The Virtual Network resource definition."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updates the virtualNetworks resource.",
            "schema": {
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "type": "object",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "infraVnetProfile": {
                      "type": "object",
                      "properties": {
                        "hci": {
                          "type": "object",
                          "properties": {
                            "mocGroup": {
                              "type": "string",
                              "description": "Group in MOC(Microsoft On-premises Cloud)"
                            },
                            "mocLocation": {
                              "type": "string",
                              "description": "Location in MOC(Microsoft On-premises Cloud)"
                            },
                            "mocVnetName": {
                              "type": "string",
                              "description": "Virtual Network name in MOC(Microsoft On-premises Cloud)"
                            }
                          },
                          "description": "Infrastructure network profile for HCI platform"
                        }
                      }
                    },
                    "vipPool": {
                      "type": "array",
                      "description": "Range of IP Addresses for Kubernetes API Server and services if using HA Proxy load balancer",
                      "x-ms-identifiers": [],
                      "items": {
                        "type": "object",
                        "properties": {
                          "endIP": {
                            "type": "string",
                            "description": "Ending IP address for the IP Pool"
                          },
                          "startIP": {
                            "type": "string",
                            "description": "Starting IP address for the IP Pool"
                          }
                        }
                      }
                    },
                    "vmipPool": {
                      "type": "array",
                      "description": "Range of IP Addresses for Kubernetes node VMs",
                      "x-ms-identifiers": [],
                      "items": {
                        "type": "object",
                        "properties": {
                          "endIP": {
                            "type": "string",
                            "description": "Ending IP address for the IP Pool"
                          },
                          "startIP": {
                            "type": "string",
                            "description": "Starting IP address for the IP Pool"
                          }
                        }
                      }
                    },
                    "dnsServers": {
                      "type": "array",
                      "description": "List of DNS server IP Addresses associated with the network",
                      "items": {
                        "type": "string"
                      }
                    },
                    "gateway": {
                      "type": "string",
                      "description": "IP Address of the Gateway associated with the network"
                    },
                    "ipAddressPrefix": {
                      "type": "string",
                      "description": "IP Address Prefix of the network"
                    },
                    "vlanID": {
                      "type": "integer",
                      "format": "int32",
                      "description": "VLAN Id used by the network"
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "provisioningState"
                      }
                    },
                    "status": {
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "operationStatus": {
                          "type": "object",
                          "description": "The detailed status of the long running operation.",
                          "properties": {
                            "error": {
                              "type": "object",
                              "description": "The error if any from the operation.",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "description": "The error code from the operation."
                                },
                                "message": {
                                  "type": "string",
                                  "description": "The error message from the operation."
                                }
                              }
                            },
                            "operationId": {
                              "type": "string",
                              "description": "The identifier of the operation."
                            },
                            "status": {
                              "type": "string",
                              "description": "The status of the operation."
                            }
                          }
                        }
                      },
                      "description": "Status of the virtual network resource"
                    }
                  },
                  "description": "Properties of the virtual network resource"
                },
                "extendedLocation": {
                  "type": "object",
                  "description": "Extended location pointing to the underlying infrastructure",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type. Allowed value: 'CustomLocation'",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ExtendedLocationTypes"
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "ARM Id of the extended location."
                    }
                  }
                }
              },
              "description": "The Virtual Network resource definition."
            }
          },
          "201": {
            "description": "Creates the virtualNetworks resource.",
            "schema": {
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "type": "object",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "infraVnetProfile": {
                      "type": "object",
                      "properties": {
                        "hci": {
                          "type": "object",
                          "properties": {
                            "mocGroup": {
                              "type": "string",
                              "description": "Group in MOC(Microsoft On-premises Cloud)"
                            },
                            "mocLocation": {
                              "type": "string",
                              "description": "Location in MOC(Microsoft On-premises Cloud)"
                            },
                            "mocVnetName": {
                              "type": "string",
                              "description": "Virtual Network name in MOC(Microsoft On-premises Cloud)"
                            }
                          },
                          "description": "Infrastructure network profile for HCI platform"
                        }
                      }
                    },
                    "vipPool": {
                      "type": "array",
                      "description": "Range of IP Addresses for Kubernetes API Server and services if using HA Proxy load balancer",
                      "x-ms-identifiers": [],
                      "items": {
                        "type": "object",
                        "properties": {
                          "endIP": {
                            "type": "string",
                            "description": "Ending IP address for the IP Pool"
                          },
                          "startIP": {
                            "type": "string",
                            "description": "Starting IP address for the IP Pool"
                          }
                        }
                      }
                    },
                    "vmipPool": {
                      "type": "array",
                      "description": "Range of IP Addresses for Kubernetes node VMs",
                      "x-ms-identifiers": [],
                      "items": {
                        "type": "object",
                        "properties": {
                          "endIP": {
                            "type": "string",
                            "description": "Ending IP address for the IP Pool"
                          },
                          "startIP": {
                            "type": "string",
                            "description": "Starting IP address for the IP Pool"
                          }
                        }
                      }
                    },
                    "dnsServers": {
                      "type": "array",
                      "description": "List of DNS server IP Addresses associated with the network",
                      "items": {
                        "type": "string"
                      }
                    },
                    "gateway": {
                      "type": "string",
                      "description": "IP Address of the Gateway associated with the network"
                    },
                    "ipAddressPrefix": {
                      "type": "string",
                      "description": "IP Address Prefix of the network"
                    },
                    "vlanID": {
                      "type": "integer",
                      "format": "int32",
                      "description": "VLAN Id used by the network"
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "provisioningState"
                      }
                    },
                    "status": {
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "operationStatus": {
                          "type": "object",
                          "description": "The detailed status of the long running operation.",
                          "properties": {
                            "error": {
                              "type": "object",
                              "description": "The error if any from the operation.",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "description": "The error code from the operation."
                                },
                                "message": {
                                  "type": "string",
                                  "description": "The error message from the operation."
                                }
                              }
                            },
                            "operationId": {
                              "type": "string",
                              "description": "The identifier of the operation."
                            },
                            "status": {
                              "type": "string",
                              "description": "The status of the operation."
                            }
                          }
                        }
                      },
                      "description": "Status of the virtual network resource"
                    }
                  },
                  "description": "Properties of the virtual network resource"
                },
                "extendedLocation": {
                  "type": "object",
                  "description": "Extended location pointing to the underlying infrastructure",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type. Allowed value: 'CustomLocation'",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ExtendedLocationTypes"
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "ARM Id of the extended location."
                    }
                  }
                }
              },
              "description": "The Virtual Network resource definition."
            }
          }
        }
      },
      "delete": {
        "operationId": "virtualNetworks_Delete",
        "summary": "Deletes the specified virtual network resource",
        "description": "Deletes the specified virtual network resource",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "virtualNetworkName",
            "description": "Parameter for the name of the virtual network",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$",
            "x-ms-parameter-location": "method",
            "maxLength": 64,
            "minLength": 3
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No content"
          }
        }
      },
      "patch": {
        "operationId": "virtualNetworks_Update",
        "summary": "Patches the virtual network resource",
        "description": "Patches the virtual network resource",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "virtualNetworkName",
            "description": "Parameter for the name of the virtual network",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$",
            "x-ms-parameter-location": "method",
            "maxLength": 64,
            "minLength": 3
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "virtualNetworks",
            "in": "body",
            "required": true,
            "description": "Virtual Network resource patch definition",
            "schema": {
              "type": "object",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags"
                }
              },
              "description": "The Virtual Network resource patch definition."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updates the virtualNetworks resource.",
            "schema": {
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "type": "object",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "infraVnetProfile": {
                      "type": "object",
                      "properties": {
                        "hci": {
                          "type": "object",
                          "properties": {
                            "mocGroup": {
                              "type": "string",
                              "description": "Group in MOC(Microsoft On-premises Cloud)"
                            },
                            "mocLocation": {
                              "type": "string",
                              "description": "Location in MOC(Microsoft On-premises Cloud)"
                            },
                            "mocVnetName": {
                              "type": "string",
                              "description": "Virtual Network name in MOC(Microsoft On-premises Cloud)"
                            }
                          },
                          "description": "Infrastructure network profile for HCI platform"
                        }
                      }
                    },
                    "vipPool": {
                      "type": "array",
                      "description": "Range of IP Addresses for Kubernetes API Server and services if using HA Proxy load balancer",
                      "x-ms-identifiers": [],
                      "items": {
                        "type": "object",
                        "properties": {
                          "endIP": {
                            "type": "string",
                            "description": "Ending IP address for the IP Pool"
                          },
                          "startIP": {
                            "type": "string",
                            "description": "Starting IP address for the IP Pool"
                          }
                        }
                      }
                    },
                    "vmipPool": {
                      "type": "array",
                      "description": "Range of IP Addresses for Kubernetes node VMs",
                      "x-ms-identifiers": [],
                      "items": {
                        "type": "object",
                        "properties": {
                          "endIP": {
                            "type": "string",
                            "description": "Ending IP address for the IP Pool"
                          },
                          "startIP": {
                            "type": "string",
                            "description": "Starting IP address for the IP Pool"
                          }
                        }
                      }
                    },
                    "dnsServers": {
                      "type": "array",
                      "description": "List of DNS server IP Addresses associated with the network",
                      "items": {
                        "type": "string"
                      }
                    },
                    "gateway": {
                      "type": "string",
                      "description": "IP Address of the Gateway associated with the network"
                    },
                    "ipAddressPrefix": {
                      "type": "string",
                      "description": "IP Address Prefix of the network"
                    },
                    "vlanID": {
                      "type": "integer",
                      "format": "int32",
                      "description": "VLAN Id used by the network"
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Creating",
                        "Deleting",
                        "Updating",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "provisioningState"
                      }
                    },
                    "status": {
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "operationStatus": {
                          "type": "object",
                          "description": "The detailed status of the long running operation.",
                          "properties": {
                            "error": {
                              "type": "object",
                              "description": "The error if any from the operation.",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "description": "The error code from the operation."
                                },
                                "message": {
                                  "type": "string",
                                  "description": "The error message from the operation."
                                }
                              }
                            },
                            "operationId": {
                              "type": "string",
                              "description": "The identifier of the operation."
                            },
                            "status": {
                              "type": "string",
                              "description": "The status of the operation."
                            }
                          }
                        }
                      },
                      "description": "Status of the virtual network resource"
                    }
                  },
                  "description": "Properties of the virtual network resource"
                },
                "extendedLocation": {
                  "type": "object",
                  "description": "Extended location pointing to the underlying infrastructure",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type. Allowed value: 'CustomLocation'",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ExtendedLocationTypes"
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "ARM Id of the extended location."
                    }
                  }
                }
              },
              "description": "The Virtual Network resource definition."
            }
          },
          "202": {
            "description": "Updates the virtualNetworks resource."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridContainerService/virtualNetworks": {
      "get": {
        "operationId": "virtualNetworks_ListByResourceGroup",
        "summary": "Lists the virtual networks in the specified resource group",
        "description": "Lists the virtual networks in the specified resource group",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Lists the virtual networks in the specified resource group",
            "schema": {
              "type": "object",
              "description": "A list of virtual network resources.",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-ms-azure-resource": true,
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "type": "object",
                        "x-ms-client-flatten": true,
                        "properties": {
                          "infraVnetProfile": {
                            "type": "object",
                            "properties": {
                              "hci": {
                                "type": "object",
                                "properties": {
                                  "mocGroup": {
                                    "type": "string",
                                    "description": "Group in MOC(Microsoft On-premises Cloud)"
                                  },
                                  "mocLocation": {
                                    "type": "string",
                                    "description": "Location in MOC(Microsoft On-premises Cloud)"
                                  },
                                  "mocVnetName": {
                                    "type": "string",
                                    "description": "Virtual Network name in MOC(Microsoft On-premises Cloud)"
                                  }
                                },
                                "description": "Infrastructure network profile for HCI platform"
                              }
                            }
                          },
                          "vipPool": {
                            "type": "array",
                            "description": "Range of IP Addresses for Kubernetes API Server and services if using HA Proxy load balancer",
                            "x-ms-identifiers": [],
                            "items": {
                              "type": "object",
                              "properties": {
                                "endIP": {
                                  "type": "string",
                                  "description": "Ending IP address for the IP Pool"
                                },
                                "startIP": {
                                  "type": "string",
                                  "description": "Starting IP address for the IP Pool"
                                }
                              }
                            }
                          },
                          "vmipPool": {
                            "type": "array",
                            "description": "Range of IP Addresses for Kubernetes node VMs",
                            "x-ms-identifiers": [],
                            "items": {
                              "type": "object",
                              "properties": {
                                "endIP": {
                                  "type": "string",
                                  "description": "Ending IP address for the IP Pool"
                                },
                                "startIP": {
                                  "type": "string",
                                  "description": "Starting IP address for the IP Pool"
                                }
                              }
                            }
                          },
                          "dnsServers": {
                            "type": "array",
                            "description": "List of DNS server IP Addresses associated with the network",
                            "items": {
                              "type": "string"
                            }
                          },
                          "gateway": {
                            "type": "string",
                            "description": "IP Address of the Gateway associated with the network"
                          },
                          "ipAddressPrefix": {
                            "type": "string",
                            "description": "IP Address Prefix of the network"
                          },
                          "vlanID": {
                            "type": "integer",
                            "format": "int32",
                            "description": "VLAN Id used by the network"
                          },
                          "provisioningState": {
                            "type": "string",
                            "readOnly": true,
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Pending",
                              "Creating",
                              "Deleting",
                              "Updating",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "provisioningState"
                            }
                          },
                          "status": {
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                              "operationStatus": {
                                "type": "object",
                                "description": "The detailed status of the long running operation.",
                                "properties": {
                                  "error": {
                                    "type": "object",
                                    "description": "The error if any from the operation.",
                                    "properties": {
                                      "code": {
                                        "type": "string",
                                        "description": "The error code from the operation."
                                      },
                                      "message": {
                                        "type": "string",
                                        "description": "The error message from the operation."
                                      }
                                    }
                                  },
                                  "operationId": {
                                    "type": "string",
                                    "description": "The identifier of the operation."
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "The status of the operation."
                                  }
                                }
                              }
                            },
                            "description": "Status of the virtual network resource"
                          }
                        },
                        "description": "Properties of the virtual network resource"
                      },
                      "extendedLocation": {
                        "type": "object",
                        "description": "Extended location pointing to the underlying infrastructure",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The extended location type. Allowed value: 'CustomLocation'",
                            "enum": [
                              "CustomLocation"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "ExtendedLocationTypes"
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "ARM Id of the extended location."
                          }
                        }
                      }
                    },
                    "description": "The Virtual Network resource definition."
                  }
                },
                "nextLink": {
                  "type": "string"
                }
              },
              "x-ms-identifiers": []
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HybridContainerService/virtualNetworks": {
      "get": {
        "operationId": "virtualNetworks_ListBySubscription",
        "summary": "Lists the virtual networks in the specified subscription",
        "description": "Lists the virtual networks in the specified subscription",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Lists the virtual networks in the specified subscription",
            "schema": {
              "type": "object",
              "description": "A list of virtual network resources.",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "x-ms-azure-resource": true,
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "type": "object",
                        "x-ms-client-flatten": true,
                        "properties": {
                          "infraVnetProfile": {
                            "type": "object",
                            "properties": {
                              "hci": {
                                "type": "object",
                                "properties": {
                                  "mocGroup": {
                                    "type": "string",
                                    "description": "Group in MOC(Microsoft On-premises Cloud)"
                                  },
                                  "mocLocation": {
                                    "type": "string",
                                    "description": "Location in MOC(Microsoft On-premises Cloud)"
                                  },
                                  "mocVnetName": {
                                    "type": "string",
                                    "description": "Virtual Network name in MOC(Microsoft On-premises Cloud)"
                                  }
                                },
                                "description": "Infrastructure network profile for HCI platform"
                              }
                            }
                          },
                          "vipPool": {
                            "type": "array",
                            "description": "Range of IP Addresses for Kubernetes API Server and services if using HA Proxy load balancer",
                            "x-ms-identifiers": [],
                            "items": {
                              "type": "object",
                              "properties": {
                                "endIP": {
                                  "type": "string",
                                  "description": "Ending IP address for the IP Pool"
                                },
                                "startIP": {
                                  "type": "string",
                                  "description": "Starting IP address for the IP Pool"
                                }
                              }
                            }
                          },
                          "vmipPool": {
                            "type": "array",
                            "description": "Range of IP Addresses for Kubernetes node VMs",
                            "x-ms-identifiers": [],
                            "items": {
                              "type": "object",
                              "properties": {
                                "endIP": {
                                  "type": "string",
                                  "description": "Ending IP address for the IP Pool"
                                },
                                "startIP": {
                                  "type": "string",
                                  "description": "Starting IP address for the IP Pool"
                                }
                              }
                            }
                          },
                          "dnsServers": {
                            "type": "array",
                            "description": "List of DNS server IP Addresses associated with the network",
                            "items": {
                              "type": "string"
                            }
                          },
                          "gateway": {
                            "type": "string",
                            "description": "IP Address of the Gateway associated with the network"
                          },
                          "ipAddressPrefix": {
                            "type": "string",
                            "description": "IP Address Prefix of the network"
                          },
                          "vlanID": {
                            "type": "integer",
                            "format": "int32",
                            "description": "VLAN Id used by the network"
                          },
                          "provisioningState": {
                            "type": "string",
                            "readOnly": true,
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Pending",
                              "Creating",
                              "Deleting",
                              "Updating",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "provisioningState"
                            }
                          },
                          "status": {
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                              "operationStatus": {
                                "type": "object",
                                "description": "The detailed status of the long running operation.",
                                "properties": {
                                  "error": {
                                    "type": "object",
                                    "description": "The error if any from the operation.",
                                    "properties": {
                                      "code": {
                                        "type": "string",
                                        "description": "The error code from the operation."
                                      },
                                      "message": {
                                        "type": "string",
                                        "description": "The error message from the operation."
                                      }
                                    }
                                  },
                                  "operationId": {
                                    "type": "string",
                                    "description": "The identifier of the operation."
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "The status of the operation."
                                  }
                                }
                              }
                            },
                            "description": "Status of the virtual network resource"
                          }
                        },
                        "description": "Properties of the virtual network resource"
                      },
                      "extendedLocation": {
                        "type": "object",
                        "description": "Extended location pointing to the underlying infrastructure",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The extended location type. Allowed value: 'CustomLocation'",
                            "enum": [
                              "CustomLocation"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "ExtendedLocationTypes"
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "ARM Id of the extended location."
                          }
                        }
                      }
                    },
                    "description": "The Virtual Network resource definition."
                  }
                },
                "nextLink": {
                  "type": "string"
                }
              },
              "x-ms-identifiers": []
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ListCredentialResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Operation Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Operation Name"
        },
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.HybridContainerService/provisionedClusterInstances"
              }
            ]
          },
          "readOnly": true,
          "description": "ARM Resource Id of the provisioned cluster instance"
        },
        "status": {
          "type": "string",
          "description": "Provisioning state of the resource",
          "readOnly": true,
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Pending",
            "Creating",
            "Deleting",
            "Updating",
            "Upgrading",
            "Accepted"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ResourceProvisioningState"
          }
        },
        "error": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string"
            },
            "message": {
              "type": "string"
            }
          }
        },
        "properties": {
          "type": "object",
          "properties": {
            "kubeconfigs": {
              "type": "array",
              "readOnly": true,
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The name of the credential."
                  },
                  "value": {
                    "type": "string",
                    "format": "byte",
                    "readOnly": true,
                    "description": "Base64-encoded Kubernetes configuration file."
                  }
                },
                "description": "The credential result response."
              },
              "x-ms-identifiers": [],
              "description": "Base64-encoded Kubernetes configuration file."
            }
          }
        }
      },
      "description": "The list kubeconfig result response."
    },
    "CredentialResult": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the credential."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "readOnly": true,
          "description": "Base64-encoded Kubernetes configuration file."
        }
      },
      "description": "The credential result response."
    },
    "provisionedClusterProperties": {
      "type": "object",
      "properties": {
        "linuxProfile": {
          "description": "The profile for Linux VMs in the provisioned cluster.",
          "type": "object",
          "properties": {
            "ssh": {
              "type": "object",
              "properties": {
                "publicKeys": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "keyData": {
                        "type": "string",
                        "description": "Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers."
                      }
                    }
                  },
                  "x-ms-identifiers": [],
                  "description": "The list of SSH public keys used to authenticate with VMs. A maximum of 1 key may be specified."
                }
              },
              "description": "SSH configuration for VMs of the provisioned cluster."
            }
          }
        },
        "controlPlane": {
          "description": "The profile for control plane of the provisioned cluster.",
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "format": "int32",
              "description": "Number of control plane nodes. The default value is 1, and the count should be an odd number",
              "default": 1
            },
            "vmSize": {
              "type": "string",
              "description": "VM sku size of the control plane nodes"
            },
            "controlPlaneEndpoint": {
              "type": "object",
              "description": "IP Address of the Kubernetes API server",
              "properties": {
                "hostIP": {
                  "type": "string",
                  "description": "IP address of the Kubernetes API server"
                }
              }
            }
          }
        },
        "kubernetesVersion": {
          "type": "string",
          "description": "The version of Kubernetes in use by the provisioned cluster."
        },
        "networkProfile": {
          "description": "The network configuration profile for the provisioned cluster.",
          "type": "object",
          "properties": {
            "loadBalancerProfile": {
              "type": "object",
              "description": "Profile of the HA Proxy load balancer.",
              "properties": {
                "count": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of HA Proxy load balancer VMs. The default value is 0.",
                  "default": 0
                }
              }
            },
            "networkPolicy": {
              "type": "string",
              "description": "Network policy used for building Kubernetes network. Possible values include: 'calico'.",
              "enum": [
                "calico"
              ],
              "default": "calico",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "networkPolicy"
              }
            },
            "podCidr": {
              "type": "string",
              "description": "A CIDR notation IP Address range from which to assign pod IPs."
            }
          }
        },
        "storageProfile": {
          "description": "The storage configuration profile for the provisioned cluster.",
          "type": "object",
          "properties": {
            "smbCsiDriver": {
              "description": "SMB CSI Driver settings for the storage profile.",
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true,
                  "description": "Indicates whether to enable SMB CSI Driver. The default value is true."
                }
              }
            },
            "nfsCsiDriver": {
              "description": "NFS CSI Driver settings for the storage profile.",
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true,
                  "description": "Indicates whether to enable NFS CSI Driver. The default value is true."
                }
              }
            }
          }
        },
        "clusterVMAccessProfile": {
          "description": "The SSH restricted access profile for the VMs in the provisioned cluster.",
          "type": "object",
          "properties": {
            "authorizedIPRanges": {
              "type": "string",
              "description": "IP Address or CIDR for SSH access to VMs in the provisioned cluster"
            }
          }
        },
        "agentPoolProfiles": {
          "type": "array",
          "items": {
            "description": "Profile of the default agent pool along with a name parameter",
            "properties": {
              "osType": {
                "type": "string",
                "description": "OSType to be used to specify OS type for the VMs. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'",
                "enum": [
                  "Linux",
                  "Windows"
                ],
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "osType"
                },
                "default": "Linux"
              },
              "osSKU": {
                "type": "string",
                "enum": [
                  "CBLMariner",
                  "Windows2019",
                  "Windows2022"
                ],
                "x-ms-enum": {
                  "name": "OSSKU",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "CBLMariner",
                      "description": "Use Mariner as the OS for node images."
                    },
                    {
                      "value": "Windows2019",
                      "description": "Use Windows2019 as the OS for node images."
                    },
                    {
                      "value": "Windows2022",
                      "description": "Use Windows2022 as the OS for node images."
                    }
                  ]
                },
                "description": "Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows."
              },
              "nodeLabels": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "The node labels to be persisted across all nodes in agent pool."
              },
              "nodeTaints": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule."
              },
              "maxCount": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of nodes for auto-scaling"
              },
              "minCount": {
                "type": "integer",
                "format": "int32",
                "description": "The minimum number of nodes for auto-scaling"
              },
              "enableAutoScaling": {
                "type": "boolean",
                "description": "Whether to enable auto-scaler. Default value is false",
                "default": false
              },
              "maxPods": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of pods that can run on a node."
              },
              "count": {
                "type": "integer",
                "format": "int32",
                "description": "Number of nodes in the agent pool. The default value is 1.",
                "default": 1
              },
              "vmSize": {
                "type": "string",
                "description": "The VM sku size of the agent pool node VMs."
              },
              "kubernetesVersion": {
                "type": "string",
                "readOnly": true,
                "description": "Version of Kubernetes in use by the agent pool. This is inherited from the kubernetesVersion of the provisioned cluster."
              },
              "name": {
                "type": "string",
                "description": "Unique name of the default agent pool in the context of the provisioned cluster. Default value is <clusterName>-nodepool1"
              }
            }
          },
          "x-ms-identifiers": [],
          "description": "The agent pool properties for the provisioned cluster."
        },
        "cloudProviderProfile": {
          "description": "The profile for the underlying cloud infrastructure provider for the provisioned cluster.",
          "type": "object",
          "properties": {
            "infraNetworkProfile": {
              "type": "object",
              "description": "The profile for the infrastructure networks used by the provisioned cluster",
              "properties": {
                "vnetSubnetIds": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.AzureStackHCI/logicalNetworks"
                        },
                        {
                          "type": "Microsoft.HybridContainerService/virtualNetworks"
                        }
                      ]
                    }
                  },
                  "description": "List of ARM resource Ids (maximum 1) for the infrastructure network object e.g. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/logicalNetworks/{logicalNetworkName}"
                }
              }
            }
          }
        },
        "provisioningState": {
          "description": "The status of the latest long running operation for the provisioned cluster.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Pending",
            "Creating",
            "Deleting",
            "Updating",
            "Upgrading",
            "Accepted"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ResourceProvisioningState"
          }
        },
        "status": {
          "type": "object",
          "readOnly": true,
          "properties": {
            "controlPlaneStatus": {
              "type": "array",
              "items": {
                "description": "The status profile of the addons and other kubernetes components",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the addon or component"
                  },
                  "phase": {
                    "type": "string",
                    "description": "Observed phase of the addon or component on the provisioned cluster. Possible values include: 'pending', 'provisioning', 'provisioning {HelmChartInstalled}', 'provisioning {MSICertificateDownloaded}', 'provisioned', 'deleting', 'failed', 'upgrading'",
                    "enum": [
                      "pending",
                      "provisioning",
                      "provisioning {HelmChartInstalled}",
                      "provisioning {MSICertificateDownloaded}",
                      "provisioned",
                      "deleting",
                      "failed",
                      "upgrading"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "addonPhase"
                    }
                  },
                  "ready": {
                    "type": "boolean",
                    "description": "Indicates whether the addon or component is ready"
                  },
                  "errorMessage": {
                    "type": "string",
                    "description": "Observed error message from the addon or component"
                  }
                }
              },
              "x-ms-identifiers": [],
              "description": "The detailed status of the provisioned cluster components including addons."
            },
            "currentState": {
              "description": "The current state of the provisioned cluster.",
              "type": "string",
              "readOnly": true,
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Pending",
                "Creating",
                "Deleting",
                "Updating",
                "Upgrading",
                "Accepted"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ResourceProvisioningState"
              }
            },
            "errorMessage": {
              "type": "string",
              "description": "Error messages during a provisioned cluster operation or steady state."
            }
          },
          "description": "The observed status of the provisioned cluster."
        },
        "licenseProfile": {
          "description": "The license profile of the provisioned cluster.",
          "type": "object",
          "properties": {
            "azureHybridBenefit": {
              "type": "string",
              "description": "Indicates whether Azure Hybrid Benefit is opted in. Default value is false",
              "enum": [
                "True",
                "False",
                "NotApplicable"
              ],
              "default": "NotApplicable",
              "x-ms-enum": {
                "name": "AzureHybridBenefit",
                "modelAsString": true
              }
            }
          }
        },
        "autoScalerProfile": {
          "type": "object",
          "properties": {
            "balance-similar-node-groups": {
              "type": "string",
              "title": "Detects similar node pools and balances the number of nodes between them.",
              "description": "Valid values are 'true' and 'false'"
            },
            "expander": {
              "type": "string",
              "enum": [
                "least-waste",
                "most-pods",
                "priority",
                "random"
              ],
              "x-ms-enum": {
                "name": "expander",
                "modelAsString": true,
                "values": [
                  {
                    "value": "least-waste",
                    "description": "Selects the node group that will have the least idle CPU (if tied, unused memory) after scale-up. This is useful when you have different classes of nodes, for example, high CPU or high memory nodes, and only want to expand those when there are pending pods that need a lot of those resources."
                  },
                  {
                    "value": "most-pods",
                    "description": "Selects the node group that would be able to schedule the most pods when scaling up. This is useful when you are using nodeSelector to make sure certain pods land on certain nodes. Note that this won't cause the autoscaler to select bigger nodes vs. smaller, as it can add multiple smaller nodes at once."
                  },
                  {
                    "value": "priority",
                    "description": "Selects the node group that has the highest priority assigned by the user. It's configuration is described in more details [here](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/expander/priority/readme.md)."
                  },
                  {
                    "value": "random",
                    "description": "Used when you don't have a particular need for the node groups to scale differently."
                  }
                ]
              },
              "title": "The expander to use when scaling up",
              "description": "If not specified, the default is 'random'. See [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders) for more information."
            },
            "max-empty-bulk-delete": {
              "type": "string",
              "title": "The maximum number of empty nodes that can be deleted at the same time. This must be a positive integer.",
              "description": "The default is 10."
            },
            "max-graceful-termination-sec": {
              "type": "string",
              "title": "The maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node.",
              "description": "The default is 600."
            },
            "max-node-provision-time": {
              "type": "string",
              "title": "The maximum time the autoscaler waits for a node to be provisioned.",
              "description": "The default is '15m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
            },
            "max-total-unready-percentage": {
              "type": "string",
              "title": "The maximum percentage of unready nodes in the cluster. After this percentage is exceeded, cluster autoscaler halts operations.",
              "description": "The default is 45. The maximum is 100 and the minimum is 0."
            },
            "new-pod-scale-up-delay": {
              "type": "string",
              "title": "Ignore unscheduled pods before they're a certain age.",
              "description": "For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they're a certain age. The default is '0s'. Values must be an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours, etc)."
            },
            "ok-total-unready-count": {
              "type": "string",
              "title": "The number of allowed unready nodes, irrespective of max-total-unready-percentage.",
              "description": "This must be an integer. The default is 3."
            },
            "scan-interval": {
              "type": "string",
              "title": "How often cluster is reevaluated for scale up or down.",
              "description": "The default is '10'. Values must be an integer number of seconds."
            },
            "scale-down-delay-after-add": {
              "type": "string",
              "title": "How long after scale up that scale down evaluation resumes",
              "description": "The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
            },
            "scale-down-delay-after-delete": {
              "type": "string",
              "title": "How long after node deletion that scale down evaluation resumes.",
              "description": "The default is the scan-interval. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
            },
            "scale-down-delay-after-failure": {
              "type": "string",
              "title": "How long after scale down failure that scale down evaluation resumes.",
              "description": "The default is '3m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
            },
            "scale-down-unneeded-time": {
              "type": "string",
              "title": "How long a node should be unneeded before it is eligible for scale down.",
              "description": "The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
            },
            "scale-down-unready-time": {
              "type": "string",
              "title": "How long an unready node should be unneeded before it is eligible for scale down",
              "description": "The default is '20m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
            },
            "scale-down-utilization-threshold": {
              "type": "string",
              "title": "Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down.",
              "description": "The default is '0.5'."
            },
            "skip-nodes-with-local-storage": {
              "type": "string",
              "title": "If cluster autoscaler will skip deleting nodes with pods with local storage, for example, EmptyDir or HostPath.",
              "description": "The default is true."
            },
            "skip-nodes-with-system-pods": {
              "type": "string",
              "title": "If cluster autoscaler will skip deleting nodes with pods from kube-system (except for DaemonSet or mirror pods)",
              "description": "The default is true."
            }
          },
          "description": "Parameters to be applied to the cluster-autoscaler when auto scaling is enabled for the provisioned cluster."
        }
      },
      "description": "Properties of the provisioned cluster."
    },
    "provisionedCluster": {
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "type": "object",
          "properties": {
            "linuxProfile": {
              "description": "The profile for Linux VMs in the provisioned cluster.",
              "type": "object",
              "properties": {
                "ssh": {
                  "type": "object",
                  "properties": {
                    "publicKeys": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "keyData": {
                            "type": "string",
                            "description": "Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers."
                          }
                        }
                      },
                      "x-ms-identifiers": [],
                      "description": "The list of SSH public keys used to authenticate with VMs. A maximum of 1 key may be specified."
                    }
                  },
                  "description": "SSH configuration for VMs of the provisioned cluster."
                }
              }
            },
            "controlPlane": {
              "description": "The profile for control plane of the provisioned cluster.",
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of control plane nodes. The default value is 1, and the count should be an odd number",
                  "default": 1
                },
                "vmSize": {
                  "type": "string",
                  "description": "VM sku size of the control plane nodes"
                },
                "controlPlaneEndpoint": {
                  "type": "object",
                  "description": "IP Address of the Kubernetes API server",
                  "properties": {
                    "hostIP": {
                      "type": "string",
                      "description": "IP address of the Kubernetes API server"
                    }
                  }
                }
              }
            },
            "kubernetesVersion": {
              "type": "string",
              "description": "The version of Kubernetes in use by the provisioned cluster."
            },
            "networkProfile": {
              "description": "The network configuration profile for the provisioned cluster.",
              "type": "object",
              "properties": {
                "loadBalancerProfile": {
                  "type": "object",
                  "description": "Profile of the HA Proxy load balancer.",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of HA Proxy load balancer VMs. The default value is 0.",
                      "default": 0
                    }
                  }
                },
                "networkPolicy": {
                  "type": "string",
                  "description": "Network policy used for building Kubernetes network. Possible values include: 'calico'.",
                  "enum": [
                    "calico"
                  ],
                  "default": "calico",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "networkPolicy"
                  }
                },
                "podCidr": {
                  "type": "string",
                  "description": "A CIDR notation IP Address range from which to assign pod IPs."
                }
              }
            },
            "storageProfile": {
              "description": "The storage configuration profile for the provisioned cluster.",
              "type": "object",
              "properties": {
                "smbCsiDriver": {
                  "description": "SMB CSI Driver settings for the storage profile.",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true,
                      "description": "Indicates whether to enable SMB CSI Driver. The default value is true."
                    }
                  }
                },
                "nfsCsiDriver": {
                  "description": "NFS CSI Driver settings for the storage profile.",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": true,
                      "description": "Indicates whether to enable NFS CSI Driver. The default value is true."
                    }
                  }
                }
              }
            },
            "clusterVMAccessProfile": {
              "description": "The SSH restricted access profile for the VMs in the provisioned cluster.",
              "type": "object",
              "properties": {
                "authorizedIPRanges": {
                  "type": "string",
                  "description": "IP Address or CIDR for SSH access to VMs in the provisioned cluster"
                }
              }
            },
            "agentPoolProfiles": {
              "type": "array",
              "items": {
                "description": "Profile of the default agent pool along with a name parameter",
                "properties": {
                  "osType": {
                    "type": "string",
                    "description": "OSType to be used to specify OS type for the VMs. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'",
                    "enum": [
                      "Linux",
                      "Windows"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "osType"
                    },
                    "default": "Linux"
                  },
                  "osSKU": {
                    "type": "string",
                    "enum": [
                      "CBLMariner",
                      "Windows2019",
                      "Windows2022"
                    ],
                    "x-ms-enum": {
                      "name": "OSSKU",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "CBLMariner",
                          "description": "Use Mariner as the OS for node images."
                        },
                        {
                          "value": "Windows2019",
                          "description": "Use Windows2019 as the OS for node images."
                        },
                        {
                          "value": "Windows2022",
                          "description": "Use Windows2022 as the OS for node images."
                        }
                      ]
                    },
                    "description": "Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows."
                  },
                  "nodeLabels": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "The node labels to be persisted across all nodes in agent pool."
                  },
                  "nodeTaints": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule."
                  },
                  "maxCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The maximum number of nodes for auto-scaling"
                  },
                  "minCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The minimum number of nodes for auto-scaling"
                  },
                  "enableAutoScaling": {
                    "type": "boolean",
                    "description": "Whether to enable auto-scaler. Default value is false",
                    "default": false
                  },
                  "maxPods": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The maximum number of pods that can run on a node."
                  },
                  "count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of nodes in the agent pool. The default value is 1.",
                    "default": 1
                  },
                  "vmSize": {
                    "type": "string",
                    "description": "The VM sku size of the agent pool node VMs."
                  },
                  "kubernetesVersion": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Version of Kubernetes in use by the agent pool. This is inherited from the kubernetesVersion of the provisioned cluster."
                  },
                  "name": {
                    "type": "string",
                    "description": "Unique name of the default agent pool in the context of the provisioned cluster. Default value is <clusterName>-nodepool1"
                  }
                }
              },
              "x-ms-identifiers": [],
              "description": "The agent pool properties for the provisioned cluster."
            },
            "cloudProviderProfile": {
              "description": "The profile for the underlying cloud infrastructure provider for the provisioned cluster.",
              "type": "object",
              "properties": {
                "infraNetworkProfile": {
                  "type": "object",
                  "description": "The profile for the infrastructure networks used by the provisioned cluster",
                  "properties": {
                    "vnetSubnetIds": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "arm-id",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.AzureStackHCI/logicalNetworks"
                            },
                            {
                              "type": "Microsoft.HybridContainerService/virtualNetworks"
                            }
                          ]
                        }
                      },
                      "description": "List of ARM resource Ids (maximum 1) for the infrastructure network object e.g. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/logicalNetworks/{logicalNetworkName}"
                    }
                  }
                }
              }
            },
            "provisioningState": {
              "description": "The status of the latest long running operation for the provisioned cluster.",
              "type": "string",
              "readOnly": true,
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Pending",
                "Creating",
                "Deleting",
                "Updating",
                "Upgrading",
                "Accepted"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ResourceProvisioningState"
              }
            },
            "status": {
              "type": "object",
              "readOnly": true,
              "properties": {
                "controlPlaneStatus": {
                  "type": "array",
                  "items": {
                    "description": "The status profile of the addons and other kubernetes components",
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the addon or component"
                      },
                      "phase": {
                        "type": "string",
                        "description": "Observed phase of the addon or component on the provisioned cluster. Possible values include: 'pending', 'provisioning', 'provisioning {HelmChartInstalled}', 'provisioning {MSICertificateDownloaded}', 'provisioned', 'deleting', 'failed', 'upgrading'",
                        "enum": [
                          "pending",
                          "provisioning",
                          "provisioning {HelmChartInstalled}",
                          "provisioning {MSICertificateDownloaded}",
                          "provisioned",
                          "deleting",
                          "failed",
                          "upgrading"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "addonPhase"
                        }
                      },
                      "ready": {
                        "type": "boolean",
                        "description": "Indicates whether the addon or component is ready"
                      },
                      "errorMessage": {
                        "type": "string",
                        "description": "Observed error message from the addon or component"
                      }
                    }
                  },
                  "x-ms-identifiers": [],
                  "description": "The detailed status of the provisioned cluster components including addons."
                },
                "currentState": {
                  "description": "The current state of the provisioned cluster.",
                  "type": "string",
                  "readOnly": true,
                  "enum": [
                    "Succeeded",
                    "Failed",
                    "Canceled",
                    "Pending",
                    "Creating",
                    "Deleting",
                    "Updating",
                    "Upgrading",
                    "Accepted"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "ResourceProvisioningState"
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "description": "Error messages during a provisioned cluster operation or steady state."
                }
              },
              "description": "The observed status of the provisioned cluster."
            },
            "licenseProfile": {
              "description": "The license profile of the provisioned cluster.",
              "type": "object",
              "properties": {
                "azureHybridBenefit": {
                  "type": "string",
                  "description": "Indicates whether Azure Hybrid Benefit is opted in. Default value is false",
                  "enum": [
                    "True",
                    "False",
                    "NotApplicable"
                  ],
                  "default": "NotApplicable",
                  "x-ms-enum": {
                    "name": "AzureHybridBenefit",
                    "modelAsString": true
                  }
                }
              }
            },
            "autoScalerProfile": {
              "type": "object",
              "properties": {
                "balance-similar-node-groups": {
                  "type": "string",
                  "title": "Detects similar node pools and balances the number of nodes between them.",
                  "description": "Valid values are 'true' and 'false'"
                },
                "expander": {
                  "type": "string",
                  "enum": [
                    "least-waste",
                    "most-pods",
                    "priority",
                    "random"
                  ],
                  "x-ms-enum": {
                    "name": "expander",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "least-waste",
                        "description": "Selects the node group that will have the least idle CPU (if tied, unused memory) after scale-up. This is useful when you have different classes of nodes, for example, high CPU or high memory nodes, and only want to expand those when there are pending pods that need a lot of those resources."
                      },
                      {
                        "value": "most-pods",
                        "description": "Selects the node group that would be able to schedule the most pods when scaling up. This is useful when you are using nodeSelector to make sure certain pods land on certain nodes. Note that this won't cause the autoscaler to select bigger nodes vs. smaller, as it can add multiple smaller nodes at once."
                      },
                      {
                        "value": "priority",
                        "description": "Selects the node group that has the highest priority assigned by the user. It's configuration is described in more details [here](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/expander/priority/readme.md)."
                      },
                      {
                        "value": "random",
                        "description": "Used when you don't have a particular need for the node groups to scale differently."
                      }
                    ]
                  },
                  "title": "The expander to use when scaling up",
                  "description": "If not specified, the default is 'random'. See [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders) for more information."
                },
                "max-empty-bulk-delete": {
                  "type": "string",
                  "title": "The maximum number of empty nodes that can be deleted at the same time. This must be a positive integer.",
                  "description": "The default is 10."
                },
                "max-graceful-termination-sec": {
                  "type": "string",
                  "title": "The maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node.",
                  "description": "The default is 600."
                },
                "max-node-provision-time": {
                  "type": "string",
                  "title": "The maximum time the autoscaler waits for a node to be provisioned.",
                  "description": "The default is '15m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                },
                "max-total-unready-percentage": {
                  "type": "string",
                  "title": "The maximum percentage of unready nodes in the cluster. After this percentage is exceeded, cluster autoscaler halts operations.",
                  "description": "The default is 45. The maximum is 100 and the minimum is 0."
                },
                "new-pod-scale-up-delay": {
                  "type": "string",
                  "title": "Ignore unscheduled pods before they're a certain age.",
                  "description": "For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they're a certain age. The default is '0s'. Values must be an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours, etc)."
                },
                "ok-total-unready-count": {
                  "type": "string",
                  "title": "The number of allowed unready nodes, irrespective of max-total-unready-percentage.",
                  "description": "This must be an integer. The default is 3."
                },
                "scan-interval": {
                  "type": "string",
                  "title": "How often cluster is reevaluated for scale up or down.",
                  "description": "The default is '10'. Values must be an integer number of seconds."
                },
                "scale-down-delay-after-add": {
                  "type": "string",
                  "title": "How long after scale up that scale down evaluation resumes",
                  "description": "The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                },
                "scale-down-delay-after-delete": {
                  "type": "string",
                  "title": "How long after node deletion that scale down evaluation resumes.",
                  "description": "The default is the scan-interval. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                },
                "scale-down-delay-after-failure": {
                  "type": "string",
                  "title": "How long after scale down failure that scale down evaluation resumes.",
                  "description": "The default is '3m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                },
                "scale-down-unneeded-time": {
                  "type": "string",
                  "title": "How long a node should be unneeded before it is eligible for scale down.",
                  "description": "The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                },
                "scale-down-unready-time": {
                  "type": "string",
                  "title": "How long an unready node should be unneeded before it is eligible for scale down",
                  "description": "The default is '20m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                },
                "scale-down-utilization-threshold": {
                  "type": "string",
                  "title": "Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down.",
                  "description": "The default is '0.5'."
                },
                "skip-nodes-with-local-storage": {
                  "type": "string",
                  "title": "If cluster autoscaler will skip deleting nodes with pods with local storage, for example, EmptyDir or HostPath.",
                  "description": "The default is true."
                },
                "skip-nodes-with-system-pods": {
                  "type": "string",
                  "title": "If cluster autoscaler will skip deleting nodes with pods from kube-system (except for DaemonSet or mirror pods)",
                  "description": "The default is true."
                }
              },
              "description": "Parameters to be applied to the cluster-autoscaler when auto scaling is enabled for the provisioned cluster."
            }
          },
          "description": "Properties of the provisioned cluster."
        },
        "extendedLocation": {
          "type": "object",
          "description": "Extended location pointing to the underlying infrastructure",
          "properties": {
            "type": {
              "type": "string",
              "description": "The extended location type. Allowed value: 'CustomLocation'",
              "enum": [
                "CustomLocation"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ExtendedLocationTypes"
              }
            },
            "name": {
              "type": "string",
              "description": "ARM Id of the extended location."
            }
          }
        }
      },
      "description": "The provisioned cluster resource definition."
    },
    "provisionedClusterListResult": {
      "type": "object",
      "description": "Lists the ProvisionedClusterInstance resource associated with the ConnectedCluster.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "x-ms-azure-resource": true,
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "type": "object",
                "properties": {
                  "linuxProfile": {
                    "description": "The profile for Linux VMs in the provisioned cluster.",
                    "type": "object",
                    "properties": {
                      "ssh": {
                        "type": "object",
                        "properties": {
                          "publicKeys": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "keyData": {
                                  "type": "string",
                                  "description": "Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers."
                                }
                              }
                            },
                            "x-ms-identifiers": [],
                            "description": "The list of SSH public keys used to authenticate with VMs. A maximum of 1 key may be specified."
                          }
                        },
                        "description": "SSH configuration for VMs of the provisioned cluster."
                      }
                    }
                  },
                  "controlPlane": {
                    "description": "The profile for control plane of the provisioned cluster.",
                    "type": "object",
                    "properties": {
                      "count": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of control plane nodes. The default value is 1, and the count should be an odd number",
                        "default": 1
                      },
                      "vmSize": {
                        "type": "string",
                        "description": "VM sku size of the control plane nodes"
                      },
                      "controlPlaneEndpoint": {
                        "type": "object",
                        "description": "IP Address of the Kubernetes API server",
                        "properties": {
                          "hostIP": {
                            "type": "string",
                            "description": "IP address of the Kubernetes API server"
                          }
                        }
                      }
                    }
                  },
                  "kubernetesVersion": {
                    "type": "string",
                    "description": "The version of Kubernetes in use by the provisioned cluster."
                  },
                  "networkProfile": {
                    "description": "The network configuration profile for the provisioned cluster.",
                    "type": "object",
                    "properties": {
                      "loadBalancerProfile": {
                        "type": "object",
                        "description": "Profile of the HA Proxy load balancer.",
                        "properties": {
                          "count": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Number of HA Proxy load balancer VMs. The default value is 0.",
                            "default": 0
                          }
                        }
                      },
                      "networkPolicy": {
                        "type": "string",
                        "description": "Network policy used for building Kubernetes network. Possible values include: 'calico'.",
                        "enum": [
                          "calico"
                        ],
                        "default": "calico",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "networkPolicy"
                        }
                      },
                      "podCidr": {
                        "type": "string",
                        "description": "A CIDR notation IP Address range from which to assign pod IPs."
                      }
                    }
                  },
                  "storageProfile": {
                    "description": "The storage configuration profile for the provisioned cluster.",
                    "type": "object",
                    "properties": {
                      "smbCsiDriver": {
                        "description": "SMB CSI Driver settings for the storage profile.",
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "type": "boolean",
                            "default": true,
                            "description": "Indicates whether to enable SMB CSI Driver. The default value is true."
                          }
                        }
                      },
                      "nfsCsiDriver": {
                        "description": "NFS CSI Driver settings for the storage profile.",
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "type": "boolean",
                            "default": true,
                            "description": "Indicates whether to enable NFS CSI Driver. The default value is true."
                          }
                        }
                      }
                    }
                  },
                  "clusterVMAccessProfile": {
                    "description": "The SSH restricted access profile for the VMs in the provisioned cluster.",
                    "type": "object",
                    "properties": {
                      "authorizedIPRanges": {
                        "type": "string",
                        "description": "IP Address or CIDR for SSH access to VMs in the provisioned cluster"
                      }
                    }
                  },
                  "agentPoolProfiles": {
                    "type": "array",
                    "items": {
                      "description": "Profile of the default agent pool along with a name parameter",
                      "properties": {
                        "osType": {
                          "type": "string",
                          "description": "OSType to be used to specify OS type for the VMs. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'",
                          "enum": [
                            "Linux",
                            "Windows"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "osType"
                          },
                          "default": "Linux"
                        },
                        "osSKU": {
                          "type": "string",
                          "enum": [
                            "CBLMariner",
                            "Windows2019",
                            "Windows2022"
                          ],
                          "x-ms-enum": {
                            "name": "OSSKU",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "CBLMariner",
                                "description": "Use Mariner as the OS for node images."
                              },
                              {
                                "value": "Windows2019",
                                "description": "Use Windows2019 as the OS for node images."
                              },
                              {
                                "value": "Windows2022",
                                "description": "Use Windows2022 as the OS for node images."
                              }
                            ]
                          },
                          "description": "Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows."
                        },
                        "nodeLabels": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "The node labels to be persisted across all nodes in agent pool."
                        },
                        "nodeTaints": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule."
                        },
                        "maxCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The maximum number of nodes for auto-scaling"
                        },
                        "minCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The minimum number of nodes for auto-scaling"
                        },
                        "enableAutoScaling": {
                          "type": "boolean",
                          "description": "Whether to enable auto-scaler. Default value is false",
                          "default": false
                        },
                        "maxPods": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The maximum number of pods that can run on a node."
                        },
                        "count": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Number of nodes in the agent pool. The default value is 1.",
                          "default": 1
                        },
                        "vmSize": {
                          "type": "string",
                          "description": "The VM sku size of the agent pool node VMs."
                        },
                        "kubernetesVersion": {
                          "type": "string",
                          "readOnly": true,
                          "description": "Version of Kubernetes in use by the agent pool. This is inherited from the kubernetesVersion of the provisioned cluster."
                        },
                        "name": {
                          "type": "string",
                          "description": "Unique name of the default agent pool in the context of the provisioned cluster. Default value is <clusterName>-nodepool1"
                        }
                      }
                    },
                    "x-ms-identifiers": [],
                    "description": "The agent pool properties for the provisioned cluster."
                  },
                  "cloudProviderProfile": {
                    "description": "The profile for the underlying cloud infrastructure provider for the provisioned cluster.",
                    "type": "object",
                    "properties": {
                      "infraNetworkProfile": {
                        "type": "object",
                        "description": "The profile for the infrastructure networks used by the provisioned cluster",
                        "properties": {
                          "vnetSubnetIds": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "format": "arm-id",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.AzureStackHCI/logicalNetworks"
                                  },
                                  {
                                    "type": "Microsoft.HybridContainerService/virtualNetworks"
                                  }
                                ]
                              }
                            },
                            "description": "List of ARM resource Ids (maximum 1) for the infrastructure network object e.g. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/logicalNetworks/{logicalNetworkName}"
                          }
                        }
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "The status of the latest long running operation for the provisioned cluster.",
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Pending",
                      "Creating",
                      "Deleting",
                      "Updating",
                      "Upgrading",
                      "Accepted"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "ResourceProvisioningState"
                    }
                  },
                  "status": {
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "controlPlaneStatus": {
                        "type": "array",
                        "items": {
                          "description": "The status profile of the addons and other kubernetes components",
                          "type": "object",
                          "readOnly": true,
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the addon or component"
                            },
                            "phase": {
                              "type": "string",
                              "description": "Observed phase of the addon or component on the provisioned cluster. Possible values include: 'pending', 'provisioning', 'provisioning {HelmChartInstalled}', 'provisioning {MSICertificateDownloaded}', 'provisioned', 'deleting', 'failed', 'upgrading'",
                              "enum": [
                                "pending",
                                "provisioning",
                                "provisioning {HelmChartInstalled}",
                                "provisioning {MSICertificateDownloaded}",
                                "provisioned",
                                "deleting",
                                "failed",
                                "upgrading"
                              ],
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "addonPhase"
                              }
                            },
                            "ready": {
                              "type": "boolean",
                              "description": "Indicates whether the addon or component is ready"
                            },
                            "errorMessage": {
                              "type": "string",
                              "description": "Observed error message from the addon or component"
                            }
                          }
                        },
                        "x-ms-identifiers": [],
                        "description": "The detailed status of the provisioned cluster components including addons."
                      },
                      "currentState": {
                        "description": "The current state of the provisioned cluster.",
                        "type": "string",
                        "readOnly": true,
                        "enum": [
                          "Succeeded",
                          "Failed",
                          "Canceled",
                          "Pending",
                          "Creating",
                          "Deleting",
                          "Updating",
                          "Upgrading",
                          "Accepted"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "ResourceProvisioningState"
                        }
                      },
                      "errorMessage": {
                        "type": "string",
                        "description": "Error messages during a provisioned cluster operation or steady state."
                      }
                    },
                    "description": "The observed status of the provisioned cluster."
                  },
                  "licenseProfile": {
                    "description": "The license profile of the provisioned cluster.",
                    "type": "object",
                    "properties": {
                      "azureHybridBenefit": {
                        "type": "string",
                        "description": "Indicates whether Azure Hybrid Benefit is opted in. Default value is false",
                        "enum": [
                          "True",
                          "False",
                          "NotApplicable"
                        ],
                        "default": "NotApplicable",
                        "x-ms-enum": {
                          "name": "AzureHybridBenefit",
                          "modelAsString": true
                        }
                      }
                    }
                  },
                  "autoScalerProfile": {
                    "type": "object",
                    "properties": {
                      "balance-similar-node-groups": {
                        "type": "string",
                        "title": "Detects similar node pools and balances the number of nodes between them.",
                        "description": "Valid values are 'true' and 'false'"
                      },
                      "expander": {
                        "type": "string",
                        "enum": [
                          "least-waste",
                          "most-pods",
                          "priority",
                          "random"
                        ],
                        "x-ms-enum": {
                          "name": "expander",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "least-waste",
                              "description": "Selects the node group that will have the least idle CPU (if tied, unused memory) after scale-up. This is useful when you have different classes of nodes, for example, high CPU or high memory nodes, and only want to expand those when there are pending pods that need a lot of those resources."
                            },
                            {
                              "value": "most-pods",
                              "description": "Selects the node group that would be able to schedule the most pods when scaling up. This is useful when you are using nodeSelector to make sure certain pods land on certain nodes. Note that this won't cause the autoscaler to select bigger nodes vs. smaller, as it can add multiple smaller nodes at once."
                            },
                            {
                              "value": "priority",
                              "description": "Selects the node group that has the highest priority assigned by the user. It's configuration is described in more details [here](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/expander/priority/readme.md)."
                            },
                            {
                              "value": "random",
                              "description": "Used when you don't have a particular need for the node groups to scale differently."
                            }
                          ]
                        },
                        "title": "The expander to use when scaling up",
                        "description": "If not specified, the default is 'random'. See [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders) for more information."
                      },
                      "max-empty-bulk-delete": {
                        "type": "string",
                        "title": "The maximum number of empty nodes that can be deleted at the same time. This must be a positive integer.",
                        "description": "The default is 10."
                      },
                      "max-graceful-termination-sec": {
                        "type": "string",
                        "title": "The maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node.",
                        "description": "The default is 600."
                      },
                      "max-node-provision-time": {
                        "type": "string",
                        "title": "The maximum time the autoscaler waits for a node to be provisioned.",
                        "description": "The default is '15m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                      },
                      "max-total-unready-percentage": {
                        "type": "string",
                        "title": "The maximum percentage of unready nodes in the cluster. After this percentage is exceeded, cluster autoscaler halts operations.",
                        "description": "The default is 45. The maximum is 100 and the minimum is 0."
                      },
                      "new-pod-scale-up-delay": {
                        "type": "string",
                        "title": "Ignore unscheduled pods before they're a certain age.",
                        "description": "For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they're a certain age. The default is '0s'. Values must be an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours, etc)."
                      },
                      "ok-total-unready-count": {
                        "type": "string",
                        "title": "The number of allowed unready nodes, irrespective of max-total-unready-percentage.",
                        "description": "This must be an integer. The default is 3."
                      },
                      "scan-interval": {
                        "type": "string",
                        "title": "How often cluster is reevaluated for scale up or down.",
                        "description": "The default is '10'. Values must be an integer number of seconds."
                      },
                      "scale-down-delay-after-add": {
                        "type": "string",
                        "title": "How long after scale up that scale down evaluation resumes",
                        "description": "The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                      },
                      "scale-down-delay-after-delete": {
                        "type": "string",
                        "title": "How long after node deletion that scale down evaluation resumes.",
                        "description": "The default is the scan-interval. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                      },
                      "scale-down-delay-after-failure": {
                        "type": "string",
                        "title": "How long after scale down failure that scale down evaluation resumes.",
                        "description": "The default is '3m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                      },
                      "scale-down-unneeded-time": {
                        "type": "string",
                        "title": "How long a node should be unneeded before it is eligible for scale down.",
                        "description": "The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                      },
                      "scale-down-unready-time": {
                        "type": "string",
                        "title": "How long an unready node should be unneeded before it is eligible for scale down",
                        "description": "The default is '20m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported."
                      },
                      "scale-down-utilization-threshold": {
                        "type": "string",
                        "title": "Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down.",
                        "description": "The default is '0.5'."
                      },
                      "skip-nodes-with-local-storage": {
                        "type": "string",
                        "title": "If cluster autoscaler will skip deleting nodes with pods with local storage, for example, EmptyDir or HostPath.",
                        "description": "The default is true."
                      },
                      "skip-nodes-with-system-pods": {
                        "type": "string",
                        "title": "If cluster autoscaler will skip deleting nodes with pods from kube-system (except for DaemonSet or mirror pods)",
                        "description": "The default is true."
                      }
                    },
                    "description": "Parameters to be applied to the cluster-autoscaler when auto scaling is enabled for the provisioned cluster."
                  }
                },
                "description": "Properties of the provisioned cluster."
              },
              "extendedLocation": {
                "type": "object",
                "description": "Extended location pointing to the underlying infrastructure",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The extended location type. Allowed value: 'CustomLocation'",
                    "enum": [
                      "CustomLocation"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "ExtendedLocationTypes"
                    }
                  },
                  "name": {
                    "type": "string",
                    "description": "ARM Id of the extended location."
                  }
                }
              }
            },
            "description": "The provisioned cluster resource definition."
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "x-ms-identifiers": []
    },
    "AgentPoolUpdateProfile": {
      "type": "object",
      "description": "Profile for agent pool properties that can be updated",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "Number of nodes in the agent pool. The default value is 1.",
          "default": 1
        },
        "vmSize": {
          "type": "string",
          "description": "The VM sku size of the agent pool node VMs."
        },
        "kubernetesVersion": {
          "type": "string",
          "readOnly": true,
          "description": "Version of Kubernetes in use by the agent pool. This is inherited from the kubernetesVersion of the provisioned cluster."
        }
      }
    },
    "AgentPoolProfile": {
      "type": "object",
      "description": "Profile for agent pool properties specified during creation",
      "properties": {
        "osType": {
          "type": "string",
          "description": "OSType to be used to specify OS type for the VMs. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'",
          "enum": [
            "Linux",
            "Windows"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "osType"
          },
          "default": "Linux"
        },
        "osSKU": {
          "type": "string",
          "enum": [
            "CBLMariner",
            "Windows2019",
            "Windows2022"
          ],
          "x-ms-enum": {
            "name": "OSSKU",
            "modelAsString": true,
            "values": [
              {
                "value": "CBLMariner",
                "description": "Use Mariner as the OS for node images."
              },
              {
                "value": "Windows2019",
                "description": "Use Windows2019 as the OS for node images."
              },
              {
                "value": "Windows2022",
                "description": "Use Windows2022 as the OS for node images."
              }
            ]
          },
          "description": "Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows."
        },
        "nodeLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The node labels to be persisted across all nodes in agent pool."
        },
        "nodeTaints": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule."
        },
        "maxCount": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of nodes for auto-scaling"
        },
        "minCount": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum number of nodes for auto-scaling"
        },
        "enableAutoScaling": {
          "type": "boolean",
          "description": "Whether to enable auto-scaler. Default value is false",
          "default": false
        },
        "maxPods": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of pods that can run on a node."
        }
      }
    },
    "AgentPoolName": {
      "type": "object",
      "description": "Name of the default Agent Pool",
      "properties": {
        "name": {
          "type": "string",
          "description": "Unique name of the default agent pool in the context of the provisioned cluster. Default value is <clusterName>-nodepool1"
        }
      }
    },
    "ClusterVMAccessProfile": {
      "type": "object",
      "description": "The SSH restricted access profile for the VMs in the provisioned cluster.",
      "properties": {
        "authorizedIPRanges": {
          "type": "string",
          "description": "IP Address or CIDR for SSH access to VMs in the provisioned cluster"
        }
      }
    },
    "NamedAgentPoolProfile": {
      "description": "Profile of the default agent pool along with a name parameter",
      "properties": {
        "osType": {
          "type": "string",
          "description": "OSType to be used to specify OS type for the VMs. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'",
          "enum": [
            "Linux",
            "Windows"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "osType"
          },
          "default": "Linux"
        },
        "osSKU": {
          "type": "string",
          "enum": [
            "CBLMariner",
            "Windows2019",
            "Windows2022"
          ],
          "x-ms-enum": {
            "name": "OSSKU",
            "modelAsString": true,
            "values": [
              {
                "value": "CBLMariner",
                "description": "Use Mariner as the OS for node images."
              },
              {
                "value": "Windows2019",
                "description": "Use Windows2019 as the OS for node images."
              },
              {
                "value": "Windows2022",
                "description": "Use Windows2022 as the OS for node images."
              }
            ]
          },
          "description": "Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows."
        },
        "nodeLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The node labels to be persisted across all nodes in agent pool."
        },
        "nodeTaints": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule."
        },
        "maxCount": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of nodes for auto-scaling"
        },
        "minCount": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum number of nodes for auto-scaling"
        },
        "enableAutoScaling": {
          "type": "boolean",
          "description": "Whether to enable auto-scaler. Default value is false",
          "default": false
        },
        "maxPods": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of pods that can run on a node."
        },
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "Number of nodes in the agent pool. The default value is 1.",
          "default": 1
        },
        "vmSize": {
          "type": "string",
          "description": "The VM sku size of the agent pool node VMs."
        },
        "kubernetesVersion": {
          "type": "string",
          "readOnly": true,
          "description": "Version of Kubernetes in use by the agent pool. This is inherited from the kubernetesVersion of the provisioned cluster."
        },
        "name": {
          "type": "string",
          "description": "Unique name of the default agent pool in the context of the provisioned cluster. Default value is <clusterName>-nodepool1"
        }
      }
    },
    "agentPoolProperties": {
      "description": "Properties of the agent pool resource",
      "allOf": [
        {
          "x-ms-client-flatten": true,
          "type": "object",
          "description": "Profile for agent pool properties specified during creation",
          "properties": {
            "osType": {
              "type": "string",
              "description": "OSType to be used to specify OS type for the VMs. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'",
              "enum": [
                "Linux",
                "Windows"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "osType"
              },
              "default": "Linux"
            },
            "osSKU": {
              "type": "string",
              "enum": [
                "CBLMariner",
                "Windows2019",
                "Windows2022"
              ],
              "x-ms-enum": {
                "name": "OSSKU",
                "modelAsString": true,
                "values": [
                  {
                    "value": "CBLMariner",
                    "description": "Use Mariner as the OS for node images."
                  },
                  {
                    "value": "Windows2019",
                    "description": "Use Windows2019 as the OS for node images."
                  },
                  {
                    "value": "Windows2022",
                    "description": "Use Windows2022 as the OS for node images."
                  }
                ]
              },
              "description": "Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows."
            },
            "nodeLabels": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "The node labels to be persisted across all nodes in agent pool."
            },
            "nodeTaints": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule."
            },
            "maxCount": {
              "type": "integer",
              "format": "int32",
              "description": "The maximum number of nodes for auto-scaling"
            },
            "minCount": {
              "type": "integer",
              "format": "int32",
              "description": "The minimum number of nodes for auto-scaling"
            },
            "enableAutoScaling": {
              "type": "boolean",
              "description": "Whether to enable auto-scaler. Default value is false",
              "default": false
            },
            "maxPods": {
              "type": "integer",
              "format": "int32",
              "description": "The maximum number of pods that can run on a node."
            }
          }
        },
        {
          "x-ms-client-flatten": true,
          "type": "object",
          "description": "Profile for agent pool properties that can be updated",
          "properties": {
            "count": {
              "type": "integer",
              "format": "int32",
              "description": "Number of nodes in the agent pool. The default value is 1.",
              "default": 1
            },
            "vmSize": {
              "type": "string",
              "description": "The VM sku size of the agent pool node VMs."
            },
            "kubernetesVersion": {
              "type": "string",
              "readOnly": true,
              "description": "Version of Kubernetes in use by the agent pool. This is inherited from the kubernetesVersion of the provisioned cluster."
            }
          }
        },
        {
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "type": "string",
              "description": "Provisioning state of the resource",
              "readOnly": true,
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Pending",
                "Creating",
                "Deleting",
                "Updating",
                "Upgrading",
                "Accepted"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ResourceProvisioningState"
              }
            },
            "status": {
              "type": "object",
              "properties": {
                "currentState": {
                  "type": "string",
                  "description": "Provisioning state of the resource",
                  "readOnly": true,
                  "enum": [
                    "Succeeded",
                    "Failed",
                    "Canceled",
                    "Pending",
                    "Creating",
                    "Deleting",
                    "Updating",
                    "Upgrading",
                    "Accepted"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "ResourceProvisioningState"
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "description": "Error messages during an agent pool operation or steady state."
                },
                "readyReplicas": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Profile for agent pool properties that can be updated",
                    "properties": {
                      "count": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of nodes in the agent pool. The default value is 1.",
                        "default": 1
                      },
                      "vmSize": {
                        "type": "string",
                        "description": "The VM sku size of the agent pool node VMs."
                      },
                      "kubernetesVersion": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Version of Kubernetes in use by the agent pool. This is inherited from the kubernetesVersion of the provisioned cluster."
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              },
              "description": "The observed status of the agent pool."
            }
          },
          "description": "The agentPool resource provisioning status definition"
        }
      ]
    },
    "agentPoolProvisioningStatus": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the resource",
          "readOnly": true,
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Pending",
            "Creating",
            "Deleting",
            "Updating",
            "Upgrading",
            "Accepted"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ResourceProvisioningState"
          }
        },
        "status": {
          "type": "object",
          "properties": {
            "currentState": {
              "type": "string",
              "description": "Provisioning state of the resource",
              "readOnly": true,
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Pending",
                "Creating",
                "Deleting",
                "Updating",
                "Upgrading",
                "Accepted"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ResourceProvisioningState"
              }
            },
            "errorMessage": {
              "type": "string",
              "description": "Error messages during an agent pool operation or steady state."
            },
            "readyReplicas": {
              "type": "array",
              "items": {
                "type": "object",
                "description": "Profile for agent pool properties that can be updated",
                "properties": {
                  "count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of nodes in the agent pool. The default value is 1.",
                    "default": 1
                  },
                  "vmSize": {
                    "type": "string",
                    "description": "The VM sku size of the agent pool node VMs."
                  },
                  "kubernetesVersion": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Version of Kubernetes in use by the agent pool. This is inherited from the kubernetesVersion of the provisioned cluster."
                  }
                }
              },
              "x-ms-identifiers": []
            }
          },
          "description": "The observed status of the agent pool."
        }
      },
      "description": "The agentPool resource provisioning status definition"
    },
    "agentPool": {
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of the agent pool resource",
          "properties": {
            "osType": {
              "type": "string",
              "description": "OSType to be used to specify OS type for the VMs. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'",
              "enum": [
                "Linux",
                "Windows"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "osType"
              },
              "default": "Linux"
            },
            "osSKU": {
              "type": "string",
              "enum": [
                "CBLMariner",
                "Windows2019",
                "Windows2022"
              ],
              "x-ms-enum": {
                "name": "OSSKU",
                "modelAsString": true,
                "values": [
                  {
                    "value": "CBLMariner",
                    "description": "Use Mariner as the OS for node images."
                  },
                  {
                    "value": "Windows2019",
                    "description": "Use Windows2019 as the OS for node images."
                  },
                  {
                    "value": "Windows2022",
                    "description": "Use Windows2022 as the OS for node images."
                  }
                ]
              },
              "description": "Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows."
            },
            "nodeLabels": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "The node labels to be persisted across all nodes in agent pool."
            },
            "nodeTaints": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule."
            },
            "maxCount": {
              "type": "integer",
              "format": "int32",
              "description": "The maximum number of nodes for auto-scaling"
            },
            "minCount": {
              "type": "integer",
              "format": "int32",
              "description": "The minimum number of nodes for auto-scaling"
            },
            "enableAutoScaling": {
              "type": "boolean",
              "description": "Whether to enable auto-scaler. Default value is false",
              "default": false
            },
            "maxPods": {
              "type": "integer",
              "format": "int32",
              "description": "The maximum number of pods that can run on a node."
            },
            "count": {
              "type": "integer",
              "format": "int32",
              "description": "Number of nodes in the agent pool. The default value is 1.",
              "default": 1
            },
            "vmSize": {
              "type": "string",
              "description": "The VM sku size of the agent pool node VMs."
            },
            "kubernetesVersion": {
              "type": "string",
              "readOnly": true,
              "description": "Version of Kubernetes in use by the agent pool. This is inherited from the kubernetesVersion of the provisioned cluster."
            },
            "provisioningState": {
              "type": "string",
              "description": "Provisioning state of the resource",
              "readOnly": true,
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Pending",
                "Creating",
                "Deleting",
                "Updating",
                "Upgrading",
                "Accepted"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ResourceProvisioningState"
              }
            },
            "status": {
              "type": "object",
              "properties": {
                "currentState": {
                  "type": "string",
                  "description": "Provisioning state of the resource",
                  "readOnly": true,
                  "enum": [
                    "Succeeded",
                    "Failed",
                    "Canceled",
                    "Pending",
                    "Creating",
                    "Deleting",
                    "Updating",
                    "Upgrading",
                    "Accepted"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "ResourceProvisioningState"
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "description": "Error messages during an agent pool operation or steady state."
                },
                "readyReplicas": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Profile for agent pool properties that can be updated",
                    "properties": {
                      "count": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of nodes in the agent pool. The default value is 1.",
                        "default": 1
                      },
                      "vmSize": {
                        "type": "string",
                        "description": "The VM sku size of the agent pool node VMs."
                      },
                      "kubernetesVersion": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Version of Kubernetes in use by the agent pool. This is inherited from the kubernetesVersion of the provisioned cluster."
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              },
              "description": "The observed status of the agent pool."
            }
          }
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        },
        "extendedLocation": {
          "type": "object",
          "description": "Extended location pointing to the underlying infrastructure",
          "properties": {
            "type": {
              "type": "string",
              "description": "The extended location type. Allowed value: 'CustomLocation'",
              "enum": [
                "CustomLocation"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ExtendedLocationTypes"
              }
            },
            "name": {
              "type": "string",
              "description": "ARM Id of the extended location."
            }
          }
        }
      },
      "description": "The agentPool resource definition"
    },
    "agentPoolListResult": {
      "type": "object",
      "description": "List of all agent pool resources associated with the provisioned cluster.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "x-ms-azure-resource": true,
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Properties of the agent pool resource",
                "properties": {
                  "osType": {
                    "type": "string",
                    "description": "OSType to be used to specify OS type for the VMs. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'",
                    "enum": [
                      "Linux",
                      "Windows"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "osType"
                    },
                    "default": "Linux"
                  },
                  "osSKU": {
                    "type": "string",
                    "enum": [
                      "CBLMariner",
                      "Windows2019",
                      "Windows2022"
                    ],
                    "x-ms-enum": {
                      "name": "OSSKU",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "CBLMariner",
                          "description": "Use Mariner as the OS for node images."
                        },
                        {
                          "value": "Windows2019",
                          "description": "Use Windows2019 as the OS for node images."
                        },
                        {
                          "value": "Windows2022",
                          "description": "Use Windows2022 as the OS for node images."
                        }
                      ]
                    },
                    "description": "Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows."
                  },
                  "nodeLabels": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "The node labels to be persisted across all nodes in agent pool."
                  },
                  "nodeTaints": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule."
                  },
                  "maxCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The maximum number of nodes for auto-scaling"
                  },
                  "minCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The minimum number of nodes for auto-scaling"
                  },
                  "enableAutoScaling": {
                    "type": "boolean",
                    "description": "Whether to enable auto-scaler. Default value is false",
                    "default": false
                  },
                  "maxPods": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The maximum number of pods that can run on a node."
                  },
                  "count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of nodes in the agent pool. The default value is 1.",
                    "default": 1
                  },
                  "vmSize": {
                    "type": "string",
                    "description": "The VM sku size of the agent pool node VMs."
                  },
                  "kubernetesVersion": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Version of Kubernetes in use by the agent pool. This is inherited from the kubernetesVersion of the provisioned cluster."
                  },
                  "provisioningState": {
                    "type": "string",
                    "description": "Provisioning state of the resource",
                    "readOnly": true,
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Pending",
                      "Creating",
                      "Deleting",
                      "Updating",
                      "Upgrading",
                      "Accepted"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "ResourceProvisioningState"
                    }
                  },
                  "status": {
                    "type": "object",
                    "properties": {
                      "currentState": {
                        "type": "string",
                        "description": "Provisioning state of the resource",
                        "readOnly": true,
                        "enum": [
                          "Succeeded",
                          "Failed",
                          "Canceled",
                          "Pending",
                          "Creating",
                          "Deleting",
                          "Updating",
                          "Upgrading",
                          "Accepted"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "ResourceProvisioningState"
                        }
                      },
                      "errorMessage": {
                        "type": "string",
                        "description": "Error messages during an agent pool operation or steady state."
                      },
                      "readyReplicas": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Profile for agent pool properties that can be updated",
                          "properties": {
                            "count": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Number of nodes in the agent pool. The default value is 1.",
                              "default": 1
                            },
                            "vmSize": {
                              "type": "string",
                              "description": "The VM sku size of the agent pool node VMs."
                            },
                            "kubernetesVersion": {
                              "type": "string",
                              "readOnly": true,
                              "description": "Version of Kubernetes in use by the agent pool. This is inherited from the kubernetesVersion of the provisioned cluster."
                            }
                          }
                        },
                        "x-ms-identifiers": []
                      }
                    },
                    "description": "The observed status of the agent pool."
                  }
                }
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Resource tags"
              },
              "extendedLocation": {
                "type": "object",
                "description": "Extended location pointing to the underlying infrastructure",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The extended location type. Allowed value: 'CustomLocation'",
                    "enum": [
                      "CustomLocation"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "ExtendedLocationTypes"
                    }
                  },
                  "name": {
                    "type": "string",
                    "description": "ARM Id of the extended location."
                  }
                }
              }
            },
            "description": "The agentPool resource definition"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "ProvisionedClusterLicenseProfile": {
      "type": "object",
      "properties": {
        "azureHybridBenefit": {
          "type": "string",
          "description": "Indicates whether Azure Hybrid Benefit is opted in. Default value is false",
          "enum": [
            "True",
            "False",
            "NotApplicable"
          ],
          "default": "NotApplicable",
          "x-ms-enum": {
            "name": "AzureHybridBenefit",
            "modelAsString": true
          }
        }
      },
      "description": "The license profile of the provisioned cluster."
    },
    "LinuxProfile": {
      "type": "object",
      "description": "The profile for Linux VMs in the provisioned cluster.",
      "properties": {
        "linuxProfile": {
          "description": "Profile for Linux VMs in the container service cluster.",
          "type": "object",
          "properties": {
            "ssh": {
              "type": "object",
              "properties": {
                "publicKeys": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "keyData": {
                        "type": "string",
                        "description": "Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers."
                      }
                    }
                  },
                  "x-ms-identifiers": [],
                  "description": "The list of SSH public keys used to authenticate with VMs. A maximum of 1 key may be specified."
                }
              },
              "description": "SSH configuration for VMs of the provisioned cluster."
            }
          }
        }
      }
    },
    "LinuxProfileProperties": {
      "type": "object",
      "properties": {
        "ssh": {
          "type": "object",
          "properties": {
            "publicKeys": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "keyData": {
                    "type": "string",
                    "description": "Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers."
                  }
                }
              },
              "x-ms-identifiers": [],
              "description": "The list of SSH public keys used to authenticate with VMs. A maximum of 1 key may be specified."
            }
          },
          "description": "SSH configuration for VMs of the provisioned cluster."
        }
      },
      "description": "SSH profile for control plane and nodepool VMs of the provisioned cluster."
    },
    "NetworkProfile": {
      "type": "object",
      "properties": {
        "loadBalancerProfile": {
          "type": "object",
          "description": "Profile of the HA Proxy load balancer.",
          "properties": {
            "count": {
              "type": "integer",
              "format": "int32",
              "description": "Number of HA Proxy load balancer VMs. The default value is 0.",
              "default": 0
            }
          }
        },
        "networkPolicy": {
          "type": "string",
          "description": "Network policy used for building Kubernetes network. Possible values include: 'calico'.",
          "enum": [
            "calico"
          ],
          "default": "calico",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "networkPolicy"
          }
        },
        "podCidr": {
          "type": "string",
          "description": "A CIDR notation IP Address range from which to assign pod IPs."
        }
      },
      "description": "The network configuration profile for the provisioned cluster."
    },
    "StorageProfile": {
      "type": "object",
      "properties": {
        "smbCsiDriver": {
          "description": "SMB CSI Driver settings for the storage profile.",
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": true,
              "description": "Indicates whether to enable SMB CSI Driver. The default value is true."
            }
          }
        },
        "nfsCsiDriver": {
          "description": "NFS CSI Driver settings for the storage profile.",
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": true,
              "description": "Indicates whether to enable NFS CSI Driver. The default value is true."
            }
          }
        }
      },
      "description": "The storage configuration profile for the provisioned cluster."
    },
    "StorageProfileNfsCSIDriver": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": true,
          "description": "Indicates whether to enable NFS CSI Driver. The default value is true."
        }
      },
      "description": "NFS CSI Driver settings for the storage profile."
    },
    "StorageProfileSmbCSIDriver": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": true,
          "description": "Indicates whether to enable SMB CSI Driver. The default value is true."
        }
      },
      "description": "SMB CSI Driver settings for the storage profile."
    },
    "ControlPlaneProfile": {
      "type": "object",
      "description": "The properties of the control plane nodes of the provisioned cluster",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "Number of control plane nodes. The default value is 1, and the count should be an odd number",
          "default": 1
        },
        "vmSize": {
          "type": "string",
          "description": "VM sku size of the control plane nodes"
        },
        "controlPlaneEndpoint": {
          "type": "object",
          "description": "IP Address of the Kubernetes API server",
          "properties": {
            "hostIP": {
              "type": "string",
              "description": "IP address of the Kubernetes API server"
            }
          }
        }
      }
    },
    "CloudProviderProfile": {
      "type": "object",
      "description": "The profile for the underlying cloud infrastructure provider for the provisioned cluster.",
      "properties": {
        "infraNetworkProfile": {
          "type": "object",
          "description": "The profile for the infrastructure networks used by the provisioned cluster",
          "properties": {
            "vnetSubnetIds": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "arm-id",
                "x-ms-arm-id-details": {
                  "allowedResources": [
                    {
                      "type": "Microsoft.AzureStackHCI/logicalNetworks"
                    },
                    {
                      "type": "Microsoft.HybridContainerService/virtualNetworks"
                    }
                  ]
                }
              },
              "description": "List of ARM resource Ids (maximum 1) for the infrastructure network object e.g. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/logicalNetworks/{logicalNetworkName}"
            }
          }
        }
      }
    },
    "AddonStatusProfile": {
      "description": "The status profile of the addons and other kubernetes components",
      "type": "object",
      "readOnly": true,
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the addon or component"
        },
        "phase": {
          "type": "string",
          "description": "Observed phase of the addon or component on the provisioned cluster. Possible values include: 'pending', 'provisioning', 'provisioning {HelmChartInstalled}', 'provisioning {MSICertificateDownloaded}', 'provisioned', 'deleting', 'failed', 'upgrading'",
          "enum": [
            "pending",
            "provisioning",
            "provisioning {HelmChartInstalled}",
            "provisioning {MSICertificateDownloaded}",
            "provisioned",
            "deleting",
            "failed",
            "upgrading"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "addonPhase"
          }
        },
        "ready": {
          "type": "boolean",
          "description": "Indicates whether the addon or component is ready"
        },
        "errorMessage": {
          "type": "string",
          "description": "Observed error message from the addon or component"
        }
      }
    },
    "hybridIdentityMetadata": {
      "description": "Defines the hybridIdentityMetadata.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          },
          "readOnly": true
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "type": "object",
          "properties": {
            "resourceUid": {
              "description": "Unique id of the parent provisioned cluster resource.",
              "type": "string"
            },
            "publicKey": {
              "description": "Onboarding public key for provisioning the Managed identity for the connected cluster.",
              "type": "string"
            },
            "provisioningState": {
              "type": "string",
              "description": "Provisioning state of the resource",
              "readOnly": true,
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Pending",
                "Creating",
                "Deleting",
                "Updating",
                "Upgrading",
                "Accepted"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ResourceProvisioningState"
              }
            }
          }
        }
      },
      "x-ms-azure-resource": true
    },
    "hybridIdentityMetadataProperties": {
      "description": "Defines the resource properties for the hybrid identity metadata.",
      "type": "object",
      "properties": {
        "resourceUid": {
          "description": "Unique id of the parent provisioned cluster resource.",
          "type": "string"
        },
        "publicKey": {
          "description": "Onboarding public key for provisioning the Managed identity for the connected cluster.",
          "type": "string"
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the resource",
          "readOnly": true,
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Pending",
            "Creating",
            "Deleting",
            "Updating",
            "Upgrading",
            "Accepted"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ResourceProvisioningState"
          }
        }
      }
    },
    "hybridIdentityMetadataList": {
      "description": "List of hybridIdentityMetadata.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "Url to follow for getting next page of hybridIdentityMetadata.",
          "type": "string"
        },
        "value": {
          "description": "Array of hybridIdentityMetadata",
          "type": "array",
          "items": {
            "description": "Defines the hybridIdentityMetadata.",
            "required": [
              "properties"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                },
                "readOnly": true
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Resource properties.",
                "type": "object",
                "properties": {
                  "resourceUid": {
                    "description": "Unique id of the parent provisioned cluster resource.",
                    "type": "string"
                  },
                  "publicKey": {
                    "description": "Onboarding public key for provisioning the Managed identity for the connected cluster.",
                    "type": "string"
                  },
                  "provisioningState": {
                    "type": "string",
                    "description": "Provisioning state of the resource",
                    "readOnly": true,
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Pending",
                      "Creating",
                      "Deleting",
                      "Updating",
                      "Upgrading",
                      "Accepted"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "ResourceProvisioningState"
                    }
                  }
                }
              }
            },
            "x-ms-azure-resource": true
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "KubernetesVersionProfileList": {
      "type": "object",
      "description": "List of supported kubernetes versions.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "The supported kubernetes versions.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "extendedLocation": {
                "type": "object",
                "description": "Extended location pointing to the underlying infrastructure",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The extended location type. Allowed value: 'CustomLocation'",
                    "enum": [
                      "CustomLocation"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "ExtendedLocationTypes"
                    }
                  },
                  "name": {
                    "type": "string",
                    "description": "ARM Id of the extended location."
                  }
                }
              },
              "properties": {
                "type": "object",
                "readOnly": true,
                "properties": {
                  "provisioningState": {
                    "type": "string",
                    "description": "Provisioning state of the resource",
                    "readOnly": true,
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Pending",
                      "Creating",
                      "Deleting",
                      "Updating",
                      "Upgrading",
                      "Accepted"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "ResourceProvisioningState"
                    }
                  },
                  "values": {
                    "type": "array",
                    "description": "List of supported Kubernetes versions",
                    "items": {
                      "type": "object",
                      "description": "Kubernetes version profile for given major.minor release",
                      "properties": {
                        "version": {
                          "type": "string",
                          "description": "major.minor version of Kubernetes release",
                          "readOnly": true
                        },
                        "isPreview": {
                          "type": "boolean",
                          "description": "Whether this version is in preview mode.",
                          "readOnly": true
                        },
                        "patchVersions": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "description": "Kubernetes Patch Version profile",
                            "properties": {
                              "readiness": {
                                "type": "array",
                                "description": "Indicates whether the kubernetes version image is ready or not",
                                "x-ms-identifiers": [],
                                "items": {
                                  "type": "object",
                                  "description": "Indicates whether the kubernetes version image is ready or not",
                                  "properties": {
                                    "osType": {
                                      "type": "string",
                                      "description": "The particular KubernetesVersion Image OS Type (Linux, Windows)",
                                      "readOnly": true,
                                      "enum": [
                                        "Windows",
                                        "Linux"
                                      ],
                                      "default": "Linux",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "osType"
                                      }
                                    },
                                    "osSku": {
                                      "type": "string",
                                      "enum": [
                                        "CBLMariner",
                                        "Windows2019",
                                        "Windows2022"
                                      ],
                                      "x-ms-enum": {
                                        "name": "OSSKU",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "value": "CBLMariner",
                                            "description": "Use Mariner as the OS for node images."
                                          },
                                          {
                                            "value": "Windows2019",
                                            "description": "Use Windows2019 as the OS for node images."
                                          },
                                          {
                                            "value": "Windows2022",
                                            "description": "Use Windows2022 as the OS for node images."
                                          }
                                        ]
                                      },
                                      "description": "Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows."
                                    },
                                    "ready": {
                                      "type": "boolean",
                                      "description": "Whether the kubernetes version image is ready or not",
                                      "readOnly": true
                                    },
                                    "errorMessage": {
                                      "type": "string",
                                      "description": "The error message for version not being ready",
                                      "readOnly": true
                                    }
                                  }
                                }
                              },
                              "upgrades": {
                                "type": "array",
                                "description": "Possible upgrade paths for given patch version",
                                "x-ms-identifiers": [],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "description": "Patch versions of a Kubernetes release",
                          "readOnly": true
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "x-ms-identifiers": []
    },
    "KubernetesVersionProfile": {
      "type": "object",
      "description": "The supported kubernetes versions.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "extendedLocation": {
          "type": "object",
          "description": "Extended location pointing to the underlying infrastructure",
          "properties": {
            "type": {
              "type": "string",
              "description": "The extended location type. Allowed value: 'CustomLocation'",
              "enum": [
                "CustomLocation"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ExtendedLocationTypes"
              }
            },
            "name": {
              "type": "string",
              "description": "ARM Id of the extended location."
            }
          }
        },
        "properties": {
          "type": "object",
          "readOnly": true,
          "properties": {
            "provisioningState": {
              "type": "string",
              "description": "Provisioning state of the resource",
              "readOnly": true,
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Pending",
                "Creating",
                "Deleting",
                "Updating",
                "Upgrading",
                "Accepted"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ResourceProvisioningState"
              }
            },
            "values": {
              "type": "array",
              "description": "List of supported Kubernetes versions",
              "items": {
                "type": "object",
                "description": "Kubernetes version profile for given major.minor release",
                "properties": {
                  "version": {
                    "type": "string",
                    "description": "major.minor version of Kubernetes release",
                    "readOnly": true
                  },
                  "isPreview": {
                    "type": "boolean",
                    "description": "Whether this version is in preview mode.",
                    "readOnly": true
                  },
                  "patchVersions": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "description": "Kubernetes Patch Version profile",
                      "properties": {
                        "readiness": {
                          "type": "array",
                          "description": "Indicates whether the kubernetes version image is ready or not",
                          "x-ms-identifiers": [],
                          "items": {
                            "type": "object",
                            "description": "Indicates whether the kubernetes version image is ready or not",
                            "properties": {
                              "osType": {
                                "type": "string",
                                "description": "The particular KubernetesVersion Image OS Type (Linux, Windows)",
                                "readOnly": true,
                                "enum": [
                                  "Windows",
                                  "Linux"
                                ],
                                "default": "Linux",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "osType"
                                }
                              },
                              "osSku": {
                                "type": "string",
                                "enum": [
                                  "CBLMariner",
                                  "Windows2019",
                                  "Windows2022"
                                ],
                                "x-ms-enum": {
                                  "name": "OSSKU",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "CBLMariner",
                                      "description": "Use Mariner as the OS for node images."
                                    },
                                    {
                                      "value": "Windows2019",
                                      "description": "Use Windows2019 as the OS for node images."
                                    },
                                    {
                                      "value": "Windows2022",
                                      "description": "Use Windows2022 as the OS for node images."
                                    }
                                  ]
                                },
                                "description": "Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows."
                              },
                              "ready": {
                                "type": "boolean",
                                "description": "Whether the kubernetes version image is ready or not",
                                "readOnly": true
                              },
                              "errorMessage": {
                                "type": "string",
                                "description": "The error message for version not being ready",
                                "readOnly": true
                              }
                            }
                          }
                        },
                        "upgrades": {
                          "type": "array",
                          "description": "Possible upgrade paths for given patch version",
                          "x-ms-identifiers": [],
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "description": "Patch versions of a Kubernetes release",
                    "readOnly": true
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        }
      }
    },
    "KubernetesVersionProperties": {
      "type": "object",
      "description": "Kubernetes version profile for given major.minor release",
      "properties": {
        "version": {
          "type": "string",
          "description": "major.minor version of Kubernetes release",
          "readOnly": true
        },
        "isPreview": {
          "type": "boolean",
          "description": "Whether this version is in preview mode.",
          "readOnly": true
        },
        "patchVersions": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "description": "Kubernetes Patch Version profile",
            "properties": {
              "readiness": {
                "type": "array",
                "description": "Indicates whether the kubernetes version image is ready or not",
                "x-ms-identifiers": [],
                "items": {
                  "type": "object",
                  "description": "Indicates whether the kubernetes version image is ready or not",
                  "properties": {
                    "osType": {
                      "type": "string",
                      "description": "The particular KubernetesVersion Image OS Type (Linux, Windows)",
                      "readOnly": true,
                      "enum": [
                        "Windows",
                        "Linux"
                      ],
                      "default": "Linux",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "osType"
                      }
                    },
                    "osSku": {
                      "type": "string",
                      "enum": [
                        "CBLMariner",
                        "Windows2019",
                        "Windows2022"
                      ],
                      "x-ms-enum": {
                        "name": "OSSKU",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "CBLMariner",
                            "description": "Use Mariner as the OS for node images."
                          },
                          {
                            "value": "Windows2019",
                            "description": "Use Windows2019 as the OS for node images."
                          },
                          {
                            "value": "Windows2022",
                            "description": "Use Windows2022 as the OS for node images."
                          }
                        ]
                      },
                      "description": "Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows."
                    },
                    "ready": {
                      "type": "boolean",
                      "description": "Whether the kubernetes version image is ready or not",
                      "readOnly": true
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "The error message for version not being ready",
                      "readOnly": true
                    }
                  }
                }
              },
              "upgrades": {
                "type": "array",
                "description": "Possible upgrade paths for given patch version",
                "x-ms-identifiers": [],
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "description": "Patch versions of a Kubernetes release",
          "readOnly": true
        }
      }
    },
    "KubernetesPatchVersions": {
      "type": "object",
      "description": "Kubernetes Patch Version profile",
      "properties": {
        "readiness": {
          "type": "array",
          "description": "Indicates whether the kubernetes version image is ready or not",
          "x-ms-identifiers": [],
          "items": {
            "type": "object",
            "description": "Indicates whether the kubernetes version image is ready or not",
            "properties": {
              "osType": {
                "type": "string",
                "description": "The particular KubernetesVersion Image OS Type (Linux, Windows)",
                "readOnly": true,
                "enum": [
                  "Windows",
                  "Linux"
                ],
                "default": "Linux",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "osType"
                }
              },
              "osSku": {
                "type": "string",
                "enum": [
                  "CBLMariner",
                  "Windows2019",
                  "Windows2022"
                ],
                "x-ms-enum": {
                  "name": "OSSKU",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "CBLMariner",
                      "description": "Use Mariner as the OS for node images."
                    },
                    {
                      "value": "Windows2019",
                      "description": "Use Windows2019 as the OS for node images."
                    },
                    {
                      "value": "Windows2022",
                      "description": "Use Windows2022 as the OS for node images."
                    }
                  ]
                },
                "description": "Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows."
              },
              "ready": {
                "type": "boolean",
                "description": "Whether the kubernetes version image is ready or not",
                "readOnly": true
              },
              "errorMessage": {
                "type": "string",
                "description": "The error message for version not being ready",
                "readOnly": true
              }
            }
          }
        },
        "upgrades": {
          "type": "array",
          "description": "Possible upgrade paths for given patch version",
          "x-ms-identifiers": [],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "KubernetesVersionReadiness": {
      "type": "object",
      "description": "Indicates whether the kubernetes version image is ready or not",
      "properties": {
        "osType": {
          "type": "string",
          "description": "The particular KubernetesVersion Image OS Type (Linux, Windows)",
          "readOnly": true,
          "enum": [
            "Windows",
            "Linux"
          ],
          "default": "Linux",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "osType"
          }
        },
        "osSku": {
          "type": "string",
          "enum": [
            "CBLMariner",
            "Windows2019",
            "Windows2022"
          ],
          "x-ms-enum": {
            "name": "OSSKU",
            "modelAsString": true,
            "values": [
              {
                "value": "CBLMariner",
                "description": "Use Mariner as the OS for node images."
              },
              {
                "value": "Windows2019",
                "description": "Use Windows2019 as the OS for node images."
              },
              {
                "value": "Windows2022",
                "description": "Use Windows2022 as the OS for node images."
              }
            ]
          },
          "description": "Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows."
        },
        "ready": {
          "type": "boolean",
          "description": "Whether the kubernetes version image is ready or not",
          "readOnly": true
        },
        "errorMessage": {
          "type": "string",
          "description": "The error message for version not being ready",
          "readOnly": true
        }
      }
    },
    "VmSkuProfileList": {
      "type": "object",
      "description": "The list of supported VM SKUs.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "The list of supported VM SKUs.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "extendedLocation": {
                "type": "object",
                "description": "Extended location pointing to the underlying infrastructure",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The extended location type. Allowed value: 'CustomLocation'",
                    "enum": [
                      "CustomLocation"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "ExtendedLocationTypes"
                    }
                  },
                  "name": {
                    "type": "string",
                    "description": "ARM Id of the extended location."
                  }
                }
              },
              "properties": {
                "type": "object",
                "readOnly": true,
                "properties": {
                  "provisioningState": {
                    "type": "string",
                    "description": "Provisioning state of the resource",
                    "readOnly": true,
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Pending",
                      "Creating",
                      "Deleting",
                      "Updating",
                      "Upgrading",
                      "Accepted"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "ResourceProvisioningState"
                    }
                  },
                  "values": {
                    "type": "array",
                    "description": "List of supported VM SKUs.",
                    "items": {
                      "type": "object",
                      "description": "The profile for supported VM SKUs",
                      "readOnly": true,
                      "properties": {
                        "resourceType": {
                          "type": "string",
                          "description": "The type of resource the SKU applies to.",
                          "readOnly": true
                        },
                        "capabilities": {
                          "type": "array",
                          "readOnly": true,
                          "description": "The list of name-value pairs to describe VM SKU capabilities like MemoryGB, vCPUs, etc.",
                          "items": {
                            "type": "object",
                            "description": "Describes the VM SKU capabilities like MemoryGB, vCPUs, etc.",
                            "properties": {
                              "name": {
                                "type": "string",
                                "readOnly": true,
                                "description": "Name of the VM SKU capability"
                              },
                              "value": {
                                "type": "string",
                                "readOnly": true,
                                "description": "Value of the VM SKU capability"
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        },
                        "name": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The name of the VM SKU"
                        },
                        "tier": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The tier of the VM SKU"
                        },
                        "size": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The size of the VM SKU"
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "x-ms-identifiers": []
    },
    "VmSkuProfile": {
      "type": "object",
      "description": "The list of supported VM SKUs.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "extendedLocation": {
          "type": "object",
          "description": "Extended location pointing to the underlying infrastructure",
          "properties": {
            "type": {
              "type": "string",
              "description": "The extended location type. Allowed value: 'CustomLocation'",
              "enum": [
                "CustomLocation"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ExtendedLocationTypes"
              }
            },
            "name": {
              "type": "string",
              "description": "ARM Id of the extended location."
            }
          }
        },
        "properties": {
          "type": "object",
          "readOnly": true,
          "properties": {
            "provisioningState": {
              "type": "string",
              "description": "Provisioning state of the resource",
              "readOnly": true,
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Pending",
                "Creating",
                "Deleting",
                "Updating",
                "Upgrading",
                "Accepted"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ResourceProvisioningState"
              }
            },
            "values": {
              "type": "array",
              "description": "List of supported VM SKUs.",
              "items": {
                "type": "object",
                "description": "The profile for supported VM SKUs",
                "readOnly": true,
                "properties": {
                  "resourceType": {
                    "type": "string",
                    "description": "The type of resource the SKU applies to.",
                    "readOnly": true
                  },
                  "capabilities": {
                    "type": "array",
                    "readOnly": true,
                    "description": "The list of name-value pairs to describe VM SKU capabilities like MemoryGB, vCPUs, etc.",
                    "items": {
                      "type": "object",
                      "description": "Describes the VM SKU capabilities like MemoryGB, vCPUs, etc.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "readOnly": true,
                          "description": "Name of the VM SKU capability"
                        },
                        "value": {
                          "type": "string",
                          "readOnly": true,
                          "description": "Value of the VM SKU capability"
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "name": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The name of the VM SKU"
                  },
                  "tier": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The tier of the VM SKU"
                  },
                  "size": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The size of the VM SKU"
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        }
      }
    },
    "VmSkuProperties": {
      "type": "object",
      "description": "The profile for supported VM SKUs",
      "readOnly": true,
      "properties": {
        "resourceType": {
          "type": "string",
          "description": "The type of resource the SKU applies to.",
          "readOnly": true
        },
        "capabilities": {
          "type": "array",
          "readOnly": true,
          "description": "The list of name-value pairs to describe VM SKU capabilities like MemoryGB, vCPUs, etc.",
          "items": {
            "type": "object",
            "description": "Describes the VM SKU capabilities like MemoryGB, vCPUs, etc.",
            "properties": {
              "name": {
                "type": "string",
                "readOnly": true,
                "description": "Name of the VM SKU capability"
              },
              "value": {
                "type": "string",
                "readOnly": true,
                "description": "Value of the VM SKU capability"
              }
            }
          },
          "x-ms-identifiers": []
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the VM SKU"
        },
        "tier": {
          "type": "string",
          "readOnly": true,
          "description": "The tier of the VM SKU"
        },
        "size": {
          "type": "string",
          "readOnly": true,
          "description": "The size of the VM SKU"
        }
      }
    },
    "VmSkuCapabilities": {
      "type": "object",
      "description": "Describes the VM SKU capabilities like MemoryGB, vCPUs, etc.",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Name of the VM SKU capability"
        },
        "value": {
          "type": "string",
          "readOnly": true,
          "description": "Value of the VM SKU capability"
        }
      }
    },
    "ExtendedLocation": {
      "type": "object",
      "description": "Extended location pointing to the underlying infrastructure",
      "properties": {
        "type": {
          "type": "string",
          "description": "The extended location type. Allowed value: 'CustomLocation'",
          "enum": [
            "CustomLocation"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ExtendedLocationTypes"
          }
        },
        "name": {
          "type": "string",
          "description": "ARM Id of the extended location."
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "Provisioning state of the resource",
      "readOnly": true,
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Pending",
        "Creating",
        "Deleting",
        "Updating",
        "Upgrading",
        "Accepted"
      ],
      "x-ms-enum": {
        "modelAsString": true,
        "name": "ResourceProvisioningState"
      }
    },
    "ProvisionedClusterPoolUpgradeProfile": {
      "type": "object",
      "properties": {
        "kubernetesVersion": {
          "type": "string",
          "readOnly": true,
          "description": "The Kubernetes version (major.minor.patch)."
        },
        "osType": {
          "type": "string",
          "description": "OSType to be used to specify OS type for the VMs. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'",
          "enum": [
            "Linux",
            "Windows"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "osType"
          },
          "default": "Linux",
          "readOnly": true
        },
        "upgrades": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "kubernetesVersion": {
                "type": "string",
                "readOnly": true,
                "description": "The Kubernetes version (major.minor.patch)."
              },
              "isPreview": {
                "type": "boolean",
                "readOnly": true,
                "description": "Whether the Kubernetes version is currently in preview."
              }
            },
            "description": "The upgrade properties."
          },
          "x-ms-identifiers": [],
          "description": "List of available kubernetes versions for upgrade."
        }
      },
      "description": "The list of available kubernetes versions for upgrade."
    },
    "ProvisionedClusterPoolUpgradeProfileProperties": {
      "type": "object",
      "properties": {
        "kubernetesVersion": {
          "type": "string",
          "readOnly": true,
          "description": "The Kubernetes version (major.minor.patch)."
        },
        "isPreview": {
          "type": "boolean",
          "readOnly": true,
          "description": "Whether the Kubernetes version is currently in preview."
        }
      },
      "description": "The upgrade properties."
    },
    "ProvisionedClusterUpgradeProfileProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the resource",
          "readOnly": true,
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Pending",
            "Creating",
            "Deleting",
            "Updating",
            "Upgrading",
            "Accepted"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ResourceProvisioningState"
          }
        },
        "controlPlaneProfile": {
          "description": "The list of available kubernetes version upgrades for the control plane.",
          "type": "object",
          "properties": {
            "kubernetesVersion": {
              "type": "string",
              "readOnly": true,
              "description": "The Kubernetes version (major.minor.patch)."
            },
            "osType": {
              "type": "string",
              "description": "OSType to be used to specify OS type for the VMs. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'",
              "enum": [
                "Linux",
                "Windows"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "osType"
              },
              "default": "Linux",
              "readOnly": true
            },
            "upgrades": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "kubernetesVersion": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The Kubernetes version (major.minor.patch)."
                  },
                  "isPreview": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Whether the Kubernetes version is currently in preview."
                  }
                },
                "description": "The upgrade properties."
              },
              "x-ms-identifiers": [],
              "description": "List of available kubernetes versions for upgrade."
            }
          }
        }
      },
      "required": [
        "controlPlaneProfile"
      ],
      "description": "Control plane and agent pool upgrade profiles."
    },
    "ProvisionedClusterUpgradeProfile": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The properties of the upgrade profile.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "type": "string",
              "description": "Provisioning state of the resource",
              "readOnly": true,
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Pending",
                "Creating",
                "Deleting",
                "Updating",
                "Upgrading",
                "Accepted"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ResourceProvisioningState"
              }
            },
            "controlPlaneProfile": {
              "description": "The list of available kubernetes version upgrades for the control plane.",
              "type": "object",
              "properties": {
                "kubernetesVersion": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The Kubernetes version (major.minor.patch)."
                },
                "osType": {
                  "type": "string",
                  "description": "OSType to be used to specify OS type for the VMs. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'",
                  "enum": [
                    "Linux",
                    "Windows"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "osType"
                  },
                  "default": "Linux",
                  "readOnly": true
                },
                "upgrades": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "kubernetesVersion": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Kubernetes version (major.minor.patch)."
                      },
                      "isPreview": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Whether the Kubernetes version is currently in preview."
                      }
                    },
                    "description": "The upgrade properties."
                  },
                  "x-ms-identifiers": [],
                  "description": "List of available kubernetes versions for upgrade."
                }
              }
            }
          },
          "required": [
            "controlPlaneProfile"
          ]
        }
      },
      "required": [
        "properties"
      ],
      "description": "The list of available kubernetes version upgrades for the provisioned cluster."
    },
    "OSType": {
      "type": "string",
      "description": "OSType to be used to specify OS type for the VMs. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'",
      "enum": [
        "Linux",
        "Windows"
      ],
      "x-ms-enum": {
        "modelAsString": true,
        "name": "osType"
      },
      "default": "Linux"
    },
    "OSSKU": {
      "type": "string",
      "enum": [
        "CBLMariner",
        "Windows2019",
        "Windows2022"
      ],
      "x-ms-enum": {
        "name": "OSSKU",
        "modelAsString": true,
        "values": [
          {
            "value": "CBLMariner",
            "description": "Use Mariner as the OS for node images."
          },
          {
            "value": "Windows2019",
            "description": "Use Windows2019 as the OS for node images."
          },
          {
            "value": "Windows2022",
            "description": "Use Windows2022 as the OS for node images."
          }
        ]
      },
      "description": "Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows."
    },
    "virtualNetworkProperties": {
      "type": "object",
      "x-ms-client-flatten": true,
      "properties": {
        "infraVnetProfile": {
          "type": "object",
          "properties": {
            "hci": {
              "type": "object",
              "properties": {
                "mocGroup": {
                  "type": "string",
                  "description": "Group in MOC(Microsoft On-premises Cloud)"
                },
                "mocLocation": {
                  "type": "string",
                  "description": "Location in MOC(Microsoft On-premises Cloud)"
                },
                "mocVnetName": {
                  "type": "string",
                  "description": "Virtual Network name in MOC(Microsoft On-premises Cloud)"
                }
              },
              "description": "Infrastructure network profile for HCI platform"
            }
          }
        },
        "vipPool": {
          "type": "array",
          "description": "Range of IP Addresses for Kubernetes API Server and services if using HA Proxy load balancer",
          "x-ms-identifiers": [],
          "items": {
            "type": "object",
            "properties": {
              "endIP": {
                "type": "string",
                "description": "Ending IP address for the IP Pool"
              },
              "startIP": {
                "type": "string",
                "description": "Starting IP address for the IP Pool"
              }
            }
          }
        },
        "vmipPool": {
          "type": "array",
          "description": "Range of IP Addresses for Kubernetes node VMs",
          "x-ms-identifiers": [],
          "items": {
            "type": "object",
            "properties": {
              "endIP": {
                "type": "string",
                "description": "Ending IP address for the IP Pool"
              },
              "startIP": {
                "type": "string",
                "description": "Starting IP address for the IP Pool"
              }
            }
          }
        },
        "dnsServers": {
          "type": "array",
          "description": "List of DNS server IP Addresses associated with the network",
          "items": {
            "type": "string"
          }
        },
        "gateway": {
          "type": "string",
          "description": "IP Address of the Gateway associated with the network"
        },
        "ipAddressPrefix": {
          "type": "string",
          "description": "IP Address Prefix of the network"
        },
        "vlanID": {
          "type": "integer",
          "format": "int32",
          "description": "VLAN Id used by the network"
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Pending",
            "Creating",
            "Deleting",
            "Updating",
            "Accepted"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "provisioningState"
          }
        },
        "status": {
          "type": "object",
          "readOnly": true,
          "properties": {
            "operationStatus": {
              "type": "object",
              "description": "The detailed status of the long running operation.",
              "properties": {
                "error": {
                  "type": "object",
                  "description": "The error if any from the operation.",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "The error code from the operation."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message from the operation."
                    }
                  }
                },
                "operationId": {
                  "type": "string",
                  "description": "The identifier of the operation."
                },
                "status": {
                  "type": "string",
                  "description": "The status of the operation."
                }
              }
            }
          },
          "description": "Status of the virtual network resource"
        }
      },
      "description": "Properties of the virtual network resource"
    },
    "virtualNetwork": {
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "type": "object",
          "x-ms-client-flatten": true,
          "properties": {
            "infraVnetProfile": {
              "type": "object",
              "properties": {
                "hci": {
                  "type": "object",
                  "properties": {
                    "mocGroup": {
                      "type": "string",
                      "description": "Group in MOC(Microsoft On-premises Cloud)"
                    },
                    "mocLocation": {
                      "type": "string",
                      "description": "Location in MOC(Microsoft On-premises Cloud)"
                    },
                    "mocVnetName": {
                      "type": "string",
                      "description": "Virtual Network name in MOC(Microsoft On-premises Cloud)"
                    }
                  },
                  "description": "Infrastructure network profile for HCI platform"
                }
              }
            },
            "vipPool": {
              "type": "array",
              "description": "Range of IP Addresses for Kubernetes API Server and services if using HA Proxy load balancer",
              "x-ms-identifiers": [],
              "items": {
                "type": "object",
                "properties": {
                  "endIP": {
                    "type": "string",
                    "description": "Ending IP address for the IP Pool"
                  },
                  "startIP": {
                    "type": "string",
                    "description": "Starting IP address for the IP Pool"
                  }
                }
              }
            },
            "vmipPool": {
              "type": "array",
              "description": "Range of IP Addresses for Kubernetes node VMs",
              "x-ms-identifiers": [],
              "items": {
                "type": "object",
                "properties": {
                  "endIP": {
                    "type": "string",
                    "description": "Ending IP address for the IP Pool"
                  },
                  "startIP": {
                    "type": "string",
                    "description": "Starting IP address for the IP Pool"
                  }
                }
              }
            },
            "dnsServers": {
              "type": "array",
              "description": "List of DNS server IP Addresses associated with the network",
              "items": {
                "type": "string"
              }
            },
            "gateway": {
              "type": "string",
              "description": "IP Address of the Gateway associated with the network"
            },
            "ipAddressPrefix": {
              "type": "string",
              "description": "IP Address Prefix of the network"
            },
            "vlanID": {
              "type": "integer",
              "format": "int32",
              "description": "VLAN Id used by the network"
            },
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Pending",
                "Creating",
                "Deleting",
                "Updating",
                "Accepted"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "provisioningState"
              }
            },
            "status": {
              "type": "object",
              "readOnly": true,
              "properties": {
                "operationStatus": {
                  "type": "object",
                  "description": "The detailed status of the long running operation.",
                  "properties": {
                    "error": {
                      "type": "object",
                      "description": "The error if any from the operation.",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The error code from the operation."
                        },
                        "message": {
                          "type": "string",
                          "description": "The error message from the operation."
                        }
                      }
                    },
                    "operationId": {
                      "type": "string",
                      "description": "The identifier of the operation."
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the operation."
                    }
                  }
                }
              },
              "description": "Status of the virtual network resource"
            }
          },
          "description": "Properties of the virtual network resource"
        },
        "extendedLocation": {
          "type": "object",
          "description": "Extended location pointing to the underlying infrastructure",
          "properties": {
            "type": {
              "type": "string",
              "description": "The extended location type. Allowed value: 'CustomLocation'",
              "enum": [
                "CustomLocation"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ExtendedLocationTypes"
              }
            },
            "name": {
              "type": "string",
              "description": "ARM Id of the extended location."
            }
          }
        }
      },
      "description": "The Virtual Network resource definition."
    },
    "virtualNetworksPatch": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "description": "The Virtual Network resource patch definition."
    },
    "virtualNetworksListResult": {
      "type": "object",
      "description": "A list of virtual network resources.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "x-ms-azure-resource": true,
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "type": "object",
                "x-ms-client-flatten": true,
                "properties": {
                  "infraVnetProfile": {
                    "type": "object",
                    "properties": {
                      "hci": {
                        "type": "object",
                        "properties": {
                          "mocGroup": {
                            "type": "string",
                            "description": "Group in MOC(Microsoft On-premises Cloud)"
                          },
                          "mocLocation": {
                            "type": "string",
                            "description": "Location in MOC(Microsoft On-premises Cloud)"
                          },
                          "mocVnetName": {
                            "type": "string",
                            "description": "Virtual Network name in MOC(Microsoft On-premises Cloud)"
                          }
                        },
                        "description": "Infrastructure network profile for HCI platform"
                      }
                    }
                  },
                  "vipPool": {
                    "type": "array",
                    "description": "Range of IP Addresses for Kubernetes API Server and services if using HA Proxy load balancer",
                    "x-ms-identifiers": [],
                    "items": {
                      "type": "object",
                      "properties": {
                        "endIP": {
                          "type": "string",
                          "description": "Ending IP address for the IP Pool"
                        },
                        "startIP": {
                          "type": "string",
                          "description": "Starting IP address for the IP Pool"
                        }
                      }
                    }
                  },
                  "vmipPool": {
                    "type": "array",
                    "description": "Range of IP Addresses for Kubernetes node VMs",
                    "x-ms-identifiers": [],
                    "items": {
                      "type": "object",
                      "properties": {
                        "endIP": {
                          "type": "string",
                          "description": "Ending IP address for the IP Pool"
                        },
                        "startIP": {
                          "type": "string",
                          "description": "Starting IP address for the IP Pool"
                        }
                      }
                    }
                  },
                  "dnsServers": {
                    "type": "array",
                    "description": "List of DNS server IP Addresses associated with the network",
                    "items": {
                      "type": "string"
                    }
                  },
                  "gateway": {
                    "type": "string",
                    "description": "IP Address of the Gateway associated with the network"
                  },
                  "ipAddressPrefix": {
                    "type": "string",
                    "description": "IP Address Prefix of the network"
                  },
                  "vlanID": {
                    "type": "integer",
                    "format": "int32",
                    "description": "VLAN Id used by the network"
                  },
                  "provisioningState": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Pending",
                      "Creating",
                      "Deleting",
                      "Updating",
                      "Accepted"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "provisioningState"
                    }
                  },
                  "status": {
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "operationStatus": {
                        "type": "object",
                        "description": "The detailed status of the long running operation.",
                        "properties": {
                          "error": {
                            "type": "object",
                            "description": "The error if any from the operation.",
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "The error code from the operation."
                              },
                              "message": {
                                "type": "string",
                                "description": "The error message from the operation."
                              }
                            }
                          },
                          "operationId": {
                            "type": "string",
                            "description": "The identifier of the operation."
                          },
                          "status": {
                            "type": "string",
                            "description": "The status of the operation."
                          }
                        }
                      }
                    },
                    "description": "Status of the virtual network resource"
                  }
                },
                "description": "Properties of the virtual network resource"
              },
              "extendedLocation": {
                "type": "object",
                "description": "Extended location pointing to the underlying infrastructure",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The extended location type. Allowed value: 'CustomLocation'",
                    "enum": [
                      "CustomLocation"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "ExtendedLocationTypes"
                    }
                  },
                  "name": {
                    "type": "string",
                    "description": "ARM Id of the extended location."
                  }
                }
              }
            },
            "description": "The Virtual Network resource definition."
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "x-ms-identifiers": []
    }
  },
  "parameters": {
    "agentPoolNameParameter": {
      "name": "agentPoolName",
      "description": "Parameter for the name of the agent pool in the provisioned cluster.",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-z][a-z0-9]{2,11}$",
      "x-ms-parameter-location": "method",
      "maxLength": 12,
      "minLength": 3
    },
    "customLocationResourceUriParameter": {
      "name": "customLocationResourceUri",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The fully qualified Azure Resource Manager identifier of the custom location resource.",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "method"
    },
    "connectedClusterResourceUriParameter": {
      "name": "connectedClusterResourceUri",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The fully qualified Azure Resource Manager identifier of the connected cluster resource.",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "method"
    },
    "virtualNetworkNameParameter": {
      "name": "virtualNetworkName",
      "description": "Parameter for the name of the virtual network",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$",
      "x-ms-parameter-location": "method",
      "maxLength": 64,
      "minLength": 3
    }
  }
}