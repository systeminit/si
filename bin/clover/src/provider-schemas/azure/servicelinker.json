{
  "swagger": "2.0",
  "info": {
    "title": "Azure servicelinker",
    "version": "2024-04-01",
    "description": "Azure servicelinker service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ServiceLinker/locations/{location}/dryruns": {
      "get": {
        "tags": [
          "Connector"
        ],
        "operationId": "Connector_ListDryrun",
        "description": "list dryrun jobs",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "description": "The list of dryrun.",
              "type": "object",
              "properties": {
                "nextLink": {
                  "x-nullable": true,
                  "description": "The link used to get the next page of dryrun list.",
                  "type": "string"
                },
                "value": {
                  "description": "The list of dryrun.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "a dryrun job resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The properties of the dryrun job.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "parameters": {
                            "description": "The parameters of the dryrun",
                            "discriminator": "actionName",
                            "type": "object",
                            "properties": {
                              "actionName": {
                                "description": "The name of action for you dryrun job.",
                                "type": "string",
                                "enum": [
                                  "createOrUpdate"
                                ],
                                "x-ms-enum": {
                                  "name": "DryrunActionName",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "actionName"
                            ]
                          },
                          "prerequisiteResults": {
                            "readOnly": true,
                            "description": "the result of the dryrun",
                            "type": "array",
                            "items": {
                              "description": "A result of dryrun",
                              "discriminator": "type",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of dryrun result.",
                                  "type": "string",
                                  "enum": [
                                    "basicError",
                                    "permissionsMissing"
                                  ],
                                  "x-ms-enum": {
                                    "name": "DryrunPrerequisiteResultType",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "required": [
                                "type"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "operationPreviews": {
                            "readOnly": true,
                            "description": "the preview of the operations for creation",
                            "type": "array",
                            "items": {
                              "description": "The preview of the operations for creation",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "The operation name",
                                  "type": "string"
                                },
                                "operationType": {
                                  "description": "The operation type",
                                  "type": "string",
                                  "enum": [
                                    "configConnection",
                                    "configNetwork",
                                    "configAuth"
                                  ],
                                  "x-ms-enum": {
                                    "name": "DryrunPreviewOperationType",
                                    "modelAsString": true
                                  }
                                },
                                "description": {
                                  "description": "The description of the operation",
                                  "type": "string"
                                },
                                "action": {
                                  "description": "The action defined by RBAC, refer https://docs.microsoft.com/azure/role-based-access-control/role-definitions#actions-format",
                                  "type": "string"
                                },
                                "scope": {
                                  "description": "The scope of the operation, refer https://docs.microsoft.com/azure/role-based-access-control/scope-overview",
                                  "type": "string"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The provisioning state. "
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ServiceLinker/locations/{location}/dryruns/{dryrunName}": {
      "get": {
        "tags": [
          "Connector"
        ],
        "operationId": "Connector_GetDryrun",
        "description": "get a dryrun job",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "dryrunName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of dryrun.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "a dryrun job resource",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of the dryrun job.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "parameters": {
                      "description": "The parameters of the dryrun",
                      "discriminator": "actionName",
                      "type": "object",
                      "properties": {
                        "actionName": {
                          "description": "The name of action for you dryrun job.",
                          "type": "string",
                          "enum": [
                            "createOrUpdate"
                          ],
                          "x-ms-enum": {
                            "name": "DryrunActionName",
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "actionName"
                      ]
                    },
                    "prerequisiteResults": {
                      "readOnly": true,
                      "description": "the result of the dryrun",
                      "type": "array",
                      "items": {
                        "description": "A result of dryrun",
                        "discriminator": "type",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of dryrun result.",
                            "type": "string",
                            "enum": [
                              "basicError",
                              "permissionsMissing"
                            ],
                            "x-ms-enum": {
                              "name": "DryrunPrerequisiteResultType",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "operationPreviews": {
                      "readOnly": true,
                      "description": "the preview of the operations for creation",
                      "type": "array",
                      "items": {
                        "description": "The preview of the operations for creation",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The operation name",
                            "type": "string"
                          },
                          "operationType": {
                            "description": "The operation type",
                            "type": "string",
                            "enum": [
                              "configConnection",
                              "configNetwork",
                              "configAuth"
                            ],
                            "x-ms-enum": {
                              "name": "DryrunPreviewOperationType",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "description": "The description of the operation",
                            "type": "string"
                          },
                          "action": {
                            "description": "The action defined by RBAC, refer https://docs.microsoft.com/azure/role-based-access-control/role-definitions#actions-format",
                            "type": "string"
                          },
                          "scope": {
                            "description": "The scope of the operation, refer https://docs.microsoft.com/azure/role-based-access-control/scope-overview",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provisioning state. "
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Connector"
        ],
        "operationId": "Connector_CreateDryrun",
        "description": "create a dryrun job to do necessary check before actual creation",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "dryrunName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of dryrun.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "description": "dryrun resource.",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "a dryrun job resource",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of the dryrun job.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "parameters": {
                      "description": "The parameters of the dryrun",
                      "discriminator": "actionName",
                      "type": "object",
                      "properties": {
                        "actionName": {
                          "description": "The name of action for you dryrun job.",
                          "type": "string",
                          "enum": [
                            "createOrUpdate"
                          ],
                          "x-ms-enum": {
                            "name": "DryrunActionName",
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "actionName"
                      ]
                    },
                    "prerequisiteResults": {
                      "readOnly": true,
                      "description": "the result of the dryrun",
                      "type": "array",
                      "items": {
                        "description": "A result of dryrun",
                        "discriminator": "type",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of dryrun result.",
                            "type": "string",
                            "enum": [
                              "basicError",
                              "permissionsMissing"
                            ],
                            "x-ms-enum": {
                              "name": "DryrunPrerequisiteResultType",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "operationPreviews": {
                      "readOnly": true,
                      "description": "the preview of the operations for creation",
                      "type": "array",
                      "items": {
                        "description": "The preview of the operations for creation",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The operation name",
                            "type": "string"
                          },
                          "operationType": {
                            "description": "The operation type",
                            "type": "string",
                            "enum": [
                              "configConnection",
                              "configNetwork",
                              "configAuth"
                            ],
                            "x-ms-enum": {
                              "name": "DryrunPreviewOperationType",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "description": "The description of the operation",
                            "type": "string"
                          },
                          "action": {
                            "description": "The action defined by RBAC, refer https://docs.microsoft.com/azure/role-based-access-control/role-definitions#actions-format",
                            "type": "string"
                          },
                          "scope": {
                            "description": "The scope of the operation, refer https://docs.microsoft.com/azure/role-based-access-control/scope-overview",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provisioning state. "
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "a dryrun job resource",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of the dryrun job.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "parameters": {
                      "description": "The parameters of the dryrun",
                      "discriminator": "actionName",
                      "type": "object",
                      "properties": {
                        "actionName": {
                          "description": "The name of action for you dryrun job.",
                          "type": "string",
                          "enum": [
                            "createOrUpdate"
                          ],
                          "x-ms-enum": {
                            "name": "DryrunActionName",
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "actionName"
                      ]
                    },
                    "prerequisiteResults": {
                      "readOnly": true,
                      "description": "the result of the dryrun",
                      "type": "array",
                      "items": {
                        "description": "A result of dryrun",
                        "discriminator": "type",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of dryrun result.",
                            "type": "string",
                            "enum": [
                              "basicError",
                              "permissionsMissing"
                            ],
                            "x-ms-enum": {
                              "name": "DryrunPrerequisiteResultType",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "operationPreviews": {
                      "readOnly": true,
                      "description": "the preview of the operations for creation",
                      "type": "array",
                      "items": {
                        "description": "The preview of the operations for creation",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The operation name",
                            "type": "string"
                          },
                          "operationType": {
                            "description": "The operation type",
                            "type": "string",
                            "enum": [
                              "configConnection",
                              "configNetwork",
                              "configAuth"
                            ],
                            "x-ms-enum": {
                              "name": "DryrunPreviewOperationType",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "description": "The description of the operation",
                            "type": "string"
                          },
                          "action": {
                            "description": "The action defined by RBAC, refer https://docs.microsoft.com/azure/role-based-access-control/role-definitions#actions-format",
                            "type": "string"
                          },
                          "scope": {
                            "description": "The scope of the operation, refer https://docs.microsoft.com/azure/role-based-access-control/scope-overview",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provisioning state. "
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Long running operation",
            "schema": {
              "type": "object",
              "description": "a dryrun job resource",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of the dryrun job.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "parameters": {
                      "description": "The parameters of the dryrun",
                      "discriminator": "actionName",
                      "type": "object",
                      "properties": {
                        "actionName": {
                          "description": "The name of action for you dryrun job.",
                          "type": "string",
                          "enum": [
                            "createOrUpdate"
                          ],
                          "x-ms-enum": {
                            "name": "DryrunActionName",
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "actionName"
                      ]
                    },
                    "prerequisiteResults": {
                      "readOnly": true,
                      "description": "the result of the dryrun",
                      "type": "array",
                      "items": {
                        "description": "A result of dryrun",
                        "discriminator": "type",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of dryrun result.",
                            "type": "string",
                            "enum": [
                              "basicError",
                              "permissionsMissing"
                            ],
                            "x-ms-enum": {
                              "name": "DryrunPrerequisiteResultType",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "operationPreviews": {
                      "readOnly": true,
                      "description": "the preview of the operations for creation",
                      "type": "array",
                      "items": {
                        "description": "The preview of the operations for creation",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The operation name",
                            "type": "string"
                          },
                          "operationType": {
                            "description": "The operation type",
                            "type": "string",
                            "enum": [
                              "configConnection",
                              "configNetwork",
                              "configAuth"
                            ],
                            "x-ms-enum": {
                              "name": "DryrunPreviewOperationType",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "description": "The description of the operation",
                            "type": "string"
                          },
                          "action": {
                            "description": "The action defined by RBAC, refer https://docs.microsoft.com/azure/role-based-access-control/role-definitions#actions-format",
                            "type": "string"
                          },
                          "scope": {
                            "description": "The scope of the operation, refer https://docs.microsoft.com/azure/role-based-access-control/scope-overview",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provisioning state. "
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Connector"
        ],
        "operationId": "Connector_UpdateDryrun",
        "description": "update a dryrun job to do necessary check before actual creation",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "dryrunName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of dryrun.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "description": "dryrun resource.",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "a dryrun job to be updated.",
              "properties": {
                "properties": {
                  "description": "The properties of the dryrun job.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "parameters": {
                      "description": "The parameters of the dryrun",
                      "discriminator": "actionName",
                      "type": "object",
                      "properties": {
                        "actionName": {
                          "description": "The name of action for you dryrun job.",
                          "type": "string",
                          "enum": [
                            "createOrUpdate"
                          ],
                          "x-ms-enum": {
                            "name": "DryrunActionName",
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "actionName"
                      ]
                    },
                    "prerequisiteResults": {
                      "readOnly": true,
                      "description": "the result of the dryrun",
                      "type": "array",
                      "items": {
                        "description": "A result of dryrun",
                        "discriminator": "type",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of dryrun result.",
                            "type": "string",
                            "enum": [
                              "basicError",
                              "permissionsMissing"
                            ],
                            "x-ms-enum": {
                              "name": "DryrunPrerequisiteResultType",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "operationPreviews": {
                      "readOnly": true,
                      "description": "the preview of the operations for creation",
                      "type": "array",
                      "items": {
                        "description": "The preview of the operations for creation",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The operation name",
                            "type": "string"
                          },
                          "operationType": {
                            "description": "The operation type",
                            "type": "string",
                            "enum": [
                              "configConnection",
                              "configNetwork",
                              "configAuth"
                            ],
                            "x-ms-enum": {
                              "name": "DryrunPreviewOperationType",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "description": "The description of the operation",
                            "type": "string"
                          },
                          "action": {
                            "description": "The action defined by RBAC, refer https://docs.microsoft.com/azure/role-based-access-control/role-definitions#actions-format",
                            "type": "string"
                          },
                          "scope": {
                            "description": "The scope of the operation, refer https://docs.microsoft.com/azure/role-based-access-control/scope-overview",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provisioning state. "
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "a dryrun job resource",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of the dryrun job.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "parameters": {
                      "description": "The parameters of the dryrun",
                      "discriminator": "actionName",
                      "type": "object",
                      "properties": {
                        "actionName": {
                          "description": "The name of action for you dryrun job.",
                          "type": "string",
                          "enum": [
                            "createOrUpdate"
                          ],
                          "x-ms-enum": {
                            "name": "DryrunActionName",
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "actionName"
                      ]
                    },
                    "prerequisiteResults": {
                      "readOnly": true,
                      "description": "the result of the dryrun",
                      "type": "array",
                      "items": {
                        "description": "A result of dryrun",
                        "discriminator": "type",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of dryrun result.",
                            "type": "string",
                            "enum": [
                              "basicError",
                              "permissionsMissing"
                            ],
                            "x-ms-enum": {
                              "name": "DryrunPrerequisiteResultType",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "operationPreviews": {
                      "readOnly": true,
                      "description": "the preview of the operations for creation",
                      "type": "array",
                      "items": {
                        "description": "The preview of the operations for creation",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The operation name",
                            "type": "string"
                          },
                          "operationType": {
                            "description": "The operation type",
                            "type": "string",
                            "enum": [
                              "configConnection",
                              "configNetwork",
                              "configAuth"
                            ],
                            "x-ms-enum": {
                              "name": "DryrunPreviewOperationType",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "description": "The description of the operation",
                            "type": "string"
                          },
                          "action": {
                            "description": "The action defined by RBAC, refer https://docs.microsoft.com/azure/role-based-access-control/role-definitions#actions-format",
                            "type": "string"
                          },
                          "scope": {
                            "description": "The scope of the operation, refer https://docs.microsoft.com/azure/role-based-access-control/scope-overview",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provisioning state. "
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted - Returns this status until the asynchronous operation has completed."
          }
        }
      },
      "delete": {
        "tags": [
          "Connector"
        ],
        "operationId": "Connector_DeleteDryrun",
        "description": "delete a dryrun job",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "dryrunName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of dryrun.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The job is deleted."
          },
          "204": {
            "description": "Deleted. The job is not found."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ServiceLinker/locations/{location}/connectors": {
      "get": {
        "deprecated": false,
        "description": "Returns list of connector which connects to the resource, which supports to config the target service during the resource provision.",
        "operationId": "Connector_List",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Connector details.",
            "schema": {
              "description": "The list of Linker.",
              "type": "object",
              "properties": {
                "nextLink": {
                  "x-nullable": true,
                  "description": "The Linker used to get the next page of Linker list.",
                  "type": "string"
                },
                "value": {
                  "description": "The list of Linkers.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Linker of source and target resource",
                    "required": [
                      "properties"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "x-nullable": true,
                        "readOnly": true,
                        "description": "The system data.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The properties of the Linker.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "targetService": {
                            "description": "The target service properties",
                            "discriminator": "type",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "The target service type.",
                                "type": "string",
                                "enum": [
                                  "AzureResource",
                                  "ConfluentBootstrapServer",
                                  "ConfluentSchemaRegistry",
                                  "SelfHostedServer"
                                ],
                                "x-ms-enum": {
                                  "name": "targetServiceType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "type"
                            ]
                          },
                          "authInfo": {
                            "description": "The authentication type.",
                            "discriminator": "authType",
                            "type": "object",
                            "properties": {
                              "authType": {
                                "description": "The authentication type.",
                                "type": "string",
                                "enum": [
                                  "systemAssignedIdentity",
                                  "userAssignedIdentity",
                                  "servicePrincipalSecret",
                                  "servicePrincipalCertificate",
                                  "secret",
                                  "accessKey",
                                  "userAccount",
                                  "easyAuthMicrosoftEntraID"
                                ],
                                "x-ms-enum": {
                                  "name": "AuthType",
                                  "modelAsString": true
                                }
                              },
                              "authMode": {
                                "description": "Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.",
                                "type": "string",
                                "enum": [
                                  "optInAllAuth",
                                  "optOutAllAuth"
                                ],
                                "x-ms-enum": {
                                  "name": "authMode",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "optInAllAuth",
                                      "description": "Default authentication configuration according to the authentication type."
                                    },
                                    {
                                      "value": "optOutAllAuth",
                                      "description": "Skip all authentication configuration such as enabling managed identity and granting RBAC roles"
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "authType"
                            ]
                          },
                          "clientType": {
                            "description": "The application client type",
                            "type": "string",
                            "enum": [
                              "none",
                              "dotnet",
                              "java",
                              "python",
                              "go",
                              "php",
                              "ruby",
                              "django",
                              "nodejs",
                              "springBoot",
                              "kafka-springBoot",
                              "jms-springBoot",
                              "dapr"
                            ],
                            "x-ms-enum": {
                              "name": "clientType",
                              "modelAsString": true
                            }
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The provisioning state. "
                          },
                          "vNetSolution": {
                            "x-nullable": true,
                            "description": "The VNet solution.",
                            "type": "object",
                            "properties": {
                              "type": {
                                "x-nullable": true,
                                "description": "Type of VNet solution.",
                                "type": "string",
                                "enum": [
                                  "serviceEndpoint",
                                  "privateLink"
                                ],
                                "x-ms-enum": {
                                  "name": "vNetSolutionType",
                                  "modelAsString": true
                                }
                              },
                              "deleteOrUpdateBehavior": {
                                "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                                "type": "string",
                                "enum": [
                                  "Default",
                                  "ForcedCleanup"
                                ],
                                "x-ms-enum": {
                                  "name": "DeleteOrUpdateBehavior",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "secretStore": {
                            "x-nullable": true,
                            "description": "An option to store secret value in secure place",
                            "type": "object",
                            "properties": {
                              "keyVaultId": {
                                "x-nullable": true,
                                "type": "string",
                                "description": "The key vault id to store secret"
                              },
                              "keyVaultSecretName": {
                                "x-nullable": true,
                                "type": "string",
                                "description": "The key vault secret name to store secret, only valid when storing one secret"
                              }
                            }
                          },
                          "scope": {
                            "x-nullable": true,
                            "type": "string",
                            "description": "connection scope in source service."
                          },
                          "publicNetworkSolution": {
                            "x-nullable": true,
                            "description": "The network solution.",
                            "type": "object",
                            "properties": {
                              "deleteOrUpdateBehavior": {
                                "description": "Indicates whether to clean up previous operation(such as firewall rules) when Linker is updating or deleting",
                                "type": "string",
                                "enum": [
                                  "Default",
                                  "ForcedCleanup"
                                ],
                                "x-ms-enum": {
                                  "name": "DeleteOrUpdateBehavior",
                                  "modelAsString": true
                                }
                              },
                              "action": {
                                "description": "Optional. Indicates public network solution. If enable, enable public network access of target service with best try. Default is enable. If optOut, opt out public network access configuration.",
                                "type": "string",
                                "enum": [
                                  "enable",
                                  "optOut"
                                ],
                                "x-ms-enum": {
                                  "name": "actionType",
                                  "modelAsString": true
                                }
                              },
                              "firewallRules": {
                                "description": "Describe firewall rules of target service to make sure source application could connect to the target.",
                                "type": "object",
                                "properties": {
                                  "ipRanges": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account."
                                  },
                                  "azureServices": {
                                    "description": "Allow Azure services to access the target service if true.",
                                    "type": "string",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "x-ms-enum": {
                                      "name": "allowType",
                                      "modelAsString": true
                                    }
                                  },
                                  "callerClientIP": {
                                    "description": "Allow caller client IP to access the target service if true. the property is used when connecting local application to target service.",
                                    "type": "string",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "x-ms-enum": {
                                      "name": "allowType",
                                      "modelAsString": true
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "configurationInfo": {
                            "x-nullable": true,
                            "description": "The connection information consumed by applications, including secrets, connection strings.",
                            "type": "object",
                            "properties": {
                              "deleteOrUpdateBehavior": {
                                "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                                "type": "string",
                                "enum": [
                                  "Default",
                                  "ForcedCleanup"
                                ],
                                "x-ms-enum": {
                                  "name": "DeleteOrUpdateBehavior",
                                  "modelAsString": true
                                }
                              },
                              "action": {
                                "description": "Optional, indicate whether to apply configurations on source application. If enable, generate configurations and applied to the source application. Default is enable. If optOut, no configuration change will be made on source.",
                                "type": "string",
                                "enum": [
                                  "enable",
                                  "optOut"
                                ],
                                "x-ms-enum": {
                                  "name": "actionType",
                                  "modelAsString": true
                                }
                              },
                              "customizedKeys": {
                                "description": "Optional. A dictionary of default key name and customized key name mapping. If not specified, default key name will be used for generate configurations",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "daprProperties": {
                                "description": "Indicates some additional properties for dapr client type",
                                "type": "object",
                                "properties": {
                                  "version": {
                                    "x-nullable": true,
                                    "type": "string",
                                    "description": "The dapr component version"
                                  },
                                  "componentType": {
                                    "x-nullable": true,
                                    "type": "string",
                                    "description": "The dapr component type"
                                  },
                                  "secretStoreComponent": {
                                    "x-nullable": true,
                                    "type": "string",
                                    "description": "The name of a secret store dapr to retrieve secret"
                                  },
                                  "metadata": {
                                    "description": "Additional dapr metadata",
                                    "type": "array",
                                    "items": {
                                      "description": "The dapr component metadata.",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "description": "Metadata property name.",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "Metadata property value.",
                                          "type": "string"
                                        },
                                        "secretRef": {
                                          "description": "The secret name where dapr could get value",
                                          "type": "string"
                                        },
                                        "description": {
                                          "description": "The description of the metadata, returned from configuration api",
                                          "type": "string"
                                        },
                                        "required": {
                                          "description": "The value indicating whether the metadata is required or not",
                                          "type": "string",
                                          "enum": [
                                            "true",
                                            "false"
                                          ],
                                          "x-ms-enum": {
                                            "name": "DaprMetadataRequired",
                                            "modelAsString": true
                                          }
                                        }
                                      }
                                    },
                                    "x-ms-identifiers": [
                                      "name"
                                    ]
                                  },
                                  "scopes": {
                                    "description": "The dapr component scopes",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "runtimeVersion": {
                                    "x-nullable": true,
                                    "type": "string",
                                    "readOnly": true,
                                    "description": "The runtime version supported by the properties"
                                  },
                                  "bindingComponentDirection": {
                                    "x-nullable": true,
                                    "type": "string",
                                    "enum": [
                                      "input",
                                      "output"
                                    ],
                                    "x-ms-enum": {
                                      "name": "DaprBindingComponentDirection",
                                      "modelAsString": true
                                    },
                                    "readOnly": true,
                                    "description": "The direction supported by the dapr binding component"
                                  }
                                }
                              },
                              "additionalConfigurations": {
                                "description": "A dictionary of additional configurations to be added. Service will auto generate a set of basic configurations and this property is to full fill more customized configurations",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "additionalConnectionStringProperties": {
                                "description": "A dictionary of additional properties to be added in the end of connection string.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "configurationStore": {
                                "x-nullable": true,
                                "description": "An option to store configuration into different place",
                                "type": "object",
                                "properties": {
                                  "appConfigurationId": {
                                    "x-nullable": true,
                                    "type": "string",
                                    "description": "The app configuration id to store configuration"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ServiceLinker/locations/{location}/connectors/{connectorName}": {
      "get": {
        "description": "Returns Connector resource for a given name.",
        "operationId": "Connector_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of resource.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Connector details.",
            "schema": {
              "type": "object",
              "description": "Linker of source and target resource",
              "required": [
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "x-nullable": true,
                  "readOnly": true,
                  "description": "The system data.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of the Linker.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "targetService": {
                      "description": "The target service properties",
                      "discriminator": "type",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The target service type.",
                          "type": "string",
                          "enum": [
                            "AzureResource",
                            "ConfluentBootstrapServer",
                            "ConfluentSchemaRegistry",
                            "SelfHostedServer"
                          ],
                          "x-ms-enum": {
                            "name": "targetServiceType",
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "type"
                      ]
                    },
                    "authInfo": {
                      "description": "The authentication type.",
                      "discriminator": "authType",
                      "type": "object",
                      "properties": {
                        "authType": {
                          "description": "The authentication type.",
                          "type": "string",
                          "enum": [
                            "systemAssignedIdentity",
                            "userAssignedIdentity",
                            "servicePrincipalSecret",
                            "servicePrincipalCertificate",
                            "secret",
                            "accessKey",
                            "userAccount",
                            "easyAuthMicrosoftEntraID"
                          ],
                          "x-ms-enum": {
                            "name": "AuthType",
                            "modelAsString": true
                          }
                        },
                        "authMode": {
                          "description": "Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.",
                          "type": "string",
                          "enum": [
                            "optInAllAuth",
                            "optOutAllAuth"
                          ],
                          "x-ms-enum": {
                            "name": "authMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "optInAllAuth",
                                "description": "Default authentication configuration according to the authentication type."
                              },
                              {
                                "value": "optOutAllAuth",
                                "description": "Skip all authentication configuration such as enabling managed identity and granting RBAC roles"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "authType"
                      ]
                    },
                    "clientType": {
                      "description": "The application client type",
                      "type": "string",
                      "enum": [
                        "none",
                        "dotnet",
                        "java",
                        "python",
                        "go",
                        "php",
                        "ruby",
                        "django",
                        "nodejs",
                        "springBoot",
                        "kafka-springBoot",
                        "jms-springBoot",
                        "dapr"
                      ],
                      "x-ms-enum": {
                        "name": "clientType",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provisioning state. "
                    },
                    "vNetSolution": {
                      "x-nullable": true,
                      "description": "The VNet solution.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "x-nullable": true,
                          "description": "Type of VNet solution.",
                          "type": "string",
                          "enum": [
                            "serviceEndpoint",
                            "privateLink"
                          ],
                          "x-ms-enum": {
                            "name": "vNetSolutionType",
                            "modelAsString": true
                          }
                        },
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "secretStore": {
                      "x-nullable": true,
                      "description": "An option to store secret value in secure place",
                      "type": "object",
                      "properties": {
                        "keyVaultId": {
                          "x-nullable": true,
                          "type": "string",
                          "description": "The key vault id to store secret"
                        },
                        "keyVaultSecretName": {
                          "x-nullable": true,
                          "type": "string",
                          "description": "The key vault secret name to store secret, only valid when storing one secret"
                        }
                      }
                    },
                    "scope": {
                      "x-nullable": true,
                      "type": "string",
                      "description": "connection scope in source service."
                    },
                    "publicNetworkSolution": {
                      "x-nullable": true,
                      "description": "The network solution.",
                      "type": "object",
                      "properties": {
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation(such as firewall rules) when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        },
                        "action": {
                          "description": "Optional. Indicates public network solution. If enable, enable public network access of target service with best try. Default is enable. If optOut, opt out public network access configuration.",
                          "type": "string",
                          "enum": [
                            "enable",
                            "optOut"
                          ],
                          "x-ms-enum": {
                            "name": "actionType",
                            "modelAsString": true
                          }
                        },
                        "firewallRules": {
                          "description": "Describe firewall rules of target service to make sure source application could connect to the target.",
                          "type": "object",
                          "properties": {
                            "ipRanges": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account."
                            },
                            "azureServices": {
                              "description": "Allow Azure services to access the target service if true.",
                              "type": "string",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "x-ms-enum": {
                                "name": "allowType",
                                "modelAsString": true
                              }
                            },
                            "callerClientIP": {
                              "description": "Allow caller client IP to access the target service if true. the property is used when connecting local application to target service.",
                              "type": "string",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "x-ms-enum": {
                                "name": "allowType",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "configurationInfo": {
                      "x-nullable": true,
                      "description": "The connection information consumed by applications, including secrets, connection strings.",
                      "type": "object",
                      "properties": {
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        },
                        "action": {
                          "description": "Optional, indicate whether to apply configurations on source application. If enable, generate configurations and applied to the source application. Default is enable. If optOut, no configuration change will be made on source.",
                          "type": "string",
                          "enum": [
                            "enable",
                            "optOut"
                          ],
                          "x-ms-enum": {
                            "name": "actionType",
                            "modelAsString": true
                          }
                        },
                        "customizedKeys": {
                          "description": "Optional. A dictionary of default key name and customized key name mapping. If not specified, default key name will be used for generate configurations",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "daprProperties": {
                          "description": "Indicates some additional properties for dapr client type",
                          "type": "object",
                          "properties": {
                            "version": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The dapr component version"
                            },
                            "componentType": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The dapr component type"
                            },
                            "secretStoreComponent": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The name of a secret store dapr to retrieve secret"
                            },
                            "metadata": {
                              "description": "Additional dapr metadata",
                              "type": "array",
                              "items": {
                                "description": "The dapr component metadata.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Metadata property name.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Metadata property value.",
                                    "type": "string"
                                  },
                                  "secretRef": {
                                    "description": "The secret name where dapr could get value",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "The description of the metadata, returned from configuration api",
                                    "type": "string"
                                  },
                                  "required": {
                                    "description": "The value indicating whether the metadata is required or not",
                                    "type": "string",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "x-ms-enum": {
                                      "name": "DaprMetadataRequired",
                                      "modelAsString": true
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "scopes": {
                              "description": "The dapr component scopes",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "runtimeVersion": {
                              "x-nullable": true,
                              "type": "string",
                              "readOnly": true,
                              "description": "The runtime version supported by the properties"
                            },
                            "bindingComponentDirection": {
                              "x-nullable": true,
                              "type": "string",
                              "enum": [
                                "input",
                                "output"
                              ],
                              "x-ms-enum": {
                                "name": "DaprBindingComponentDirection",
                                "modelAsString": true
                              },
                              "readOnly": true,
                              "description": "The direction supported by the dapr binding component"
                            }
                          }
                        },
                        "additionalConfigurations": {
                          "description": "A dictionary of additional configurations to be added. Service will auto generate a set of basic configurations and this property is to full fill more customized configurations",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "additionalConnectionStringProperties": {
                          "description": "A dictionary of additional properties to be added in the end of connection string.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "configurationStore": {
                          "x-nullable": true,
                          "description": "An option to store configuration into different place",
                          "type": "object",
                          "properties": {
                            "appConfigurationId": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The app configuration id to store configuration"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Create or update Connector resource.",
        "operationId": "Connector_CreateOrUpdate",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of resource.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "parameters",
            "description": "Connector details.",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Linker of source and target resource",
              "required": [
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "x-nullable": true,
                  "readOnly": true,
                  "description": "The system data.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of the Linker.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "targetService": {
                      "description": "The target service properties",
                      "discriminator": "type",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The target service type.",
                          "type": "string",
                          "enum": [
                            "AzureResource",
                            "ConfluentBootstrapServer",
                            "ConfluentSchemaRegistry",
                            "SelfHostedServer"
                          ],
                          "x-ms-enum": {
                            "name": "targetServiceType",
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "type"
                      ]
                    },
                    "authInfo": {
                      "description": "The authentication type.",
                      "discriminator": "authType",
                      "type": "object",
                      "properties": {
                        "authType": {
                          "description": "The authentication type.",
                          "type": "string",
                          "enum": [
                            "systemAssignedIdentity",
                            "userAssignedIdentity",
                            "servicePrincipalSecret",
                            "servicePrincipalCertificate",
                            "secret",
                            "accessKey",
                            "userAccount",
                            "easyAuthMicrosoftEntraID"
                          ],
                          "x-ms-enum": {
                            "name": "AuthType",
                            "modelAsString": true
                          }
                        },
                        "authMode": {
                          "description": "Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.",
                          "type": "string",
                          "enum": [
                            "optInAllAuth",
                            "optOutAllAuth"
                          ],
                          "x-ms-enum": {
                            "name": "authMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "optInAllAuth",
                                "description": "Default authentication configuration according to the authentication type."
                              },
                              {
                                "value": "optOutAllAuth",
                                "description": "Skip all authentication configuration such as enabling managed identity and granting RBAC roles"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "authType"
                      ]
                    },
                    "clientType": {
                      "description": "The application client type",
                      "type": "string",
                      "enum": [
                        "none",
                        "dotnet",
                        "java",
                        "python",
                        "go",
                        "php",
                        "ruby",
                        "django",
                        "nodejs",
                        "springBoot",
                        "kafka-springBoot",
                        "jms-springBoot",
                        "dapr"
                      ],
                      "x-ms-enum": {
                        "name": "clientType",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provisioning state. "
                    },
                    "vNetSolution": {
                      "x-nullable": true,
                      "description": "The VNet solution.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "x-nullable": true,
                          "description": "Type of VNet solution.",
                          "type": "string",
                          "enum": [
                            "serviceEndpoint",
                            "privateLink"
                          ],
                          "x-ms-enum": {
                            "name": "vNetSolutionType",
                            "modelAsString": true
                          }
                        },
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "secretStore": {
                      "x-nullable": true,
                      "description": "An option to store secret value in secure place",
                      "type": "object",
                      "properties": {
                        "keyVaultId": {
                          "x-nullable": true,
                          "type": "string",
                          "description": "The key vault id to store secret"
                        },
                        "keyVaultSecretName": {
                          "x-nullable": true,
                          "type": "string",
                          "description": "The key vault secret name to store secret, only valid when storing one secret"
                        }
                      }
                    },
                    "scope": {
                      "x-nullable": true,
                      "type": "string",
                      "description": "connection scope in source service."
                    },
                    "publicNetworkSolution": {
                      "x-nullable": true,
                      "description": "The network solution.",
                      "type": "object",
                      "properties": {
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation(such as firewall rules) when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        },
                        "action": {
                          "description": "Optional. Indicates public network solution. If enable, enable public network access of target service with best try. Default is enable. If optOut, opt out public network access configuration.",
                          "type": "string",
                          "enum": [
                            "enable",
                            "optOut"
                          ],
                          "x-ms-enum": {
                            "name": "actionType",
                            "modelAsString": true
                          }
                        },
                        "firewallRules": {
                          "description": "Describe firewall rules of target service to make sure source application could connect to the target.",
                          "type": "object",
                          "properties": {
                            "ipRanges": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account."
                            },
                            "azureServices": {
                              "description": "Allow Azure services to access the target service if true.",
                              "type": "string",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "x-ms-enum": {
                                "name": "allowType",
                                "modelAsString": true
                              }
                            },
                            "callerClientIP": {
                              "description": "Allow caller client IP to access the target service if true. the property is used when connecting local application to target service.",
                              "type": "string",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "x-ms-enum": {
                                "name": "allowType",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "configurationInfo": {
                      "x-nullable": true,
                      "description": "The connection information consumed by applications, including secrets, connection strings.",
                      "type": "object",
                      "properties": {
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        },
                        "action": {
                          "description": "Optional, indicate whether to apply configurations on source application. If enable, generate configurations and applied to the source application. Default is enable. If optOut, no configuration change will be made on source.",
                          "type": "string",
                          "enum": [
                            "enable",
                            "optOut"
                          ],
                          "x-ms-enum": {
                            "name": "actionType",
                            "modelAsString": true
                          }
                        },
                        "customizedKeys": {
                          "description": "Optional. A dictionary of default key name and customized key name mapping. If not specified, default key name will be used for generate configurations",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "daprProperties": {
                          "description": "Indicates some additional properties for dapr client type",
                          "type": "object",
                          "properties": {
                            "version": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The dapr component version"
                            },
                            "componentType": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The dapr component type"
                            },
                            "secretStoreComponent": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The name of a secret store dapr to retrieve secret"
                            },
                            "metadata": {
                              "description": "Additional dapr metadata",
                              "type": "array",
                              "items": {
                                "description": "The dapr component metadata.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Metadata property name.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Metadata property value.",
                                    "type": "string"
                                  },
                                  "secretRef": {
                                    "description": "The secret name where dapr could get value",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "The description of the metadata, returned from configuration api",
                                    "type": "string"
                                  },
                                  "required": {
                                    "description": "The value indicating whether the metadata is required or not",
                                    "type": "string",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "x-ms-enum": {
                                      "name": "DaprMetadataRequired",
                                      "modelAsString": true
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "scopes": {
                              "description": "The dapr component scopes",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "runtimeVersion": {
                              "x-nullable": true,
                              "type": "string",
                              "readOnly": true,
                              "description": "The runtime version supported by the properties"
                            },
                            "bindingComponentDirection": {
                              "x-nullable": true,
                              "type": "string",
                              "enum": [
                                "input",
                                "output"
                              ],
                              "x-ms-enum": {
                                "name": "DaprBindingComponentDirection",
                                "modelAsString": true
                              },
                              "readOnly": true,
                              "description": "The direction supported by the dapr binding component"
                            }
                          }
                        },
                        "additionalConfigurations": {
                          "description": "A dictionary of additional configurations to be added. Service will auto generate a set of basic configurations and this property is to full fill more customized configurations",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "additionalConnectionStringProperties": {
                          "description": "A dictionary of additional properties to be added in the end of connection string.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "configurationStore": {
                          "x-nullable": true,
                          "description": "An option to store configuration into different place",
                          "type": "object",
                          "properties": {
                            "appConfigurationId": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The app configuration id to store configuration"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful.",
            "schema": {
              "type": "object",
              "description": "Linker of source and target resource",
              "required": [
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "x-nullable": true,
                  "readOnly": true,
                  "description": "The system data.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of the Linker.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "targetService": {
                      "description": "The target service properties",
                      "discriminator": "type",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The target service type.",
                          "type": "string",
                          "enum": [
                            "AzureResource",
                            "ConfluentBootstrapServer",
                            "ConfluentSchemaRegistry",
                            "SelfHostedServer"
                          ],
                          "x-ms-enum": {
                            "name": "targetServiceType",
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "type"
                      ]
                    },
                    "authInfo": {
                      "description": "The authentication type.",
                      "discriminator": "authType",
                      "type": "object",
                      "properties": {
                        "authType": {
                          "description": "The authentication type.",
                          "type": "string",
                          "enum": [
                            "systemAssignedIdentity",
                            "userAssignedIdentity",
                            "servicePrincipalSecret",
                            "servicePrincipalCertificate",
                            "secret",
                            "accessKey",
                            "userAccount",
                            "easyAuthMicrosoftEntraID"
                          ],
                          "x-ms-enum": {
                            "name": "AuthType",
                            "modelAsString": true
                          }
                        },
                        "authMode": {
                          "description": "Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.",
                          "type": "string",
                          "enum": [
                            "optInAllAuth",
                            "optOutAllAuth"
                          ],
                          "x-ms-enum": {
                            "name": "authMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "optInAllAuth",
                                "description": "Default authentication configuration according to the authentication type."
                              },
                              {
                                "value": "optOutAllAuth",
                                "description": "Skip all authentication configuration such as enabling managed identity and granting RBAC roles"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "authType"
                      ]
                    },
                    "clientType": {
                      "description": "The application client type",
                      "type": "string",
                      "enum": [
                        "none",
                        "dotnet",
                        "java",
                        "python",
                        "go",
                        "php",
                        "ruby",
                        "django",
                        "nodejs",
                        "springBoot",
                        "kafka-springBoot",
                        "jms-springBoot",
                        "dapr"
                      ],
                      "x-ms-enum": {
                        "name": "clientType",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provisioning state. "
                    },
                    "vNetSolution": {
                      "x-nullable": true,
                      "description": "The VNet solution.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "x-nullable": true,
                          "description": "Type of VNet solution.",
                          "type": "string",
                          "enum": [
                            "serviceEndpoint",
                            "privateLink"
                          ],
                          "x-ms-enum": {
                            "name": "vNetSolutionType",
                            "modelAsString": true
                          }
                        },
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "secretStore": {
                      "x-nullable": true,
                      "description": "An option to store secret value in secure place",
                      "type": "object",
                      "properties": {
                        "keyVaultId": {
                          "x-nullable": true,
                          "type": "string",
                          "description": "The key vault id to store secret"
                        },
                        "keyVaultSecretName": {
                          "x-nullable": true,
                          "type": "string",
                          "description": "The key vault secret name to store secret, only valid when storing one secret"
                        }
                      }
                    },
                    "scope": {
                      "x-nullable": true,
                      "type": "string",
                      "description": "connection scope in source service."
                    },
                    "publicNetworkSolution": {
                      "x-nullable": true,
                      "description": "The network solution.",
                      "type": "object",
                      "properties": {
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation(such as firewall rules) when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        },
                        "action": {
                          "description": "Optional. Indicates public network solution. If enable, enable public network access of target service with best try. Default is enable. If optOut, opt out public network access configuration.",
                          "type": "string",
                          "enum": [
                            "enable",
                            "optOut"
                          ],
                          "x-ms-enum": {
                            "name": "actionType",
                            "modelAsString": true
                          }
                        },
                        "firewallRules": {
                          "description": "Describe firewall rules of target service to make sure source application could connect to the target.",
                          "type": "object",
                          "properties": {
                            "ipRanges": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account."
                            },
                            "azureServices": {
                              "description": "Allow Azure services to access the target service if true.",
                              "type": "string",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "x-ms-enum": {
                                "name": "allowType",
                                "modelAsString": true
                              }
                            },
                            "callerClientIP": {
                              "description": "Allow caller client IP to access the target service if true. the property is used when connecting local application to target service.",
                              "type": "string",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "x-ms-enum": {
                                "name": "allowType",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "configurationInfo": {
                      "x-nullable": true,
                      "description": "The connection information consumed by applications, including secrets, connection strings.",
                      "type": "object",
                      "properties": {
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        },
                        "action": {
                          "description": "Optional, indicate whether to apply configurations on source application. If enable, generate configurations and applied to the source application. Default is enable. If optOut, no configuration change will be made on source.",
                          "type": "string",
                          "enum": [
                            "enable",
                            "optOut"
                          ],
                          "x-ms-enum": {
                            "name": "actionType",
                            "modelAsString": true
                          }
                        },
                        "customizedKeys": {
                          "description": "Optional. A dictionary of default key name and customized key name mapping. If not specified, default key name will be used for generate configurations",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "daprProperties": {
                          "description": "Indicates some additional properties for dapr client type",
                          "type": "object",
                          "properties": {
                            "version": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The dapr component version"
                            },
                            "componentType": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The dapr component type"
                            },
                            "secretStoreComponent": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The name of a secret store dapr to retrieve secret"
                            },
                            "metadata": {
                              "description": "Additional dapr metadata",
                              "type": "array",
                              "items": {
                                "description": "The dapr component metadata.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Metadata property name.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Metadata property value.",
                                    "type": "string"
                                  },
                                  "secretRef": {
                                    "description": "The secret name where dapr could get value",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "The description of the metadata, returned from configuration api",
                                    "type": "string"
                                  },
                                  "required": {
                                    "description": "The value indicating whether the metadata is required or not",
                                    "type": "string",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "x-ms-enum": {
                                      "name": "DaprMetadataRequired",
                                      "modelAsString": true
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "scopes": {
                              "description": "The dapr component scopes",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "runtimeVersion": {
                              "x-nullable": true,
                              "type": "string",
                              "readOnly": true,
                              "description": "The runtime version supported by the properties"
                            },
                            "bindingComponentDirection": {
                              "x-nullable": true,
                              "type": "string",
                              "enum": [
                                "input",
                                "output"
                              ],
                              "x-ms-enum": {
                                "name": "DaprBindingComponentDirection",
                                "modelAsString": true
                              },
                              "readOnly": true,
                              "description": "The direction supported by the dapr binding component"
                            }
                          }
                        },
                        "additionalConfigurations": {
                          "description": "A dictionary of additional configurations to be added. Service will auto generate a set of basic configurations and this property is to full fill more customized configurations",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "additionalConnectionStringProperties": {
                          "description": "A dictionary of additional properties to be added in the end of connection string.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "configurationStore": {
                          "x-nullable": true,
                          "description": "An option to store configuration into different place",
                          "type": "object",
                          "properties": {
                            "appConfigurationId": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The app configuration id to store configuration"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Long running operation.",
            "schema": {
              "type": "object",
              "description": "Linker of source and target resource",
              "required": [
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "x-nullable": true,
                  "readOnly": true,
                  "description": "The system data.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of the Linker.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "targetService": {
                      "description": "The target service properties",
                      "discriminator": "type",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The target service type.",
                          "type": "string",
                          "enum": [
                            "AzureResource",
                            "ConfluentBootstrapServer",
                            "ConfluentSchemaRegistry",
                            "SelfHostedServer"
                          ],
                          "x-ms-enum": {
                            "name": "targetServiceType",
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "type"
                      ]
                    },
                    "authInfo": {
                      "description": "The authentication type.",
                      "discriminator": "authType",
                      "type": "object",
                      "properties": {
                        "authType": {
                          "description": "The authentication type.",
                          "type": "string",
                          "enum": [
                            "systemAssignedIdentity",
                            "userAssignedIdentity",
                            "servicePrincipalSecret",
                            "servicePrincipalCertificate",
                            "secret",
                            "accessKey",
                            "userAccount",
                            "easyAuthMicrosoftEntraID"
                          ],
                          "x-ms-enum": {
                            "name": "AuthType",
                            "modelAsString": true
                          }
                        },
                        "authMode": {
                          "description": "Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.",
                          "type": "string",
                          "enum": [
                            "optInAllAuth",
                            "optOutAllAuth"
                          ],
                          "x-ms-enum": {
                            "name": "authMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "optInAllAuth",
                                "description": "Default authentication configuration according to the authentication type."
                              },
                              {
                                "value": "optOutAllAuth",
                                "description": "Skip all authentication configuration such as enabling managed identity and granting RBAC roles"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "authType"
                      ]
                    },
                    "clientType": {
                      "description": "The application client type",
                      "type": "string",
                      "enum": [
                        "none",
                        "dotnet",
                        "java",
                        "python",
                        "go",
                        "php",
                        "ruby",
                        "django",
                        "nodejs",
                        "springBoot",
                        "kafka-springBoot",
                        "jms-springBoot",
                        "dapr"
                      ],
                      "x-ms-enum": {
                        "name": "clientType",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provisioning state. "
                    },
                    "vNetSolution": {
                      "x-nullable": true,
                      "description": "The VNet solution.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "x-nullable": true,
                          "description": "Type of VNet solution.",
                          "type": "string",
                          "enum": [
                            "serviceEndpoint",
                            "privateLink"
                          ],
                          "x-ms-enum": {
                            "name": "vNetSolutionType",
                            "modelAsString": true
                          }
                        },
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "secretStore": {
                      "x-nullable": true,
                      "description": "An option to store secret value in secure place",
                      "type": "object",
                      "properties": {
                        "keyVaultId": {
                          "x-nullable": true,
                          "type": "string",
                          "description": "The key vault id to store secret"
                        },
                        "keyVaultSecretName": {
                          "x-nullable": true,
                          "type": "string",
                          "description": "The key vault secret name to store secret, only valid when storing one secret"
                        }
                      }
                    },
                    "scope": {
                      "x-nullable": true,
                      "type": "string",
                      "description": "connection scope in source service."
                    },
                    "publicNetworkSolution": {
                      "x-nullable": true,
                      "description": "The network solution.",
                      "type": "object",
                      "properties": {
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation(such as firewall rules) when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        },
                        "action": {
                          "description": "Optional. Indicates public network solution. If enable, enable public network access of target service with best try. Default is enable. If optOut, opt out public network access configuration.",
                          "type": "string",
                          "enum": [
                            "enable",
                            "optOut"
                          ],
                          "x-ms-enum": {
                            "name": "actionType",
                            "modelAsString": true
                          }
                        },
                        "firewallRules": {
                          "description": "Describe firewall rules of target service to make sure source application could connect to the target.",
                          "type": "object",
                          "properties": {
                            "ipRanges": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account."
                            },
                            "azureServices": {
                              "description": "Allow Azure services to access the target service if true.",
                              "type": "string",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "x-ms-enum": {
                                "name": "allowType",
                                "modelAsString": true
                              }
                            },
                            "callerClientIP": {
                              "description": "Allow caller client IP to access the target service if true. the property is used when connecting local application to target service.",
                              "type": "string",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "x-ms-enum": {
                                "name": "allowType",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "configurationInfo": {
                      "x-nullable": true,
                      "description": "The connection information consumed by applications, including secrets, connection strings.",
                      "type": "object",
                      "properties": {
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        },
                        "action": {
                          "description": "Optional, indicate whether to apply configurations on source application. If enable, generate configurations and applied to the source application. Default is enable. If optOut, no configuration change will be made on source.",
                          "type": "string",
                          "enum": [
                            "enable",
                            "optOut"
                          ],
                          "x-ms-enum": {
                            "name": "actionType",
                            "modelAsString": true
                          }
                        },
                        "customizedKeys": {
                          "description": "Optional. A dictionary of default key name and customized key name mapping. If not specified, default key name will be used for generate configurations",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "daprProperties": {
                          "description": "Indicates some additional properties for dapr client type",
                          "type": "object",
                          "properties": {
                            "version": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The dapr component version"
                            },
                            "componentType": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The dapr component type"
                            },
                            "secretStoreComponent": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The name of a secret store dapr to retrieve secret"
                            },
                            "metadata": {
                              "description": "Additional dapr metadata",
                              "type": "array",
                              "items": {
                                "description": "The dapr component metadata.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Metadata property name.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Metadata property value.",
                                    "type": "string"
                                  },
                                  "secretRef": {
                                    "description": "The secret name where dapr could get value",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "The description of the metadata, returned from configuration api",
                                    "type": "string"
                                  },
                                  "required": {
                                    "description": "The value indicating whether the metadata is required or not",
                                    "type": "string",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "x-ms-enum": {
                                      "name": "DaprMetadataRequired",
                                      "modelAsString": true
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "scopes": {
                              "description": "The dapr component scopes",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "runtimeVersion": {
                              "x-nullable": true,
                              "type": "string",
                              "readOnly": true,
                              "description": "The runtime version supported by the properties"
                            },
                            "bindingComponentDirection": {
                              "x-nullable": true,
                              "type": "string",
                              "enum": [
                                "input",
                                "output"
                              ],
                              "x-ms-enum": {
                                "name": "DaprBindingComponentDirection",
                                "modelAsString": true
                              },
                              "readOnly": true,
                              "description": "The direction supported by the dapr binding component"
                            }
                          }
                        },
                        "additionalConfigurations": {
                          "description": "A dictionary of additional configurations to be added. Service will auto generate a set of basic configurations and this property is to full fill more customized configurations",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "additionalConnectionStringProperties": {
                          "description": "A dictionary of additional properties to be added in the end of connection string.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "configurationStore": {
                          "x-nullable": true,
                          "description": "An option to store configuration into different place",
                          "type": "object",
                          "properties": {
                            "appConfigurationId": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The app configuration id to store configuration"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Connector"
        ],
        "operationId": "Connector_Delete",
        "description": "Delete a Connector.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of resource.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The Connector is deleted."
          },
          "202": {
            "description": "Long running operation."
          },
          "204": {
            "description": "Deleted. The Connector is not found."
          }
        }
      },
      "patch": {
        "tags": [
          "Connector"
        ],
        "operationId": "Connector_Update",
        "description": "Operation to update an existing Connector.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of resource.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "parameters",
            "description": "Connector details.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "A Linker to be updated.",
              "type": "object",
              "properties": {
                "properties": {
                  "description": "Linker properties",
                  "type": "object",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "targetService": {
                      "description": "The target service properties",
                      "discriminator": "type",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The target service type.",
                          "type": "string",
                          "enum": [
                            "AzureResource",
                            "ConfluentBootstrapServer",
                            "ConfluentSchemaRegistry",
                            "SelfHostedServer"
                          ],
                          "x-ms-enum": {
                            "name": "targetServiceType",
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "type"
                      ]
                    },
                    "authInfo": {
                      "description": "The authentication type.",
                      "discriminator": "authType",
                      "type": "object",
                      "properties": {
                        "authType": {
                          "description": "The authentication type.",
                          "type": "string",
                          "enum": [
                            "systemAssignedIdentity",
                            "userAssignedIdentity",
                            "servicePrincipalSecret",
                            "servicePrincipalCertificate",
                            "secret",
                            "accessKey",
                            "userAccount",
                            "easyAuthMicrosoftEntraID"
                          ],
                          "x-ms-enum": {
                            "name": "AuthType",
                            "modelAsString": true
                          }
                        },
                        "authMode": {
                          "description": "Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.",
                          "type": "string",
                          "enum": [
                            "optInAllAuth",
                            "optOutAllAuth"
                          ],
                          "x-ms-enum": {
                            "name": "authMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "optInAllAuth",
                                "description": "Default authentication configuration according to the authentication type."
                              },
                              {
                                "value": "optOutAllAuth",
                                "description": "Skip all authentication configuration such as enabling managed identity and granting RBAC roles"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "authType"
                      ]
                    },
                    "clientType": {
                      "description": "The application client type",
                      "type": "string",
                      "enum": [
                        "none",
                        "dotnet",
                        "java",
                        "python",
                        "go",
                        "php",
                        "ruby",
                        "django",
                        "nodejs",
                        "springBoot",
                        "kafka-springBoot",
                        "jms-springBoot",
                        "dapr"
                      ],
                      "x-ms-enum": {
                        "name": "clientType",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provisioning state. "
                    },
                    "vNetSolution": {
                      "x-nullable": true,
                      "description": "The VNet solution.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "x-nullable": true,
                          "description": "Type of VNet solution.",
                          "type": "string",
                          "enum": [
                            "serviceEndpoint",
                            "privateLink"
                          ],
                          "x-ms-enum": {
                            "name": "vNetSolutionType",
                            "modelAsString": true
                          }
                        },
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "secretStore": {
                      "x-nullable": true,
                      "description": "An option to store secret value in secure place",
                      "type": "object",
                      "properties": {
                        "keyVaultId": {
                          "x-nullable": true,
                          "type": "string",
                          "description": "The key vault id to store secret"
                        },
                        "keyVaultSecretName": {
                          "x-nullable": true,
                          "type": "string",
                          "description": "The key vault secret name to store secret, only valid when storing one secret"
                        }
                      }
                    },
                    "scope": {
                      "x-nullable": true,
                      "type": "string",
                      "description": "connection scope in source service."
                    },
                    "publicNetworkSolution": {
                      "x-nullable": true,
                      "description": "The network solution.",
                      "type": "object",
                      "properties": {
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation(such as firewall rules) when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        },
                        "action": {
                          "description": "Optional. Indicates public network solution. If enable, enable public network access of target service with best try. Default is enable. If optOut, opt out public network access configuration.",
                          "type": "string",
                          "enum": [
                            "enable",
                            "optOut"
                          ],
                          "x-ms-enum": {
                            "name": "actionType",
                            "modelAsString": true
                          }
                        },
                        "firewallRules": {
                          "description": "Describe firewall rules of target service to make sure source application could connect to the target.",
                          "type": "object",
                          "properties": {
                            "ipRanges": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account."
                            },
                            "azureServices": {
                              "description": "Allow Azure services to access the target service if true.",
                              "type": "string",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "x-ms-enum": {
                                "name": "allowType",
                                "modelAsString": true
                              }
                            },
                            "callerClientIP": {
                              "description": "Allow caller client IP to access the target service if true. the property is used when connecting local application to target service.",
                              "type": "string",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "x-ms-enum": {
                                "name": "allowType",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "configurationInfo": {
                      "x-nullable": true,
                      "description": "The connection information consumed by applications, including secrets, connection strings.",
                      "type": "object",
                      "properties": {
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        },
                        "action": {
                          "description": "Optional, indicate whether to apply configurations on source application. If enable, generate configurations and applied to the source application. Default is enable. If optOut, no configuration change will be made on source.",
                          "type": "string",
                          "enum": [
                            "enable",
                            "optOut"
                          ],
                          "x-ms-enum": {
                            "name": "actionType",
                            "modelAsString": true
                          }
                        },
                        "customizedKeys": {
                          "description": "Optional. A dictionary of default key name and customized key name mapping. If not specified, default key name will be used for generate configurations",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "daprProperties": {
                          "description": "Indicates some additional properties for dapr client type",
                          "type": "object",
                          "properties": {
                            "version": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The dapr component version"
                            },
                            "componentType": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The dapr component type"
                            },
                            "secretStoreComponent": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The name of a secret store dapr to retrieve secret"
                            },
                            "metadata": {
                              "description": "Additional dapr metadata",
                              "type": "array",
                              "items": {
                                "description": "The dapr component metadata.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Metadata property name.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Metadata property value.",
                                    "type": "string"
                                  },
                                  "secretRef": {
                                    "description": "The secret name where dapr could get value",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "The description of the metadata, returned from configuration api",
                                    "type": "string"
                                  },
                                  "required": {
                                    "description": "The value indicating whether the metadata is required or not",
                                    "type": "string",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "x-ms-enum": {
                                      "name": "DaprMetadataRequired",
                                      "modelAsString": true
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "scopes": {
                              "description": "The dapr component scopes",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "runtimeVersion": {
                              "x-nullable": true,
                              "type": "string",
                              "readOnly": true,
                              "description": "The runtime version supported by the properties"
                            },
                            "bindingComponentDirection": {
                              "x-nullable": true,
                              "type": "string",
                              "enum": [
                                "input",
                                "output"
                              ],
                              "x-ms-enum": {
                                "name": "DaprBindingComponentDirection",
                                "modelAsString": true
                              },
                              "readOnly": true,
                              "description": "The direction supported by the dapr binding component"
                            }
                          }
                        },
                        "additionalConfigurations": {
                          "description": "A dictionary of additional configurations to be added. Service will auto generate a set of basic configurations and this property is to full fill more customized configurations",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "additionalConnectionStringProperties": {
                          "description": "A dictionary of additional properties to be added in the end of connection string.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "configurationStore": {
                          "x-nullable": true,
                          "description": "An option to store configuration into different place",
                          "type": "object",
                          "properties": {
                            "appConfigurationId": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The app configuration id to store configuration"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes a Connector.",
            "schema": {
              "type": "object",
              "description": "Linker of source and target resource",
              "required": [
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "x-nullable": true,
                  "readOnly": true,
                  "description": "The system data.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of the Linker.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "targetService": {
                      "description": "The target service properties",
                      "discriminator": "type",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The target service type.",
                          "type": "string",
                          "enum": [
                            "AzureResource",
                            "ConfluentBootstrapServer",
                            "ConfluentSchemaRegistry",
                            "SelfHostedServer"
                          ],
                          "x-ms-enum": {
                            "name": "targetServiceType",
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "type"
                      ]
                    },
                    "authInfo": {
                      "description": "The authentication type.",
                      "discriminator": "authType",
                      "type": "object",
                      "properties": {
                        "authType": {
                          "description": "The authentication type.",
                          "type": "string",
                          "enum": [
                            "systemAssignedIdentity",
                            "userAssignedIdentity",
                            "servicePrincipalSecret",
                            "servicePrincipalCertificate",
                            "secret",
                            "accessKey",
                            "userAccount",
                            "easyAuthMicrosoftEntraID"
                          ],
                          "x-ms-enum": {
                            "name": "AuthType",
                            "modelAsString": true
                          }
                        },
                        "authMode": {
                          "description": "Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.",
                          "type": "string",
                          "enum": [
                            "optInAllAuth",
                            "optOutAllAuth"
                          ],
                          "x-ms-enum": {
                            "name": "authMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "optInAllAuth",
                                "description": "Default authentication configuration according to the authentication type."
                              },
                              {
                                "value": "optOutAllAuth",
                                "description": "Skip all authentication configuration such as enabling managed identity and granting RBAC roles"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "authType"
                      ]
                    },
                    "clientType": {
                      "description": "The application client type",
                      "type": "string",
                      "enum": [
                        "none",
                        "dotnet",
                        "java",
                        "python",
                        "go",
                        "php",
                        "ruby",
                        "django",
                        "nodejs",
                        "springBoot",
                        "kafka-springBoot",
                        "jms-springBoot",
                        "dapr"
                      ],
                      "x-ms-enum": {
                        "name": "clientType",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provisioning state. "
                    },
                    "vNetSolution": {
                      "x-nullable": true,
                      "description": "The VNet solution.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "x-nullable": true,
                          "description": "Type of VNet solution.",
                          "type": "string",
                          "enum": [
                            "serviceEndpoint",
                            "privateLink"
                          ],
                          "x-ms-enum": {
                            "name": "vNetSolutionType",
                            "modelAsString": true
                          }
                        },
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "secretStore": {
                      "x-nullable": true,
                      "description": "An option to store secret value in secure place",
                      "type": "object",
                      "properties": {
                        "keyVaultId": {
                          "x-nullable": true,
                          "type": "string",
                          "description": "The key vault id to store secret"
                        },
                        "keyVaultSecretName": {
                          "x-nullable": true,
                          "type": "string",
                          "description": "The key vault secret name to store secret, only valid when storing one secret"
                        }
                      }
                    },
                    "scope": {
                      "x-nullable": true,
                      "type": "string",
                      "description": "connection scope in source service."
                    },
                    "publicNetworkSolution": {
                      "x-nullable": true,
                      "description": "The network solution.",
                      "type": "object",
                      "properties": {
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation(such as firewall rules) when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        },
                        "action": {
                          "description": "Optional. Indicates public network solution. If enable, enable public network access of target service with best try. Default is enable. If optOut, opt out public network access configuration.",
                          "type": "string",
                          "enum": [
                            "enable",
                            "optOut"
                          ],
                          "x-ms-enum": {
                            "name": "actionType",
                            "modelAsString": true
                          }
                        },
                        "firewallRules": {
                          "description": "Describe firewall rules of target service to make sure source application could connect to the target.",
                          "type": "object",
                          "properties": {
                            "ipRanges": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account."
                            },
                            "azureServices": {
                              "description": "Allow Azure services to access the target service if true.",
                              "type": "string",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "x-ms-enum": {
                                "name": "allowType",
                                "modelAsString": true
                              }
                            },
                            "callerClientIP": {
                              "description": "Allow caller client IP to access the target service if true. the property is used when connecting local application to target service.",
                              "type": "string",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "x-ms-enum": {
                                "name": "allowType",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "configurationInfo": {
                      "x-nullable": true,
                      "description": "The connection information consumed by applications, including secrets, connection strings.",
                      "type": "object",
                      "properties": {
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        },
                        "action": {
                          "description": "Optional, indicate whether to apply configurations on source application. If enable, generate configurations and applied to the source application. Default is enable. If optOut, no configuration change will be made on source.",
                          "type": "string",
                          "enum": [
                            "enable",
                            "optOut"
                          ],
                          "x-ms-enum": {
                            "name": "actionType",
                            "modelAsString": true
                          }
                        },
                        "customizedKeys": {
                          "description": "Optional. A dictionary of default key name and customized key name mapping. If not specified, default key name will be used for generate configurations",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "daprProperties": {
                          "description": "Indicates some additional properties for dapr client type",
                          "type": "object",
                          "properties": {
                            "version": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The dapr component version"
                            },
                            "componentType": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The dapr component type"
                            },
                            "secretStoreComponent": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The name of a secret store dapr to retrieve secret"
                            },
                            "metadata": {
                              "description": "Additional dapr metadata",
                              "type": "array",
                              "items": {
                                "description": "The dapr component metadata.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Metadata property name.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Metadata property value.",
                                    "type": "string"
                                  },
                                  "secretRef": {
                                    "description": "The secret name where dapr could get value",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "The description of the metadata, returned from configuration api",
                                    "type": "string"
                                  },
                                  "required": {
                                    "description": "The value indicating whether the metadata is required or not",
                                    "type": "string",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "x-ms-enum": {
                                      "name": "DaprMetadataRequired",
                                      "modelAsString": true
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "scopes": {
                              "description": "The dapr component scopes",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "runtimeVersion": {
                              "x-nullable": true,
                              "type": "string",
                              "readOnly": true,
                              "description": "The runtime version supported by the properties"
                            },
                            "bindingComponentDirection": {
                              "x-nullable": true,
                              "type": "string",
                              "enum": [
                                "input",
                                "output"
                              ],
                              "x-ms-enum": {
                                "name": "DaprBindingComponentDirection",
                                "modelAsString": true
                              },
                              "readOnly": true,
                              "description": "The direction supported by the dapr binding component"
                            }
                          }
                        },
                        "additionalConfigurations": {
                          "description": "A dictionary of additional configurations to be added. Service will auto generate a set of basic configurations and this property is to full fill more customized configurations",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "additionalConnectionStringProperties": {
                          "description": "A dictionary of additional properties to be added in the end of connection string.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "configurationStore": {
                          "x-nullable": true,
                          "description": "An option to store configuration into different place",
                          "type": "object",
                          "properties": {
                            "appConfigurationId": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The app configuration id to store configuration"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Long running operation.",
            "schema": {
              "type": "object",
              "description": "Linker of source and target resource",
              "required": [
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "x-nullable": true,
                  "readOnly": true,
                  "description": "The system data.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of the Linker.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "targetService": {
                      "description": "The target service properties",
                      "discriminator": "type",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The target service type.",
                          "type": "string",
                          "enum": [
                            "AzureResource",
                            "ConfluentBootstrapServer",
                            "ConfluentSchemaRegistry",
                            "SelfHostedServer"
                          ],
                          "x-ms-enum": {
                            "name": "targetServiceType",
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "type"
                      ]
                    },
                    "authInfo": {
                      "description": "The authentication type.",
                      "discriminator": "authType",
                      "type": "object",
                      "properties": {
                        "authType": {
                          "description": "The authentication type.",
                          "type": "string",
                          "enum": [
                            "systemAssignedIdentity",
                            "userAssignedIdentity",
                            "servicePrincipalSecret",
                            "servicePrincipalCertificate",
                            "secret",
                            "accessKey",
                            "userAccount",
                            "easyAuthMicrosoftEntraID"
                          ],
                          "x-ms-enum": {
                            "name": "AuthType",
                            "modelAsString": true
                          }
                        },
                        "authMode": {
                          "description": "Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.",
                          "type": "string",
                          "enum": [
                            "optInAllAuth",
                            "optOutAllAuth"
                          ],
                          "x-ms-enum": {
                            "name": "authMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "optInAllAuth",
                                "description": "Default authentication configuration according to the authentication type."
                              },
                              {
                                "value": "optOutAllAuth",
                                "description": "Skip all authentication configuration such as enabling managed identity and granting RBAC roles"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "authType"
                      ]
                    },
                    "clientType": {
                      "description": "The application client type",
                      "type": "string",
                      "enum": [
                        "none",
                        "dotnet",
                        "java",
                        "python",
                        "go",
                        "php",
                        "ruby",
                        "django",
                        "nodejs",
                        "springBoot",
                        "kafka-springBoot",
                        "jms-springBoot",
                        "dapr"
                      ],
                      "x-ms-enum": {
                        "name": "clientType",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provisioning state. "
                    },
                    "vNetSolution": {
                      "x-nullable": true,
                      "description": "The VNet solution.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "x-nullable": true,
                          "description": "Type of VNet solution.",
                          "type": "string",
                          "enum": [
                            "serviceEndpoint",
                            "privateLink"
                          ],
                          "x-ms-enum": {
                            "name": "vNetSolutionType",
                            "modelAsString": true
                          }
                        },
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "secretStore": {
                      "x-nullable": true,
                      "description": "An option to store secret value in secure place",
                      "type": "object",
                      "properties": {
                        "keyVaultId": {
                          "x-nullable": true,
                          "type": "string",
                          "description": "The key vault id to store secret"
                        },
                        "keyVaultSecretName": {
                          "x-nullable": true,
                          "type": "string",
                          "description": "The key vault secret name to store secret, only valid when storing one secret"
                        }
                      }
                    },
                    "scope": {
                      "x-nullable": true,
                      "type": "string",
                      "description": "connection scope in source service."
                    },
                    "publicNetworkSolution": {
                      "x-nullable": true,
                      "description": "The network solution.",
                      "type": "object",
                      "properties": {
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation(such as firewall rules) when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        },
                        "action": {
                          "description": "Optional. Indicates public network solution. If enable, enable public network access of target service with best try. Default is enable. If optOut, opt out public network access configuration.",
                          "type": "string",
                          "enum": [
                            "enable",
                            "optOut"
                          ],
                          "x-ms-enum": {
                            "name": "actionType",
                            "modelAsString": true
                          }
                        },
                        "firewallRules": {
                          "description": "Describe firewall rules of target service to make sure source application could connect to the target.",
                          "type": "object",
                          "properties": {
                            "ipRanges": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account."
                            },
                            "azureServices": {
                              "description": "Allow Azure services to access the target service if true.",
                              "type": "string",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "x-ms-enum": {
                                "name": "allowType",
                                "modelAsString": true
                              }
                            },
                            "callerClientIP": {
                              "description": "Allow caller client IP to access the target service if true. the property is used when connecting local application to target service.",
                              "type": "string",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "x-ms-enum": {
                                "name": "allowType",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "configurationInfo": {
                      "x-nullable": true,
                      "description": "The connection information consumed by applications, including secrets, connection strings.",
                      "type": "object",
                      "properties": {
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        },
                        "action": {
                          "description": "Optional, indicate whether to apply configurations on source application. If enable, generate configurations and applied to the source application. Default is enable. If optOut, no configuration change will be made on source.",
                          "type": "string",
                          "enum": [
                            "enable",
                            "optOut"
                          ],
                          "x-ms-enum": {
                            "name": "actionType",
                            "modelAsString": true
                          }
                        },
                        "customizedKeys": {
                          "description": "Optional. A dictionary of default key name and customized key name mapping. If not specified, default key name will be used for generate configurations",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "daprProperties": {
                          "description": "Indicates some additional properties for dapr client type",
                          "type": "object",
                          "properties": {
                            "version": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The dapr component version"
                            },
                            "componentType": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The dapr component type"
                            },
                            "secretStoreComponent": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The name of a secret store dapr to retrieve secret"
                            },
                            "metadata": {
                              "description": "Additional dapr metadata",
                              "type": "array",
                              "items": {
                                "description": "The dapr component metadata.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Metadata property name.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Metadata property value.",
                                    "type": "string"
                                  },
                                  "secretRef": {
                                    "description": "The secret name where dapr could get value",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "The description of the metadata, returned from configuration api",
                                    "type": "string"
                                  },
                                  "required": {
                                    "description": "The value indicating whether the metadata is required or not",
                                    "type": "string",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "x-ms-enum": {
                                      "name": "DaprMetadataRequired",
                                      "modelAsString": true
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "scopes": {
                              "description": "The dapr component scopes",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "runtimeVersion": {
                              "x-nullable": true,
                              "type": "string",
                              "readOnly": true,
                              "description": "The runtime version supported by the properties"
                            },
                            "bindingComponentDirection": {
                              "x-nullable": true,
                              "type": "string",
                              "enum": [
                                "input",
                                "output"
                              ],
                              "x-ms-enum": {
                                "name": "DaprBindingComponentDirection",
                                "modelAsString": true
                              },
                              "readOnly": true,
                              "description": "The direction supported by the dapr binding component"
                            }
                          }
                        },
                        "additionalConfigurations": {
                          "description": "A dictionary of additional configurations to be added. Service will auto generate a set of basic configurations and this property is to full fill more customized configurations",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "additionalConnectionStringProperties": {
                          "description": "A dictionary of additional properties to be added in the end of connection string.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "configurationStore": {
                          "x-nullable": true,
                          "description": "An option to store configuration into different place",
                          "type": "object",
                          "properties": {
                            "appConfigurationId": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The app configuration id to store configuration"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ServiceLinker/locations/{location}/connectors/{connectorName}/validate": {
      "post": {
        "tags": [
          "Connector"
        ],
        "operationId": "Connector_Validate",
        "description": "Validate a Connector.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of resource.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "description": "The validation operation result for a Linker.",
              "type": "object",
              "properties": {
                "properties": {
                  "x-nullable": true,
                  "description": "The validation result detail.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "linkerName": {
                      "x-nullable": true,
                      "description": "The linker name.",
                      "type": "string"
                    },
                    "isConnectionAvailable": {
                      "x-nullable": true,
                      "description": "A boolean value indicating whether the connection is available or not",
                      "type": "boolean"
                    },
                    "reportStartTimeUtc": {
                      "x-nullable": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "The start time of the validation report."
                    },
                    "reportEndTimeUtc": {
                      "x-nullable": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "The end time of the validation report."
                    },
                    "sourceId": {
                      "x-nullable": true,
                      "description": "The resource id of the Linker source application.",
                      "type": "string"
                    },
                    "targetId": {
                      "x-nullable": true,
                      "description": "The resource Id of target service.",
                      "type": "string"
                    },
                    "authType": {
                      "x-nullable": true,
                      "description": "The authentication type.",
                      "type": "string",
                      "enum": [
                        "systemAssignedIdentity",
                        "userAssignedIdentity",
                        "servicePrincipalSecret",
                        "servicePrincipalCertificate",
                        "secret",
                        "accessKey",
                        "userAccount",
                        "easyAuthMicrosoftEntraID"
                      ],
                      "x-ms-enum": {
                        "name": "AuthType",
                        "modelAsString": true
                      }
                    },
                    "validationDetail": {
                      "description": "The detail of validation result",
                      "type": "array",
                      "items": {
                        "description": "The validation item for a Linker.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The validation item name.",
                            "type": "string"
                          },
                          "description": {
                            "x-nullable": true,
                            "description": "The display name of validation item",
                            "type": "string"
                          },
                          "result": {
                            "x-nullable": true,
                            "description": "The result of validation",
                            "type": "string",
                            "enum": [
                              "success",
                              "failure",
                              "warning"
                            ],
                            "x-ms-enum": {
                              "name": "ValidationResultStatus",
                              "modelAsString": true
                            }
                          },
                          "errorMessage": {
                            "x-nullable": true,
                            "description": "The error message of validation result",
                            "type": "string"
                          },
                          "errorCode": {
                            "x-nullable": true,
                            "description": "The error code of validation result",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    }
                  }
                },
                "resourceId": {
                  "x-nullable": true,
                  "description": "Validated Linker id.",
                  "type": "string"
                },
                "status": {
                  "x-nullable": true,
                  "description": "Validation operation status.",
                  "type": "string"
                }
              }
            }
          },
          "202": {
            "description": "Accepted - Returns this status until the asynchronous operation has completed."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ServiceLinker/locations/{location}/connectors/{connectorName}/generateConfigurations": {
      "post": {
        "tags": [
          "Connector"
        ],
        "operationId": "Connector_GenerateConfigurations",
        "description": "Generate configurations for a Connector.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of resource.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "parameters",
            "description": "Connection Info, including format, secret store, etc",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "description": "The configuration information, used to generate configurations or save to applications",
              "properties": {
                "deleteOrUpdateBehavior": {
                  "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                  "type": "string",
                  "enum": [
                    "Default",
                    "ForcedCleanup"
                  ],
                  "x-ms-enum": {
                    "name": "DeleteOrUpdateBehavior",
                    "modelAsString": true
                  }
                },
                "action": {
                  "description": "Optional, indicate whether to apply configurations on source application. If enable, generate configurations and applied to the source application. Default is enable. If optOut, no configuration change will be made on source.",
                  "type": "string",
                  "enum": [
                    "enable",
                    "optOut"
                  ],
                  "x-ms-enum": {
                    "name": "actionType",
                    "modelAsString": true
                  }
                },
                "customizedKeys": {
                  "description": "Optional. A dictionary of default key name and customized key name mapping. If not specified, default key name will be used for generate configurations",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "daprProperties": {
                  "description": "Indicates some additional properties for dapr client type",
                  "type": "object",
                  "properties": {
                    "version": {
                      "x-nullable": true,
                      "type": "string",
                      "description": "The dapr component version"
                    },
                    "componentType": {
                      "x-nullable": true,
                      "type": "string",
                      "description": "The dapr component type"
                    },
                    "secretStoreComponent": {
                      "x-nullable": true,
                      "type": "string",
                      "description": "The name of a secret store dapr to retrieve secret"
                    },
                    "metadata": {
                      "description": "Additional dapr metadata",
                      "type": "array",
                      "items": {
                        "description": "The dapr component metadata.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Metadata property name.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Metadata property value.",
                            "type": "string"
                          },
                          "secretRef": {
                            "description": "The secret name where dapr could get value",
                            "type": "string"
                          },
                          "description": {
                            "description": "The description of the metadata, returned from configuration api",
                            "type": "string"
                          },
                          "required": {
                            "description": "The value indicating whether the metadata is required or not",
                            "type": "string",
                            "enum": [
                              "true",
                              "false"
                            ],
                            "x-ms-enum": {
                              "name": "DaprMetadataRequired",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "scopes": {
                      "description": "The dapr component scopes",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "runtimeVersion": {
                      "x-nullable": true,
                      "type": "string",
                      "readOnly": true,
                      "description": "The runtime version supported by the properties"
                    },
                    "bindingComponentDirection": {
                      "x-nullable": true,
                      "type": "string",
                      "enum": [
                        "input",
                        "output"
                      ],
                      "x-ms-enum": {
                        "name": "DaprBindingComponentDirection",
                        "modelAsString": true
                      },
                      "readOnly": true,
                      "description": "The direction supported by the dapr binding component"
                    }
                  }
                },
                "additionalConfigurations": {
                  "description": "A dictionary of additional configurations to be added. Service will auto generate a set of basic configurations and this property is to full fill more customized configurations",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "additionalConnectionStringProperties": {
                  "description": "A dictionary of additional properties to be added in the end of connection string.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "configurationStore": {
                  "x-nullable": true,
                  "description": "An option to store configuration into different place",
                  "type": "object",
                  "properties": {
                    "appConfigurationId": {
                      "x-nullable": true,
                      "type": "string",
                      "description": "The app configuration id to store configuration"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "description": "Configurations for source resource, include appSettings, connectionString and serviceBindings",
              "type": "object",
              "properties": {
                "configurations": {
                  "description": "The configuration properties for source resource.",
                  "type": "array",
                  "items": {
                    "description": "A configuration item for source resource",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of setting.",
                        "type": "string"
                      },
                      "value": {
                        "x-nullable": true,
                        "description": "The value of setting",
                        "type": "string"
                      },
                      "configType": {
                        "description": "The type of setting",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "Default",
                          "KeyVaultSecret"
                        ],
                        "x-ms-enum": {
                          "name": "LinkerConfigurationType",
                          "modelAsString": true
                        }
                      },
                      "keyVaultReferenceIdentity": {
                        "x-nullable": true,
                        "description": "The identity for key vault reference, system or user-assigned managed identity ID",
                        "type": "string"
                      },
                      "description": {
                        "x-nullable": true,
                        "description": "Descriptive information for the configuration",
                        "type": "string"
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ServiceLinker/linkers": {
      "get": {
        "deprecated": false,
        "description": "Returns list of Linkers which connects to the resource. which supports to config both application and target service during the resource provision.",
        "operationId": "Linker_List",
        "parameters": [
          {
            "name": "resourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified Azure Resource manager identifier of the resource to be connected.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Linker details.",
            "schema": {
              "description": "The list of Linker.",
              "type": "object",
              "properties": {
                "nextLink": {
                  "x-nullable": true,
                  "description": "The Linker used to get the next page of Linker list.",
                  "type": "string"
                },
                "value": {
                  "description": "The list of Linkers.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Linker of source and target resource",
                    "required": [
                      "properties"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "x-nullable": true,
                        "readOnly": true,
                        "description": "The system data.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The properties of the Linker.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "targetService": {
                            "description": "The target service properties",
                            "discriminator": "type",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "The target service type.",
                                "type": "string",
                                "enum": [
                                  "AzureResource",
                                  "ConfluentBootstrapServer",
                                  "ConfluentSchemaRegistry",
                                  "SelfHostedServer"
                                ],
                                "x-ms-enum": {
                                  "name": "targetServiceType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "type"
                            ]
                          },
                          "authInfo": {
                            "description": "The authentication type.",
                            "discriminator": "authType",
                            "type": "object",
                            "properties": {
                              "authType": {
                                "description": "The authentication type.",
                                "type": "string",
                                "enum": [
                                  "systemAssignedIdentity",
                                  "userAssignedIdentity",
                                  "servicePrincipalSecret",
                                  "servicePrincipalCertificate",
                                  "secret",
                                  "accessKey",
                                  "userAccount",
                                  "easyAuthMicrosoftEntraID"
                                ],
                                "x-ms-enum": {
                                  "name": "AuthType",
                                  "modelAsString": true
                                }
                              },
                              "authMode": {
                                "description": "Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.",
                                "type": "string",
                                "enum": [
                                  "optInAllAuth",
                                  "optOutAllAuth"
                                ],
                                "x-ms-enum": {
                                  "name": "authMode",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "optInAllAuth",
                                      "description": "Default authentication configuration according to the authentication type."
                                    },
                                    {
                                      "value": "optOutAllAuth",
                                      "description": "Skip all authentication configuration such as enabling managed identity and granting RBAC roles"
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "authType"
                            ]
                          },
                          "clientType": {
                            "description": "The application client type",
                            "type": "string",
                            "enum": [
                              "none",
                              "dotnet",
                              "java",
                              "python",
                              "go",
                              "php",
                              "ruby",
                              "django",
                              "nodejs",
                              "springBoot",
                              "kafka-springBoot",
                              "jms-springBoot",
                              "dapr"
                            ],
                            "x-ms-enum": {
                              "name": "clientType",
                              "modelAsString": true
                            }
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The provisioning state. "
                          },
                          "vNetSolution": {
                            "x-nullable": true,
                            "description": "The VNet solution.",
                            "type": "object",
                            "properties": {
                              "type": {
                                "x-nullable": true,
                                "description": "Type of VNet solution.",
                                "type": "string",
                                "enum": [
                                  "serviceEndpoint",
                                  "privateLink"
                                ],
                                "x-ms-enum": {
                                  "name": "vNetSolutionType",
                                  "modelAsString": true
                                }
                              },
                              "deleteOrUpdateBehavior": {
                                "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                                "type": "string",
                                "enum": [
                                  "Default",
                                  "ForcedCleanup"
                                ],
                                "x-ms-enum": {
                                  "name": "DeleteOrUpdateBehavior",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "secretStore": {
                            "x-nullable": true,
                            "description": "An option to store secret value in secure place",
                            "type": "object",
                            "properties": {
                              "keyVaultId": {
                                "x-nullable": true,
                                "type": "string",
                                "description": "The key vault id to store secret"
                              },
                              "keyVaultSecretName": {
                                "x-nullable": true,
                                "type": "string",
                                "description": "The key vault secret name to store secret, only valid when storing one secret"
                              }
                            }
                          },
                          "scope": {
                            "x-nullable": true,
                            "type": "string",
                            "description": "connection scope in source service."
                          },
                          "publicNetworkSolution": {
                            "x-nullable": true,
                            "description": "The network solution.",
                            "type": "object",
                            "properties": {
                              "deleteOrUpdateBehavior": {
                                "description": "Indicates whether to clean up previous operation(such as firewall rules) when Linker is updating or deleting",
                                "type": "string",
                                "enum": [
                                  "Default",
                                  "ForcedCleanup"
                                ],
                                "x-ms-enum": {
                                  "name": "DeleteOrUpdateBehavior",
                                  "modelAsString": true
                                }
                              },
                              "action": {
                                "description": "Optional. Indicates public network solution. If enable, enable public network access of target service with best try. Default is enable. If optOut, opt out public network access configuration.",
                                "type": "string",
                                "enum": [
                                  "enable",
                                  "optOut"
                                ],
                                "x-ms-enum": {
                                  "name": "actionType",
                                  "modelAsString": true
                                }
                              },
                              "firewallRules": {
                                "description": "Describe firewall rules of target service to make sure source application could connect to the target.",
                                "type": "object",
                                "properties": {
                                  "ipRanges": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account."
                                  },
                                  "azureServices": {
                                    "description": "Allow Azure services to access the target service if true.",
                                    "type": "string",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "x-ms-enum": {
                                      "name": "allowType",
                                      "modelAsString": true
                                    }
                                  },
                                  "callerClientIP": {
                                    "description": "Allow caller client IP to access the target service if true. the property is used when connecting local application to target service.",
                                    "type": "string",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "x-ms-enum": {
                                      "name": "allowType",
                                      "modelAsString": true
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "configurationInfo": {
                            "x-nullable": true,
                            "description": "The connection information consumed by applications, including secrets, connection strings.",
                            "type": "object",
                            "properties": {
                              "deleteOrUpdateBehavior": {
                                "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                                "type": "string",
                                "enum": [
                                  "Default",
                                  "ForcedCleanup"
                                ],
                                "x-ms-enum": {
                                  "name": "DeleteOrUpdateBehavior",
                                  "modelAsString": true
                                }
                              },
                              "action": {
                                "description": "Optional, indicate whether to apply configurations on source application. If enable, generate configurations and applied to the source application. Default is enable. If optOut, no configuration change will be made on source.",
                                "type": "string",
                                "enum": [
                                  "enable",
                                  "optOut"
                                ],
                                "x-ms-enum": {
                                  "name": "actionType",
                                  "modelAsString": true
                                }
                              },
                              "customizedKeys": {
                                "description": "Optional. A dictionary of default key name and customized key name mapping. If not specified, default key name will be used for generate configurations",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "daprProperties": {
                                "description": "Indicates some additional properties for dapr client type",
                                "type": "object",
                                "properties": {
                                  "version": {
                                    "x-nullable": true,
                                    "type": "string",
                                    "description": "The dapr component version"
                                  },
                                  "componentType": {
                                    "x-nullable": true,
                                    "type": "string",
                                    "description": "The dapr component type"
                                  },
                                  "secretStoreComponent": {
                                    "x-nullable": true,
                                    "type": "string",
                                    "description": "The name of a secret store dapr to retrieve secret"
                                  },
                                  "metadata": {
                                    "description": "Additional dapr metadata",
                                    "type": "array",
                                    "items": {
                                      "description": "The dapr component metadata.",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "description": "Metadata property name.",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "Metadata property value.",
                                          "type": "string"
                                        },
                                        "secretRef": {
                                          "description": "The secret name where dapr could get value",
                                          "type": "string"
                                        },
                                        "description": {
                                          "description": "The description of the metadata, returned from configuration api",
                                          "type": "string"
                                        },
                                        "required": {
                                          "description": "The value indicating whether the metadata is required or not",
                                          "type": "string",
                                          "enum": [
                                            "true",
                                            "false"
                                          ],
                                          "x-ms-enum": {
                                            "name": "DaprMetadataRequired",
                                            "modelAsString": true
                                          }
                                        }
                                      }
                                    },
                                    "x-ms-identifiers": [
                                      "name"
                                    ]
                                  },
                                  "scopes": {
                                    "description": "The dapr component scopes",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "runtimeVersion": {
                                    "x-nullable": true,
                                    "type": "string",
                                    "readOnly": true,
                                    "description": "The runtime version supported by the properties"
                                  },
                                  "bindingComponentDirection": {
                                    "x-nullable": true,
                                    "type": "string",
                                    "enum": [
                                      "input",
                                      "output"
                                    ],
                                    "x-ms-enum": {
                                      "name": "DaprBindingComponentDirection",
                                      "modelAsString": true
                                    },
                                    "readOnly": true,
                                    "description": "The direction supported by the dapr binding component"
                                  }
                                }
                              },
                              "additionalConfigurations": {
                                "description": "A dictionary of additional configurations to be added. Service will auto generate a set of basic configurations and this property is to full fill more customized configurations",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "additionalConnectionStringProperties": {
                                "description": "A dictionary of additional properties to be added in the end of connection string.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "configurationStore": {
                                "x-nullable": true,
                                "description": "An option to store configuration into different place",
                                "type": "object",
                                "properties": {
                                  "appConfigurationId": {
                                    "x-nullable": true,
                                    "type": "string",
                                    "description": "The app configuration id to store configuration"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ServiceLinker/linkers/{linkerName}": {
      "get": {
        "description": "Returns Linker resource for a given name.",
        "operationId": "Linker_Get",
        "parameters": [
          {
            "name": "resourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified Azure Resource manager identifier of the resource to be connected.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "linkerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name Linker resource.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Linker details.",
            "schema": {
              "type": "object",
              "description": "Linker of source and target resource",
              "required": [
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "x-nullable": true,
                  "readOnly": true,
                  "description": "The system data.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of the Linker.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "targetService": {
                      "description": "The target service properties",
                      "discriminator": "type",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The target service type.",
                          "type": "string",
                          "enum": [
                            "AzureResource",
                            "ConfluentBootstrapServer",
                            "ConfluentSchemaRegistry",
                            "SelfHostedServer"
                          ],
                          "x-ms-enum": {
                            "name": "targetServiceType",
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "type"
                      ]
                    },
                    "authInfo": {
                      "description": "The authentication type.",
                      "discriminator": "authType",
                      "type": "object",
                      "properties": {
                        "authType": {
                          "description": "The authentication type.",
                          "type": "string",
                          "enum": [
                            "systemAssignedIdentity",
                            "userAssignedIdentity",
                            "servicePrincipalSecret",
                            "servicePrincipalCertificate",
                            "secret",
                            "accessKey",
                            "userAccount",
                            "easyAuthMicrosoftEntraID"
                          ],
                          "x-ms-enum": {
                            "name": "AuthType",
                            "modelAsString": true
                          }
                        },
                        "authMode": {
                          "description": "Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.",
                          "type": "string",
                          "enum": [
                            "optInAllAuth",
                            "optOutAllAuth"
                          ],
                          "x-ms-enum": {
                            "name": "authMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "optInAllAuth",
                                "description": "Default authentication configuration according to the authentication type."
                              },
                              {
                                "value": "optOutAllAuth",
                                "description": "Skip all authentication configuration such as enabling managed identity and granting RBAC roles"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "authType"
                      ]
                    },
                    "clientType": {
                      "description": "The application client type",
                      "type": "string",
                      "enum": [
                        "none",
                        "dotnet",
                        "java",
                        "python",
                        "go",
                        "php",
                        "ruby",
                        "django",
                        "nodejs",
                        "springBoot",
                        "kafka-springBoot",
                        "jms-springBoot",
                        "dapr"
                      ],
                      "x-ms-enum": {
                        "name": "clientType",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provisioning state. "
                    },
                    "vNetSolution": {
                      "x-nullable": true,
                      "description": "The VNet solution.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "x-nullable": true,
                          "description": "Type of VNet solution.",
                          "type": "string",
                          "enum": [
                            "serviceEndpoint",
                            "privateLink"
                          ],
                          "x-ms-enum": {
                            "name": "vNetSolutionType",
                            "modelAsString": true
                          }
                        },
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "secretStore": {
                      "x-nullable": true,
                      "description": "An option to store secret value in secure place",
                      "type": "object",
                      "properties": {
                        "keyVaultId": {
                          "x-nullable": true,
                          "type": "string",
                          "description": "The key vault id to store secret"
                        },
                        "keyVaultSecretName": {
                          "x-nullable": true,
                          "type": "string",
                          "description": "The key vault secret name to store secret, only valid when storing one secret"
                        }
                      }
                    },
                    "scope": {
                      "x-nullable": true,
                      "type": "string",
                      "description": "connection scope in source service."
                    },
                    "publicNetworkSolution": {
                      "x-nullable": true,
                      "description": "The network solution.",
                      "type": "object",
                      "properties": {
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation(such as firewall rules) when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        },
                        "action": {
                          "description": "Optional. Indicates public network solution. If enable, enable public network access of target service with best try. Default is enable. If optOut, opt out public network access configuration.",
                          "type": "string",
                          "enum": [
                            "enable",
                            "optOut"
                          ],
                          "x-ms-enum": {
                            "name": "actionType",
                            "modelAsString": true
                          }
                        },
                        "firewallRules": {
                          "description": "Describe firewall rules of target service to make sure source application could connect to the target.",
                          "type": "object",
                          "properties": {
                            "ipRanges": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account."
                            },
                            "azureServices": {
                              "description": "Allow Azure services to access the target service if true.",
                              "type": "string",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "x-ms-enum": {
                                "name": "allowType",
                                "modelAsString": true
                              }
                            },
                            "callerClientIP": {
                              "description": "Allow caller client IP to access the target service if true. the property is used when connecting local application to target service.",
                              "type": "string",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "x-ms-enum": {
                                "name": "allowType",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "configurationInfo": {
                      "x-nullable": true,
                      "description": "The connection information consumed by applications, including secrets, connection strings.",
                      "type": "object",
                      "properties": {
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        },
                        "action": {
                          "description": "Optional, indicate whether to apply configurations on source application. If enable, generate configurations and applied to the source application. Default is enable. If optOut, no configuration change will be made on source.",
                          "type": "string",
                          "enum": [
                            "enable",
                            "optOut"
                          ],
                          "x-ms-enum": {
                            "name": "actionType",
                            "modelAsString": true
                          }
                        },
                        "customizedKeys": {
                          "description": "Optional. A dictionary of default key name and customized key name mapping. If not specified, default key name will be used for generate configurations",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "daprProperties": {
                          "description": "Indicates some additional properties for dapr client type",
                          "type": "object",
                          "properties": {
                            "version": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The dapr component version"
                            },
                            "componentType": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The dapr component type"
                            },
                            "secretStoreComponent": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The name of a secret store dapr to retrieve secret"
                            },
                            "metadata": {
                              "description": "Additional dapr metadata",
                              "type": "array",
                              "items": {
                                "description": "The dapr component metadata.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Metadata property name.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Metadata property value.",
                                    "type": "string"
                                  },
                                  "secretRef": {
                                    "description": "The secret name where dapr could get value",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "The description of the metadata, returned from configuration api",
                                    "type": "string"
                                  },
                                  "required": {
                                    "description": "The value indicating whether the metadata is required or not",
                                    "type": "string",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "x-ms-enum": {
                                      "name": "DaprMetadataRequired",
                                      "modelAsString": true
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "scopes": {
                              "description": "The dapr component scopes",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "runtimeVersion": {
                              "x-nullable": true,
                              "type": "string",
                              "readOnly": true,
                              "description": "The runtime version supported by the properties"
                            },
                            "bindingComponentDirection": {
                              "x-nullable": true,
                              "type": "string",
                              "enum": [
                                "input",
                                "output"
                              ],
                              "x-ms-enum": {
                                "name": "DaprBindingComponentDirection",
                                "modelAsString": true
                              },
                              "readOnly": true,
                              "description": "The direction supported by the dapr binding component"
                            }
                          }
                        },
                        "additionalConfigurations": {
                          "description": "A dictionary of additional configurations to be added. Service will auto generate a set of basic configurations and this property is to full fill more customized configurations",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "additionalConnectionStringProperties": {
                          "description": "A dictionary of additional properties to be added in the end of connection string.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "configurationStore": {
                          "x-nullable": true,
                          "description": "An option to store configuration into different place",
                          "type": "object",
                          "properties": {
                            "appConfigurationId": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The app configuration id to store configuration"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Create or update Linker resource.",
        "operationId": "Linker_CreateOrUpdate",
        "parameters": [
          {
            "name": "resourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified Azure Resource manager identifier of the resource to be connected.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "linkerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name Linker resource.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "description": "Linker details.",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Linker of source and target resource",
              "required": [
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "x-nullable": true,
                  "readOnly": true,
                  "description": "The system data.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of the Linker.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "targetService": {
                      "description": "The target service properties",
                      "discriminator": "type",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The target service type.",
                          "type": "string",
                          "enum": [
                            "AzureResource",
                            "ConfluentBootstrapServer",
                            "ConfluentSchemaRegistry",
                            "SelfHostedServer"
                          ],
                          "x-ms-enum": {
                            "name": "targetServiceType",
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "type"
                      ]
                    },
                    "authInfo": {
                      "description": "The authentication type.",
                      "discriminator": "authType",
                      "type": "object",
                      "properties": {
                        "authType": {
                          "description": "The authentication type.",
                          "type": "string",
                          "enum": [
                            "systemAssignedIdentity",
                            "userAssignedIdentity",
                            "servicePrincipalSecret",
                            "servicePrincipalCertificate",
                            "secret",
                            "accessKey",
                            "userAccount",
                            "easyAuthMicrosoftEntraID"
                          ],
                          "x-ms-enum": {
                            "name": "AuthType",
                            "modelAsString": true
                          }
                        },
                        "authMode": {
                          "description": "Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.",
                          "type": "string",
                          "enum": [
                            "optInAllAuth",
                            "optOutAllAuth"
                          ],
                          "x-ms-enum": {
                            "name": "authMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "optInAllAuth",
                                "description": "Default authentication configuration according to the authentication type."
                              },
                              {
                                "value": "optOutAllAuth",
                                "description": "Skip all authentication configuration such as enabling managed identity and granting RBAC roles"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "authType"
                      ]
                    },
                    "clientType": {
                      "description": "The application client type",
                      "type": "string",
                      "enum": [
                        "none",
                        "dotnet",
                        "java",
                        "python",
                        "go",
                        "php",
                        "ruby",
                        "django",
                        "nodejs",
                        "springBoot",
                        "kafka-springBoot",
                        "jms-springBoot",
                        "dapr"
                      ],
                      "x-ms-enum": {
                        "name": "clientType",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provisioning state. "
                    },
                    "vNetSolution": {
                      "x-nullable": true,
                      "description": "The VNet solution.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "x-nullable": true,
                          "description": "Type of VNet solution.",
                          "type": "string",
                          "enum": [
                            "serviceEndpoint",
                            "privateLink"
                          ],
                          "x-ms-enum": {
                            "name": "vNetSolutionType",
                            "modelAsString": true
                          }
                        },
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "secretStore": {
                      "x-nullable": true,
                      "description": "An option to store secret value in secure place",
                      "type": "object",
                      "properties": {
                        "keyVaultId": {
                          "x-nullable": true,
                          "type": "string",
                          "description": "The key vault id to store secret"
                        },
                        "keyVaultSecretName": {
                          "x-nullable": true,
                          "type": "string",
                          "description": "The key vault secret name to store secret, only valid when storing one secret"
                        }
                      }
                    },
                    "scope": {
                      "x-nullable": true,
                      "type": "string",
                      "description": "connection scope in source service."
                    },
                    "publicNetworkSolution": {
                      "x-nullable": true,
                      "description": "The network solution.",
                      "type": "object",
                      "properties": {
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation(such as firewall rules) when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        },
                        "action": {
                          "description": "Optional. Indicates public network solution. If enable, enable public network access of target service with best try. Default is enable. If optOut, opt out public network access configuration.",
                          "type": "string",
                          "enum": [
                            "enable",
                            "optOut"
                          ],
                          "x-ms-enum": {
                            "name": "actionType",
                            "modelAsString": true
                          }
                        },
                        "firewallRules": {
                          "description": "Describe firewall rules of target service to make sure source application could connect to the target.",
                          "type": "object",
                          "properties": {
                            "ipRanges": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account."
                            },
                            "azureServices": {
                              "description": "Allow Azure services to access the target service if true.",
                              "type": "string",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "x-ms-enum": {
                                "name": "allowType",
                                "modelAsString": true
                              }
                            },
                            "callerClientIP": {
                              "description": "Allow caller client IP to access the target service if true. the property is used when connecting local application to target service.",
                              "type": "string",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "x-ms-enum": {
                                "name": "allowType",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "configurationInfo": {
                      "x-nullable": true,
                      "description": "The connection information consumed by applications, including secrets, connection strings.",
                      "type": "object",
                      "properties": {
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        },
                        "action": {
                          "description": "Optional, indicate whether to apply configurations on source application. If enable, generate configurations and applied to the source application. Default is enable. If optOut, no configuration change will be made on source.",
                          "type": "string",
                          "enum": [
                            "enable",
                            "optOut"
                          ],
                          "x-ms-enum": {
                            "name": "actionType",
                            "modelAsString": true
                          }
                        },
                        "customizedKeys": {
                          "description": "Optional. A dictionary of default key name and customized key name mapping. If not specified, default key name will be used for generate configurations",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "daprProperties": {
                          "description": "Indicates some additional properties for dapr client type",
                          "type": "object",
                          "properties": {
                            "version": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The dapr component version"
                            },
                            "componentType": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The dapr component type"
                            },
                            "secretStoreComponent": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The name of a secret store dapr to retrieve secret"
                            },
                            "metadata": {
                              "description": "Additional dapr metadata",
                              "type": "array",
                              "items": {
                                "description": "The dapr component metadata.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Metadata property name.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Metadata property value.",
                                    "type": "string"
                                  },
                                  "secretRef": {
                                    "description": "The secret name where dapr could get value",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "The description of the metadata, returned from configuration api",
                                    "type": "string"
                                  },
                                  "required": {
                                    "description": "The value indicating whether the metadata is required or not",
                                    "type": "string",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "x-ms-enum": {
                                      "name": "DaprMetadataRequired",
                                      "modelAsString": true
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "scopes": {
                              "description": "The dapr component scopes",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "runtimeVersion": {
                              "x-nullable": true,
                              "type": "string",
                              "readOnly": true,
                              "description": "The runtime version supported by the properties"
                            },
                            "bindingComponentDirection": {
                              "x-nullable": true,
                              "type": "string",
                              "enum": [
                                "input",
                                "output"
                              ],
                              "x-ms-enum": {
                                "name": "DaprBindingComponentDirection",
                                "modelAsString": true
                              },
                              "readOnly": true,
                              "description": "The direction supported by the dapr binding component"
                            }
                          }
                        },
                        "additionalConfigurations": {
                          "description": "A dictionary of additional configurations to be added. Service will auto generate a set of basic configurations and this property is to full fill more customized configurations",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "additionalConnectionStringProperties": {
                          "description": "A dictionary of additional properties to be added in the end of connection string.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "configurationStore": {
                          "x-nullable": true,
                          "description": "An option to store configuration into different place",
                          "type": "object",
                          "properties": {
                            "appConfigurationId": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The app configuration id to store configuration"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful.",
            "schema": {
              "type": "object",
              "description": "Linker of source and target resource",
              "required": [
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "x-nullable": true,
                  "readOnly": true,
                  "description": "The system data.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of the Linker.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "targetService": {
                      "description": "The target service properties",
                      "discriminator": "type",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The target service type.",
                          "type": "string",
                          "enum": [
                            "AzureResource",
                            "ConfluentBootstrapServer",
                            "ConfluentSchemaRegistry",
                            "SelfHostedServer"
                          ],
                          "x-ms-enum": {
                            "name": "targetServiceType",
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "type"
                      ]
                    },
                    "authInfo": {
                      "description": "The authentication type.",
                      "discriminator": "authType",
                      "type": "object",
                      "properties": {
                        "authType": {
                          "description": "The authentication type.",
                          "type": "string",
                          "enum": [
                            "systemAssignedIdentity",
                            "userAssignedIdentity",
                            "servicePrincipalSecret",
                            "servicePrincipalCertificate",
                            "secret",
                            "accessKey",
                            "userAccount",
                            "easyAuthMicrosoftEntraID"
                          ],
                          "x-ms-enum": {
                            "name": "AuthType",
                            "modelAsString": true
                          }
                        },
                        "authMode": {
                          "description": "Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.",
                          "type": "string",
                          "enum": [
                            "optInAllAuth",
                            "optOutAllAuth"
                          ],
                          "x-ms-enum": {
                            "name": "authMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "optInAllAuth",
                                "description": "Default authentication configuration according to the authentication type."
                              },
                              {
                                "value": "optOutAllAuth",
                                "description": "Skip all authentication configuration such as enabling managed identity and granting RBAC roles"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "authType"
                      ]
                    },
                    "clientType": {
                      "description": "The application client type",
                      "type": "string",
                      "enum": [
                        "none",
                        "dotnet",
                        "java",
                        "python",
                        "go",
                        "php",
                        "ruby",
                        "django",
                        "nodejs",
                        "springBoot",
                        "kafka-springBoot",
                        "jms-springBoot",
                        "dapr"
                      ],
                      "x-ms-enum": {
                        "name": "clientType",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provisioning state. "
                    },
                    "vNetSolution": {
                      "x-nullable": true,
                      "description": "The VNet solution.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "x-nullable": true,
                          "description": "Type of VNet solution.",
                          "type": "string",
                          "enum": [
                            "serviceEndpoint",
                            "privateLink"
                          ],
                          "x-ms-enum": {
                            "name": "vNetSolutionType",
                            "modelAsString": true
                          }
                        },
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "secretStore": {
                      "x-nullable": true,
                      "description": "An option to store secret value in secure place",
                      "type": "object",
                      "properties": {
                        "keyVaultId": {
                          "x-nullable": true,
                          "type": "string",
                          "description": "The key vault id to store secret"
                        },
                        "keyVaultSecretName": {
                          "x-nullable": true,
                          "type": "string",
                          "description": "The key vault secret name to store secret, only valid when storing one secret"
                        }
                      }
                    },
                    "scope": {
                      "x-nullable": true,
                      "type": "string",
                      "description": "connection scope in source service."
                    },
                    "publicNetworkSolution": {
                      "x-nullable": true,
                      "description": "The network solution.",
                      "type": "object",
                      "properties": {
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation(such as firewall rules) when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        },
                        "action": {
                          "description": "Optional. Indicates public network solution. If enable, enable public network access of target service with best try. Default is enable. If optOut, opt out public network access configuration.",
                          "type": "string",
                          "enum": [
                            "enable",
                            "optOut"
                          ],
                          "x-ms-enum": {
                            "name": "actionType",
                            "modelAsString": true
                          }
                        },
                        "firewallRules": {
                          "description": "Describe firewall rules of target service to make sure source application could connect to the target.",
                          "type": "object",
                          "properties": {
                            "ipRanges": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account."
                            },
                            "azureServices": {
                              "description": "Allow Azure services to access the target service if true.",
                              "type": "string",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "x-ms-enum": {
                                "name": "allowType",
                                "modelAsString": true
                              }
                            },
                            "callerClientIP": {
                              "description": "Allow caller client IP to access the target service if true. the property is used when connecting local application to target service.",
                              "type": "string",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "x-ms-enum": {
                                "name": "allowType",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "configurationInfo": {
                      "x-nullable": true,
                      "description": "The connection information consumed by applications, including secrets, connection strings.",
                      "type": "object",
                      "properties": {
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        },
                        "action": {
                          "description": "Optional, indicate whether to apply configurations on source application. If enable, generate configurations and applied to the source application. Default is enable. If optOut, no configuration change will be made on source.",
                          "type": "string",
                          "enum": [
                            "enable",
                            "optOut"
                          ],
                          "x-ms-enum": {
                            "name": "actionType",
                            "modelAsString": true
                          }
                        },
                        "customizedKeys": {
                          "description": "Optional. A dictionary of default key name and customized key name mapping. If not specified, default key name will be used for generate configurations",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "daprProperties": {
                          "description": "Indicates some additional properties for dapr client type",
                          "type": "object",
                          "properties": {
                            "version": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The dapr component version"
                            },
                            "componentType": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The dapr component type"
                            },
                            "secretStoreComponent": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The name of a secret store dapr to retrieve secret"
                            },
                            "metadata": {
                              "description": "Additional dapr metadata",
                              "type": "array",
                              "items": {
                                "description": "The dapr component metadata.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Metadata property name.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Metadata property value.",
                                    "type": "string"
                                  },
                                  "secretRef": {
                                    "description": "The secret name where dapr could get value",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "The description of the metadata, returned from configuration api",
                                    "type": "string"
                                  },
                                  "required": {
                                    "description": "The value indicating whether the metadata is required or not",
                                    "type": "string",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "x-ms-enum": {
                                      "name": "DaprMetadataRequired",
                                      "modelAsString": true
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "scopes": {
                              "description": "The dapr component scopes",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "runtimeVersion": {
                              "x-nullable": true,
                              "type": "string",
                              "readOnly": true,
                              "description": "The runtime version supported by the properties"
                            },
                            "bindingComponentDirection": {
                              "x-nullable": true,
                              "type": "string",
                              "enum": [
                                "input",
                                "output"
                              ],
                              "x-ms-enum": {
                                "name": "DaprBindingComponentDirection",
                                "modelAsString": true
                              },
                              "readOnly": true,
                              "description": "The direction supported by the dapr binding component"
                            }
                          }
                        },
                        "additionalConfigurations": {
                          "description": "A dictionary of additional configurations to be added. Service will auto generate a set of basic configurations and this property is to full fill more customized configurations",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "additionalConnectionStringProperties": {
                          "description": "A dictionary of additional properties to be added in the end of connection string.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "configurationStore": {
                          "x-nullable": true,
                          "description": "An option to store configuration into different place",
                          "type": "object",
                          "properties": {
                            "appConfigurationId": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The app configuration id to store configuration"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Long running operation.",
            "schema": {
              "type": "object",
              "description": "Linker of source and target resource",
              "required": [
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "x-nullable": true,
                  "readOnly": true,
                  "description": "The system data.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of the Linker.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "targetService": {
                      "description": "The target service properties",
                      "discriminator": "type",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The target service type.",
                          "type": "string",
                          "enum": [
                            "AzureResource",
                            "ConfluentBootstrapServer",
                            "ConfluentSchemaRegistry",
                            "SelfHostedServer"
                          ],
                          "x-ms-enum": {
                            "name": "targetServiceType",
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "type"
                      ]
                    },
                    "authInfo": {
                      "description": "The authentication type.",
                      "discriminator": "authType",
                      "type": "object",
                      "properties": {
                        "authType": {
                          "description": "The authentication type.",
                          "type": "string",
                          "enum": [
                            "systemAssignedIdentity",
                            "userAssignedIdentity",
                            "servicePrincipalSecret",
                            "servicePrincipalCertificate",
                            "secret",
                            "accessKey",
                            "userAccount",
                            "easyAuthMicrosoftEntraID"
                          ],
                          "x-ms-enum": {
                            "name": "AuthType",
                            "modelAsString": true
                          }
                        },
                        "authMode": {
                          "description": "Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.",
                          "type": "string",
                          "enum": [
                            "optInAllAuth",
                            "optOutAllAuth"
                          ],
                          "x-ms-enum": {
                            "name": "authMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "optInAllAuth",
                                "description": "Default authentication configuration according to the authentication type."
                              },
                              {
                                "value": "optOutAllAuth",
                                "description": "Skip all authentication configuration such as enabling managed identity and granting RBAC roles"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "authType"
                      ]
                    },
                    "clientType": {
                      "description": "The application client type",
                      "type": "string",
                      "enum": [
                        "none",
                        "dotnet",
                        "java",
                        "python",
                        "go",
                        "php",
                        "ruby",
                        "django",
                        "nodejs",
                        "springBoot",
                        "kafka-springBoot",
                        "jms-springBoot",
                        "dapr"
                      ],
                      "x-ms-enum": {
                        "name": "clientType",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provisioning state. "
                    },
                    "vNetSolution": {
                      "x-nullable": true,
                      "description": "The VNet solution.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "x-nullable": true,
                          "description": "Type of VNet solution.",
                          "type": "string",
                          "enum": [
                            "serviceEndpoint",
                            "privateLink"
                          ],
                          "x-ms-enum": {
                            "name": "vNetSolutionType",
                            "modelAsString": true
                          }
                        },
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "secretStore": {
                      "x-nullable": true,
                      "description": "An option to store secret value in secure place",
                      "type": "object",
                      "properties": {
                        "keyVaultId": {
                          "x-nullable": true,
                          "type": "string",
                          "description": "The key vault id to store secret"
                        },
                        "keyVaultSecretName": {
                          "x-nullable": true,
                          "type": "string",
                          "description": "The key vault secret name to store secret, only valid when storing one secret"
                        }
                      }
                    },
                    "scope": {
                      "x-nullable": true,
                      "type": "string",
                      "description": "connection scope in source service."
                    },
                    "publicNetworkSolution": {
                      "x-nullable": true,
                      "description": "The network solution.",
                      "type": "object",
                      "properties": {
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation(such as firewall rules) when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        },
                        "action": {
                          "description": "Optional. Indicates public network solution. If enable, enable public network access of target service with best try. Default is enable. If optOut, opt out public network access configuration.",
                          "type": "string",
                          "enum": [
                            "enable",
                            "optOut"
                          ],
                          "x-ms-enum": {
                            "name": "actionType",
                            "modelAsString": true
                          }
                        },
                        "firewallRules": {
                          "description": "Describe firewall rules of target service to make sure source application could connect to the target.",
                          "type": "object",
                          "properties": {
                            "ipRanges": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account."
                            },
                            "azureServices": {
                              "description": "Allow Azure services to access the target service if true.",
                              "type": "string",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "x-ms-enum": {
                                "name": "allowType",
                                "modelAsString": true
                              }
                            },
                            "callerClientIP": {
                              "description": "Allow caller client IP to access the target service if true. the property is used when connecting local application to target service.",
                              "type": "string",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "x-ms-enum": {
                                "name": "allowType",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "configurationInfo": {
                      "x-nullable": true,
                      "description": "The connection information consumed by applications, including secrets, connection strings.",
                      "type": "object",
                      "properties": {
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        },
                        "action": {
                          "description": "Optional, indicate whether to apply configurations on source application. If enable, generate configurations and applied to the source application. Default is enable. If optOut, no configuration change will be made on source.",
                          "type": "string",
                          "enum": [
                            "enable",
                            "optOut"
                          ],
                          "x-ms-enum": {
                            "name": "actionType",
                            "modelAsString": true
                          }
                        },
                        "customizedKeys": {
                          "description": "Optional. A dictionary of default key name and customized key name mapping. If not specified, default key name will be used for generate configurations",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "daprProperties": {
                          "description": "Indicates some additional properties for dapr client type",
                          "type": "object",
                          "properties": {
                            "version": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The dapr component version"
                            },
                            "componentType": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The dapr component type"
                            },
                            "secretStoreComponent": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The name of a secret store dapr to retrieve secret"
                            },
                            "metadata": {
                              "description": "Additional dapr metadata",
                              "type": "array",
                              "items": {
                                "description": "The dapr component metadata.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Metadata property name.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Metadata property value.",
                                    "type": "string"
                                  },
                                  "secretRef": {
                                    "description": "The secret name where dapr could get value",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "The description of the metadata, returned from configuration api",
                                    "type": "string"
                                  },
                                  "required": {
                                    "description": "The value indicating whether the metadata is required or not",
                                    "type": "string",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "x-ms-enum": {
                                      "name": "DaprMetadataRequired",
                                      "modelAsString": true
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "scopes": {
                              "description": "The dapr component scopes",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "runtimeVersion": {
                              "x-nullable": true,
                              "type": "string",
                              "readOnly": true,
                              "description": "The runtime version supported by the properties"
                            },
                            "bindingComponentDirection": {
                              "x-nullable": true,
                              "type": "string",
                              "enum": [
                                "input",
                                "output"
                              ],
                              "x-ms-enum": {
                                "name": "DaprBindingComponentDirection",
                                "modelAsString": true
                              },
                              "readOnly": true,
                              "description": "The direction supported by the dapr binding component"
                            }
                          }
                        },
                        "additionalConfigurations": {
                          "description": "A dictionary of additional configurations to be added. Service will auto generate a set of basic configurations and this property is to full fill more customized configurations",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "additionalConnectionStringProperties": {
                          "description": "A dictionary of additional properties to be added in the end of connection string.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "configurationStore": {
                          "x-nullable": true,
                          "description": "An option to store configuration into different place",
                          "type": "object",
                          "properties": {
                            "appConfigurationId": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The app configuration id to store configuration"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Linkers"
        ],
        "operationId": "Linker_Delete",
        "description": "Delete a Linker.",
        "parameters": [
          {
            "name": "resourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified Azure Resource manager identifier of the resource to be connected.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "linkerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name Linker resource.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The Linker is deleted."
          },
          "202": {
            "description": "Long running operation."
          },
          "204": {
            "description": "Deleted. The Linker is not found."
          }
        }
      },
      "patch": {
        "tags": [
          "Linkers"
        ],
        "operationId": "Linker_Update",
        "description": "Operation to update an existing Linker.",
        "parameters": [
          {
            "name": "resourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified Azure Resource manager identifier of the resource to be connected.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "linkerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name Linker resource.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "description": "Linker details.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "A Linker to be updated.",
              "type": "object",
              "properties": {
                "properties": {
                  "description": "Linker properties",
                  "type": "object",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "targetService": {
                      "description": "The target service properties",
                      "discriminator": "type",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The target service type.",
                          "type": "string",
                          "enum": [
                            "AzureResource",
                            "ConfluentBootstrapServer",
                            "ConfluentSchemaRegistry",
                            "SelfHostedServer"
                          ],
                          "x-ms-enum": {
                            "name": "targetServiceType",
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "type"
                      ]
                    },
                    "authInfo": {
                      "description": "The authentication type.",
                      "discriminator": "authType",
                      "type": "object",
                      "properties": {
                        "authType": {
                          "description": "The authentication type.",
                          "type": "string",
                          "enum": [
                            "systemAssignedIdentity",
                            "userAssignedIdentity",
                            "servicePrincipalSecret",
                            "servicePrincipalCertificate",
                            "secret",
                            "accessKey",
                            "userAccount",
                            "easyAuthMicrosoftEntraID"
                          ],
                          "x-ms-enum": {
                            "name": "AuthType",
                            "modelAsString": true
                          }
                        },
                        "authMode": {
                          "description": "Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.",
                          "type": "string",
                          "enum": [
                            "optInAllAuth",
                            "optOutAllAuth"
                          ],
                          "x-ms-enum": {
                            "name": "authMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "optInAllAuth",
                                "description": "Default authentication configuration according to the authentication type."
                              },
                              {
                                "value": "optOutAllAuth",
                                "description": "Skip all authentication configuration such as enabling managed identity and granting RBAC roles"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "authType"
                      ]
                    },
                    "clientType": {
                      "description": "The application client type",
                      "type": "string",
                      "enum": [
                        "none",
                        "dotnet",
                        "java",
                        "python",
                        "go",
                        "php",
                        "ruby",
                        "django",
                        "nodejs",
                        "springBoot",
                        "kafka-springBoot",
                        "jms-springBoot",
                        "dapr"
                      ],
                      "x-ms-enum": {
                        "name": "clientType",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provisioning state. "
                    },
                    "vNetSolution": {
                      "x-nullable": true,
                      "description": "The VNet solution.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "x-nullable": true,
                          "description": "Type of VNet solution.",
                          "type": "string",
                          "enum": [
                            "serviceEndpoint",
                            "privateLink"
                          ],
                          "x-ms-enum": {
                            "name": "vNetSolutionType",
                            "modelAsString": true
                          }
                        },
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "secretStore": {
                      "x-nullable": true,
                      "description": "An option to store secret value in secure place",
                      "type": "object",
                      "properties": {
                        "keyVaultId": {
                          "x-nullable": true,
                          "type": "string",
                          "description": "The key vault id to store secret"
                        },
                        "keyVaultSecretName": {
                          "x-nullable": true,
                          "type": "string",
                          "description": "The key vault secret name to store secret, only valid when storing one secret"
                        }
                      }
                    },
                    "scope": {
                      "x-nullable": true,
                      "type": "string",
                      "description": "connection scope in source service."
                    },
                    "publicNetworkSolution": {
                      "x-nullable": true,
                      "description": "The network solution.",
                      "type": "object",
                      "properties": {
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation(such as firewall rules) when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        },
                        "action": {
                          "description": "Optional. Indicates public network solution. If enable, enable public network access of target service with best try. Default is enable. If optOut, opt out public network access configuration.",
                          "type": "string",
                          "enum": [
                            "enable",
                            "optOut"
                          ],
                          "x-ms-enum": {
                            "name": "actionType",
                            "modelAsString": true
                          }
                        },
                        "firewallRules": {
                          "description": "Describe firewall rules of target service to make sure source application could connect to the target.",
                          "type": "object",
                          "properties": {
                            "ipRanges": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account."
                            },
                            "azureServices": {
                              "description": "Allow Azure services to access the target service if true.",
                              "type": "string",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "x-ms-enum": {
                                "name": "allowType",
                                "modelAsString": true
                              }
                            },
                            "callerClientIP": {
                              "description": "Allow caller client IP to access the target service if true. the property is used when connecting local application to target service.",
                              "type": "string",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "x-ms-enum": {
                                "name": "allowType",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "configurationInfo": {
                      "x-nullable": true,
                      "description": "The connection information consumed by applications, including secrets, connection strings.",
                      "type": "object",
                      "properties": {
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        },
                        "action": {
                          "description": "Optional, indicate whether to apply configurations on source application. If enable, generate configurations and applied to the source application. Default is enable. If optOut, no configuration change will be made on source.",
                          "type": "string",
                          "enum": [
                            "enable",
                            "optOut"
                          ],
                          "x-ms-enum": {
                            "name": "actionType",
                            "modelAsString": true
                          }
                        },
                        "customizedKeys": {
                          "description": "Optional. A dictionary of default key name and customized key name mapping. If not specified, default key name will be used for generate configurations",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "daprProperties": {
                          "description": "Indicates some additional properties for dapr client type",
                          "type": "object",
                          "properties": {
                            "version": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The dapr component version"
                            },
                            "componentType": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The dapr component type"
                            },
                            "secretStoreComponent": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The name of a secret store dapr to retrieve secret"
                            },
                            "metadata": {
                              "description": "Additional dapr metadata",
                              "type": "array",
                              "items": {
                                "description": "The dapr component metadata.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Metadata property name.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Metadata property value.",
                                    "type": "string"
                                  },
                                  "secretRef": {
                                    "description": "The secret name where dapr could get value",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "The description of the metadata, returned from configuration api",
                                    "type": "string"
                                  },
                                  "required": {
                                    "description": "The value indicating whether the metadata is required or not",
                                    "type": "string",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "x-ms-enum": {
                                      "name": "DaprMetadataRequired",
                                      "modelAsString": true
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "scopes": {
                              "description": "The dapr component scopes",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "runtimeVersion": {
                              "x-nullable": true,
                              "type": "string",
                              "readOnly": true,
                              "description": "The runtime version supported by the properties"
                            },
                            "bindingComponentDirection": {
                              "x-nullable": true,
                              "type": "string",
                              "enum": [
                                "input",
                                "output"
                              ],
                              "x-ms-enum": {
                                "name": "DaprBindingComponentDirection",
                                "modelAsString": true
                              },
                              "readOnly": true,
                              "description": "The direction supported by the dapr binding component"
                            }
                          }
                        },
                        "additionalConfigurations": {
                          "description": "A dictionary of additional configurations to be added. Service will auto generate a set of basic configurations and this property is to full fill more customized configurations",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "additionalConnectionStringProperties": {
                          "description": "A dictionary of additional properties to be added in the end of connection string.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "configurationStore": {
                          "x-nullable": true,
                          "description": "An option to store configuration into different place",
                          "type": "object",
                          "properties": {
                            "appConfigurationId": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The app configuration id to store configuration"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes a Linker.",
            "schema": {
              "type": "object",
              "description": "Linker of source and target resource",
              "required": [
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "x-nullable": true,
                  "readOnly": true,
                  "description": "The system data.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of the Linker.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "targetService": {
                      "description": "The target service properties",
                      "discriminator": "type",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The target service type.",
                          "type": "string",
                          "enum": [
                            "AzureResource",
                            "ConfluentBootstrapServer",
                            "ConfluentSchemaRegistry",
                            "SelfHostedServer"
                          ],
                          "x-ms-enum": {
                            "name": "targetServiceType",
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "type"
                      ]
                    },
                    "authInfo": {
                      "description": "The authentication type.",
                      "discriminator": "authType",
                      "type": "object",
                      "properties": {
                        "authType": {
                          "description": "The authentication type.",
                          "type": "string",
                          "enum": [
                            "systemAssignedIdentity",
                            "userAssignedIdentity",
                            "servicePrincipalSecret",
                            "servicePrincipalCertificate",
                            "secret",
                            "accessKey",
                            "userAccount",
                            "easyAuthMicrosoftEntraID"
                          ],
                          "x-ms-enum": {
                            "name": "AuthType",
                            "modelAsString": true
                          }
                        },
                        "authMode": {
                          "description": "Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.",
                          "type": "string",
                          "enum": [
                            "optInAllAuth",
                            "optOutAllAuth"
                          ],
                          "x-ms-enum": {
                            "name": "authMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "optInAllAuth",
                                "description": "Default authentication configuration according to the authentication type."
                              },
                              {
                                "value": "optOutAllAuth",
                                "description": "Skip all authentication configuration such as enabling managed identity and granting RBAC roles"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "authType"
                      ]
                    },
                    "clientType": {
                      "description": "The application client type",
                      "type": "string",
                      "enum": [
                        "none",
                        "dotnet",
                        "java",
                        "python",
                        "go",
                        "php",
                        "ruby",
                        "django",
                        "nodejs",
                        "springBoot",
                        "kafka-springBoot",
                        "jms-springBoot",
                        "dapr"
                      ],
                      "x-ms-enum": {
                        "name": "clientType",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provisioning state. "
                    },
                    "vNetSolution": {
                      "x-nullable": true,
                      "description": "The VNet solution.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "x-nullable": true,
                          "description": "Type of VNet solution.",
                          "type": "string",
                          "enum": [
                            "serviceEndpoint",
                            "privateLink"
                          ],
                          "x-ms-enum": {
                            "name": "vNetSolutionType",
                            "modelAsString": true
                          }
                        },
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "secretStore": {
                      "x-nullable": true,
                      "description": "An option to store secret value in secure place",
                      "type": "object",
                      "properties": {
                        "keyVaultId": {
                          "x-nullable": true,
                          "type": "string",
                          "description": "The key vault id to store secret"
                        },
                        "keyVaultSecretName": {
                          "x-nullable": true,
                          "type": "string",
                          "description": "The key vault secret name to store secret, only valid when storing one secret"
                        }
                      }
                    },
                    "scope": {
                      "x-nullable": true,
                      "type": "string",
                      "description": "connection scope in source service."
                    },
                    "publicNetworkSolution": {
                      "x-nullable": true,
                      "description": "The network solution.",
                      "type": "object",
                      "properties": {
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation(such as firewall rules) when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        },
                        "action": {
                          "description": "Optional. Indicates public network solution. If enable, enable public network access of target service with best try. Default is enable. If optOut, opt out public network access configuration.",
                          "type": "string",
                          "enum": [
                            "enable",
                            "optOut"
                          ],
                          "x-ms-enum": {
                            "name": "actionType",
                            "modelAsString": true
                          }
                        },
                        "firewallRules": {
                          "description": "Describe firewall rules of target service to make sure source application could connect to the target.",
                          "type": "object",
                          "properties": {
                            "ipRanges": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account."
                            },
                            "azureServices": {
                              "description": "Allow Azure services to access the target service if true.",
                              "type": "string",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "x-ms-enum": {
                                "name": "allowType",
                                "modelAsString": true
                              }
                            },
                            "callerClientIP": {
                              "description": "Allow caller client IP to access the target service if true. the property is used when connecting local application to target service.",
                              "type": "string",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "x-ms-enum": {
                                "name": "allowType",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "configurationInfo": {
                      "x-nullable": true,
                      "description": "The connection information consumed by applications, including secrets, connection strings.",
                      "type": "object",
                      "properties": {
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        },
                        "action": {
                          "description": "Optional, indicate whether to apply configurations on source application. If enable, generate configurations and applied to the source application. Default is enable. If optOut, no configuration change will be made on source.",
                          "type": "string",
                          "enum": [
                            "enable",
                            "optOut"
                          ],
                          "x-ms-enum": {
                            "name": "actionType",
                            "modelAsString": true
                          }
                        },
                        "customizedKeys": {
                          "description": "Optional. A dictionary of default key name and customized key name mapping. If not specified, default key name will be used for generate configurations",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "daprProperties": {
                          "description": "Indicates some additional properties for dapr client type",
                          "type": "object",
                          "properties": {
                            "version": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The dapr component version"
                            },
                            "componentType": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The dapr component type"
                            },
                            "secretStoreComponent": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The name of a secret store dapr to retrieve secret"
                            },
                            "metadata": {
                              "description": "Additional dapr metadata",
                              "type": "array",
                              "items": {
                                "description": "The dapr component metadata.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Metadata property name.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Metadata property value.",
                                    "type": "string"
                                  },
                                  "secretRef": {
                                    "description": "The secret name where dapr could get value",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "The description of the metadata, returned from configuration api",
                                    "type": "string"
                                  },
                                  "required": {
                                    "description": "The value indicating whether the metadata is required or not",
                                    "type": "string",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "x-ms-enum": {
                                      "name": "DaprMetadataRequired",
                                      "modelAsString": true
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "scopes": {
                              "description": "The dapr component scopes",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "runtimeVersion": {
                              "x-nullable": true,
                              "type": "string",
                              "readOnly": true,
                              "description": "The runtime version supported by the properties"
                            },
                            "bindingComponentDirection": {
                              "x-nullable": true,
                              "type": "string",
                              "enum": [
                                "input",
                                "output"
                              ],
                              "x-ms-enum": {
                                "name": "DaprBindingComponentDirection",
                                "modelAsString": true
                              },
                              "readOnly": true,
                              "description": "The direction supported by the dapr binding component"
                            }
                          }
                        },
                        "additionalConfigurations": {
                          "description": "A dictionary of additional configurations to be added. Service will auto generate a set of basic configurations and this property is to full fill more customized configurations",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "additionalConnectionStringProperties": {
                          "description": "A dictionary of additional properties to be added in the end of connection string.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "configurationStore": {
                          "x-nullable": true,
                          "description": "An option to store configuration into different place",
                          "type": "object",
                          "properties": {
                            "appConfigurationId": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The app configuration id to store configuration"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Long running operation.",
            "schema": {
              "type": "object",
              "description": "Linker of source and target resource",
              "required": [
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "x-nullable": true,
                  "readOnly": true,
                  "description": "The system data.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of the Linker.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "targetService": {
                      "description": "The target service properties",
                      "discriminator": "type",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The target service type.",
                          "type": "string",
                          "enum": [
                            "AzureResource",
                            "ConfluentBootstrapServer",
                            "ConfluentSchemaRegistry",
                            "SelfHostedServer"
                          ],
                          "x-ms-enum": {
                            "name": "targetServiceType",
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "type"
                      ]
                    },
                    "authInfo": {
                      "description": "The authentication type.",
                      "discriminator": "authType",
                      "type": "object",
                      "properties": {
                        "authType": {
                          "description": "The authentication type.",
                          "type": "string",
                          "enum": [
                            "systemAssignedIdentity",
                            "userAssignedIdentity",
                            "servicePrincipalSecret",
                            "servicePrincipalCertificate",
                            "secret",
                            "accessKey",
                            "userAccount",
                            "easyAuthMicrosoftEntraID"
                          ],
                          "x-ms-enum": {
                            "name": "AuthType",
                            "modelAsString": true
                          }
                        },
                        "authMode": {
                          "description": "Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.",
                          "type": "string",
                          "enum": [
                            "optInAllAuth",
                            "optOutAllAuth"
                          ],
                          "x-ms-enum": {
                            "name": "authMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "optInAllAuth",
                                "description": "Default authentication configuration according to the authentication type."
                              },
                              {
                                "value": "optOutAllAuth",
                                "description": "Skip all authentication configuration such as enabling managed identity and granting RBAC roles"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "authType"
                      ]
                    },
                    "clientType": {
                      "description": "The application client type",
                      "type": "string",
                      "enum": [
                        "none",
                        "dotnet",
                        "java",
                        "python",
                        "go",
                        "php",
                        "ruby",
                        "django",
                        "nodejs",
                        "springBoot",
                        "kafka-springBoot",
                        "jms-springBoot",
                        "dapr"
                      ],
                      "x-ms-enum": {
                        "name": "clientType",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provisioning state. "
                    },
                    "vNetSolution": {
                      "x-nullable": true,
                      "description": "The VNet solution.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "x-nullable": true,
                          "description": "Type of VNet solution.",
                          "type": "string",
                          "enum": [
                            "serviceEndpoint",
                            "privateLink"
                          ],
                          "x-ms-enum": {
                            "name": "vNetSolutionType",
                            "modelAsString": true
                          }
                        },
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "secretStore": {
                      "x-nullable": true,
                      "description": "An option to store secret value in secure place",
                      "type": "object",
                      "properties": {
                        "keyVaultId": {
                          "x-nullable": true,
                          "type": "string",
                          "description": "The key vault id to store secret"
                        },
                        "keyVaultSecretName": {
                          "x-nullable": true,
                          "type": "string",
                          "description": "The key vault secret name to store secret, only valid when storing one secret"
                        }
                      }
                    },
                    "scope": {
                      "x-nullable": true,
                      "type": "string",
                      "description": "connection scope in source service."
                    },
                    "publicNetworkSolution": {
                      "x-nullable": true,
                      "description": "The network solution.",
                      "type": "object",
                      "properties": {
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation(such as firewall rules) when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        },
                        "action": {
                          "description": "Optional. Indicates public network solution. If enable, enable public network access of target service with best try. Default is enable. If optOut, opt out public network access configuration.",
                          "type": "string",
                          "enum": [
                            "enable",
                            "optOut"
                          ],
                          "x-ms-enum": {
                            "name": "actionType",
                            "modelAsString": true
                          }
                        },
                        "firewallRules": {
                          "description": "Describe firewall rules of target service to make sure source application could connect to the target.",
                          "type": "object",
                          "properties": {
                            "ipRanges": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account."
                            },
                            "azureServices": {
                              "description": "Allow Azure services to access the target service if true.",
                              "type": "string",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "x-ms-enum": {
                                "name": "allowType",
                                "modelAsString": true
                              }
                            },
                            "callerClientIP": {
                              "description": "Allow caller client IP to access the target service if true. the property is used when connecting local application to target service.",
                              "type": "string",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "x-ms-enum": {
                                "name": "allowType",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "configurationInfo": {
                      "x-nullable": true,
                      "description": "The connection information consumed by applications, including secrets, connection strings.",
                      "type": "object",
                      "properties": {
                        "deleteOrUpdateBehavior": {
                          "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                          "type": "string",
                          "enum": [
                            "Default",
                            "ForcedCleanup"
                          ],
                          "x-ms-enum": {
                            "name": "DeleteOrUpdateBehavior",
                            "modelAsString": true
                          }
                        },
                        "action": {
                          "description": "Optional, indicate whether to apply configurations on source application. If enable, generate configurations and applied to the source application. Default is enable. If optOut, no configuration change will be made on source.",
                          "type": "string",
                          "enum": [
                            "enable",
                            "optOut"
                          ],
                          "x-ms-enum": {
                            "name": "actionType",
                            "modelAsString": true
                          }
                        },
                        "customizedKeys": {
                          "description": "Optional. A dictionary of default key name and customized key name mapping. If not specified, default key name will be used for generate configurations",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "daprProperties": {
                          "description": "Indicates some additional properties for dapr client type",
                          "type": "object",
                          "properties": {
                            "version": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The dapr component version"
                            },
                            "componentType": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The dapr component type"
                            },
                            "secretStoreComponent": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The name of a secret store dapr to retrieve secret"
                            },
                            "metadata": {
                              "description": "Additional dapr metadata",
                              "type": "array",
                              "items": {
                                "description": "The dapr component metadata.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Metadata property name.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Metadata property value.",
                                    "type": "string"
                                  },
                                  "secretRef": {
                                    "description": "The secret name where dapr could get value",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "The description of the metadata, returned from configuration api",
                                    "type": "string"
                                  },
                                  "required": {
                                    "description": "The value indicating whether the metadata is required or not",
                                    "type": "string",
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "x-ms-enum": {
                                      "name": "DaprMetadataRequired",
                                      "modelAsString": true
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "scopes": {
                              "description": "The dapr component scopes",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "runtimeVersion": {
                              "x-nullable": true,
                              "type": "string",
                              "readOnly": true,
                              "description": "The runtime version supported by the properties"
                            },
                            "bindingComponentDirection": {
                              "x-nullable": true,
                              "type": "string",
                              "enum": [
                                "input",
                                "output"
                              ],
                              "x-ms-enum": {
                                "name": "DaprBindingComponentDirection",
                                "modelAsString": true
                              },
                              "readOnly": true,
                              "description": "The direction supported by the dapr binding component"
                            }
                          }
                        },
                        "additionalConfigurations": {
                          "description": "A dictionary of additional configurations to be added. Service will auto generate a set of basic configurations and this property is to full fill more customized configurations",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "additionalConnectionStringProperties": {
                          "description": "A dictionary of additional properties to be added in the end of connection string.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "configurationStore": {
                          "x-nullable": true,
                          "description": "An option to store configuration into different place",
                          "type": "object",
                          "properties": {
                            "appConfigurationId": {
                              "x-nullable": true,
                              "type": "string",
                              "description": "The app configuration id to store configuration"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ServiceLinker/linkers/{linkerName}/validateLinker": {
      "post": {
        "tags": [
          "Linkers"
        ],
        "operationId": "Linker_Validate",
        "description": "Validate a Linker.",
        "parameters": [
          {
            "name": "resourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified Azure Resource manager identifier of the resource to be connected.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "linkerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name Linker resource.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "description": "The validation operation result for a Linker.",
              "type": "object",
              "properties": {
                "properties": {
                  "x-nullable": true,
                  "description": "The validation result detail.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "linkerName": {
                      "x-nullable": true,
                      "description": "The linker name.",
                      "type": "string"
                    },
                    "isConnectionAvailable": {
                      "x-nullable": true,
                      "description": "A boolean value indicating whether the connection is available or not",
                      "type": "boolean"
                    },
                    "reportStartTimeUtc": {
                      "x-nullable": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "The start time of the validation report."
                    },
                    "reportEndTimeUtc": {
                      "x-nullable": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "The end time of the validation report."
                    },
                    "sourceId": {
                      "x-nullable": true,
                      "description": "The resource id of the Linker source application.",
                      "type": "string"
                    },
                    "targetId": {
                      "x-nullable": true,
                      "description": "The resource Id of target service.",
                      "type": "string"
                    },
                    "authType": {
                      "x-nullable": true,
                      "description": "The authentication type.",
                      "type": "string",
                      "enum": [
                        "systemAssignedIdentity",
                        "userAssignedIdentity",
                        "servicePrincipalSecret",
                        "servicePrincipalCertificate",
                        "secret",
                        "accessKey",
                        "userAccount",
                        "easyAuthMicrosoftEntraID"
                      ],
                      "x-ms-enum": {
                        "name": "AuthType",
                        "modelAsString": true
                      }
                    },
                    "validationDetail": {
                      "description": "The detail of validation result",
                      "type": "array",
                      "items": {
                        "description": "The validation item for a Linker.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The validation item name.",
                            "type": "string"
                          },
                          "description": {
                            "x-nullable": true,
                            "description": "The display name of validation item",
                            "type": "string"
                          },
                          "result": {
                            "x-nullable": true,
                            "description": "The result of validation",
                            "type": "string",
                            "enum": [
                              "success",
                              "failure",
                              "warning"
                            ],
                            "x-ms-enum": {
                              "name": "ValidationResultStatus",
                              "modelAsString": true
                            }
                          },
                          "errorMessage": {
                            "x-nullable": true,
                            "description": "The error message of validation result",
                            "type": "string"
                          },
                          "errorCode": {
                            "x-nullable": true,
                            "description": "The error code of validation result",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    }
                  }
                },
                "resourceId": {
                  "x-nullable": true,
                  "description": "Validated Linker id.",
                  "type": "string"
                },
                "status": {
                  "x-nullable": true,
                  "description": "Validation operation status.",
                  "type": "string"
                }
              }
            }
          },
          "202": {
            "description": "Accepted - Returns this status until the asynchronous operation has completed."
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ServiceLinker/linkers/{linkerName}/listConfigurations": {
      "post": {
        "tags": [
          "Linkers"
        ],
        "operationId": "Linker_ListConfigurations",
        "description": "list source configurations for a Linker.",
        "parameters": [
          {
            "name": "resourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified Azure Resource manager identifier of the resource to be connected.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "linkerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name Linker resource.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "description": "Configurations for source resource, include appSettings, connectionString and serviceBindings",
              "type": "object",
              "properties": {
                "configurations": {
                  "description": "The configuration properties for source resource.",
                  "type": "array",
                  "items": {
                    "description": "A configuration item for source resource",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of setting.",
                        "type": "string"
                      },
                      "value": {
                        "x-nullable": true,
                        "description": "The value of setting",
                        "type": "string"
                      },
                      "configType": {
                        "description": "The type of setting",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "Default",
                          "KeyVaultSecret"
                        ],
                        "x-ms-enum": {
                          "name": "LinkerConfigurationType",
                          "modelAsString": true
                        }
                      },
                      "keyVaultReferenceIdentity": {
                        "x-nullable": true,
                        "description": "The identity for key vault reference, system or user-assigned managed identity ID",
                        "type": "string"
                      },
                      "description": {
                        "x-nullable": true,
                        "description": "Descriptive information for the configuration",
                        "type": "string"
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ServiceLinker/dryruns": {
      "get": {
        "tags": [
          "Linkers"
        ],
        "operationId": "Linkers_ListDryrun",
        "description": "list dryrun jobs",
        "parameters": [
          {
            "name": "resourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified Azure Resource manager identifier of the resource to be connected.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "description": "The list of dryrun.",
              "type": "object",
              "properties": {
                "nextLink": {
                  "x-nullable": true,
                  "description": "The link used to get the next page of dryrun list.",
                  "type": "string"
                },
                "value": {
                  "description": "The list of dryrun.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "a dryrun job resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The properties of the dryrun job.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "parameters": {
                            "description": "The parameters of the dryrun",
                            "discriminator": "actionName",
                            "type": "object",
                            "properties": {
                              "actionName": {
                                "description": "The name of action for you dryrun job.",
                                "type": "string",
                                "enum": [
                                  "createOrUpdate"
                                ],
                                "x-ms-enum": {
                                  "name": "DryrunActionName",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "actionName"
                            ]
                          },
                          "prerequisiteResults": {
                            "readOnly": true,
                            "description": "the result of the dryrun",
                            "type": "array",
                            "items": {
                              "description": "A result of dryrun",
                              "discriminator": "type",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of dryrun result.",
                                  "type": "string",
                                  "enum": [
                                    "basicError",
                                    "permissionsMissing"
                                  ],
                                  "x-ms-enum": {
                                    "name": "DryrunPrerequisiteResultType",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "required": [
                                "type"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "operationPreviews": {
                            "readOnly": true,
                            "description": "the preview of the operations for creation",
                            "type": "array",
                            "items": {
                              "description": "The preview of the operations for creation",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "The operation name",
                                  "type": "string"
                                },
                                "operationType": {
                                  "description": "The operation type",
                                  "type": "string",
                                  "enum": [
                                    "configConnection",
                                    "configNetwork",
                                    "configAuth"
                                  ],
                                  "x-ms-enum": {
                                    "name": "DryrunPreviewOperationType",
                                    "modelAsString": true
                                  }
                                },
                                "description": {
                                  "description": "The description of the operation",
                                  "type": "string"
                                },
                                "action": {
                                  "description": "The action defined by RBAC, refer https://docs.microsoft.com/azure/role-based-access-control/role-definitions#actions-format",
                                  "type": "string"
                                },
                                "scope": {
                                  "description": "The scope of the operation, refer https://docs.microsoft.com/azure/role-based-access-control/scope-overview",
                                  "type": "string"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The provisioning state. "
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ServiceLinker/dryruns/{dryrunName}": {
      "get": {
        "tags": [
          "Linkers"
        ],
        "operationId": "Linkers_GetDryrun",
        "description": "get a dryrun job",
        "parameters": [
          {
            "name": "resourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified Azure Resource manager identifier of the resource to be connected.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "dryrunName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of dryrun.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "a dryrun job resource",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of the dryrun job.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "parameters": {
                      "description": "The parameters of the dryrun",
                      "discriminator": "actionName",
                      "type": "object",
                      "properties": {
                        "actionName": {
                          "description": "The name of action for you dryrun job.",
                          "type": "string",
                          "enum": [
                            "createOrUpdate"
                          ],
                          "x-ms-enum": {
                            "name": "DryrunActionName",
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "actionName"
                      ]
                    },
                    "prerequisiteResults": {
                      "readOnly": true,
                      "description": "the result of the dryrun",
                      "type": "array",
                      "items": {
                        "description": "A result of dryrun",
                        "discriminator": "type",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of dryrun result.",
                            "type": "string",
                            "enum": [
                              "basicError",
                              "permissionsMissing"
                            ],
                            "x-ms-enum": {
                              "name": "DryrunPrerequisiteResultType",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "operationPreviews": {
                      "readOnly": true,
                      "description": "the preview of the operations for creation",
                      "type": "array",
                      "items": {
                        "description": "The preview of the operations for creation",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The operation name",
                            "type": "string"
                          },
                          "operationType": {
                            "description": "The operation type",
                            "type": "string",
                            "enum": [
                              "configConnection",
                              "configNetwork",
                              "configAuth"
                            ],
                            "x-ms-enum": {
                              "name": "DryrunPreviewOperationType",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "description": "The description of the operation",
                            "type": "string"
                          },
                          "action": {
                            "description": "The action defined by RBAC, refer https://docs.microsoft.com/azure/role-based-access-control/role-definitions#actions-format",
                            "type": "string"
                          },
                          "scope": {
                            "description": "The scope of the operation, refer https://docs.microsoft.com/azure/role-based-access-control/scope-overview",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provisioning state. "
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Linkers"
        ],
        "operationId": "Linkers_CreateDryrun",
        "description": "create a dryrun job to do necessary check before actual creation",
        "parameters": [
          {
            "name": "resourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified Azure Resource manager identifier of the resource to be connected.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "dryrunName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of dryrun.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "description": "dryrun resource.",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "a dryrun job resource",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of the dryrun job.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "parameters": {
                      "description": "The parameters of the dryrun",
                      "discriminator": "actionName",
                      "type": "object",
                      "properties": {
                        "actionName": {
                          "description": "The name of action for you dryrun job.",
                          "type": "string",
                          "enum": [
                            "createOrUpdate"
                          ],
                          "x-ms-enum": {
                            "name": "DryrunActionName",
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "actionName"
                      ]
                    },
                    "prerequisiteResults": {
                      "readOnly": true,
                      "description": "the result of the dryrun",
                      "type": "array",
                      "items": {
                        "description": "A result of dryrun",
                        "discriminator": "type",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of dryrun result.",
                            "type": "string",
                            "enum": [
                              "basicError",
                              "permissionsMissing"
                            ],
                            "x-ms-enum": {
                              "name": "DryrunPrerequisiteResultType",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "operationPreviews": {
                      "readOnly": true,
                      "description": "the preview of the operations for creation",
                      "type": "array",
                      "items": {
                        "description": "The preview of the operations for creation",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The operation name",
                            "type": "string"
                          },
                          "operationType": {
                            "description": "The operation type",
                            "type": "string",
                            "enum": [
                              "configConnection",
                              "configNetwork",
                              "configAuth"
                            ],
                            "x-ms-enum": {
                              "name": "DryrunPreviewOperationType",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "description": "The description of the operation",
                            "type": "string"
                          },
                          "action": {
                            "description": "The action defined by RBAC, refer https://docs.microsoft.com/azure/role-based-access-control/role-definitions#actions-format",
                            "type": "string"
                          },
                          "scope": {
                            "description": "The scope of the operation, refer https://docs.microsoft.com/azure/role-based-access-control/scope-overview",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provisioning state. "
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "a dryrun job resource",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of the dryrun job.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "parameters": {
                      "description": "The parameters of the dryrun",
                      "discriminator": "actionName",
                      "type": "object",
                      "properties": {
                        "actionName": {
                          "description": "The name of action for you dryrun job.",
                          "type": "string",
                          "enum": [
                            "createOrUpdate"
                          ],
                          "x-ms-enum": {
                            "name": "DryrunActionName",
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "actionName"
                      ]
                    },
                    "prerequisiteResults": {
                      "readOnly": true,
                      "description": "the result of the dryrun",
                      "type": "array",
                      "items": {
                        "description": "A result of dryrun",
                        "discriminator": "type",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of dryrun result.",
                            "type": "string",
                            "enum": [
                              "basicError",
                              "permissionsMissing"
                            ],
                            "x-ms-enum": {
                              "name": "DryrunPrerequisiteResultType",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "operationPreviews": {
                      "readOnly": true,
                      "description": "the preview of the operations for creation",
                      "type": "array",
                      "items": {
                        "description": "The preview of the operations for creation",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The operation name",
                            "type": "string"
                          },
                          "operationType": {
                            "description": "The operation type",
                            "type": "string",
                            "enum": [
                              "configConnection",
                              "configNetwork",
                              "configAuth"
                            ],
                            "x-ms-enum": {
                              "name": "DryrunPreviewOperationType",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "description": "The description of the operation",
                            "type": "string"
                          },
                          "action": {
                            "description": "The action defined by RBAC, refer https://docs.microsoft.com/azure/role-based-access-control/role-definitions#actions-format",
                            "type": "string"
                          },
                          "scope": {
                            "description": "The scope of the operation, refer https://docs.microsoft.com/azure/role-based-access-control/scope-overview",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provisioning state. "
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Long running operation",
            "schema": {
              "type": "object",
              "description": "a dryrun job resource",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of the dryrun job.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "parameters": {
                      "description": "The parameters of the dryrun",
                      "discriminator": "actionName",
                      "type": "object",
                      "properties": {
                        "actionName": {
                          "description": "The name of action for you dryrun job.",
                          "type": "string",
                          "enum": [
                            "createOrUpdate"
                          ],
                          "x-ms-enum": {
                            "name": "DryrunActionName",
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "actionName"
                      ]
                    },
                    "prerequisiteResults": {
                      "readOnly": true,
                      "description": "the result of the dryrun",
                      "type": "array",
                      "items": {
                        "description": "A result of dryrun",
                        "discriminator": "type",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of dryrun result.",
                            "type": "string",
                            "enum": [
                              "basicError",
                              "permissionsMissing"
                            ],
                            "x-ms-enum": {
                              "name": "DryrunPrerequisiteResultType",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "operationPreviews": {
                      "readOnly": true,
                      "description": "the preview of the operations for creation",
                      "type": "array",
                      "items": {
                        "description": "The preview of the operations for creation",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The operation name",
                            "type": "string"
                          },
                          "operationType": {
                            "description": "The operation type",
                            "type": "string",
                            "enum": [
                              "configConnection",
                              "configNetwork",
                              "configAuth"
                            ],
                            "x-ms-enum": {
                              "name": "DryrunPreviewOperationType",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "description": "The description of the operation",
                            "type": "string"
                          },
                          "action": {
                            "description": "The action defined by RBAC, refer https://docs.microsoft.com/azure/role-based-access-control/role-definitions#actions-format",
                            "type": "string"
                          },
                          "scope": {
                            "description": "The scope of the operation, refer https://docs.microsoft.com/azure/role-based-access-control/scope-overview",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provisioning state. "
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Linkers"
        ],
        "operationId": "Linkers_UpdateDryrun",
        "description": "add a dryrun job to do necessary check before actual creation",
        "parameters": [
          {
            "name": "resourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified Azure Resource manager identifier of the resource to be connected.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "dryrunName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of dryrun.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "description": "dryrun resource.",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "a dryrun job to be updated.",
              "properties": {
                "properties": {
                  "description": "The properties of the dryrun job.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "parameters": {
                      "description": "The parameters of the dryrun",
                      "discriminator": "actionName",
                      "type": "object",
                      "properties": {
                        "actionName": {
                          "description": "The name of action for you dryrun job.",
                          "type": "string",
                          "enum": [
                            "createOrUpdate"
                          ],
                          "x-ms-enum": {
                            "name": "DryrunActionName",
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "actionName"
                      ]
                    },
                    "prerequisiteResults": {
                      "readOnly": true,
                      "description": "the result of the dryrun",
                      "type": "array",
                      "items": {
                        "description": "A result of dryrun",
                        "discriminator": "type",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of dryrun result.",
                            "type": "string",
                            "enum": [
                              "basicError",
                              "permissionsMissing"
                            ],
                            "x-ms-enum": {
                              "name": "DryrunPrerequisiteResultType",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "operationPreviews": {
                      "readOnly": true,
                      "description": "the preview of the operations for creation",
                      "type": "array",
                      "items": {
                        "description": "The preview of the operations for creation",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The operation name",
                            "type": "string"
                          },
                          "operationType": {
                            "description": "The operation type",
                            "type": "string",
                            "enum": [
                              "configConnection",
                              "configNetwork",
                              "configAuth"
                            ],
                            "x-ms-enum": {
                              "name": "DryrunPreviewOperationType",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "description": "The description of the operation",
                            "type": "string"
                          },
                          "action": {
                            "description": "The action defined by RBAC, refer https://docs.microsoft.com/azure/role-based-access-control/role-definitions#actions-format",
                            "type": "string"
                          },
                          "scope": {
                            "description": "The scope of the operation, refer https://docs.microsoft.com/azure/role-based-access-control/scope-overview",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provisioning state. "
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "a dryrun job resource",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of the dryrun job.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "parameters": {
                      "description": "The parameters of the dryrun",
                      "discriminator": "actionName",
                      "type": "object",
                      "properties": {
                        "actionName": {
                          "description": "The name of action for you dryrun job.",
                          "type": "string",
                          "enum": [
                            "createOrUpdate"
                          ],
                          "x-ms-enum": {
                            "name": "DryrunActionName",
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "actionName"
                      ]
                    },
                    "prerequisiteResults": {
                      "readOnly": true,
                      "description": "the result of the dryrun",
                      "type": "array",
                      "items": {
                        "description": "A result of dryrun",
                        "discriminator": "type",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of dryrun result.",
                            "type": "string",
                            "enum": [
                              "basicError",
                              "permissionsMissing"
                            ],
                            "x-ms-enum": {
                              "name": "DryrunPrerequisiteResultType",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "operationPreviews": {
                      "readOnly": true,
                      "description": "the preview of the operations for creation",
                      "type": "array",
                      "items": {
                        "description": "The preview of the operations for creation",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The operation name",
                            "type": "string"
                          },
                          "operationType": {
                            "description": "The operation type",
                            "type": "string",
                            "enum": [
                              "configConnection",
                              "configNetwork",
                              "configAuth"
                            ],
                            "x-ms-enum": {
                              "name": "DryrunPreviewOperationType",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "description": "The description of the operation",
                            "type": "string"
                          },
                          "action": {
                            "description": "The action defined by RBAC, refer https://docs.microsoft.com/azure/role-based-access-control/role-definitions#actions-format",
                            "type": "string"
                          },
                          "scope": {
                            "description": "The scope of the operation, refer https://docs.microsoft.com/azure/role-based-access-control/scope-overview",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The provisioning state. "
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted - Returns this status until the asynchronous operation has completed."
          }
        }
      },
      "delete": {
        "tags": [
          "Linkers"
        ],
        "operationId": "Linkers_DeleteDryrun",
        "description": "delete a dryrun job",
        "parameters": [
          {
            "name": "resourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified Azure Resource manager identifier of the resource to be connected.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "dryrunName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of dryrun.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The job is deleted."
          },
          "204": {
            "description": "Deleted. The job is not found."
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ServiceLinker/linkers/{linkerName}/generateConfigurations": {
      "post": {
        "tags": [
          "Linkers"
        ],
        "operationId": "Linkers_GenerateConfigurations",
        "description": "Generate configurations for a Linker.",
        "parameters": [
          {
            "name": "resourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified Azure Resource manager identifier of the resource to be connected.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "linkerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name Linker resource.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "description": "Connection Info, including format, secret store, etc",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "description": "The configuration information, used to generate configurations or save to applications",
              "properties": {
                "deleteOrUpdateBehavior": {
                  "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                  "type": "string",
                  "enum": [
                    "Default",
                    "ForcedCleanup"
                  ],
                  "x-ms-enum": {
                    "name": "DeleteOrUpdateBehavior",
                    "modelAsString": true
                  }
                },
                "action": {
                  "description": "Optional, indicate whether to apply configurations on source application. If enable, generate configurations and applied to the source application. Default is enable. If optOut, no configuration change will be made on source.",
                  "type": "string",
                  "enum": [
                    "enable",
                    "optOut"
                  ],
                  "x-ms-enum": {
                    "name": "actionType",
                    "modelAsString": true
                  }
                },
                "customizedKeys": {
                  "description": "Optional. A dictionary of default key name and customized key name mapping. If not specified, default key name will be used for generate configurations",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "daprProperties": {
                  "description": "Indicates some additional properties for dapr client type",
                  "type": "object",
                  "properties": {
                    "version": {
                      "x-nullable": true,
                      "type": "string",
                      "description": "The dapr component version"
                    },
                    "componentType": {
                      "x-nullable": true,
                      "type": "string",
                      "description": "The dapr component type"
                    },
                    "secretStoreComponent": {
                      "x-nullable": true,
                      "type": "string",
                      "description": "The name of a secret store dapr to retrieve secret"
                    },
                    "metadata": {
                      "description": "Additional dapr metadata",
                      "type": "array",
                      "items": {
                        "description": "The dapr component metadata.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Metadata property name.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Metadata property value.",
                            "type": "string"
                          },
                          "secretRef": {
                            "description": "The secret name where dapr could get value",
                            "type": "string"
                          },
                          "description": {
                            "description": "The description of the metadata, returned from configuration api",
                            "type": "string"
                          },
                          "required": {
                            "description": "The value indicating whether the metadata is required or not",
                            "type": "string",
                            "enum": [
                              "true",
                              "false"
                            ],
                            "x-ms-enum": {
                              "name": "DaprMetadataRequired",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "scopes": {
                      "description": "The dapr component scopes",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "runtimeVersion": {
                      "x-nullable": true,
                      "type": "string",
                      "readOnly": true,
                      "description": "The runtime version supported by the properties"
                    },
                    "bindingComponentDirection": {
                      "x-nullable": true,
                      "type": "string",
                      "enum": [
                        "input",
                        "output"
                      ],
                      "x-ms-enum": {
                        "name": "DaprBindingComponentDirection",
                        "modelAsString": true
                      },
                      "readOnly": true,
                      "description": "The direction supported by the dapr binding component"
                    }
                  }
                },
                "additionalConfigurations": {
                  "description": "A dictionary of additional configurations to be added. Service will auto generate a set of basic configurations and this property is to full fill more customized configurations",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "additionalConnectionStringProperties": {
                  "description": "A dictionary of additional properties to be added in the end of connection string.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "configurationStore": {
                  "x-nullable": true,
                  "description": "An option to store configuration into different place",
                  "type": "object",
                  "properties": {
                    "appConfigurationId": {
                      "x-nullable": true,
                      "type": "string",
                      "description": "The app configuration id to store configuration"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "description": "Configurations for source resource, include appSettings, connectionString and serviceBindings",
              "type": "object",
              "properties": {
                "configurations": {
                  "description": "The configuration properties for source resource.",
                  "type": "array",
                  "items": {
                    "description": "A configuration item for source resource",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of setting.",
                        "type": "string"
                      },
                      "value": {
                        "x-nullable": true,
                        "description": "The value of setting",
                        "type": "string"
                      },
                      "configType": {
                        "description": "The type of setting",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "Default",
                          "KeyVaultSecret"
                        ],
                        "x-ms-enum": {
                          "name": "LinkerConfigurationType",
                          "modelAsString": true
                        }
                      },
                      "keyVaultReferenceIdentity": {
                        "x-nullable": true,
                        "description": "The identity for key vault reference, system or user-assigned managed identity ID",
                        "type": "string"
                      },
                      "description": {
                        "x-nullable": true,
                        "description": "Descriptive information for the configuration",
                        "type": "string"
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.ServiceLinker/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "Lists the available ServiceLinker REST API operations.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of operations supported by the resource provider",
                  "items": {
                    "type": "object",
                    "title": "REST API Operation",
                    "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
                        "readOnly": true
                      },
                      "isDataAction": {
                        "type": "boolean",
                        "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
                        "readOnly": true
                      },
                      "display": {
                        "type": "object",
                        "description": "Localized display information for this particular operation.",
                        "properties": {
                          "provider": {
                            "type": "string",
                            "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
                            "readOnly": true
                          },
                          "resource": {
                            "type": "string",
                            "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
                            "readOnly": true
                          },
                          "operation": {
                            "type": "string",
                            "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
                            "readOnly": true
                          },
                          "description": {
                            "type": "string",
                            "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
                            "readOnly": true
                          }
                        }
                      },
                      "origin": {
                        "type": "string",
                        "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
                        "enum": [
                          "user",
                          "system",
                          "user,system"
                        ],
                        "x-ms-enum": {
                          "name": "Origin",
                          "modelAsString": true
                        },
                        "readOnly": true
                      },
                      "actionType": {
                        "type": "string",
                        "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
                        "enum": [
                          "Internal"
                        ],
                        "x-ms-enum": {
                          "name": "ActionType",
                          "modelAsString": true
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to get the next set of operation list results (if there are any).",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.ServiceLinker/configurationNames": {
      "get": {
        "tags": [
          "ConfigurationNames"
        ],
        "operationId": "ConfigurationNames_List",
        "description": "Lists the configuration names generated by Service Connector for all target, client types, auth types.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter options."
          },
          {
            "name": "$skipToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData skipToken option for pagination."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "description": "Configuration Name list which will be set based on different target resource, client type, auth type.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Expected configuration names for each target service.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "properties": {
                        "x-nullable": true,
                        "description": "The result detail.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "targetService": {
                            "type": "string",
                            "description": "The target service provider name and resource name."
                          },
                          "clientType": {
                            "description": "The client type for configuration names.",
                            "type": "string",
                            "enum": [
                              "none",
                              "dotnet",
                              "java",
                              "python",
                              "go",
                              "php",
                              "ruby",
                              "django",
                              "nodejs",
                              "springBoot",
                              "kafka-springBoot",
                              "jms-springBoot",
                              "dapr"
                            ],
                            "x-ms-enum": {
                              "name": "clientType",
                              "modelAsString": true
                            }
                          },
                          "authType": {
                            "description": "The auth type.",
                            "type": "string",
                            "enum": [
                              "systemAssignedIdentity",
                              "userAssignedIdentity",
                              "servicePrincipalSecret",
                              "servicePrincipalCertificate",
                              "secret",
                              "accessKey",
                              "userAccount",
                              "easyAuthMicrosoftEntraID"
                            ],
                            "x-ms-enum": {
                              "name": "AuthType",
                              "modelAsString": true
                            }
                          },
                          "secretType": {
                            "description": "Indicates where the secrets in configuration from. Used when secrets are from Keyvault.",
                            "type": "string",
                            "enum": [
                              "rawValue",
                              "keyVaultSecret"
                            ],
                            "x-ms-enum": {
                              "name": "SecretSourceType",
                              "modelAsString": true
                            }
                          },
                          "daprProperties": {
                            "description": "Deprecated, please use #/definitions/DaprConfigurationList instead",
                            "type": "object",
                            "properties": {
                              "version": {
                                "x-nullable": true,
                                "type": "string",
                                "description": "The dapr component version"
                              },
                              "componentType": {
                                "x-nullable": true,
                                "type": "string",
                                "description": "The dapr component type"
                              },
                              "secretStoreComponent": {
                                "x-nullable": true,
                                "type": "string",
                                "description": "The name of a secret store dapr to retrieve secret"
                              },
                              "metadata": {
                                "description": "Additional dapr metadata",
                                "type": "array",
                                "items": {
                                  "description": "The dapr component metadata.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Metadata property name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Metadata property value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "The secret name where dapr could get value",
                                      "type": "string"
                                    },
                                    "description": {
                                      "description": "The description of the metadata, returned from configuration api",
                                      "type": "string"
                                    },
                                    "required": {
                                      "description": "The value indicating whether the metadata is required or not",
                                      "type": "string",
                                      "enum": [
                                        "true",
                                        "false"
                                      ],
                                      "x-ms-enum": {
                                        "name": "DaprMetadataRequired",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "scopes": {
                                "description": "The dapr component scopes",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "runtimeVersion": {
                                "x-nullable": true,
                                "type": "string",
                                "readOnly": true,
                                "description": "The runtime version supported by the properties"
                              },
                              "bindingComponentDirection": {
                                "x-nullable": true,
                                "type": "string",
                                "enum": [
                                  "input",
                                  "output"
                                ],
                                "x-ms-enum": {
                                  "name": "DaprBindingComponentDirection",
                                  "modelAsString": true
                                },
                                "readOnly": true,
                                "description": "The direction supported by the dapr binding component"
                              }
                            }
                          },
                          "names": {
                            "type": "array",
                            "description": "The configuration names to be set in compute service environment.",
                            "items": {
                              "type": "object",
                              "description": "The configuration names.",
                              "properties": {
                                "value": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string",
                                  "description": "Description for the configuration name."
                                },
                                "required": {
                                  "type": "boolean",
                                  "description": "Represent the configuration is required or not"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": []
                },
                "nextLink": {
                  "description": "Link to next page of resources.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ServiceLinker/daprConfigurations": {
      "get": {
        "tags": [
          "Linkers"
        ],
        "operationId": "Linkers_ListDaprConfigurations",
        "description": "List the dapr configuration supported by Service Connector.",
        "parameters": [
          {
            "name": "resourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The fully qualified Azure Resource manager identifier of the resource to be connected.",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "description": "Dapr configuration list supported by Service Connector",
              "type": "object",
              "properties": {
                "value": {
                  "description": "The list of dapr configurations",
                  "type": "array",
                  "items": {
                    "description": "Represent one resource of the dapr configuration list",
                    "type": "object",
                    "properties": {
                      "properties": {
                        "description": "The properties of the dapr configuration.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "targetType": {
                            "type": "string",
                            "description": "Supported target resource type, extract from resource id, uppercase"
                          },
                          "authType": {
                            "description": "The authentication type.",
                            "type": "string",
                            "enum": [
                              "systemAssignedIdentity",
                              "userAssignedIdentity",
                              "servicePrincipalSecret",
                              "servicePrincipalCertificate",
                              "secret",
                              "accessKey",
                              "userAccount",
                              "easyAuthMicrosoftEntraID"
                            ],
                            "x-ms-enum": {
                              "name": "AuthType",
                              "modelAsString": true
                            }
                          },
                          "daprProperties": {
                            "type": "object",
                            "description": "Indicates some additional properties for dapr client type",
                            "properties": {
                              "version": {
                                "x-nullable": true,
                                "type": "string",
                                "description": "The dapr component version"
                              },
                              "componentType": {
                                "x-nullable": true,
                                "type": "string",
                                "description": "The dapr component type"
                              },
                              "secretStoreComponent": {
                                "x-nullable": true,
                                "type": "string",
                                "description": "The name of a secret store dapr to retrieve secret"
                              },
                              "metadata": {
                                "description": "Additional dapr metadata",
                                "type": "array",
                                "items": {
                                  "description": "The dapr component metadata.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Metadata property name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Metadata property value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "The secret name where dapr could get value",
                                      "type": "string"
                                    },
                                    "description": {
                                      "description": "The description of the metadata, returned from configuration api",
                                      "type": "string"
                                    },
                                    "required": {
                                      "description": "The value indicating whether the metadata is required or not",
                                      "type": "string",
                                      "enum": [
                                        "true",
                                        "false"
                                      ],
                                      "x-ms-enum": {
                                        "name": "DaprMetadataRequired",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "scopes": {
                                "description": "The dapr component scopes",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "runtimeVersion": {
                                "x-nullable": true,
                                "type": "string",
                                "readOnly": true,
                                "description": "The runtime version supported by the properties"
                              },
                              "bindingComponentDirection": {
                                "x-nullable": true,
                                "type": "string",
                                "enum": [
                                  "input",
                                  "output"
                                ],
                                "x-ms-enum": {
                                  "name": "DaprBindingComponentDirection",
                                  "modelAsString": true
                                },
                                "readOnly": true,
                                "description": "The direction supported by the dapr binding component"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": []
                },
                "nextLink": {
                  "description": "Link to next page of resources.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "TargetServiceType": {
      "description": "The target service type.",
      "type": "string",
      "enum": [
        "AzureResource",
        "ConfluentBootstrapServer",
        "ConfluentSchemaRegistry",
        "SelfHostedServer"
      ],
      "x-ms-enum": {
        "name": "targetServiceType",
        "modelAsString": true
      }
    },
    "TargetServiceBase": {
      "description": "The target service properties",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "description": "The target service type.",
          "type": "string",
          "enum": [
            "AzureResource",
            "ConfluentBootstrapServer",
            "ConfluentSchemaRegistry",
            "SelfHostedServer"
          ],
          "x-ms-enum": {
            "name": "targetServiceType",
            "modelAsString": true
          }
        }
      },
      "required": [
        "type"
      ]
    },
    "AzureResourceType": {
      "description": "The azure resource type.",
      "type": "string",
      "enum": [
        "KeyVault"
      ],
      "x-ms-enum": {
        "name": "azureResourceType",
        "modelAsString": true
      }
    },
    "AzureResourcePropertiesBase": {
      "description": "The azure resource properties",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "description": "The azure resource type.",
          "type": "string",
          "enum": [
            "KeyVault"
          ],
          "x-ms-enum": {
            "name": "azureResourceType",
            "modelAsString": true
          }
        }
      },
      "required": [
        "type"
      ]
    },
    "AzureResource": {
      "x-ms-discriminator-value": "AzureResource",
      "type": "object",
      "description": "The azure resource info when target service type is AzureResource",
      "allOf": [
        {
          "description": "The target service properties",
          "discriminator": "type",
          "type": "object",
          "properties": {
            "type": {
              "description": "The target service type.",
              "type": "string",
              "enum": [
                "AzureResource",
                "ConfluentBootstrapServer",
                "ConfluentSchemaRegistry",
                "SelfHostedServer"
              ],
              "x-ms-enum": {
                "name": "targetServiceType",
                "modelAsString": true
              }
            }
          },
          "required": [
            "type"
          ]
        }
      ],
      "properties": {
        "id": {
          "description": "The Id of azure resource.",
          "type": "string"
        },
        "resourceProperties": {
          "x-nullable": true,
          "description": "The azure resource connection related properties.",
          "discriminator": "type",
          "type": "object",
          "properties": {
            "type": {
              "description": "The azure resource type.",
              "type": "string",
              "enum": [
                "KeyVault"
              ],
              "x-ms-enum": {
                "name": "azureResourceType",
                "modelAsString": true
              }
            }
          },
          "required": [
            "type"
          ]
        }
      }
    },
    "AzureKeyVaultProperties": {
      "x-ms-discriminator-value": "KeyVault",
      "type": "object",
      "description": "The resource properties when type is Azure Key Vault",
      "allOf": [
        {
          "description": "The azure resource properties",
          "discriminator": "type",
          "type": "object",
          "properties": {
            "type": {
              "description": "The azure resource type.",
              "type": "string",
              "enum": [
                "KeyVault"
              ],
              "x-ms-enum": {
                "name": "azureResourceType",
                "modelAsString": true
              }
            }
          },
          "required": [
            "type"
          ]
        }
      ],
      "properties": {
        "connectAsKubernetesCsiDriver": {
          "x-nullable": true,
          "description": "True if connect via Kubernetes CSI Driver.",
          "type": "boolean"
        }
      }
    },
    "ConfluentBootstrapServer": {
      "x-ms-discriminator-value": "ConfluentBootstrapServer",
      "type": "object",
      "description": "The service properties when target service type is ConfluentBootstrapServer",
      "allOf": [
        {
          "description": "The target service properties",
          "discriminator": "type",
          "type": "object",
          "properties": {
            "type": {
              "description": "The target service type.",
              "type": "string",
              "enum": [
                "AzureResource",
                "ConfluentBootstrapServer",
                "ConfluentSchemaRegistry",
                "SelfHostedServer"
              ],
              "x-ms-enum": {
                "name": "targetServiceType",
                "modelAsString": true
              }
            }
          },
          "required": [
            "type"
          ]
        }
      ],
      "properties": {
        "endpoint": {
          "description": "The endpoint of service.",
          "type": "string"
        }
      }
    },
    "SelfHostedServer": {
      "x-ms-discriminator-value": "SelfHostedServer",
      "type": "object",
      "description": "The service properties when target service type is SelfHostedServer",
      "allOf": [
        {
          "description": "The target service properties",
          "discriminator": "type",
          "type": "object",
          "properties": {
            "type": {
              "description": "The target service type.",
              "type": "string",
              "enum": [
                "AzureResource",
                "ConfluentBootstrapServer",
                "ConfluentSchemaRegistry",
                "SelfHostedServer"
              ],
              "x-ms-enum": {
                "name": "targetServiceType",
                "modelAsString": true
              }
            }
          },
          "required": [
            "type"
          ]
        }
      ],
      "properties": {
        "endpoint": {
          "description": "The endpoint of service.",
          "type": "string"
        }
      }
    },
    "ConfluentSchemaRegistry": {
      "x-ms-discriminator-value": "ConfluentSchemaRegistry",
      "type": "object",
      "description": "The service properties when target service type is ConfluentSchemaRegistry",
      "allOf": [
        {
          "description": "The target service properties",
          "discriminator": "type",
          "type": "object",
          "properties": {
            "type": {
              "description": "The target service type.",
              "type": "string",
              "enum": [
                "AzureResource",
                "ConfluentBootstrapServer",
                "ConfluentSchemaRegistry",
                "SelfHostedServer"
              ],
              "x-ms-enum": {
                "name": "targetServiceType",
                "modelAsString": true
              }
            }
          },
          "required": [
            "type"
          ]
        }
      ],
      "properties": {
        "endpoint": {
          "description": "The endpoint of service.",
          "type": "string"
        }
      }
    },
    "DeleteOrUpdateBehavior": {
      "description": "The cleanup behavior to indicate whether clean up operation when resource is deleted or updated",
      "type": "string",
      "enum": [
        "Default",
        "ForcedCleanup"
      ],
      "x-ms-enum": {
        "name": "DeleteOrUpdateBehavior",
        "modelAsString": true
      }
    },
    "ClientType": {
      "description": "The application client type",
      "type": "string",
      "enum": [
        "none",
        "dotnet",
        "java",
        "python",
        "go",
        "php",
        "ruby",
        "django",
        "nodejs",
        "springBoot",
        "kafka-springBoot",
        "jms-springBoot",
        "dapr"
      ],
      "x-ms-enum": {
        "name": "clientType",
        "modelAsString": true
      }
    },
    "AuthType": {
      "description": "The authentication type.",
      "type": "string",
      "enum": [
        "systemAssignedIdentity",
        "userAssignedIdentity",
        "servicePrincipalSecret",
        "servicePrincipalCertificate",
        "secret",
        "accessKey",
        "userAccount",
        "easyAuthMicrosoftEntraID"
      ],
      "x-ms-enum": {
        "name": "AuthType",
        "modelAsString": true
      }
    },
    "SecretType": {
      "description": "The secret type.",
      "type": "string",
      "enum": [
        "rawValue",
        "keyVaultSecretUri",
        "keyVaultSecretReference"
      ],
      "x-ms-enum": {
        "name": "SecretType",
        "modelAsString": true
      }
    },
    "SecretSourceType": {
      "description": "The type of secret source.",
      "type": "string",
      "enum": [
        "rawValue",
        "keyVaultSecret"
      ],
      "x-ms-enum": {
        "name": "SecretSourceType",
        "modelAsString": true
      }
    },
    "SecretInfoBase": {
      "description": "The secret info",
      "discriminator": "secretType",
      "type": "object",
      "properties": {
        "secretType": {
          "description": "The secret type.",
          "type": "string",
          "enum": [
            "rawValue",
            "keyVaultSecretUri",
            "keyVaultSecretReference"
          ],
          "x-ms-enum": {
            "name": "SecretType",
            "modelAsString": true
          }
        }
      },
      "required": [
        "secretType"
      ]
    },
    "ValueSecretInfo": {
      "x-ms-discriminator-value": "rawValue",
      "type": "object",
      "description": "The secret info when type is rawValue. It's for scenarios that user input the secret.",
      "allOf": [
        {
          "description": "The secret info",
          "discriminator": "secretType",
          "type": "object",
          "properties": {
            "secretType": {
              "description": "The secret type.",
              "type": "string",
              "enum": [
                "rawValue",
                "keyVaultSecretUri",
                "keyVaultSecretReference"
              ],
              "x-ms-enum": {
                "name": "SecretType",
                "modelAsString": true
              }
            }
          },
          "required": [
            "secretType"
          ]
        }
      ],
      "properties": {
        "value": {
          "x-nullable": true,
          "description": "The actual value of the secret.",
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "KeyVaultSecretReferenceSecretInfo": {
      "x-ms-discriminator-value": "keyVaultSecretReference",
      "type": "object",
      "description": "The secret info when type is keyVaultSecretReference. It's for scenario that user provides a secret stored in user's keyvault and source is Azure Kubernetes. The key Vault's resource id is linked to secretStore.keyVaultId.",
      "allOf": [
        {
          "description": "The secret info",
          "discriminator": "secretType",
          "type": "object",
          "properties": {
            "secretType": {
              "description": "The secret type.",
              "type": "string",
              "enum": [
                "rawValue",
                "keyVaultSecretUri",
                "keyVaultSecretReference"
              ],
              "x-ms-enum": {
                "name": "SecretType",
                "modelAsString": true
              }
            }
          },
          "required": [
            "secretType"
          ]
        }
      ],
      "properties": {
        "name": {
          "description": "Name of the Key Vault secret.",
          "type": "string"
        },
        "version": {
          "x-nullable": true,
          "description": "Version of the Key Vault secret.",
          "type": "string"
        }
      }
    },
    "KeyVaultSecretUriSecretInfo": {
      "x-ms-discriminator-value": "keyVaultSecretUri",
      "type": "object",
      "description": "The secret info when type is keyVaultSecretUri. It's for scenario that user provides a secret stored in user's keyvault and source is Web App, Spring Cloud or Container App.",
      "allOf": [
        {
          "description": "The secret info",
          "discriminator": "secretType",
          "type": "object",
          "properties": {
            "secretType": {
              "description": "The secret type.",
              "type": "string",
              "enum": [
                "rawValue",
                "keyVaultSecretUri",
                "keyVaultSecretReference"
              ],
              "x-ms-enum": {
                "name": "SecretType",
                "modelAsString": true
              }
            }
          },
          "required": [
            "secretType"
          ]
        }
      ],
      "properties": {
        "value": {
          "description": "URI to the keyvault secret",
          "type": "string"
        }
      }
    },
    "AuthInfoBase": {
      "description": "The authentication info",
      "discriminator": "authType",
      "type": "object",
      "properties": {
        "authType": {
          "description": "The authentication type.",
          "type": "string",
          "enum": [
            "systemAssignedIdentity",
            "userAssignedIdentity",
            "servicePrincipalSecret",
            "servicePrincipalCertificate",
            "secret",
            "accessKey",
            "userAccount",
            "easyAuthMicrosoftEntraID"
          ],
          "x-ms-enum": {
            "name": "AuthType",
            "modelAsString": true
          }
        },
        "authMode": {
          "description": "Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.",
          "type": "string",
          "enum": [
            "optInAllAuth",
            "optOutAllAuth"
          ],
          "x-ms-enum": {
            "name": "authMode",
            "modelAsString": true,
            "values": [
              {
                "value": "optInAllAuth",
                "description": "Default authentication configuration according to the authentication type."
              },
              {
                "value": "optOutAllAuth",
                "description": "Skip all authentication configuration such as enabling managed identity and granting RBAC roles"
              }
            ]
          }
        }
      },
      "required": [
        "authType"
      ]
    },
    "AccessKeyInfoBase": {
      "description": "The access key directly from target resource properties, which target service is Azure Resource, such as Microsoft.Storage",
      "x-ms-discriminator-value": "accessKey",
      "type": "object",
      "allOf": [
        {
          "description": "The authentication info",
          "discriminator": "authType",
          "type": "object",
          "properties": {
            "authType": {
              "description": "The authentication type.",
              "type": "string",
              "enum": [
                "systemAssignedIdentity",
                "userAssignedIdentity",
                "servicePrincipalSecret",
                "servicePrincipalCertificate",
                "secret",
                "accessKey",
                "userAccount",
                "easyAuthMicrosoftEntraID"
              ],
              "x-ms-enum": {
                "name": "AuthType",
                "modelAsString": true
              }
            },
            "authMode": {
              "description": "Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.",
              "type": "string",
              "enum": [
                "optInAllAuth",
                "optOutAllAuth"
              ],
              "x-ms-enum": {
                "name": "authMode",
                "modelAsString": true,
                "values": [
                  {
                    "value": "optInAllAuth",
                    "description": "Default authentication configuration according to the authentication type."
                  },
                  {
                    "value": "optOutAllAuth",
                    "description": "Skip all authentication configuration such as enabling managed identity and granting RBAC roles"
                  }
                ]
              }
            }
          },
          "required": [
            "authType"
          ]
        }
      ],
      "properties": {
        "permissions": {
          "description": "Permissions of the accessKey. `Read` and `Write` are for Azure Cosmos DB and Azure App Configuration, `Listen`, `Send` and `Manage` are for Azure Event Hub and Azure Service Bus.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Read",
              "Write",
              "Listen",
              "Send",
              "Manage"
            ],
            "x-ms-enum": {
              "name": "accessKeyPermissions",
              "modelAsString": true
            }
          }
        }
      }
    },
    "DatabaseAadAuthInfo": {
      "description": "The extra auth info required by Database AAD authentication.",
      "type": "object",
      "properties": {
        "userName": {
          "x-nullable": true,
          "description": "Username created in the database which is mapped to a user in AAD.",
          "type": "string"
        }
      }
    },
    "SecretAuthInfo": {
      "x-ms-discriminator-value": "secret",
      "type": "object",
      "description": "The authentication info when authType is secret",
      "allOf": [
        {
          "description": "The authentication info",
          "discriminator": "authType",
          "type": "object",
          "properties": {
            "authType": {
              "description": "The authentication type.",
              "type": "string",
              "enum": [
                "systemAssignedIdentity",
                "userAssignedIdentity",
                "servicePrincipalSecret",
                "servicePrincipalCertificate",
                "secret",
                "accessKey",
                "userAccount",
                "easyAuthMicrosoftEntraID"
              ],
              "x-ms-enum": {
                "name": "AuthType",
                "modelAsString": true
              }
            },
            "authMode": {
              "description": "Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.",
              "type": "string",
              "enum": [
                "optInAllAuth",
                "optOutAllAuth"
              ],
              "x-ms-enum": {
                "name": "authMode",
                "modelAsString": true,
                "values": [
                  {
                    "value": "optInAllAuth",
                    "description": "Default authentication configuration according to the authentication type."
                  },
                  {
                    "value": "optOutAllAuth",
                    "description": "Skip all authentication configuration such as enabling managed identity and granting RBAC roles"
                  }
                ]
              }
            }
          },
          "required": [
            "authType"
          ]
        }
      ],
      "properties": {
        "name": {
          "x-nullable": true,
          "description": "Username or account name for secret auth.",
          "type": "string"
        },
        "secretInfo": {
          "description": "The secret info",
          "discriminator": "secretType",
          "type": "object",
          "properties": {
            "secretType": {
              "description": "The secret type.",
              "type": "string",
              "enum": [
                "rawValue",
                "keyVaultSecretUri",
                "keyVaultSecretReference"
              ],
              "x-ms-enum": {
                "name": "SecretType",
                "modelAsString": true
              }
            }
          },
          "required": [
            "secretType"
          ],
          "x-nullable": true
        }
      }
    },
    "UserAssignedIdentityAuthInfo": {
      "x-ms-discriminator-value": "userAssignedIdentity",
      "type": "object",
      "description": "The authentication info when authType is userAssignedIdentity",
      "allOf": [
        {
          "description": "The authentication info",
          "discriminator": "authType",
          "type": "object",
          "properties": {
            "authType": {
              "description": "The authentication type.",
              "type": "string",
              "enum": [
                "systemAssignedIdentity",
                "userAssignedIdentity",
                "servicePrincipalSecret",
                "servicePrincipalCertificate",
                "secret",
                "accessKey",
                "userAccount",
                "easyAuthMicrosoftEntraID"
              ],
              "x-ms-enum": {
                "name": "AuthType",
                "modelAsString": true
              }
            },
            "authMode": {
              "description": "Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.",
              "type": "string",
              "enum": [
                "optInAllAuth",
                "optOutAllAuth"
              ],
              "x-ms-enum": {
                "name": "authMode",
                "modelAsString": true,
                "values": [
                  {
                    "value": "optInAllAuth",
                    "description": "Default authentication configuration according to the authentication type."
                  },
                  {
                    "value": "optOutAllAuth",
                    "description": "Skip all authentication configuration such as enabling managed identity and granting RBAC roles"
                  }
                ]
              }
            }
          },
          "required": [
            "authType"
          ]
        },
        {
          "description": "The extra auth info required by Database AAD authentication.",
          "type": "object",
          "properties": {
            "userName": {
              "x-nullable": true,
              "description": "Username created in the database which is mapped to a user in AAD.",
              "type": "string"
            }
          }
        }
      ],
      "properties": {
        "clientId": {
          "description": "Client Id for userAssignedIdentity.",
          "type": "string"
        },
        "subscriptionId": {
          "description": "Subscription id for userAssignedIdentity.",
          "type": "string"
        },
        "deleteOrUpdateBehavior": {
          "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
          "type": "string",
          "enum": [
            "Default",
            "ForcedCleanup"
          ],
          "x-ms-enum": {
            "name": "DeleteOrUpdateBehavior",
            "modelAsString": true
          }
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional, this value specifies the Azure role to be assigned"
        }
      }
    },
    "SystemAssignedIdentityAuthInfo": {
      "x-ms-discriminator-value": "systemAssignedIdentity",
      "type": "object",
      "description": "The authentication info when authType is systemAssignedIdentity",
      "allOf": [
        {
          "description": "The authentication info",
          "discriminator": "authType",
          "type": "object",
          "properties": {
            "authType": {
              "description": "The authentication type.",
              "type": "string",
              "enum": [
                "systemAssignedIdentity",
                "userAssignedIdentity",
                "servicePrincipalSecret",
                "servicePrincipalCertificate",
                "secret",
                "accessKey",
                "userAccount",
                "easyAuthMicrosoftEntraID"
              ],
              "x-ms-enum": {
                "name": "AuthType",
                "modelAsString": true
              }
            },
            "authMode": {
              "description": "Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.",
              "type": "string",
              "enum": [
                "optInAllAuth",
                "optOutAllAuth"
              ],
              "x-ms-enum": {
                "name": "authMode",
                "modelAsString": true,
                "values": [
                  {
                    "value": "optInAllAuth",
                    "description": "Default authentication configuration according to the authentication type."
                  },
                  {
                    "value": "optOutAllAuth",
                    "description": "Skip all authentication configuration such as enabling managed identity and granting RBAC roles"
                  }
                ]
              }
            }
          },
          "required": [
            "authType"
          ]
        },
        {
          "description": "The extra auth info required by Database AAD authentication.",
          "type": "object",
          "properties": {
            "userName": {
              "x-nullable": true,
              "description": "Username created in the database which is mapped to a user in AAD.",
              "type": "string"
            }
          }
        }
      ],
      "properties": {
        "deleteOrUpdateBehavior": {
          "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
          "type": "string",
          "enum": [
            "Default",
            "ForcedCleanup"
          ],
          "x-ms-enum": {
            "name": "DeleteOrUpdateBehavior",
            "modelAsString": true
          }
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional, this value specifies the Azure role to be assigned"
        }
      }
    },
    "ServicePrincipalSecretAuthInfo": {
      "x-ms-discriminator-value": "servicePrincipalSecret",
      "type": "object",
      "description": "The authentication info when authType is servicePrincipal secret",
      "allOf": [
        {
          "description": "The authentication info",
          "discriminator": "authType",
          "type": "object",
          "properties": {
            "authType": {
              "description": "The authentication type.",
              "type": "string",
              "enum": [
                "systemAssignedIdentity",
                "userAssignedIdentity",
                "servicePrincipalSecret",
                "servicePrincipalCertificate",
                "secret",
                "accessKey",
                "userAccount",
                "easyAuthMicrosoftEntraID"
              ],
              "x-ms-enum": {
                "name": "AuthType",
                "modelAsString": true
              }
            },
            "authMode": {
              "description": "Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.",
              "type": "string",
              "enum": [
                "optInAllAuth",
                "optOutAllAuth"
              ],
              "x-ms-enum": {
                "name": "authMode",
                "modelAsString": true,
                "values": [
                  {
                    "value": "optInAllAuth",
                    "description": "Default authentication configuration according to the authentication type."
                  },
                  {
                    "value": "optOutAllAuth",
                    "description": "Skip all authentication configuration such as enabling managed identity and granting RBAC roles"
                  }
                ]
              }
            }
          },
          "required": [
            "authType"
          ]
        },
        {
          "description": "The extra auth info required by Database AAD authentication.",
          "type": "object",
          "properties": {
            "userName": {
              "x-nullable": true,
              "description": "Username created in the database which is mapped to a user in AAD.",
              "type": "string"
            }
          }
        }
      ],
      "properties": {
        "clientId": {
          "description": "ServicePrincipal application clientId for servicePrincipal auth.",
          "type": "string"
        },
        "principalId": {
          "description": "Principal Id for servicePrincipal auth.",
          "type": "string"
        },
        "secret": {
          "description": "Secret for servicePrincipal auth.",
          "type": "string",
          "x-ms-secret": true
        },
        "deleteOrUpdateBehavior": {
          "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
          "type": "string",
          "enum": [
            "Default",
            "ForcedCleanup"
          ],
          "x-ms-enum": {
            "name": "DeleteOrUpdateBehavior",
            "modelAsString": true
          }
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional, this value specifies the Azure roles to be assigned. Automatically "
        }
      },
      "required": [
        "clientId",
        "principalId",
        "secret"
      ]
    },
    "ServicePrincipalCertificateAuthInfo": {
      "x-ms-discriminator-value": "servicePrincipalCertificate",
      "type": "object",
      "description": "The authentication info when authType is servicePrincipal certificate",
      "allOf": [
        {
          "description": "The authentication info",
          "discriminator": "authType",
          "type": "object",
          "properties": {
            "authType": {
              "description": "The authentication type.",
              "type": "string",
              "enum": [
                "systemAssignedIdentity",
                "userAssignedIdentity",
                "servicePrincipalSecret",
                "servicePrincipalCertificate",
                "secret",
                "accessKey",
                "userAccount",
                "easyAuthMicrosoftEntraID"
              ],
              "x-ms-enum": {
                "name": "AuthType",
                "modelAsString": true
              }
            },
            "authMode": {
              "description": "Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.",
              "type": "string",
              "enum": [
                "optInAllAuth",
                "optOutAllAuth"
              ],
              "x-ms-enum": {
                "name": "authMode",
                "modelAsString": true,
                "values": [
                  {
                    "value": "optInAllAuth",
                    "description": "Default authentication configuration according to the authentication type."
                  },
                  {
                    "value": "optOutAllAuth",
                    "description": "Skip all authentication configuration such as enabling managed identity and granting RBAC roles"
                  }
                ]
              }
            }
          },
          "required": [
            "authType"
          ]
        }
      ],
      "properties": {
        "clientId": {
          "description": "Application clientId for servicePrincipal auth.",
          "type": "string"
        },
        "principalId": {
          "description": "Principal Id for servicePrincipal auth.",
          "type": "string"
        },
        "certificate": {
          "description": "ServicePrincipal certificate for servicePrincipal auth.",
          "type": "string",
          "x-ms-secret": true
        },
        "deleteOrUpdateBehavior": {
          "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
          "type": "string",
          "enum": [
            "Default",
            "ForcedCleanup"
          ],
          "x-ms-enum": {
            "name": "DeleteOrUpdateBehavior",
            "modelAsString": true
          }
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional, this value specifies the Azure roles to be assigned. Automatically "
        }
      },
      "required": [
        "clientId",
        "principalId",
        "certificate"
      ]
    },
    "UserAccountAuthInfo": {
      "x-ms-discriminator-value": "userAccount",
      "type": "object",
      "description": "The authentication info when authType is user account",
      "allOf": [
        {
          "description": "The authentication info",
          "discriminator": "authType",
          "type": "object",
          "properties": {
            "authType": {
              "description": "The authentication type.",
              "type": "string",
              "enum": [
                "systemAssignedIdentity",
                "userAssignedIdentity",
                "servicePrincipalSecret",
                "servicePrincipalCertificate",
                "secret",
                "accessKey",
                "userAccount",
                "easyAuthMicrosoftEntraID"
              ],
              "x-ms-enum": {
                "name": "AuthType",
                "modelAsString": true
              }
            },
            "authMode": {
              "description": "Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.",
              "type": "string",
              "enum": [
                "optInAllAuth",
                "optOutAllAuth"
              ],
              "x-ms-enum": {
                "name": "authMode",
                "modelAsString": true,
                "values": [
                  {
                    "value": "optInAllAuth",
                    "description": "Default authentication configuration according to the authentication type."
                  },
                  {
                    "value": "optOutAllAuth",
                    "description": "Skip all authentication configuration such as enabling managed identity and granting RBAC roles"
                  }
                ]
              }
            }
          },
          "required": [
            "authType"
          ]
        },
        {
          "description": "The extra auth info required by Database AAD authentication.",
          "type": "object",
          "properties": {
            "userName": {
              "x-nullable": true,
              "description": "Username created in the database which is mapped to a user in AAD.",
              "type": "string"
            }
          }
        }
      ],
      "properties": {
        "principalId": {
          "description": "Principal Id for user account.",
          "type": "string"
        },
        "deleteOrUpdateBehavior": {
          "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
          "type": "string",
          "enum": [
            "Default",
            "ForcedCleanup"
          ],
          "x-ms-enum": {
            "name": "DeleteOrUpdateBehavior",
            "modelAsString": true
          }
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional, this value specifies the Azure roles to be assigned. Automatically "
        }
      }
    },
    "EasyAuthMicrosoftEntraIDAuthInfo": {
      "x-ms-discriminator-value": "easyAuthMicrosoftEntraID",
      "type": "object",
      "description": "The authentication info when authType is EasyAuth Microsoft Entra ID",
      "allOf": [
        {
          "description": "The authentication info",
          "discriminator": "authType",
          "type": "object",
          "properties": {
            "authType": {
              "description": "The authentication type.",
              "type": "string",
              "enum": [
                "systemAssignedIdentity",
                "userAssignedIdentity",
                "servicePrincipalSecret",
                "servicePrincipalCertificate",
                "secret",
                "accessKey",
                "userAccount",
                "easyAuthMicrosoftEntraID"
              ],
              "x-ms-enum": {
                "name": "AuthType",
                "modelAsString": true
              }
            },
            "authMode": {
              "description": "Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.",
              "type": "string",
              "enum": [
                "optInAllAuth",
                "optOutAllAuth"
              ],
              "x-ms-enum": {
                "name": "authMode",
                "modelAsString": true,
                "values": [
                  {
                    "value": "optInAllAuth",
                    "description": "Default authentication configuration according to the authentication type."
                  },
                  {
                    "value": "optOutAllAuth",
                    "description": "Skip all authentication configuration such as enabling managed identity and granting RBAC roles"
                  }
                ]
              }
            }
          },
          "required": [
            "authType"
          ]
        }
      ],
      "properties": {
        "clientId": {
          "description": "Application clientId for EasyAuth Microsoft Entra ID.",
          "type": "string"
        },
        "secret": {
          "description": "Application Secret for EasyAuth Microsoft Entra ID.",
          "type": "string",
          "x-ms-secret": true
        },
        "deleteOrUpdateBehavior": {
          "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
          "type": "string",
          "enum": [
            "Default",
            "ForcedCleanup"
          ],
          "x-ms-enum": {
            "name": "DeleteOrUpdateBehavior",
            "modelAsString": true
          }
        }
      }
    },
    "LinkerResource": {
      "type": "object",
      "description": "Linker of source and target resource",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "x-nullable": true,
          "readOnly": true,
          "description": "The system data.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The properties of the Linker.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "targetService": {
              "description": "The target service properties",
              "discriminator": "type",
              "type": "object",
              "properties": {
                "type": {
                  "description": "The target service type.",
                  "type": "string",
                  "enum": [
                    "AzureResource",
                    "ConfluentBootstrapServer",
                    "ConfluentSchemaRegistry",
                    "SelfHostedServer"
                  ],
                  "x-ms-enum": {
                    "name": "targetServiceType",
                    "modelAsString": true
                  }
                }
              },
              "required": [
                "type"
              ]
            },
            "authInfo": {
              "description": "The authentication type.",
              "discriminator": "authType",
              "type": "object",
              "properties": {
                "authType": {
                  "description": "The authentication type.",
                  "type": "string",
                  "enum": [
                    "systemAssignedIdentity",
                    "userAssignedIdentity",
                    "servicePrincipalSecret",
                    "servicePrincipalCertificate",
                    "secret",
                    "accessKey",
                    "userAccount",
                    "easyAuthMicrosoftEntraID"
                  ],
                  "x-ms-enum": {
                    "name": "AuthType",
                    "modelAsString": true
                  }
                },
                "authMode": {
                  "description": "Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.",
                  "type": "string",
                  "enum": [
                    "optInAllAuth",
                    "optOutAllAuth"
                  ],
                  "x-ms-enum": {
                    "name": "authMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "optInAllAuth",
                        "description": "Default authentication configuration according to the authentication type."
                      },
                      {
                        "value": "optOutAllAuth",
                        "description": "Skip all authentication configuration such as enabling managed identity and granting RBAC roles"
                      }
                    ]
                  }
                }
              },
              "required": [
                "authType"
              ]
            },
            "clientType": {
              "description": "The application client type",
              "type": "string",
              "enum": [
                "none",
                "dotnet",
                "java",
                "python",
                "go",
                "php",
                "ruby",
                "django",
                "nodejs",
                "springBoot",
                "kafka-springBoot",
                "jms-springBoot",
                "dapr"
              ],
              "x-ms-enum": {
                "name": "clientType",
                "modelAsString": true
              }
            },
            "provisioningState": {
              "readOnly": true,
              "type": "string",
              "description": "The provisioning state. "
            },
            "vNetSolution": {
              "x-nullable": true,
              "description": "The VNet solution.",
              "type": "object",
              "properties": {
                "type": {
                  "x-nullable": true,
                  "description": "Type of VNet solution.",
                  "type": "string",
                  "enum": [
                    "serviceEndpoint",
                    "privateLink"
                  ],
                  "x-ms-enum": {
                    "name": "vNetSolutionType",
                    "modelAsString": true
                  }
                },
                "deleteOrUpdateBehavior": {
                  "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                  "type": "string",
                  "enum": [
                    "Default",
                    "ForcedCleanup"
                  ],
                  "x-ms-enum": {
                    "name": "DeleteOrUpdateBehavior",
                    "modelAsString": true
                  }
                }
              }
            },
            "secretStore": {
              "x-nullable": true,
              "description": "An option to store secret value in secure place",
              "type": "object",
              "properties": {
                "keyVaultId": {
                  "x-nullable": true,
                  "type": "string",
                  "description": "The key vault id to store secret"
                },
                "keyVaultSecretName": {
                  "x-nullable": true,
                  "type": "string",
                  "description": "The key vault secret name to store secret, only valid when storing one secret"
                }
              }
            },
            "scope": {
              "x-nullable": true,
              "type": "string",
              "description": "connection scope in source service."
            },
            "publicNetworkSolution": {
              "x-nullable": true,
              "description": "The network solution.",
              "type": "object",
              "properties": {
                "deleteOrUpdateBehavior": {
                  "description": "Indicates whether to clean up previous operation(such as firewall rules) when Linker is updating or deleting",
                  "type": "string",
                  "enum": [
                    "Default",
                    "ForcedCleanup"
                  ],
                  "x-ms-enum": {
                    "name": "DeleteOrUpdateBehavior",
                    "modelAsString": true
                  }
                },
                "action": {
                  "description": "Optional. Indicates public network solution. If enable, enable public network access of target service with best try. Default is enable. If optOut, opt out public network access configuration.",
                  "type": "string",
                  "enum": [
                    "enable",
                    "optOut"
                  ],
                  "x-ms-enum": {
                    "name": "actionType",
                    "modelAsString": true
                  }
                },
                "firewallRules": {
                  "description": "Describe firewall rules of target service to make sure source application could connect to the target.",
                  "type": "object",
                  "properties": {
                    "ipRanges": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account."
                    },
                    "azureServices": {
                      "description": "Allow Azure services to access the target service if true.",
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "allowType",
                        "modelAsString": true
                      }
                    },
                    "callerClientIP": {
                      "description": "Allow caller client IP to access the target service if true. the property is used when connecting local application to target service.",
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "allowType",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            },
            "configurationInfo": {
              "x-nullable": true,
              "description": "The connection information consumed by applications, including secrets, connection strings.",
              "type": "object",
              "properties": {
                "deleteOrUpdateBehavior": {
                  "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                  "type": "string",
                  "enum": [
                    "Default",
                    "ForcedCleanup"
                  ],
                  "x-ms-enum": {
                    "name": "DeleteOrUpdateBehavior",
                    "modelAsString": true
                  }
                },
                "action": {
                  "description": "Optional, indicate whether to apply configurations on source application. If enable, generate configurations and applied to the source application. Default is enable. If optOut, no configuration change will be made on source.",
                  "type": "string",
                  "enum": [
                    "enable",
                    "optOut"
                  ],
                  "x-ms-enum": {
                    "name": "actionType",
                    "modelAsString": true
                  }
                },
                "customizedKeys": {
                  "description": "Optional. A dictionary of default key name and customized key name mapping. If not specified, default key name will be used for generate configurations",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "daprProperties": {
                  "description": "Indicates some additional properties for dapr client type",
                  "type": "object",
                  "properties": {
                    "version": {
                      "x-nullable": true,
                      "type": "string",
                      "description": "The dapr component version"
                    },
                    "componentType": {
                      "x-nullable": true,
                      "type": "string",
                      "description": "The dapr component type"
                    },
                    "secretStoreComponent": {
                      "x-nullable": true,
                      "type": "string",
                      "description": "The name of a secret store dapr to retrieve secret"
                    },
                    "metadata": {
                      "description": "Additional dapr metadata",
                      "type": "array",
                      "items": {
                        "description": "The dapr component metadata.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Metadata property name.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Metadata property value.",
                            "type": "string"
                          },
                          "secretRef": {
                            "description": "The secret name where dapr could get value",
                            "type": "string"
                          },
                          "description": {
                            "description": "The description of the metadata, returned from configuration api",
                            "type": "string"
                          },
                          "required": {
                            "description": "The value indicating whether the metadata is required or not",
                            "type": "string",
                            "enum": [
                              "true",
                              "false"
                            ],
                            "x-ms-enum": {
                              "name": "DaprMetadataRequired",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "scopes": {
                      "description": "The dapr component scopes",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "runtimeVersion": {
                      "x-nullable": true,
                      "type": "string",
                      "readOnly": true,
                      "description": "The runtime version supported by the properties"
                    },
                    "bindingComponentDirection": {
                      "x-nullable": true,
                      "type": "string",
                      "enum": [
                        "input",
                        "output"
                      ],
                      "x-ms-enum": {
                        "name": "DaprBindingComponentDirection",
                        "modelAsString": true
                      },
                      "readOnly": true,
                      "description": "The direction supported by the dapr binding component"
                    }
                  }
                },
                "additionalConfigurations": {
                  "description": "A dictionary of additional configurations to be added. Service will auto generate a set of basic configurations and this property is to full fill more customized configurations",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "additionalConnectionStringProperties": {
                  "description": "A dictionary of additional properties to be added in the end of connection string.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "configurationStore": {
                  "x-nullable": true,
                  "description": "An option to store configuration into different place",
                  "type": "object",
                  "properties": {
                    "appConfigurationId": {
                      "x-nullable": true,
                      "type": "string",
                      "description": "The app configuration id to store configuration"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "LinkerPatch": {
      "description": "A Linker to be updated.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Linker properties",
          "type": "object",
          "x-ms-client-flatten": true,
          "properties": {
            "targetService": {
              "description": "The target service properties",
              "discriminator": "type",
              "type": "object",
              "properties": {
                "type": {
                  "description": "The target service type.",
                  "type": "string",
                  "enum": [
                    "AzureResource",
                    "ConfluentBootstrapServer",
                    "ConfluentSchemaRegistry",
                    "SelfHostedServer"
                  ],
                  "x-ms-enum": {
                    "name": "targetServiceType",
                    "modelAsString": true
                  }
                }
              },
              "required": [
                "type"
              ]
            },
            "authInfo": {
              "description": "The authentication type.",
              "discriminator": "authType",
              "type": "object",
              "properties": {
                "authType": {
                  "description": "The authentication type.",
                  "type": "string",
                  "enum": [
                    "systemAssignedIdentity",
                    "userAssignedIdentity",
                    "servicePrincipalSecret",
                    "servicePrincipalCertificate",
                    "secret",
                    "accessKey",
                    "userAccount",
                    "easyAuthMicrosoftEntraID"
                  ],
                  "x-ms-enum": {
                    "name": "AuthType",
                    "modelAsString": true
                  }
                },
                "authMode": {
                  "description": "Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.",
                  "type": "string",
                  "enum": [
                    "optInAllAuth",
                    "optOutAllAuth"
                  ],
                  "x-ms-enum": {
                    "name": "authMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "optInAllAuth",
                        "description": "Default authentication configuration according to the authentication type."
                      },
                      {
                        "value": "optOutAllAuth",
                        "description": "Skip all authentication configuration such as enabling managed identity and granting RBAC roles"
                      }
                    ]
                  }
                }
              },
              "required": [
                "authType"
              ]
            },
            "clientType": {
              "description": "The application client type",
              "type": "string",
              "enum": [
                "none",
                "dotnet",
                "java",
                "python",
                "go",
                "php",
                "ruby",
                "django",
                "nodejs",
                "springBoot",
                "kafka-springBoot",
                "jms-springBoot",
                "dapr"
              ],
              "x-ms-enum": {
                "name": "clientType",
                "modelAsString": true
              }
            },
            "provisioningState": {
              "readOnly": true,
              "type": "string",
              "description": "The provisioning state. "
            },
            "vNetSolution": {
              "x-nullable": true,
              "description": "The VNet solution.",
              "type": "object",
              "properties": {
                "type": {
                  "x-nullable": true,
                  "description": "Type of VNet solution.",
                  "type": "string",
                  "enum": [
                    "serviceEndpoint",
                    "privateLink"
                  ],
                  "x-ms-enum": {
                    "name": "vNetSolutionType",
                    "modelAsString": true
                  }
                },
                "deleteOrUpdateBehavior": {
                  "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                  "type": "string",
                  "enum": [
                    "Default",
                    "ForcedCleanup"
                  ],
                  "x-ms-enum": {
                    "name": "DeleteOrUpdateBehavior",
                    "modelAsString": true
                  }
                }
              }
            },
            "secretStore": {
              "x-nullable": true,
              "description": "An option to store secret value in secure place",
              "type": "object",
              "properties": {
                "keyVaultId": {
                  "x-nullable": true,
                  "type": "string",
                  "description": "The key vault id to store secret"
                },
                "keyVaultSecretName": {
                  "x-nullable": true,
                  "type": "string",
                  "description": "The key vault secret name to store secret, only valid when storing one secret"
                }
              }
            },
            "scope": {
              "x-nullable": true,
              "type": "string",
              "description": "connection scope in source service."
            },
            "publicNetworkSolution": {
              "x-nullable": true,
              "description": "The network solution.",
              "type": "object",
              "properties": {
                "deleteOrUpdateBehavior": {
                  "description": "Indicates whether to clean up previous operation(such as firewall rules) when Linker is updating or deleting",
                  "type": "string",
                  "enum": [
                    "Default",
                    "ForcedCleanup"
                  ],
                  "x-ms-enum": {
                    "name": "DeleteOrUpdateBehavior",
                    "modelAsString": true
                  }
                },
                "action": {
                  "description": "Optional. Indicates public network solution. If enable, enable public network access of target service with best try. Default is enable. If optOut, opt out public network access configuration.",
                  "type": "string",
                  "enum": [
                    "enable",
                    "optOut"
                  ],
                  "x-ms-enum": {
                    "name": "actionType",
                    "modelAsString": true
                  }
                },
                "firewallRules": {
                  "description": "Describe firewall rules of target service to make sure source application could connect to the target.",
                  "type": "object",
                  "properties": {
                    "ipRanges": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account."
                    },
                    "azureServices": {
                      "description": "Allow Azure services to access the target service if true.",
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "allowType",
                        "modelAsString": true
                      }
                    },
                    "callerClientIP": {
                      "description": "Allow caller client IP to access the target service if true. the property is used when connecting local application to target service.",
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "allowType",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            },
            "configurationInfo": {
              "x-nullable": true,
              "description": "The connection information consumed by applications, including secrets, connection strings.",
              "type": "object",
              "properties": {
                "deleteOrUpdateBehavior": {
                  "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                  "type": "string",
                  "enum": [
                    "Default",
                    "ForcedCleanup"
                  ],
                  "x-ms-enum": {
                    "name": "DeleteOrUpdateBehavior",
                    "modelAsString": true
                  }
                },
                "action": {
                  "description": "Optional, indicate whether to apply configurations on source application. If enable, generate configurations and applied to the source application. Default is enable. If optOut, no configuration change will be made on source.",
                  "type": "string",
                  "enum": [
                    "enable",
                    "optOut"
                  ],
                  "x-ms-enum": {
                    "name": "actionType",
                    "modelAsString": true
                  }
                },
                "customizedKeys": {
                  "description": "Optional. A dictionary of default key name and customized key name mapping. If not specified, default key name will be used for generate configurations",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "daprProperties": {
                  "description": "Indicates some additional properties for dapr client type",
                  "type": "object",
                  "properties": {
                    "version": {
                      "x-nullable": true,
                      "type": "string",
                      "description": "The dapr component version"
                    },
                    "componentType": {
                      "x-nullable": true,
                      "type": "string",
                      "description": "The dapr component type"
                    },
                    "secretStoreComponent": {
                      "x-nullable": true,
                      "type": "string",
                      "description": "The name of a secret store dapr to retrieve secret"
                    },
                    "metadata": {
                      "description": "Additional dapr metadata",
                      "type": "array",
                      "items": {
                        "description": "The dapr component metadata.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Metadata property name.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Metadata property value.",
                            "type": "string"
                          },
                          "secretRef": {
                            "description": "The secret name where dapr could get value",
                            "type": "string"
                          },
                          "description": {
                            "description": "The description of the metadata, returned from configuration api",
                            "type": "string"
                          },
                          "required": {
                            "description": "The value indicating whether the metadata is required or not",
                            "type": "string",
                            "enum": [
                              "true",
                              "false"
                            ],
                            "x-ms-enum": {
                              "name": "DaprMetadataRequired",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "scopes": {
                      "description": "The dapr component scopes",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "runtimeVersion": {
                      "x-nullable": true,
                      "type": "string",
                      "readOnly": true,
                      "description": "The runtime version supported by the properties"
                    },
                    "bindingComponentDirection": {
                      "x-nullable": true,
                      "type": "string",
                      "enum": [
                        "input",
                        "output"
                      ],
                      "x-ms-enum": {
                        "name": "DaprBindingComponentDirection",
                        "modelAsString": true
                      },
                      "readOnly": true,
                      "description": "The direction supported by the dapr binding component"
                    }
                  }
                },
                "additionalConfigurations": {
                  "description": "A dictionary of additional configurations to be added. Service will auto generate a set of basic configurations and this property is to full fill more customized configurations",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "additionalConnectionStringProperties": {
                  "description": "A dictionary of additional properties to be added in the end of connection string.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "configurationStore": {
                  "x-nullable": true,
                  "description": "An option to store configuration into different place",
                  "type": "object",
                  "properties": {
                    "appConfigurationId": {
                      "x-nullable": true,
                      "type": "string",
                      "description": "The app configuration id to store configuration"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "ResourceList": {
      "description": "The list of Linker.",
      "type": "object",
      "properties": {
        "nextLink": {
          "x-nullable": true,
          "description": "The Linker used to get the next page of Linker list.",
          "type": "string"
        },
        "value": {
          "description": "The list of Linkers.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Linker of source and target resource",
            "required": [
              "properties"
            ],
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "x-nullable": true,
                "readOnly": true,
                "description": "The system data.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The properties of the Linker.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "targetService": {
                    "description": "The target service properties",
                    "discriminator": "type",
                    "type": "object",
                    "properties": {
                      "type": {
                        "description": "The target service type.",
                        "type": "string",
                        "enum": [
                          "AzureResource",
                          "ConfluentBootstrapServer",
                          "ConfluentSchemaRegistry",
                          "SelfHostedServer"
                        ],
                        "x-ms-enum": {
                          "name": "targetServiceType",
                          "modelAsString": true
                        }
                      }
                    },
                    "required": [
                      "type"
                    ]
                  },
                  "authInfo": {
                    "description": "The authentication type.",
                    "discriminator": "authType",
                    "type": "object",
                    "properties": {
                      "authType": {
                        "description": "The authentication type.",
                        "type": "string",
                        "enum": [
                          "systemAssignedIdentity",
                          "userAssignedIdentity",
                          "servicePrincipalSecret",
                          "servicePrincipalCertificate",
                          "secret",
                          "accessKey",
                          "userAccount",
                          "easyAuthMicrosoftEntraID"
                        ],
                        "x-ms-enum": {
                          "name": "AuthType",
                          "modelAsString": true
                        }
                      },
                      "authMode": {
                        "description": "Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.",
                        "type": "string",
                        "enum": [
                          "optInAllAuth",
                          "optOutAllAuth"
                        ],
                        "x-ms-enum": {
                          "name": "authMode",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "optInAllAuth",
                              "description": "Default authentication configuration according to the authentication type."
                            },
                            {
                              "value": "optOutAllAuth",
                              "description": "Skip all authentication configuration such as enabling managed identity and granting RBAC roles"
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "authType"
                    ]
                  },
                  "clientType": {
                    "description": "The application client type",
                    "type": "string",
                    "enum": [
                      "none",
                      "dotnet",
                      "java",
                      "python",
                      "go",
                      "php",
                      "ruby",
                      "django",
                      "nodejs",
                      "springBoot",
                      "kafka-springBoot",
                      "jms-springBoot",
                      "dapr"
                    ],
                    "x-ms-enum": {
                      "name": "clientType",
                      "modelAsString": true
                    }
                  },
                  "provisioningState": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The provisioning state. "
                  },
                  "vNetSolution": {
                    "x-nullable": true,
                    "description": "The VNet solution.",
                    "type": "object",
                    "properties": {
                      "type": {
                        "x-nullable": true,
                        "description": "Type of VNet solution.",
                        "type": "string",
                        "enum": [
                          "serviceEndpoint",
                          "privateLink"
                        ],
                        "x-ms-enum": {
                          "name": "vNetSolutionType",
                          "modelAsString": true
                        }
                      },
                      "deleteOrUpdateBehavior": {
                        "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                        "type": "string",
                        "enum": [
                          "Default",
                          "ForcedCleanup"
                        ],
                        "x-ms-enum": {
                          "name": "DeleteOrUpdateBehavior",
                          "modelAsString": true
                        }
                      }
                    }
                  },
                  "secretStore": {
                    "x-nullable": true,
                    "description": "An option to store secret value in secure place",
                    "type": "object",
                    "properties": {
                      "keyVaultId": {
                        "x-nullable": true,
                        "type": "string",
                        "description": "The key vault id to store secret"
                      },
                      "keyVaultSecretName": {
                        "x-nullable": true,
                        "type": "string",
                        "description": "The key vault secret name to store secret, only valid when storing one secret"
                      }
                    }
                  },
                  "scope": {
                    "x-nullable": true,
                    "type": "string",
                    "description": "connection scope in source service."
                  },
                  "publicNetworkSolution": {
                    "x-nullable": true,
                    "description": "The network solution.",
                    "type": "object",
                    "properties": {
                      "deleteOrUpdateBehavior": {
                        "description": "Indicates whether to clean up previous operation(such as firewall rules) when Linker is updating or deleting",
                        "type": "string",
                        "enum": [
                          "Default",
                          "ForcedCleanup"
                        ],
                        "x-ms-enum": {
                          "name": "DeleteOrUpdateBehavior",
                          "modelAsString": true
                        }
                      },
                      "action": {
                        "description": "Optional. Indicates public network solution. If enable, enable public network access of target service with best try. Default is enable. If optOut, opt out public network access configuration.",
                        "type": "string",
                        "enum": [
                          "enable",
                          "optOut"
                        ],
                        "x-ms-enum": {
                          "name": "actionType",
                          "modelAsString": true
                        }
                      },
                      "firewallRules": {
                        "description": "Describe firewall rules of target service to make sure source application could connect to the target.",
                        "type": "object",
                        "properties": {
                          "ipRanges": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account."
                          },
                          "azureServices": {
                            "description": "Allow Azure services to access the target service if true.",
                            "type": "string",
                            "enum": [
                              "true",
                              "false"
                            ],
                            "x-ms-enum": {
                              "name": "allowType",
                              "modelAsString": true
                            }
                          },
                          "callerClientIP": {
                            "description": "Allow caller client IP to access the target service if true. the property is used when connecting local application to target service.",
                            "type": "string",
                            "enum": [
                              "true",
                              "false"
                            ],
                            "x-ms-enum": {
                              "name": "allowType",
                              "modelAsString": true
                            }
                          }
                        }
                      }
                    }
                  },
                  "configurationInfo": {
                    "x-nullable": true,
                    "description": "The connection information consumed by applications, including secrets, connection strings.",
                    "type": "object",
                    "properties": {
                      "deleteOrUpdateBehavior": {
                        "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                        "type": "string",
                        "enum": [
                          "Default",
                          "ForcedCleanup"
                        ],
                        "x-ms-enum": {
                          "name": "DeleteOrUpdateBehavior",
                          "modelAsString": true
                        }
                      },
                      "action": {
                        "description": "Optional, indicate whether to apply configurations on source application. If enable, generate configurations and applied to the source application. Default is enable. If optOut, no configuration change will be made on source.",
                        "type": "string",
                        "enum": [
                          "enable",
                          "optOut"
                        ],
                        "x-ms-enum": {
                          "name": "actionType",
                          "modelAsString": true
                        }
                      },
                      "customizedKeys": {
                        "description": "Optional. A dictionary of default key name and customized key name mapping. If not specified, default key name will be used for generate configurations",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "daprProperties": {
                        "description": "Indicates some additional properties for dapr client type",
                        "type": "object",
                        "properties": {
                          "version": {
                            "x-nullable": true,
                            "type": "string",
                            "description": "The dapr component version"
                          },
                          "componentType": {
                            "x-nullable": true,
                            "type": "string",
                            "description": "The dapr component type"
                          },
                          "secretStoreComponent": {
                            "x-nullable": true,
                            "type": "string",
                            "description": "The name of a secret store dapr to retrieve secret"
                          },
                          "metadata": {
                            "description": "Additional dapr metadata",
                            "type": "array",
                            "items": {
                              "description": "The dapr component metadata.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Metadata property name.",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "Metadata property value.",
                                  "type": "string"
                                },
                                "secretRef": {
                                  "description": "The secret name where dapr could get value",
                                  "type": "string"
                                },
                                "description": {
                                  "description": "The description of the metadata, returned from configuration api",
                                  "type": "string"
                                },
                                "required": {
                                  "description": "The value indicating whether the metadata is required or not",
                                  "type": "string",
                                  "enum": [
                                    "true",
                                    "false"
                                  ],
                                  "x-ms-enum": {
                                    "name": "DaprMetadataRequired",
                                    "modelAsString": true
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "scopes": {
                            "description": "The dapr component scopes",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "runtimeVersion": {
                            "x-nullable": true,
                            "type": "string",
                            "readOnly": true,
                            "description": "The runtime version supported by the properties"
                          },
                          "bindingComponentDirection": {
                            "x-nullable": true,
                            "type": "string",
                            "enum": [
                              "input",
                              "output"
                            ],
                            "x-ms-enum": {
                              "name": "DaprBindingComponentDirection",
                              "modelAsString": true
                            },
                            "readOnly": true,
                            "description": "The direction supported by the dapr binding component"
                          }
                        }
                      },
                      "additionalConfigurations": {
                        "description": "A dictionary of additional configurations to be added. Service will auto generate a set of basic configurations and this property is to full fill more customized configurations",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "additionalConnectionStringProperties": {
                        "description": "A dictionary of additional properties to be added in the end of connection string.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "configurationStore": {
                        "x-nullable": true,
                        "description": "An option to store configuration into different place",
                        "type": "object",
                        "properties": {
                          "appConfigurationId": {
                            "x-nullable": true,
                            "type": "string",
                            "description": "The app configuration id to store configuration"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "LinkerProperties": {
      "description": "The properties of the Linker.",
      "type": "object",
      "properties": {
        "targetService": {
          "description": "The target service properties",
          "discriminator": "type",
          "type": "object",
          "properties": {
            "type": {
              "description": "The target service type.",
              "type": "string",
              "enum": [
                "AzureResource",
                "ConfluentBootstrapServer",
                "ConfluentSchemaRegistry",
                "SelfHostedServer"
              ],
              "x-ms-enum": {
                "name": "targetServiceType",
                "modelAsString": true
              }
            }
          },
          "required": [
            "type"
          ]
        },
        "authInfo": {
          "description": "The authentication type.",
          "discriminator": "authType",
          "type": "object",
          "properties": {
            "authType": {
              "description": "The authentication type.",
              "type": "string",
              "enum": [
                "systemAssignedIdentity",
                "userAssignedIdentity",
                "servicePrincipalSecret",
                "servicePrincipalCertificate",
                "secret",
                "accessKey",
                "userAccount",
                "easyAuthMicrosoftEntraID"
              ],
              "x-ms-enum": {
                "name": "AuthType",
                "modelAsString": true
              }
            },
            "authMode": {
              "description": "Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.",
              "type": "string",
              "enum": [
                "optInAllAuth",
                "optOutAllAuth"
              ],
              "x-ms-enum": {
                "name": "authMode",
                "modelAsString": true,
                "values": [
                  {
                    "value": "optInAllAuth",
                    "description": "Default authentication configuration according to the authentication type."
                  },
                  {
                    "value": "optOutAllAuth",
                    "description": "Skip all authentication configuration such as enabling managed identity and granting RBAC roles"
                  }
                ]
              }
            }
          },
          "required": [
            "authType"
          ]
        },
        "clientType": {
          "description": "The application client type",
          "type": "string",
          "enum": [
            "none",
            "dotnet",
            "java",
            "python",
            "go",
            "php",
            "ruby",
            "django",
            "nodejs",
            "springBoot",
            "kafka-springBoot",
            "jms-springBoot",
            "dapr"
          ],
          "x-ms-enum": {
            "name": "clientType",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The provisioning state. "
        },
        "vNetSolution": {
          "x-nullable": true,
          "description": "The VNet solution.",
          "type": "object",
          "properties": {
            "type": {
              "x-nullable": true,
              "description": "Type of VNet solution.",
              "type": "string",
              "enum": [
                "serviceEndpoint",
                "privateLink"
              ],
              "x-ms-enum": {
                "name": "vNetSolutionType",
                "modelAsString": true
              }
            },
            "deleteOrUpdateBehavior": {
              "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
              "type": "string",
              "enum": [
                "Default",
                "ForcedCleanup"
              ],
              "x-ms-enum": {
                "name": "DeleteOrUpdateBehavior",
                "modelAsString": true
              }
            }
          }
        },
        "secretStore": {
          "x-nullable": true,
          "description": "An option to store secret value in secure place",
          "type": "object",
          "properties": {
            "keyVaultId": {
              "x-nullable": true,
              "type": "string",
              "description": "The key vault id to store secret"
            },
            "keyVaultSecretName": {
              "x-nullable": true,
              "type": "string",
              "description": "The key vault secret name to store secret, only valid when storing one secret"
            }
          }
        },
        "scope": {
          "x-nullable": true,
          "type": "string",
          "description": "connection scope in source service."
        },
        "publicNetworkSolution": {
          "x-nullable": true,
          "description": "The network solution.",
          "type": "object",
          "properties": {
            "deleteOrUpdateBehavior": {
              "description": "Indicates whether to clean up previous operation(such as firewall rules) when Linker is updating or deleting",
              "type": "string",
              "enum": [
                "Default",
                "ForcedCleanup"
              ],
              "x-ms-enum": {
                "name": "DeleteOrUpdateBehavior",
                "modelAsString": true
              }
            },
            "action": {
              "description": "Optional. Indicates public network solution. If enable, enable public network access of target service with best try. Default is enable. If optOut, opt out public network access configuration.",
              "type": "string",
              "enum": [
                "enable",
                "optOut"
              ],
              "x-ms-enum": {
                "name": "actionType",
                "modelAsString": true
              }
            },
            "firewallRules": {
              "description": "Describe firewall rules of target service to make sure source application could connect to the target.",
              "type": "object",
              "properties": {
                "ipRanges": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account."
                },
                "azureServices": {
                  "description": "Allow Azure services to access the target service if true.",
                  "type": "string",
                  "enum": [
                    "true",
                    "false"
                  ],
                  "x-ms-enum": {
                    "name": "allowType",
                    "modelAsString": true
                  }
                },
                "callerClientIP": {
                  "description": "Allow caller client IP to access the target service if true. the property is used when connecting local application to target service.",
                  "type": "string",
                  "enum": [
                    "true",
                    "false"
                  ],
                  "x-ms-enum": {
                    "name": "allowType",
                    "modelAsString": true
                  }
                }
              }
            }
          }
        },
        "configurationInfo": {
          "x-nullable": true,
          "description": "The connection information consumed by applications, including secrets, connection strings.",
          "type": "object",
          "properties": {
            "deleteOrUpdateBehavior": {
              "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
              "type": "string",
              "enum": [
                "Default",
                "ForcedCleanup"
              ],
              "x-ms-enum": {
                "name": "DeleteOrUpdateBehavior",
                "modelAsString": true
              }
            },
            "action": {
              "description": "Optional, indicate whether to apply configurations on source application. If enable, generate configurations and applied to the source application. Default is enable. If optOut, no configuration change will be made on source.",
              "type": "string",
              "enum": [
                "enable",
                "optOut"
              ],
              "x-ms-enum": {
                "name": "actionType",
                "modelAsString": true
              }
            },
            "customizedKeys": {
              "description": "Optional. A dictionary of default key name and customized key name mapping. If not specified, default key name will be used for generate configurations",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "daprProperties": {
              "description": "Indicates some additional properties for dapr client type",
              "type": "object",
              "properties": {
                "version": {
                  "x-nullable": true,
                  "type": "string",
                  "description": "The dapr component version"
                },
                "componentType": {
                  "x-nullable": true,
                  "type": "string",
                  "description": "The dapr component type"
                },
                "secretStoreComponent": {
                  "x-nullable": true,
                  "type": "string",
                  "description": "The name of a secret store dapr to retrieve secret"
                },
                "metadata": {
                  "description": "Additional dapr metadata",
                  "type": "array",
                  "items": {
                    "description": "The dapr component metadata.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Metadata property name.",
                        "type": "string"
                      },
                      "value": {
                        "description": "Metadata property value.",
                        "type": "string"
                      },
                      "secretRef": {
                        "description": "The secret name where dapr could get value",
                        "type": "string"
                      },
                      "description": {
                        "description": "The description of the metadata, returned from configuration api",
                        "type": "string"
                      },
                      "required": {
                        "description": "The value indicating whether the metadata is required or not",
                        "type": "string",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "x-ms-enum": {
                          "name": "DaprMetadataRequired",
                          "modelAsString": true
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "scopes": {
                  "description": "The dapr component scopes",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "runtimeVersion": {
                  "x-nullable": true,
                  "type": "string",
                  "readOnly": true,
                  "description": "The runtime version supported by the properties"
                },
                "bindingComponentDirection": {
                  "x-nullable": true,
                  "type": "string",
                  "enum": [
                    "input",
                    "output"
                  ],
                  "x-ms-enum": {
                    "name": "DaprBindingComponentDirection",
                    "modelAsString": true
                  },
                  "readOnly": true,
                  "description": "The direction supported by the dapr binding component"
                }
              }
            },
            "additionalConfigurations": {
              "description": "A dictionary of additional configurations to be added. Service will auto generate a set of basic configurations and this property is to full fill more customized configurations",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "additionalConnectionStringProperties": {
              "description": "A dictionary of additional properties to be added in the end of connection string.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "configurationStore": {
              "x-nullable": true,
              "description": "An option to store configuration into different place",
              "type": "object",
              "properties": {
                "appConfigurationId": {
                  "x-nullable": true,
                  "type": "string",
                  "description": "The app configuration id to store configuration"
                }
              }
            }
          }
        }
      }
    },
    "LinkerConfigurationType": {
      "description": "Type of configuration to determine whether the configuration can be modified after creation. KeyvaultSecret means the configuration references a key vault secret, such as App Service/ACA key vault reference. Default means the configuration is real value, such as user name, raw secret, etc.",
      "type": "string",
      "enum": [
        "Default",
        "KeyVaultSecret"
      ],
      "x-ms-enum": {
        "name": "LinkerConfigurationType",
        "modelAsString": true
      }
    },
    "SourceConfiguration": {
      "description": "A configuration item for source resource",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of setting.",
          "type": "string"
        },
        "value": {
          "x-nullable": true,
          "description": "The value of setting",
          "type": "string"
        },
        "configType": {
          "description": "The type of setting",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Default",
            "KeyVaultSecret"
          ],
          "x-ms-enum": {
            "name": "LinkerConfigurationType",
            "modelAsString": true
          }
        },
        "keyVaultReferenceIdentity": {
          "x-nullable": true,
          "description": "The identity for key vault reference, system or user-assigned managed identity ID",
          "type": "string"
        },
        "description": {
          "x-nullable": true,
          "description": "Descriptive information for the configuration",
          "type": "string"
        }
      }
    },
    "ConfigurationNameItem": {
      "type": "object",
      "properties": {
        "properties": {
          "x-nullable": true,
          "description": "The result detail.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "targetService": {
              "type": "string",
              "description": "The target service provider name and resource name."
            },
            "clientType": {
              "description": "The client type for configuration names.",
              "type": "string",
              "enum": [
                "none",
                "dotnet",
                "java",
                "python",
                "go",
                "php",
                "ruby",
                "django",
                "nodejs",
                "springBoot",
                "kafka-springBoot",
                "jms-springBoot",
                "dapr"
              ],
              "x-ms-enum": {
                "name": "clientType",
                "modelAsString": true
              }
            },
            "authType": {
              "description": "The auth type.",
              "type": "string",
              "enum": [
                "systemAssignedIdentity",
                "userAssignedIdentity",
                "servicePrincipalSecret",
                "servicePrincipalCertificate",
                "secret",
                "accessKey",
                "userAccount",
                "easyAuthMicrosoftEntraID"
              ],
              "x-ms-enum": {
                "name": "AuthType",
                "modelAsString": true
              }
            },
            "secretType": {
              "description": "Indicates where the secrets in configuration from. Used when secrets are from Keyvault.",
              "type": "string",
              "enum": [
                "rawValue",
                "keyVaultSecret"
              ],
              "x-ms-enum": {
                "name": "SecretSourceType",
                "modelAsString": true
              }
            },
            "daprProperties": {
              "description": "Deprecated, please use #/definitions/DaprConfigurationList instead",
              "type": "object",
              "properties": {
                "version": {
                  "x-nullable": true,
                  "type": "string",
                  "description": "The dapr component version"
                },
                "componentType": {
                  "x-nullable": true,
                  "type": "string",
                  "description": "The dapr component type"
                },
                "secretStoreComponent": {
                  "x-nullable": true,
                  "type": "string",
                  "description": "The name of a secret store dapr to retrieve secret"
                },
                "metadata": {
                  "description": "Additional dapr metadata",
                  "type": "array",
                  "items": {
                    "description": "The dapr component metadata.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Metadata property name.",
                        "type": "string"
                      },
                      "value": {
                        "description": "Metadata property value.",
                        "type": "string"
                      },
                      "secretRef": {
                        "description": "The secret name where dapr could get value",
                        "type": "string"
                      },
                      "description": {
                        "description": "The description of the metadata, returned from configuration api",
                        "type": "string"
                      },
                      "required": {
                        "description": "The value indicating whether the metadata is required or not",
                        "type": "string",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "x-ms-enum": {
                          "name": "DaprMetadataRequired",
                          "modelAsString": true
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "scopes": {
                  "description": "The dapr component scopes",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "runtimeVersion": {
                  "x-nullable": true,
                  "type": "string",
                  "readOnly": true,
                  "description": "The runtime version supported by the properties"
                },
                "bindingComponentDirection": {
                  "x-nullable": true,
                  "type": "string",
                  "enum": [
                    "input",
                    "output"
                  ],
                  "x-ms-enum": {
                    "name": "DaprBindingComponentDirection",
                    "modelAsString": true
                  },
                  "readOnly": true,
                  "description": "The direction supported by the dapr binding component"
                }
              }
            },
            "names": {
              "type": "array",
              "description": "The configuration names to be set in compute service environment.",
              "items": {
                "type": "object",
                "description": "The configuration names.",
                "properties": {
                  "value": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description for the configuration name."
                  },
                  "required": {
                    "type": "boolean",
                    "description": "Represent the configuration is required or not"
                  }
                }
              }
            }
          }
        }
      }
    },
    "ConfigurationNames": {
      "type": "object",
      "description": "The configuration names which will be set based on specific target resource, client type, auth type.",
      "properties": {
        "targetService": {
          "type": "string",
          "description": "The target service provider name and resource name."
        },
        "clientType": {
          "description": "The client type for configuration names.",
          "type": "string",
          "enum": [
            "none",
            "dotnet",
            "java",
            "python",
            "go",
            "php",
            "ruby",
            "django",
            "nodejs",
            "springBoot",
            "kafka-springBoot",
            "jms-springBoot",
            "dapr"
          ],
          "x-ms-enum": {
            "name": "clientType",
            "modelAsString": true
          }
        },
        "authType": {
          "description": "The auth type.",
          "type": "string",
          "enum": [
            "systemAssignedIdentity",
            "userAssignedIdentity",
            "servicePrincipalSecret",
            "servicePrincipalCertificate",
            "secret",
            "accessKey",
            "userAccount",
            "easyAuthMicrosoftEntraID"
          ],
          "x-ms-enum": {
            "name": "AuthType",
            "modelAsString": true
          }
        },
        "secretType": {
          "description": "Indicates where the secrets in configuration from. Used when secrets are from Keyvault.",
          "type": "string",
          "enum": [
            "rawValue",
            "keyVaultSecret"
          ],
          "x-ms-enum": {
            "name": "SecretSourceType",
            "modelAsString": true
          }
        },
        "daprProperties": {
          "description": "Deprecated, please use #/definitions/DaprConfigurationList instead",
          "type": "object",
          "properties": {
            "version": {
              "x-nullable": true,
              "type": "string",
              "description": "The dapr component version"
            },
            "componentType": {
              "x-nullable": true,
              "type": "string",
              "description": "The dapr component type"
            },
            "secretStoreComponent": {
              "x-nullable": true,
              "type": "string",
              "description": "The name of a secret store dapr to retrieve secret"
            },
            "metadata": {
              "description": "Additional dapr metadata",
              "type": "array",
              "items": {
                "description": "The dapr component metadata.",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Metadata property name.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Metadata property value.",
                    "type": "string"
                  },
                  "secretRef": {
                    "description": "The secret name where dapr could get value",
                    "type": "string"
                  },
                  "description": {
                    "description": "The description of the metadata, returned from configuration api",
                    "type": "string"
                  },
                  "required": {
                    "description": "The value indicating whether the metadata is required or not",
                    "type": "string",
                    "enum": [
                      "true",
                      "false"
                    ],
                    "x-ms-enum": {
                      "name": "DaprMetadataRequired",
                      "modelAsString": true
                    }
                  }
                }
              },
              "x-ms-identifiers": [
                "name"
              ]
            },
            "scopes": {
              "description": "The dapr component scopes",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "runtimeVersion": {
              "x-nullable": true,
              "type": "string",
              "readOnly": true,
              "description": "The runtime version supported by the properties"
            },
            "bindingComponentDirection": {
              "x-nullable": true,
              "type": "string",
              "enum": [
                "input",
                "output"
              ],
              "x-ms-enum": {
                "name": "DaprBindingComponentDirection",
                "modelAsString": true
              },
              "readOnly": true,
              "description": "The direction supported by the dapr binding component"
            }
          }
        },
        "names": {
          "type": "array",
          "description": "The configuration names to be set in compute service environment.",
          "items": {
            "type": "object",
            "description": "The configuration names.",
            "properties": {
              "value": {
                "type": "string"
              },
              "description": {
                "type": "string",
                "description": "Description for the configuration name."
              },
              "required": {
                "type": "boolean",
                "description": "Represent the configuration is required or not"
              }
            }
          }
        }
      }
    },
    "ConfigurationName": {
      "type": "object",
      "description": "The configuration names.",
      "properties": {
        "value": {
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Description for the configuration name."
        },
        "required": {
          "type": "boolean",
          "description": "Represent the configuration is required or not"
        }
      }
    },
    "ConfigurationNameResult": {
      "description": "Configuration Name list which will be set based on different target resource, client type, auth type.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Expected configuration names for each target service.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "properties": {
                "x-nullable": true,
                "description": "The result detail.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "targetService": {
                    "type": "string",
                    "description": "The target service provider name and resource name."
                  },
                  "clientType": {
                    "description": "The client type for configuration names.",
                    "type": "string",
                    "enum": [
                      "none",
                      "dotnet",
                      "java",
                      "python",
                      "go",
                      "php",
                      "ruby",
                      "django",
                      "nodejs",
                      "springBoot",
                      "kafka-springBoot",
                      "jms-springBoot",
                      "dapr"
                    ],
                    "x-ms-enum": {
                      "name": "clientType",
                      "modelAsString": true
                    }
                  },
                  "authType": {
                    "description": "The auth type.",
                    "type": "string",
                    "enum": [
                      "systemAssignedIdentity",
                      "userAssignedIdentity",
                      "servicePrincipalSecret",
                      "servicePrincipalCertificate",
                      "secret",
                      "accessKey",
                      "userAccount",
                      "easyAuthMicrosoftEntraID"
                    ],
                    "x-ms-enum": {
                      "name": "AuthType",
                      "modelAsString": true
                    }
                  },
                  "secretType": {
                    "description": "Indicates where the secrets in configuration from. Used when secrets are from Keyvault.",
                    "type": "string",
                    "enum": [
                      "rawValue",
                      "keyVaultSecret"
                    ],
                    "x-ms-enum": {
                      "name": "SecretSourceType",
                      "modelAsString": true
                    }
                  },
                  "daprProperties": {
                    "description": "Deprecated, please use #/definitions/DaprConfigurationList instead",
                    "type": "object",
                    "properties": {
                      "version": {
                        "x-nullable": true,
                        "type": "string",
                        "description": "The dapr component version"
                      },
                      "componentType": {
                        "x-nullable": true,
                        "type": "string",
                        "description": "The dapr component type"
                      },
                      "secretStoreComponent": {
                        "x-nullable": true,
                        "type": "string",
                        "description": "The name of a secret store dapr to retrieve secret"
                      },
                      "metadata": {
                        "description": "Additional dapr metadata",
                        "type": "array",
                        "items": {
                          "description": "The dapr component metadata.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Metadata property name.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Metadata property value.",
                              "type": "string"
                            },
                            "secretRef": {
                              "description": "The secret name where dapr could get value",
                              "type": "string"
                            },
                            "description": {
                              "description": "The description of the metadata, returned from configuration api",
                              "type": "string"
                            },
                            "required": {
                              "description": "The value indicating whether the metadata is required or not",
                              "type": "string",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "x-ms-enum": {
                                "name": "DaprMetadataRequired",
                                "modelAsString": true
                              }
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      },
                      "scopes": {
                        "description": "The dapr component scopes",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "runtimeVersion": {
                        "x-nullable": true,
                        "type": "string",
                        "readOnly": true,
                        "description": "The runtime version supported by the properties"
                      },
                      "bindingComponentDirection": {
                        "x-nullable": true,
                        "type": "string",
                        "enum": [
                          "input",
                          "output"
                        ],
                        "x-ms-enum": {
                          "name": "DaprBindingComponentDirection",
                          "modelAsString": true
                        },
                        "readOnly": true,
                        "description": "The direction supported by the dapr binding component"
                      }
                    }
                  },
                  "names": {
                    "type": "array",
                    "description": "The configuration names to be set in compute service environment.",
                    "items": {
                      "type": "object",
                      "description": "The configuration names.",
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description for the configuration name."
                        },
                        "required": {
                          "type": "boolean",
                          "description": "Represent the configuration is required or not"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ConfigurationResult": {
      "description": "Configurations for source resource, include appSettings, connectionString and serviceBindings",
      "type": "object",
      "properties": {
        "configurations": {
          "description": "The configuration properties for source resource.",
          "type": "array",
          "items": {
            "description": "A configuration item for source resource",
            "type": "object",
            "properties": {
              "name": {
                "description": "The name of setting.",
                "type": "string"
              },
              "value": {
                "x-nullable": true,
                "description": "The value of setting",
                "type": "string"
              },
              "configType": {
                "description": "The type of setting",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "Default",
                  "KeyVaultSecret"
                ],
                "x-ms-enum": {
                  "name": "LinkerConfigurationType",
                  "modelAsString": true
                }
              },
              "keyVaultReferenceIdentity": {
                "x-nullable": true,
                "description": "The identity for key vault reference, system or user-assigned managed identity ID",
                "type": "string"
              },
              "description": {
                "x-nullable": true,
                "description": "Descriptive information for the configuration",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "ValidateOperationResult": {
      "description": "The validation operation result for a Linker.",
      "type": "object",
      "properties": {
        "properties": {
          "x-nullable": true,
          "description": "The validation result detail.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "linkerName": {
              "x-nullable": true,
              "description": "The linker name.",
              "type": "string"
            },
            "isConnectionAvailable": {
              "x-nullable": true,
              "description": "A boolean value indicating whether the connection is available or not",
              "type": "boolean"
            },
            "reportStartTimeUtc": {
              "x-nullable": true,
              "type": "string",
              "format": "date-time",
              "description": "The start time of the validation report."
            },
            "reportEndTimeUtc": {
              "x-nullable": true,
              "type": "string",
              "format": "date-time",
              "description": "The end time of the validation report."
            },
            "sourceId": {
              "x-nullable": true,
              "description": "The resource id of the Linker source application.",
              "type": "string"
            },
            "targetId": {
              "x-nullable": true,
              "description": "The resource Id of target service.",
              "type": "string"
            },
            "authType": {
              "x-nullable": true,
              "description": "The authentication type.",
              "type": "string",
              "enum": [
                "systemAssignedIdentity",
                "userAssignedIdentity",
                "servicePrincipalSecret",
                "servicePrincipalCertificate",
                "secret",
                "accessKey",
                "userAccount",
                "easyAuthMicrosoftEntraID"
              ],
              "x-ms-enum": {
                "name": "AuthType",
                "modelAsString": true
              }
            },
            "validationDetail": {
              "description": "The detail of validation result",
              "type": "array",
              "items": {
                "description": "The validation item for a Linker.",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The validation item name.",
                    "type": "string"
                  },
                  "description": {
                    "x-nullable": true,
                    "description": "The display name of validation item",
                    "type": "string"
                  },
                  "result": {
                    "x-nullable": true,
                    "description": "The result of validation",
                    "type": "string",
                    "enum": [
                      "success",
                      "failure",
                      "warning"
                    ],
                    "x-ms-enum": {
                      "name": "ValidationResultStatus",
                      "modelAsString": true
                    }
                  },
                  "errorMessage": {
                    "x-nullable": true,
                    "description": "The error message of validation result",
                    "type": "string"
                  },
                  "errorCode": {
                    "x-nullable": true,
                    "description": "The error code of validation result",
                    "type": "string"
                  }
                }
              },
              "x-ms-identifiers": [
                "name"
              ]
            }
          }
        },
        "resourceId": {
          "x-nullable": true,
          "description": "Validated Linker id.",
          "type": "string"
        },
        "status": {
          "x-nullable": true,
          "description": "Validation operation status.",
          "type": "string"
        }
      }
    },
    "ValidateResult": {
      "description": "The validation result for a Linker.",
      "type": "object",
      "properties": {
        "linkerName": {
          "x-nullable": true,
          "description": "The linker name.",
          "type": "string"
        },
        "isConnectionAvailable": {
          "x-nullable": true,
          "description": "A boolean value indicating whether the connection is available or not",
          "type": "boolean"
        },
        "reportStartTimeUtc": {
          "x-nullable": true,
          "type": "string",
          "format": "date-time",
          "description": "The start time of the validation report."
        },
        "reportEndTimeUtc": {
          "x-nullable": true,
          "type": "string",
          "format": "date-time",
          "description": "The end time of the validation report."
        },
        "sourceId": {
          "x-nullable": true,
          "description": "The resource id of the Linker source application.",
          "type": "string"
        },
        "targetId": {
          "x-nullable": true,
          "description": "The resource Id of target service.",
          "type": "string"
        },
        "authType": {
          "x-nullable": true,
          "description": "The authentication type.",
          "type": "string",
          "enum": [
            "systemAssignedIdentity",
            "userAssignedIdentity",
            "servicePrincipalSecret",
            "servicePrincipalCertificate",
            "secret",
            "accessKey",
            "userAccount",
            "easyAuthMicrosoftEntraID"
          ],
          "x-ms-enum": {
            "name": "AuthType",
            "modelAsString": true
          }
        },
        "validationDetail": {
          "description": "The detail of validation result",
          "type": "array",
          "items": {
            "description": "The validation item for a Linker.",
            "type": "object",
            "properties": {
              "name": {
                "description": "The validation item name.",
                "type": "string"
              },
              "description": {
                "x-nullable": true,
                "description": "The display name of validation item",
                "type": "string"
              },
              "result": {
                "x-nullable": true,
                "description": "The result of validation",
                "type": "string",
                "enum": [
                  "success",
                  "failure",
                  "warning"
                ],
                "x-ms-enum": {
                  "name": "ValidationResultStatus",
                  "modelAsString": true
                }
              },
              "errorMessage": {
                "x-nullable": true,
                "description": "The error message of validation result",
                "type": "string"
              },
              "errorCode": {
                "x-nullable": true,
                "description": "The error code of validation result",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "ValidationResultItem": {
      "description": "The validation item for a Linker.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The validation item name.",
          "type": "string"
        },
        "description": {
          "x-nullable": true,
          "description": "The display name of validation item",
          "type": "string"
        },
        "result": {
          "x-nullable": true,
          "description": "The result of validation",
          "type": "string",
          "enum": [
            "success",
            "failure",
            "warning"
          ],
          "x-ms-enum": {
            "name": "ValidationResultStatus",
            "modelAsString": true
          }
        },
        "errorMessage": {
          "x-nullable": true,
          "description": "The error message of validation result",
          "type": "string"
        },
        "errorCode": {
          "x-nullable": true,
          "description": "The error code of validation result",
          "type": "string"
        }
      }
    },
    "VNetSolution": {
      "type": "object",
      "description": "The VNet solution for linker",
      "properties": {
        "type": {
          "x-nullable": true,
          "description": "Type of VNet solution.",
          "type": "string",
          "enum": [
            "serviceEndpoint",
            "privateLink"
          ],
          "x-ms-enum": {
            "name": "vNetSolutionType",
            "modelAsString": true
          }
        },
        "deleteOrUpdateBehavior": {
          "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
          "type": "string",
          "enum": [
            "Default",
            "ForcedCleanup"
          ],
          "x-ms-enum": {
            "name": "DeleteOrUpdateBehavior",
            "modelAsString": true
          }
        }
      }
    },
    "PublicNetworkSolution": {
      "type": "object",
      "description": "Indicates public network solution, include firewall rules",
      "properties": {
        "deleteOrUpdateBehavior": {
          "description": "Indicates whether to clean up previous operation(such as firewall rules) when Linker is updating or deleting",
          "type": "string",
          "enum": [
            "Default",
            "ForcedCleanup"
          ],
          "x-ms-enum": {
            "name": "DeleteOrUpdateBehavior",
            "modelAsString": true
          }
        },
        "action": {
          "description": "Optional. Indicates public network solution. If enable, enable public network access of target service with best try. Default is enable. If optOut, opt out public network access configuration.",
          "type": "string",
          "enum": [
            "enable",
            "optOut"
          ],
          "x-ms-enum": {
            "name": "actionType",
            "modelAsString": true
          }
        },
        "firewallRules": {
          "description": "Describe firewall rules of target service to make sure source application could connect to the target.",
          "type": "object",
          "properties": {
            "ipRanges": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account."
            },
            "azureServices": {
              "description": "Allow Azure services to access the target service if true.",
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "x-ms-enum": {
                "name": "allowType",
                "modelAsString": true
              }
            },
            "callerClientIP": {
              "description": "Allow caller client IP to access the target service if true. the property is used when connecting local application to target service.",
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "x-ms-enum": {
                "name": "allowType",
                "modelAsString": true
              }
            }
          }
        }
      }
    },
    "FirewallRules": {
      "type": "object",
      "description": "Target service's firewall rules. to allow connections from source service.",
      "properties": {
        "ipRanges": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account."
        },
        "azureServices": {
          "description": "Allow Azure services to access the target service if true.",
          "type": "string",
          "enum": [
            "true",
            "false"
          ],
          "x-ms-enum": {
            "name": "allowType",
            "modelAsString": true
          }
        },
        "callerClientIP": {
          "description": "Allow caller client IP to access the target service if true. the property is used when connecting local application to target service.",
          "type": "string",
          "enum": [
            "true",
            "false"
          ],
          "x-ms-enum": {
            "name": "allowType",
            "modelAsString": true
          }
        }
      }
    },
    "ConfigurationInfo": {
      "type": "object",
      "description": "The configuration information, used to generate configurations or save to applications",
      "properties": {
        "deleteOrUpdateBehavior": {
          "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
          "type": "string",
          "enum": [
            "Default",
            "ForcedCleanup"
          ],
          "x-ms-enum": {
            "name": "DeleteOrUpdateBehavior",
            "modelAsString": true
          }
        },
        "action": {
          "description": "Optional, indicate whether to apply configurations on source application. If enable, generate configurations and applied to the source application. Default is enable. If optOut, no configuration change will be made on source.",
          "type": "string",
          "enum": [
            "enable",
            "optOut"
          ],
          "x-ms-enum": {
            "name": "actionType",
            "modelAsString": true
          }
        },
        "customizedKeys": {
          "description": "Optional. A dictionary of default key name and customized key name mapping. If not specified, default key name will be used for generate configurations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "daprProperties": {
          "description": "Indicates some additional properties for dapr client type",
          "type": "object",
          "properties": {
            "version": {
              "x-nullable": true,
              "type": "string",
              "description": "The dapr component version"
            },
            "componentType": {
              "x-nullable": true,
              "type": "string",
              "description": "The dapr component type"
            },
            "secretStoreComponent": {
              "x-nullable": true,
              "type": "string",
              "description": "The name of a secret store dapr to retrieve secret"
            },
            "metadata": {
              "description": "Additional dapr metadata",
              "type": "array",
              "items": {
                "description": "The dapr component metadata.",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Metadata property name.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Metadata property value.",
                    "type": "string"
                  },
                  "secretRef": {
                    "description": "The secret name where dapr could get value",
                    "type": "string"
                  },
                  "description": {
                    "description": "The description of the metadata, returned from configuration api",
                    "type": "string"
                  },
                  "required": {
                    "description": "The value indicating whether the metadata is required or not",
                    "type": "string",
                    "enum": [
                      "true",
                      "false"
                    ],
                    "x-ms-enum": {
                      "name": "DaprMetadataRequired",
                      "modelAsString": true
                    }
                  }
                }
              },
              "x-ms-identifiers": [
                "name"
              ]
            },
            "scopes": {
              "description": "The dapr component scopes",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "runtimeVersion": {
              "x-nullable": true,
              "type": "string",
              "readOnly": true,
              "description": "The runtime version supported by the properties"
            },
            "bindingComponentDirection": {
              "x-nullable": true,
              "type": "string",
              "enum": [
                "input",
                "output"
              ],
              "x-ms-enum": {
                "name": "DaprBindingComponentDirection",
                "modelAsString": true
              },
              "readOnly": true,
              "description": "The direction supported by the dapr binding component"
            }
          }
        },
        "additionalConfigurations": {
          "description": "A dictionary of additional configurations to be added. Service will auto generate a set of basic configurations and this property is to full fill more customized configurations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "additionalConnectionStringProperties": {
          "description": "A dictionary of additional properties to be added in the end of connection string.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "configurationStore": {
          "x-nullable": true,
          "description": "An option to store configuration into different place",
          "type": "object",
          "properties": {
            "appConfigurationId": {
              "x-nullable": true,
              "type": "string",
              "description": "The app configuration id to store configuration"
            }
          }
        }
      }
    },
    "ConfigurationStore": {
      "type": "object",
      "description": "An option to store configuration into different place",
      "properties": {
        "appConfigurationId": {
          "x-nullable": true,
          "type": "string",
          "description": "The app configuration id to store configuration"
        }
      }
    },
    "DaprProperties": {
      "type": "object",
      "description": "Indicates some additional properties for dapr client type",
      "properties": {
        "version": {
          "x-nullable": true,
          "type": "string",
          "description": "The dapr component version"
        },
        "componentType": {
          "x-nullable": true,
          "type": "string",
          "description": "The dapr component type"
        },
        "secretStoreComponent": {
          "x-nullable": true,
          "type": "string",
          "description": "The name of a secret store dapr to retrieve secret"
        },
        "metadata": {
          "description": "Additional dapr metadata",
          "type": "array",
          "items": {
            "description": "The dapr component metadata.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Metadata property name.",
                "type": "string"
              },
              "value": {
                "description": "Metadata property value.",
                "type": "string"
              },
              "secretRef": {
                "description": "The secret name where dapr could get value",
                "type": "string"
              },
              "description": {
                "description": "The description of the metadata, returned from configuration api",
                "type": "string"
              },
              "required": {
                "description": "The value indicating whether the metadata is required or not",
                "type": "string",
                "enum": [
                  "true",
                  "false"
                ],
                "x-ms-enum": {
                  "name": "DaprMetadataRequired",
                  "modelAsString": true
                }
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "scopes": {
          "description": "The dapr component scopes",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "runtimeVersion": {
          "x-nullable": true,
          "type": "string",
          "readOnly": true,
          "description": "The runtime version supported by the properties"
        },
        "bindingComponentDirection": {
          "x-nullable": true,
          "type": "string",
          "enum": [
            "input",
            "output"
          ],
          "x-ms-enum": {
            "name": "DaprBindingComponentDirection",
            "modelAsString": true
          },
          "readOnly": true,
          "description": "The direction supported by the dapr binding component"
        }
      }
    },
    "DaprMetadata": {
      "description": "The dapr component metadata.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Metadata property name.",
          "type": "string"
        },
        "value": {
          "description": "Metadata property value.",
          "type": "string"
        },
        "secretRef": {
          "description": "The secret name where dapr could get value",
          "type": "string"
        },
        "description": {
          "description": "The description of the metadata, returned from configuration api",
          "type": "string"
        },
        "required": {
          "description": "The value indicating whether the metadata is required or not",
          "type": "string",
          "enum": [
            "true",
            "false"
          ],
          "x-ms-enum": {
            "name": "DaprMetadataRequired",
            "modelAsString": true
          }
        }
      }
    },
    "SecretStore": {
      "type": "object",
      "description": "An option to store secret value in secure place",
      "properties": {
        "keyVaultId": {
          "x-nullable": true,
          "type": "string",
          "description": "The key vault id to store secret"
        },
        "keyVaultSecretName": {
          "x-nullable": true,
          "type": "string",
          "description": "The key vault secret name to store secret, only valid when storing one secret"
        }
      }
    },
    "DryrunList": {
      "description": "The list of dryrun.",
      "type": "object",
      "properties": {
        "nextLink": {
          "x-nullable": true,
          "description": "The link used to get the next page of dryrun list.",
          "type": "string"
        },
        "value": {
          "description": "The list of dryrun.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "a dryrun job resource",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The properties of the dryrun job.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "parameters": {
                    "description": "The parameters of the dryrun",
                    "discriminator": "actionName",
                    "type": "object",
                    "properties": {
                      "actionName": {
                        "description": "The name of action for you dryrun job.",
                        "type": "string",
                        "enum": [
                          "createOrUpdate"
                        ],
                        "x-ms-enum": {
                          "name": "DryrunActionName",
                          "modelAsString": true
                        }
                      }
                    },
                    "required": [
                      "actionName"
                    ]
                  },
                  "prerequisiteResults": {
                    "readOnly": true,
                    "description": "the result of the dryrun",
                    "type": "array",
                    "items": {
                      "description": "A result of dryrun",
                      "discriminator": "type",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The type of dryrun result.",
                          "type": "string",
                          "enum": [
                            "basicError",
                            "permissionsMissing"
                          ],
                          "x-ms-enum": {
                            "name": "DryrunPrerequisiteResultType",
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "type"
                      ]
                    },
                    "x-ms-identifiers": []
                  },
                  "operationPreviews": {
                    "readOnly": true,
                    "description": "the preview of the operations for creation",
                    "type": "array",
                    "items": {
                      "description": "The preview of the operations for creation",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The operation name",
                          "type": "string"
                        },
                        "operationType": {
                          "description": "The operation type",
                          "type": "string",
                          "enum": [
                            "configConnection",
                            "configNetwork",
                            "configAuth"
                          ],
                          "x-ms-enum": {
                            "name": "DryrunPreviewOperationType",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "description": "The description of the operation",
                          "type": "string"
                        },
                        "action": {
                          "description": "The action defined by RBAC, refer https://docs.microsoft.com/azure/role-based-access-control/role-definitions#actions-format",
                          "type": "string"
                        },
                        "scope": {
                          "description": "The scope of the operation, refer https://docs.microsoft.com/azure/role-based-access-control/scope-overview",
                          "type": "string"
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "provisioningState": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The provisioning state. "
                  }
                }
              }
            }
          }
        }
      }
    },
    "DryrunResource": {
      "type": "object",
      "description": "a dryrun job resource",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The properties of the dryrun job.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "parameters": {
              "description": "The parameters of the dryrun",
              "discriminator": "actionName",
              "type": "object",
              "properties": {
                "actionName": {
                  "description": "The name of action for you dryrun job.",
                  "type": "string",
                  "enum": [
                    "createOrUpdate"
                  ],
                  "x-ms-enum": {
                    "name": "DryrunActionName",
                    "modelAsString": true
                  }
                }
              },
              "required": [
                "actionName"
              ]
            },
            "prerequisiteResults": {
              "readOnly": true,
              "description": "the result of the dryrun",
              "type": "array",
              "items": {
                "description": "A result of dryrun",
                "discriminator": "type",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "The type of dryrun result.",
                    "type": "string",
                    "enum": [
                      "basicError",
                      "permissionsMissing"
                    ],
                    "x-ms-enum": {
                      "name": "DryrunPrerequisiteResultType",
                      "modelAsString": true
                    }
                  }
                },
                "required": [
                  "type"
                ]
              },
              "x-ms-identifiers": []
            },
            "operationPreviews": {
              "readOnly": true,
              "description": "the preview of the operations for creation",
              "type": "array",
              "items": {
                "description": "The preview of the operations for creation",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The operation name",
                    "type": "string"
                  },
                  "operationType": {
                    "description": "The operation type",
                    "type": "string",
                    "enum": [
                      "configConnection",
                      "configNetwork",
                      "configAuth"
                    ],
                    "x-ms-enum": {
                      "name": "DryrunPreviewOperationType",
                      "modelAsString": true
                    }
                  },
                  "description": {
                    "description": "The description of the operation",
                    "type": "string"
                  },
                  "action": {
                    "description": "The action defined by RBAC, refer https://docs.microsoft.com/azure/role-based-access-control/role-definitions#actions-format",
                    "type": "string"
                  },
                  "scope": {
                    "description": "The scope of the operation, refer https://docs.microsoft.com/azure/role-based-access-control/scope-overview",
                    "type": "string"
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "provisioningState": {
              "readOnly": true,
              "type": "string",
              "description": "The provisioning state. "
            }
          }
        }
      }
    },
    "DryrunPatch": {
      "type": "object",
      "description": "a dryrun job to be updated.",
      "properties": {
        "properties": {
          "description": "The properties of the dryrun job.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "parameters": {
              "description": "The parameters of the dryrun",
              "discriminator": "actionName",
              "type": "object",
              "properties": {
                "actionName": {
                  "description": "The name of action for you dryrun job.",
                  "type": "string",
                  "enum": [
                    "createOrUpdate"
                  ],
                  "x-ms-enum": {
                    "name": "DryrunActionName",
                    "modelAsString": true
                  }
                }
              },
              "required": [
                "actionName"
              ]
            },
            "prerequisiteResults": {
              "readOnly": true,
              "description": "the result of the dryrun",
              "type": "array",
              "items": {
                "description": "A result of dryrun",
                "discriminator": "type",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "The type of dryrun result.",
                    "type": "string",
                    "enum": [
                      "basicError",
                      "permissionsMissing"
                    ],
                    "x-ms-enum": {
                      "name": "DryrunPrerequisiteResultType",
                      "modelAsString": true
                    }
                  }
                },
                "required": [
                  "type"
                ]
              },
              "x-ms-identifiers": []
            },
            "operationPreviews": {
              "readOnly": true,
              "description": "the preview of the operations for creation",
              "type": "array",
              "items": {
                "description": "The preview of the operations for creation",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The operation name",
                    "type": "string"
                  },
                  "operationType": {
                    "description": "The operation type",
                    "type": "string",
                    "enum": [
                      "configConnection",
                      "configNetwork",
                      "configAuth"
                    ],
                    "x-ms-enum": {
                      "name": "DryrunPreviewOperationType",
                      "modelAsString": true
                    }
                  },
                  "description": {
                    "description": "The description of the operation",
                    "type": "string"
                  },
                  "action": {
                    "description": "The action defined by RBAC, refer https://docs.microsoft.com/azure/role-based-access-control/role-definitions#actions-format",
                    "type": "string"
                  },
                  "scope": {
                    "description": "The scope of the operation, refer https://docs.microsoft.com/azure/role-based-access-control/scope-overview",
                    "type": "string"
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "provisioningState": {
              "readOnly": true,
              "type": "string",
              "description": "The provisioning state. "
            }
          }
        }
      }
    },
    "DryrunProperties": {
      "description": "The properties of the dryrun job",
      "type": "object",
      "properties": {
        "parameters": {
          "description": "The parameters of the dryrun",
          "discriminator": "actionName",
          "type": "object",
          "properties": {
            "actionName": {
              "description": "The name of action for you dryrun job.",
              "type": "string",
              "enum": [
                "createOrUpdate"
              ],
              "x-ms-enum": {
                "name": "DryrunActionName",
                "modelAsString": true
              }
            }
          },
          "required": [
            "actionName"
          ]
        },
        "prerequisiteResults": {
          "readOnly": true,
          "description": "the result of the dryrun",
          "type": "array",
          "items": {
            "description": "A result of dryrun",
            "discriminator": "type",
            "type": "object",
            "properties": {
              "type": {
                "description": "The type of dryrun result.",
                "type": "string",
                "enum": [
                  "basicError",
                  "permissionsMissing"
                ],
                "x-ms-enum": {
                  "name": "DryrunPrerequisiteResultType",
                  "modelAsString": true
                }
              }
            },
            "required": [
              "type"
            ]
          },
          "x-ms-identifiers": []
        },
        "operationPreviews": {
          "readOnly": true,
          "description": "the preview of the operations for creation",
          "type": "array",
          "items": {
            "description": "The preview of the operations for creation",
            "type": "object",
            "properties": {
              "name": {
                "description": "The operation name",
                "type": "string"
              },
              "operationType": {
                "description": "The operation type",
                "type": "string",
                "enum": [
                  "configConnection",
                  "configNetwork",
                  "configAuth"
                ],
                "x-ms-enum": {
                  "name": "DryrunPreviewOperationType",
                  "modelAsString": true
                }
              },
              "description": {
                "description": "The description of the operation",
                "type": "string"
              },
              "action": {
                "description": "The action defined by RBAC, refer https://docs.microsoft.com/azure/role-based-access-control/role-definitions#actions-format",
                "type": "string"
              },
              "scope": {
                "description": "The scope of the operation, refer https://docs.microsoft.com/azure/role-based-access-control/scope-overview",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": []
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The provisioning state. "
        }
      }
    },
    "DryrunActionName": {
      "description": "The name of action for you dryrun job.",
      "type": "string",
      "enum": [
        "createOrUpdate"
      ],
      "x-ms-enum": {
        "name": "DryrunActionName",
        "modelAsString": true
      }
    },
    "DryrunParameters": {
      "description": "The parameters of the dryrun",
      "discriminator": "actionName",
      "type": "object",
      "properties": {
        "actionName": {
          "description": "The name of action for you dryrun job.",
          "type": "string",
          "enum": [
            "createOrUpdate"
          ],
          "x-ms-enum": {
            "name": "DryrunActionName",
            "modelAsString": true
          }
        }
      },
      "required": [
        "actionName"
      ]
    },
    "CreateOrUpdateDryrunParameters": {
      "x-ms-discriminator-value": "createOrUpdate",
      "type": "object",
      "description": "The dryrun parameters for creation or update a linker",
      "allOf": [
        {
          "description": "The parameters of the dryrun",
          "discriminator": "actionName",
          "type": "object",
          "properties": {
            "actionName": {
              "description": "The name of action for you dryrun job.",
              "type": "string",
              "enum": [
                "createOrUpdate"
              ],
              "x-ms-enum": {
                "name": "DryrunActionName",
                "modelAsString": true
              }
            }
          },
          "required": [
            "actionName"
          ]
        },
        {
          "description": "The properties of the Linker.",
          "type": "object",
          "properties": {
            "targetService": {
              "description": "The target service properties",
              "discriminator": "type",
              "type": "object",
              "properties": {
                "type": {
                  "description": "The target service type.",
                  "type": "string",
                  "enum": [
                    "AzureResource",
                    "ConfluentBootstrapServer",
                    "ConfluentSchemaRegistry",
                    "SelfHostedServer"
                  ],
                  "x-ms-enum": {
                    "name": "targetServiceType",
                    "modelAsString": true
                  }
                }
              },
              "required": [
                "type"
              ]
            },
            "authInfo": {
              "description": "The authentication type.",
              "discriminator": "authType",
              "type": "object",
              "properties": {
                "authType": {
                  "description": "The authentication type.",
                  "type": "string",
                  "enum": [
                    "systemAssignedIdentity",
                    "userAssignedIdentity",
                    "servicePrincipalSecret",
                    "servicePrincipalCertificate",
                    "secret",
                    "accessKey",
                    "userAccount",
                    "easyAuthMicrosoftEntraID"
                  ],
                  "x-ms-enum": {
                    "name": "AuthType",
                    "modelAsString": true
                  }
                },
                "authMode": {
                  "description": "Optional. Indicates how to configure authentication. If optInAllAuth, service linker configures authentication such as enabling identity on source resource and granting RBAC roles. If optOutAllAuth, opt out authentication setup. Default is optInAllAuth.",
                  "type": "string",
                  "enum": [
                    "optInAllAuth",
                    "optOutAllAuth"
                  ],
                  "x-ms-enum": {
                    "name": "authMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "optInAllAuth",
                        "description": "Default authentication configuration according to the authentication type."
                      },
                      {
                        "value": "optOutAllAuth",
                        "description": "Skip all authentication configuration such as enabling managed identity and granting RBAC roles"
                      }
                    ]
                  }
                }
              },
              "required": [
                "authType"
              ]
            },
            "clientType": {
              "description": "The application client type",
              "type": "string",
              "enum": [
                "none",
                "dotnet",
                "java",
                "python",
                "go",
                "php",
                "ruby",
                "django",
                "nodejs",
                "springBoot",
                "kafka-springBoot",
                "jms-springBoot",
                "dapr"
              ],
              "x-ms-enum": {
                "name": "clientType",
                "modelAsString": true
              }
            },
            "provisioningState": {
              "readOnly": true,
              "type": "string",
              "description": "The provisioning state. "
            },
            "vNetSolution": {
              "x-nullable": true,
              "description": "The VNet solution.",
              "type": "object",
              "properties": {
                "type": {
                  "x-nullable": true,
                  "description": "Type of VNet solution.",
                  "type": "string",
                  "enum": [
                    "serviceEndpoint",
                    "privateLink"
                  ],
                  "x-ms-enum": {
                    "name": "vNetSolutionType",
                    "modelAsString": true
                  }
                },
                "deleteOrUpdateBehavior": {
                  "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                  "type": "string",
                  "enum": [
                    "Default",
                    "ForcedCleanup"
                  ],
                  "x-ms-enum": {
                    "name": "DeleteOrUpdateBehavior",
                    "modelAsString": true
                  }
                }
              }
            },
            "secretStore": {
              "x-nullable": true,
              "description": "An option to store secret value in secure place",
              "type": "object",
              "properties": {
                "keyVaultId": {
                  "x-nullable": true,
                  "type": "string",
                  "description": "The key vault id to store secret"
                },
                "keyVaultSecretName": {
                  "x-nullable": true,
                  "type": "string",
                  "description": "The key vault secret name to store secret, only valid when storing one secret"
                }
              }
            },
            "scope": {
              "x-nullable": true,
              "type": "string",
              "description": "connection scope in source service."
            },
            "publicNetworkSolution": {
              "x-nullable": true,
              "description": "The network solution.",
              "type": "object",
              "properties": {
                "deleteOrUpdateBehavior": {
                  "description": "Indicates whether to clean up previous operation(such as firewall rules) when Linker is updating or deleting",
                  "type": "string",
                  "enum": [
                    "Default",
                    "ForcedCleanup"
                  ],
                  "x-ms-enum": {
                    "name": "DeleteOrUpdateBehavior",
                    "modelAsString": true
                  }
                },
                "action": {
                  "description": "Optional. Indicates public network solution. If enable, enable public network access of target service with best try. Default is enable. If optOut, opt out public network access configuration.",
                  "type": "string",
                  "enum": [
                    "enable",
                    "optOut"
                  ],
                  "x-ms-enum": {
                    "name": "actionType",
                    "modelAsString": true
                  }
                },
                "firewallRules": {
                  "description": "Describe firewall rules of target service to make sure source application could connect to the target.",
                  "type": "object",
                  "properties": {
                    "ipRanges": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account."
                    },
                    "azureServices": {
                      "description": "Allow Azure services to access the target service if true.",
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "allowType",
                        "modelAsString": true
                      }
                    },
                    "callerClientIP": {
                      "description": "Allow caller client IP to access the target service if true. the property is used when connecting local application to target service.",
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "allowType",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            },
            "configurationInfo": {
              "x-nullable": true,
              "description": "The connection information consumed by applications, including secrets, connection strings.",
              "type": "object",
              "properties": {
                "deleteOrUpdateBehavior": {
                  "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
                  "type": "string",
                  "enum": [
                    "Default",
                    "ForcedCleanup"
                  ],
                  "x-ms-enum": {
                    "name": "DeleteOrUpdateBehavior",
                    "modelAsString": true
                  }
                },
                "action": {
                  "description": "Optional, indicate whether to apply configurations on source application. If enable, generate configurations and applied to the source application. Default is enable. If optOut, no configuration change will be made on source.",
                  "type": "string",
                  "enum": [
                    "enable",
                    "optOut"
                  ],
                  "x-ms-enum": {
                    "name": "actionType",
                    "modelAsString": true
                  }
                },
                "customizedKeys": {
                  "description": "Optional. A dictionary of default key name and customized key name mapping. If not specified, default key name will be used for generate configurations",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "daprProperties": {
                  "description": "Indicates some additional properties for dapr client type",
                  "type": "object",
                  "properties": {
                    "version": {
                      "x-nullable": true,
                      "type": "string",
                      "description": "The dapr component version"
                    },
                    "componentType": {
                      "x-nullable": true,
                      "type": "string",
                      "description": "The dapr component type"
                    },
                    "secretStoreComponent": {
                      "x-nullable": true,
                      "type": "string",
                      "description": "The name of a secret store dapr to retrieve secret"
                    },
                    "metadata": {
                      "description": "Additional dapr metadata",
                      "type": "array",
                      "items": {
                        "description": "The dapr component metadata.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Metadata property name.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Metadata property value.",
                            "type": "string"
                          },
                          "secretRef": {
                            "description": "The secret name where dapr could get value",
                            "type": "string"
                          },
                          "description": {
                            "description": "The description of the metadata, returned from configuration api",
                            "type": "string"
                          },
                          "required": {
                            "description": "The value indicating whether the metadata is required or not",
                            "type": "string",
                            "enum": [
                              "true",
                              "false"
                            ],
                            "x-ms-enum": {
                              "name": "DaprMetadataRequired",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "scopes": {
                      "description": "The dapr component scopes",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "runtimeVersion": {
                      "x-nullable": true,
                      "type": "string",
                      "readOnly": true,
                      "description": "The runtime version supported by the properties"
                    },
                    "bindingComponentDirection": {
                      "x-nullable": true,
                      "type": "string",
                      "enum": [
                        "input",
                        "output"
                      ],
                      "x-ms-enum": {
                        "name": "DaprBindingComponentDirection",
                        "modelAsString": true
                      },
                      "readOnly": true,
                      "description": "The direction supported by the dapr binding component"
                    }
                  }
                },
                "additionalConfigurations": {
                  "description": "A dictionary of additional configurations to be added. Service will auto generate a set of basic configurations and this property is to full fill more customized configurations",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "additionalConnectionStringProperties": {
                  "description": "A dictionary of additional properties to be added in the end of connection string.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "configurationStore": {
                  "x-nullable": true,
                  "description": "An option to store configuration into different place",
                  "type": "object",
                  "properties": {
                    "appConfigurationId": {
                      "x-nullable": true,
                      "type": "string",
                      "description": "The app configuration id to store configuration"
                    }
                  }
                }
              }
            }
          }
        }
      ]
    },
    "DryrunPrerequisiteResultType": {
      "description": "The type of dryrun result.",
      "type": "string",
      "enum": [
        "basicError",
        "permissionsMissing"
      ],
      "x-ms-enum": {
        "name": "DryrunPrerequisiteResultType",
        "modelAsString": true
      }
    },
    "DryrunPrerequisiteResult": {
      "description": "A result of dryrun",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type of dryrun result.",
          "type": "string",
          "enum": [
            "basicError",
            "permissionsMissing"
          ],
          "x-ms-enum": {
            "name": "DryrunPrerequisiteResultType",
            "modelAsString": true
          }
        }
      },
      "required": [
        "type"
      ]
    },
    "BasicErrorDryrunPrerequisiteResult": {
      "x-ms-discriminator-value": "basicError",
      "description": "The represent of basic error",
      "type": "object",
      "allOf": [
        {
          "description": "A result of dryrun",
          "discriminator": "type",
          "type": "object",
          "properties": {
            "type": {
              "description": "The type of dryrun result.",
              "type": "string",
              "enum": [
                "basicError",
                "permissionsMissing"
              ],
              "x-ms-enum": {
                "name": "DryrunPrerequisiteResultType",
                "modelAsString": true
              }
            }
          },
          "required": [
            "type"
          ]
        }
      ],
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code."
        },
        "message": {
          "type": "string",
          "description": "The error message."
        }
      }
    },
    "PermissionsMissingDryrunPrerequisiteResult": {
      "x-ms-discriminator-value": "permissionsMissing",
      "description": "The represent of missing permissions",
      "type": "object",
      "allOf": [
        {
          "description": "A result of dryrun",
          "discriminator": "type",
          "type": "object",
          "properties": {
            "type": {
              "description": "The type of dryrun result.",
              "type": "string",
              "enum": [
                "basicError",
                "permissionsMissing"
              ],
              "x-ms-enum": {
                "name": "DryrunPrerequisiteResultType",
                "modelAsString": true
              }
            }
          },
          "required": [
            "type"
          ]
        }
      ],
      "properties": {
        "scope": {
          "description": "The permission scope",
          "type": "string"
        },
        "permissions": {
          "description": "The permission list",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "recommendedRole": {
          "description": "The recommended role to resolve permissions missing",
          "type": "string"
        }
      }
    },
    "DryrunOperationPreview": {
      "description": "The preview of the operations for creation",
      "type": "object",
      "properties": {
        "name": {
          "description": "The operation name",
          "type": "string"
        },
        "operationType": {
          "description": "The operation type",
          "type": "string",
          "enum": [
            "configConnection",
            "configNetwork",
            "configAuth"
          ],
          "x-ms-enum": {
            "name": "DryrunPreviewOperationType",
            "modelAsString": true
          }
        },
        "description": {
          "description": "The description of the operation",
          "type": "string"
        },
        "action": {
          "description": "The action defined by RBAC, refer https://docs.microsoft.com/azure/role-based-access-control/role-definitions#actions-format",
          "type": "string"
        },
        "scope": {
          "description": "The scope of the operation, refer https://docs.microsoft.com/azure/role-based-access-control/scope-overview",
          "type": "string"
        }
      }
    },
    "ActionType": {
      "description": "Indicates how to apply the connector operations, such as opt out network configuration, opt in configuration.",
      "type": "string",
      "enum": [
        "enable",
        "optOut"
      ],
      "x-ms-enum": {
        "name": "actionType",
        "modelAsString": true
      }
    },
    "AuthMode": {
      "description": "Indicates how to apply the authentication configuration operations.",
      "type": "string",
      "enum": [
        "optInAllAuth",
        "optOutAllAuth"
      ],
      "x-ms-enum": {
        "name": "authMode",
        "modelAsString": true,
        "values": [
          {
            "value": "optInAllAuth",
            "description": "Default authentication configuration according to the authentication type."
          },
          {
            "value": "optOutAllAuth",
            "description": "Skip all authentication configuration such as enabling managed identity and granting RBAC roles"
          }
        ]
      }
    },
    "AllowType": {
      "description": "Whether to allow firewall rules.",
      "type": "string",
      "enum": [
        "true",
        "false"
      ],
      "x-ms-enum": {
        "name": "allowType",
        "modelAsString": true
      }
    },
    "DaprConfigurationList": {
      "description": "Dapr configuration list supported by Service Connector",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of dapr configurations",
          "type": "array",
          "items": {
            "description": "Represent one resource of the dapr configuration list",
            "type": "object",
            "properties": {
              "properties": {
                "description": "The properties of the dapr configuration.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "targetType": {
                    "type": "string",
                    "description": "Supported target resource type, extract from resource id, uppercase"
                  },
                  "authType": {
                    "description": "The authentication type.",
                    "type": "string",
                    "enum": [
                      "systemAssignedIdentity",
                      "userAssignedIdentity",
                      "servicePrincipalSecret",
                      "servicePrincipalCertificate",
                      "secret",
                      "accessKey",
                      "userAccount",
                      "easyAuthMicrosoftEntraID"
                    ],
                    "x-ms-enum": {
                      "name": "AuthType",
                      "modelAsString": true
                    }
                  },
                  "daprProperties": {
                    "type": "object",
                    "description": "Indicates some additional properties for dapr client type",
                    "properties": {
                      "version": {
                        "x-nullable": true,
                        "type": "string",
                        "description": "The dapr component version"
                      },
                      "componentType": {
                        "x-nullable": true,
                        "type": "string",
                        "description": "The dapr component type"
                      },
                      "secretStoreComponent": {
                        "x-nullable": true,
                        "type": "string",
                        "description": "The name of a secret store dapr to retrieve secret"
                      },
                      "metadata": {
                        "description": "Additional dapr metadata",
                        "type": "array",
                        "items": {
                          "description": "The dapr component metadata.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Metadata property name.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Metadata property value.",
                              "type": "string"
                            },
                            "secretRef": {
                              "description": "The secret name where dapr could get value",
                              "type": "string"
                            },
                            "description": {
                              "description": "The description of the metadata, returned from configuration api",
                              "type": "string"
                            },
                            "required": {
                              "description": "The value indicating whether the metadata is required or not",
                              "type": "string",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "x-ms-enum": {
                                "name": "DaprMetadataRequired",
                                "modelAsString": true
                              }
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      },
                      "scopes": {
                        "description": "The dapr component scopes",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "runtimeVersion": {
                        "x-nullable": true,
                        "type": "string",
                        "readOnly": true,
                        "description": "The runtime version supported by the properties"
                      },
                      "bindingComponentDirection": {
                        "x-nullable": true,
                        "type": "string",
                        "enum": [
                          "input",
                          "output"
                        ],
                        "x-ms-enum": {
                          "name": "DaprBindingComponentDirection",
                          "modelAsString": true
                        },
                        "readOnly": true,
                        "description": "The direction supported by the dapr binding component"
                      }
                    }
                  }
                }
              }
            }
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DaprConfigurationResource": {
      "description": "Represent one resource of the dapr configuration list",
      "type": "object",
      "properties": {
        "properties": {
          "description": "The properties of the dapr configuration.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "targetType": {
              "type": "string",
              "description": "Supported target resource type, extract from resource id, uppercase"
            },
            "authType": {
              "description": "The authentication type.",
              "type": "string",
              "enum": [
                "systemAssignedIdentity",
                "userAssignedIdentity",
                "servicePrincipalSecret",
                "servicePrincipalCertificate",
                "secret",
                "accessKey",
                "userAccount",
                "easyAuthMicrosoftEntraID"
              ],
              "x-ms-enum": {
                "name": "AuthType",
                "modelAsString": true
              }
            },
            "daprProperties": {
              "type": "object",
              "description": "Indicates some additional properties for dapr client type",
              "properties": {
                "version": {
                  "x-nullable": true,
                  "type": "string",
                  "description": "The dapr component version"
                },
                "componentType": {
                  "x-nullable": true,
                  "type": "string",
                  "description": "The dapr component type"
                },
                "secretStoreComponent": {
                  "x-nullable": true,
                  "type": "string",
                  "description": "The name of a secret store dapr to retrieve secret"
                },
                "metadata": {
                  "description": "Additional dapr metadata",
                  "type": "array",
                  "items": {
                    "description": "The dapr component metadata.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Metadata property name.",
                        "type": "string"
                      },
                      "value": {
                        "description": "Metadata property value.",
                        "type": "string"
                      },
                      "secretRef": {
                        "description": "The secret name where dapr could get value",
                        "type": "string"
                      },
                      "description": {
                        "description": "The description of the metadata, returned from configuration api",
                        "type": "string"
                      },
                      "required": {
                        "description": "The value indicating whether the metadata is required or not",
                        "type": "string",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "x-ms-enum": {
                          "name": "DaprMetadataRequired",
                          "modelAsString": true
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "scopes": {
                  "description": "The dapr component scopes",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "runtimeVersion": {
                  "x-nullable": true,
                  "type": "string",
                  "readOnly": true,
                  "description": "The runtime version supported by the properties"
                },
                "bindingComponentDirection": {
                  "x-nullable": true,
                  "type": "string",
                  "enum": [
                    "input",
                    "output"
                  ],
                  "x-ms-enum": {
                    "name": "DaprBindingComponentDirection",
                    "modelAsString": true
                  },
                  "readOnly": true,
                  "description": "The direction supported by the dapr binding component"
                }
              }
            }
          }
        }
      }
    },
    "DaprConfigurationProperties": {
      "type": "object",
      "properties": {
        "targetType": {
          "type": "string",
          "description": "Supported target resource type, extract from resource id, uppercase"
        },
        "authType": {
          "description": "The authentication type.",
          "type": "string",
          "enum": [
            "systemAssignedIdentity",
            "userAssignedIdentity",
            "servicePrincipalSecret",
            "servicePrincipalCertificate",
            "secret",
            "accessKey",
            "userAccount",
            "easyAuthMicrosoftEntraID"
          ],
          "x-ms-enum": {
            "name": "AuthType",
            "modelAsString": true
          }
        },
        "daprProperties": {
          "type": "object",
          "description": "Indicates some additional properties for dapr client type",
          "properties": {
            "version": {
              "x-nullable": true,
              "type": "string",
              "description": "The dapr component version"
            },
            "componentType": {
              "x-nullable": true,
              "type": "string",
              "description": "The dapr component type"
            },
            "secretStoreComponent": {
              "x-nullable": true,
              "type": "string",
              "description": "The name of a secret store dapr to retrieve secret"
            },
            "metadata": {
              "description": "Additional dapr metadata",
              "type": "array",
              "items": {
                "description": "The dapr component metadata.",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Metadata property name.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Metadata property value.",
                    "type": "string"
                  },
                  "secretRef": {
                    "description": "The secret name where dapr could get value",
                    "type": "string"
                  },
                  "description": {
                    "description": "The description of the metadata, returned from configuration api",
                    "type": "string"
                  },
                  "required": {
                    "description": "The value indicating whether the metadata is required or not",
                    "type": "string",
                    "enum": [
                      "true",
                      "false"
                    ],
                    "x-ms-enum": {
                      "name": "DaprMetadataRequired",
                      "modelAsString": true
                    }
                  }
                }
              },
              "x-ms-identifiers": [
                "name"
              ]
            },
            "scopes": {
              "description": "The dapr component scopes",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "runtimeVersion": {
              "x-nullable": true,
              "type": "string",
              "readOnly": true,
              "description": "The runtime version supported by the properties"
            },
            "bindingComponentDirection": {
              "x-nullable": true,
              "type": "string",
              "enum": [
                "input",
                "output"
              ],
              "x-ms-enum": {
                "name": "DaprBindingComponentDirection",
                "modelAsString": true
              },
              "readOnly": true,
              "description": "The direction supported by the dapr binding component"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "LinkerNameParameter": {
      "name": "linkerName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name Linker resource.",
      "x-ms-parameter-location": "method"
    },
    "ConnectorNameParameter": {
      "name": "connectorName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of resource.",
      "x-ms-parameter-location": "method"
    },
    "ResourceUriParameter": {
      "name": "resourceUri",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The fully qualified Azure Resource manager identifier of the resource to be connected.",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "method"
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The ID of the target subscription.",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    }
  }
}