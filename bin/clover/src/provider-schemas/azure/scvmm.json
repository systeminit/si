{
  "swagger": "2.0",
  "info": {
    "title": "Azure scvmm",
    "version": "2025-03-13",
    "description": "Azure scvmm service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/{resourceUri}/providers/Microsoft.ScVmm/virtualMachineInstances": {
      "get": {
        "operationId": "VirtualMachineInstances_List",
        "tags": [
          "VirtualMachineInstances"
        ],
        "summary": "Implements List virtual machine instances.",
        "description": "Lists all of the virtual machine instances within the specified parent resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a VirtualMachineInstance list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The VirtualMachineInstance items on this page",
                  "items": {
                    "type": "object",
                    "description": "Define the virtualMachineInstance.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "availabilitySets": {
                            "type": "array",
                            "description": "Availability Sets in vm.",
                            "items": {
                              "type": "object",
                              "description": "Availability Set model",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "arm-id",
                                  "description": "Gets the ARM Id of the microsoft.scvmm/availabilitySets resource.",
                                  "x-ms-arm-id-details": {
                                    "allowedResources": [
                                      {
                                        "type": "Microsoft.ScVmm/availabilitySets"
                                      }
                                    ]
                                  }
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Gets or sets the name of the availability set."
                                }
                              }
                            }
                          },
                          "osProfile": {
                            "description": "OS properties.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "object",
                            "properties": {
                              "adminUsername": {
                                "type": "string",
                                "description": "Gets or sets the admin username."
                              },
                              "adminPassword": {
                                "type": "string",
                                "format": "password",
                                "description": "Admin password of the virtual machine.",
                                "x-ms-mutability": [
                                  "update",
                                  "create"
                                ],
                                "x-ms-secret": true
                              },
                              "computerName": {
                                "type": "string",
                                "description": "Gets or sets computer name."
                              },
                              "osType": {
                                "description": "Gets the type of the os.",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "Windows",
                                  "Linux",
                                  "Other"
                                ],
                                "x-ms-enum": {
                                  "name": "OsType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Windows",
                                      "value": "Windows",
                                      "description": "Windows operating system."
                                    },
                                    {
                                      "name": "Linux",
                                      "value": "Linux",
                                      "description": "Linux operating system."
                                    },
                                    {
                                      "name": "Other",
                                      "value": "Other",
                                      "description": "Other operating system."
                                    }
                                  ]
                                }
                              },
                              "osSku": {
                                "type": "string",
                                "description": "Gets os sku.",
                                "readOnly": true
                              },
                              "osVersion": {
                                "type": "string",
                                "description": "Gets os version.",
                                "readOnly": true
                              },
                              "domainName": {
                                "type": "string",
                                "description": "Gets or sets the domain name."
                              },
                              "domainUsername": {
                                "type": "string",
                                "description": "Gets or sets the domain username."
                              },
                              "domainPassword": {
                                "type": "string",
                                "format": "password",
                                "description": "Password of the domain the VM has to join.",
                                "x-ms-mutability": [
                                  "update",
                                  "create"
                                ],
                                "x-ms-secret": true
                              },
                              "workgroup": {
                                "type": "string",
                                "description": "Gets or sets the workgroup."
                              },
                              "productKey": {
                                "type": "string",
                                "format": "password",
                                "description": "Gets or sets the product key.Input format xxxxx-xxxxx-xxxxx-xxxxx-xxxxx",
                                "x-ms-mutability": [
                                  "create"
                                ],
                                "x-ms-secret": true
                              },
                              "timezone": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Gets or sets the index value of the timezone."
                              },
                              "runOnceCommands": {
                                "type": "string",
                                "description": "Get or sets the commands to be run once at the time of creation separated by semicolons."
                              }
                            }
                          },
                          "hardwareProfile": {
                            "description": "Hardware properties.",
                            "type": "object",
                            "properties": {
                              "memoryMB": {
                                "type": "integer",
                                "format": "int32",
                                "description": "MemoryMB is the size of a virtual machine's memory, in MB."
                              },
                              "cpuCount": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Gets or sets the number of vCPUs for the vm."
                              },
                              "limitCpuForMigration": {
                                "description": "Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.",
                                "type": "string",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "x-ms-enum": {
                                  "name": "LimitCpuForMigration",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "true",
                                      "value": "true",
                                      "description": "Enable limit CPU for migration."
                                    },
                                    {
                                      "name": "false",
                                      "value": "false",
                                      "description": "Disable limit CPU for migration."
                                    }
                                  ]
                                }
                              },
                              "dynamicMemoryEnabled": {
                                "description": "Gets or sets a value indicating whether to enable dynamic memory or not.",
                                "type": "string",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "x-ms-enum": {
                                  "name": "DynamicMemoryEnabled",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "true",
                                      "value": "true",
                                      "description": "Enable dynamic memory."
                                    },
                                    {
                                      "name": "false",
                                      "value": "false",
                                      "description": "Disable dynamic memory."
                                    }
                                  ]
                                }
                              },
                              "dynamicMemoryMaxMB": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Gets or sets the max dynamic memory for the vm."
                              },
                              "dynamicMemoryMinMB": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Gets or sets the min dynamic memory for the vm."
                              },
                              "isHighlyAvailable": {
                                "description": "Gets highly available property.",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "x-ms-enum": {
                                  "name": "IsHighlyAvailable",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "true",
                                      "value": "true",
                                      "description": "Enable highly available."
                                    },
                                    {
                                      "name": "false",
                                      "value": "false",
                                      "description": "Disable highly available."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "networkProfile": {
                            "description": "Network properties.",
                            "type": "object",
                            "properties": {
                              "networkInterfaces": {
                                "type": "array",
                                "description": "Gets or sets the list of network interfaces associated with the virtual machine.",
                                "items": {
                                  "type": "object",
                                  "description": "Network Interface model",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Gets or sets the name of the network interface."
                                    },
                                    "displayName": {
                                      "type": "string",
                                      "description": "Gets the display name of the network interface as shown in the vmmServer. This is the fallback label for a NIC when the name is not set.",
                                      "readOnly": true
                                    },
                                    "ipv4Addresses": {
                                      "type": "array",
                                      "description": "Gets the nic ipv4 addresses.",
                                      "items": {
                                        "type": "string"
                                      },
                                      "readOnly": true
                                    },
                                    "ipv6Addresses": {
                                      "type": "array",
                                      "description": "Gets the nic ipv6 addresses.",
                                      "items": {
                                        "type": "string"
                                      },
                                      "readOnly": true
                                    },
                                    "macAddress": {
                                      "type": "string",
                                      "description": "Gets or sets the nic MAC address."
                                    },
                                    "virtualNetworkId": {
                                      "type": "string",
                                      "format": "arm-id",
                                      "description": "Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.",
                                      "x-ms-arm-id-details": {
                                        "allowedResources": [
                                          {
                                            "type": "Microsoft.ScVmm/virtualNetwork"
                                          }
                                        ]
                                      }
                                    },
                                    "networkName": {
                                      "type": "string",
                                      "description": "Gets the name of the virtual network in vmmServer that the nic is connected to.",
                                      "readOnly": true
                                    },
                                    "ipv4AddressType": {
                                      "description": "Gets or sets the ipv4 address type.",
                                      "type": "string",
                                      "enum": [
                                        "Dynamic",
                                        "Static"
                                      ],
                                      "x-ms-enum": {
                                        "name": "AllocationMethod",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Dynamic",
                                            "value": "Dynamic",
                                            "description": "Dynamically allocated address."
                                          },
                                          {
                                            "name": "Static",
                                            "value": "Static",
                                            "description": "Statically allocated address."
                                          }
                                        ]
                                      }
                                    },
                                    "ipv6AddressType": {
                                      "description": "Gets or sets the ipv6 address type.",
                                      "type": "string",
                                      "enum": [
                                        "Dynamic",
                                        "Static"
                                      ],
                                      "x-ms-enum": {
                                        "name": "AllocationMethod",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Dynamic",
                                            "value": "Dynamic",
                                            "description": "Dynamically allocated address."
                                          },
                                          {
                                            "name": "Static",
                                            "value": "Static",
                                            "description": "Statically allocated address."
                                          }
                                        ]
                                      }
                                    },
                                    "macAddressType": {
                                      "description": "Gets or sets the mac address type.",
                                      "type": "string",
                                      "enum": [
                                        "Dynamic",
                                        "Static"
                                      ],
                                      "x-ms-enum": {
                                        "name": "AllocationMethod",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Dynamic",
                                            "value": "Dynamic",
                                            "description": "Dynamically allocated address."
                                          },
                                          {
                                            "name": "Static",
                                            "value": "Static",
                                            "description": "Statically allocated address."
                                          }
                                        ]
                                      }
                                    },
                                    "nicId": {
                                      "type": "string",
                                      "description": "Gets or sets the nic id."
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name",
                                  "nicId"
                                ]
                              }
                            }
                          },
                          "storageProfile": {
                            "description": "Storage properties.",
                            "type": "object",
                            "properties": {
                              "disks": {
                                "type": "array",
                                "description": "Gets or sets the list of virtual disks associated with the virtual machine.",
                                "items": {
                                  "type": "object",
                                  "description": "Virtual disk model",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Gets or sets the name of the disk."
                                    },
                                    "displayName": {
                                      "type": "string",
                                      "description": "Gets the display name of the virtual disk as shown in the vmmServer. This is the fallback label for a disk when the name is not set.",
                                      "readOnly": true
                                    },
                                    "diskId": {
                                      "type": "string",
                                      "description": "Gets or sets the disk id."
                                    },
                                    "diskSizeGB": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Gets or sets the disk total size."
                                    },
                                    "maxDiskSizeGB": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Gets the max disk size.",
                                      "readOnly": true
                                    },
                                    "bus": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Gets or sets the disk bus."
                                    },
                                    "lun": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Gets or sets the disk lun."
                                    },
                                    "busType": {
                                      "type": "string",
                                      "description": "Gets or sets the disk bus type."
                                    },
                                    "vhdType": {
                                      "type": "string",
                                      "description": "Gets or sets the disk vhd type."
                                    },
                                    "volumeType": {
                                      "type": "string",
                                      "description": "Gets the disk volume type.",
                                      "readOnly": true
                                    },
                                    "vhdFormatType": {
                                      "type": "string",
                                      "description": "Gets the disk vhd format type.",
                                      "readOnly": true
                                    },
                                    "templateDiskId": {
                                      "type": "string",
                                      "description": "Gets or sets the disk id in the template.",
                                      "x-ms-mutability": [
                                        "read",
                                        "create"
                                      ]
                                    },
                                    "storageQoSPolicy": {
                                      "description": "The QoS policy for the disk.",
                                      "x-ms-client-name": "storageQosPolicy",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the policy."
                                        },
                                        "id": {
                                          "type": "string",
                                          "description": "The ID of the QoS policy."
                                        }
                                      }
                                    },
                                    "createDiffDisk": {
                                      "description": "Gets or sets a value indicating diff disk.",
                                      "x-ms-mutability": [
                                        "read",
                                        "create"
                                      ],
                                      "type": "string",
                                      "enum": [
                                        "true",
                                        "false"
                                      ],
                                      "x-ms-enum": {
                                        "name": "CreateDiffDisk",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "true",
                                            "value": "true",
                                            "description": "Enable create diff disk."
                                          },
                                          {
                                            "name": "false",
                                            "value": "false",
                                            "description": "Disable create diff disk."
                                          }
                                        ]
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "diskId",
                                  "name"
                                ]
                              }
                            }
                          },
                          "infrastructureProfile": {
                            "description": "Gets the infrastructure profile.",
                            "type": "object",
                            "properties": {
                              "inventoryItemId": {
                                "type": "string",
                                "description": "Gets or sets the inventory Item ID for the resource.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "vmmServerId": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "ARM Id of the vmmServer resource in which this resource resides.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.ScVmm/vmmServers"
                                    }
                                  ]
                                }
                              },
                              "cloudId": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "ARM Id of the cloud resource to use for deploying the vm.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.ScVmm/clouds"
                                    }
                                  ]
                                }
                              },
                              "templateId": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "ARM Id of the template resource to use for deploying the vm.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.ScVmm/virtualMachineTemplates"
                                    }
                                  ]
                                }
                              },
                              "vmName": {
                                "type": "string",
                                "description": "VMName is the name of VM on the SCVmm server.",
                                "minLength": 1,
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "uuid": {
                                "type": "string",
                                "description": "Unique ID of the virtual machine.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "lastRestoredVMCheckpoint": {
                                "description": "Last restored checkpoint in the vm.",
                                "readOnly": true,
                                "x-ms-client-name": "lastRestoredVmCheckpoint",
                                "type": "object",
                                "properties": {
                                  "parentCheckpointID": {
                                    "type": "string",
                                    "description": "Gets ID of parent of the checkpoint.",
                                    "x-ms-client-name": "parentCheckpointId"
                                  },
                                  "checkpointID": {
                                    "type": "string",
                                    "description": "Gets ID of the checkpoint.",
                                    "x-ms-client-name": "checkpointId"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Gets name of the checkpoint."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Gets description of the checkpoint."
                                  }
                                }
                              },
                              "checkpoints": {
                                "type": "array",
                                "description": "Checkpoints in the vm.",
                                "items": {
                                  "type": "object",
                                  "description": "Defines the resource properties.",
                                  "properties": {
                                    "parentCheckpointID": {
                                      "type": "string",
                                      "description": "Gets ID of parent of the checkpoint.",
                                      "x-ms-client-name": "parentCheckpointId"
                                    },
                                    "checkpointID": {
                                      "type": "string",
                                      "description": "Gets ID of the checkpoint.",
                                      "x-ms-client-name": "checkpointId"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "Gets name of the checkpoint."
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "Gets description of the checkpoint."
                                    }
                                  }
                                },
                                "readOnly": true,
                                "x-ms-identifiers": [
                                  "checkpointID"
                                ]
                              },
                              "checkpointType": {
                                "type": "string",
                                "description": "Type of checkpoint supported for the vm.",
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "generation": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Gets or sets the generation for the vm.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "biosGuid": {
                                "type": "string",
                                "description": "Gets or sets the bios guid for the vm.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              }
                            }
                          },
                          "powerState": {
                            "type": "string",
                            "description": "Gets the power state of the virtual machine.",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the resource.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted",
                              "Created"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The resource is provisioning."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The resource is updating."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The resource is being deleted."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "The resource has been accepted."
                                },
                                {
                                  "name": "Created",
                                  "value": "Created",
                                  "description": "The resource was created."
                                }
                              ]
                            }
                          }
                        }
                      },
                      "extendedLocation": {
                        "description": "Gets or sets the extended location.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The extended location type."
                          },
                          "name": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "The extended location name.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.ExtendedLocation/customLocations"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "extendedLocation"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items",
                  "readOnly": true
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ScVmm/virtualMachineInstances/default": {
      "get": {
        "operationId": "VirtualMachineInstances_Get",
        "tags": [
          "VirtualMachineInstances"
        ],
        "summary": "Gets a virtual machine.",
        "description": "Retrieves information about a virtual machine instance.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Define the virtualMachineInstance.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "availabilitySets": {
                      "type": "array",
                      "description": "Availability Sets in vm.",
                      "items": {
                        "type": "object",
                        "description": "Availability Set model",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Gets the ARM Id of the microsoft.scvmm/availabilitySets resource.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.ScVmm/availabilitySets"
                                }
                              ]
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "Gets or sets the name of the availability set."
                          }
                        }
                      }
                    },
                    "osProfile": {
                      "description": "OS properties.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "adminUsername": {
                          "type": "string",
                          "description": "Gets or sets the admin username."
                        },
                        "adminPassword": {
                          "type": "string",
                          "format": "password",
                          "description": "Admin password of the virtual machine.",
                          "x-ms-mutability": [
                            "update",
                            "create"
                          ],
                          "x-ms-secret": true
                        },
                        "computerName": {
                          "type": "string",
                          "description": "Gets or sets computer name."
                        },
                        "osType": {
                          "description": "Gets the type of the os.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Windows",
                            "Linux",
                            "Other"
                          ],
                          "x-ms-enum": {
                            "name": "OsType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Windows",
                                "value": "Windows",
                                "description": "Windows operating system."
                              },
                              {
                                "name": "Linux",
                                "value": "Linux",
                                "description": "Linux operating system."
                              },
                              {
                                "name": "Other",
                                "value": "Other",
                                "description": "Other operating system."
                              }
                            ]
                          }
                        },
                        "osSku": {
                          "type": "string",
                          "description": "Gets os sku.",
                          "readOnly": true
                        },
                        "osVersion": {
                          "type": "string",
                          "description": "Gets os version.",
                          "readOnly": true
                        },
                        "domainName": {
                          "type": "string",
                          "description": "Gets or sets the domain name."
                        },
                        "domainUsername": {
                          "type": "string",
                          "description": "Gets or sets the domain username."
                        },
                        "domainPassword": {
                          "type": "string",
                          "format": "password",
                          "description": "Password of the domain the VM has to join.",
                          "x-ms-mutability": [
                            "update",
                            "create"
                          ],
                          "x-ms-secret": true
                        },
                        "workgroup": {
                          "type": "string",
                          "description": "Gets or sets the workgroup."
                        },
                        "productKey": {
                          "type": "string",
                          "format": "password",
                          "description": "Gets or sets the product key.Input format xxxxx-xxxxx-xxxxx-xxxxx-xxxxx",
                          "x-ms-mutability": [
                            "create"
                          ],
                          "x-ms-secret": true
                        },
                        "timezone": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Gets or sets the index value of the timezone."
                        },
                        "runOnceCommands": {
                          "type": "string",
                          "description": "Get or sets the commands to be run once at the time of creation separated by semicolons."
                        }
                      }
                    },
                    "hardwareProfile": {
                      "description": "Hardware properties.",
                      "type": "object",
                      "properties": {
                        "memoryMB": {
                          "type": "integer",
                          "format": "int32",
                          "description": "MemoryMB is the size of a virtual machine's memory, in MB."
                        },
                        "cpuCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Gets or sets the number of vCPUs for the vm."
                        },
                        "limitCpuForMigration": {
                          "description": "Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.",
                          "type": "string",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "x-ms-enum": {
                            "name": "LimitCpuForMigration",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "true",
                                "value": "true",
                                "description": "Enable limit CPU for migration."
                              },
                              {
                                "name": "false",
                                "value": "false",
                                "description": "Disable limit CPU for migration."
                              }
                            ]
                          }
                        },
                        "dynamicMemoryEnabled": {
                          "description": "Gets or sets a value indicating whether to enable dynamic memory or not.",
                          "type": "string",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "x-ms-enum": {
                            "name": "DynamicMemoryEnabled",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "true",
                                "value": "true",
                                "description": "Enable dynamic memory."
                              },
                              {
                                "name": "false",
                                "value": "false",
                                "description": "Disable dynamic memory."
                              }
                            ]
                          }
                        },
                        "dynamicMemoryMaxMB": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Gets or sets the max dynamic memory for the vm."
                        },
                        "dynamicMemoryMinMB": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Gets or sets the min dynamic memory for the vm."
                        },
                        "isHighlyAvailable": {
                          "description": "Gets highly available property.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "x-ms-enum": {
                            "name": "IsHighlyAvailable",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "true",
                                "value": "true",
                                "description": "Enable highly available."
                              },
                              {
                                "name": "false",
                                "value": "false",
                                "description": "Disable highly available."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "networkProfile": {
                      "description": "Network properties.",
                      "type": "object",
                      "properties": {
                        "networkInterfaces": {
                          "type": "array",
                          "description": "Gets or sets the list of network interfaces associated with the virtual machine.",
                          "items": {
                            "type": "object",
                            "description": "Network Interface model",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Gets or sets the name of the network interface."
                              },
                              "displayName": {
                                "type": "string",
                                "description": "Gets the display name of the network interface as shown in the vmmServer. This is the fallback label for a NIC when the name is not set.",
                                "readOnly": true
                              },
                              "ipv4Addresses": {
                                "type": "array",
                                "description": "Gets the nic ipv4 addresses.",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "ipv6Addresses": {
                                "type": "array",
                                "description": "Gets the nic ipv6 addresses.",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "macAddress": {
                                "type": "string",
                                "description": "Gets or sets the nic MAC address."
                              },
                              "virtualNetworkId": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.ScVmm/virtualNetwork"
                                    }
                                  ]
                                }
                              },
                              "networkName": {
                                "type": "string",
                                "description": "Gets the name of the virtual network in vmmServer that the nic is connected to.",
                                "readOnly": true
                              },
                              "ipv4AddressType": {
                                "description": "Gets or sets the ipv4 address type.",
                                "type": "string",
                                "enum": [
                                  "Dynamic",
                                  "Static"
                                ],
                                "x-ms-enum": {
                                  "name": "AllocationMethod",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Dynamic",
                                      "value": "Dynamic",
                                      "description": "Dynamically allocated address."
                                    },
                                    {
                                      "name": "Static",
                                      "value": "Static",
                                      "description": "Statically allocated address."
                                    }
                                  ]
                                }
                              },
                              "ipv6AddressType": {
                                "description": "Gets or sets the ipv6 address type.",
                                "type": "string",
                                "enum": [
                                  "Dynamic",
                                  "Static"
                                ],
                                "x-ms-enum": {
                                  "name": "AllocationMethod",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Dynamic",
                                      "value": "Dynamic",
                                      "description": "Dynamically allocated address."
                                    },
                                    {
                                      "name": "Static",
                                      "value": "Static",
                                      "description": "Statically allocated address."
                                    }
                                  ]
                                }
                              },
                              "macAddressType": {
                                "description": "Gets or sets the mac address type.",
                                "type": "string",
                                "enum": [
                                  "Dynamic",
                                  "Static"
                                ],
                                "x-ms-enum": {
                                  "name": "AllocationMethod",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Dynamic",
                                      "value": "Dynamic",
                                      "description": "Dynamically allocated address."
                                    },
                                    {
                                      "name": "Static",
                                      "value": "Static",
                                      "description": "Statically allocated address."
                                    }
                                  ]
                                }
                              },
                              "nicId": {
                                "type": "string",
                                "description": "Gets or sets the nic id."
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name",
                            "nicId"
                          ]
                        }
                      }
                    },
                    "storageProfile": {
                      "description": "Storage properties.",
                      "type": "object",
                      "properties": {
                        "disks": {
                          "type": "array",
                          "description": "Gets or sets the list of virtual disks associated with the virtual machine.",
                          "items": {
                            "type": "object",
                            "description": "Virtual disk model",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Gets or sets the name of the disk."
                              },
                              "displayName": {
                                "type": "string",
                                "description": "Gets the display name of the virtual disk as shown in the vmmServer. This is the fallback label for a disk when the name is not set.",
                                "readOnly": true
                              },
                              "diskId": {
                                "type": "string",
                                "description": "Gets or sets the disk id."
                              },
                              "diskSizeGB": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Gets or sets the disk total size."
                              },
                              "maxDiskSizeGB": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Gets the max disk size.",
                                "readOnly": true
                              },
                              "bus": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Gets or sets the disk bus."
                              },
                              "lun": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Gets or sets the disk lun."
                              },
                              "busType": {
                                "type": "string",
                                "description": "Gets or sets the disk bus type."
                              },
                              "vhdType": {
                                "type": "string",
                                "description": "Gets or sets the disk vhd type."
                              },
                              "volumeType": {
                                "type": "string",
                                "description": "Gets the disk volume type.",
                                "readOnly": true
                              },
                              "vhdFormatType": {
                                "type": "string",
                                "description": "Gets the disk vhd format type.",
                                "readOnly": true
                              },
                              "templateDiskId": {
                                "type": "string",
                                "description": "Gets or sets the disk id in the template.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "storageQoSPolicy": {
                                "description": "The QoS policy for the disk.",
                                "x-ms-client-name": "storageQosPolicy",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the policy."
                                  },
                                  "id": {
                                    "type": "string",
                                    "description": "The ID of the QoS policy."
                                  }
                                }
                              },
                              "createDiffDisk": {
                                "description": "Gets or sets a value indicating diff disk.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "x-ms-enum": {
                                  "name": "CreateDiffDisk",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "true",
                                      "value": "true",
                                      "description": "Enable create diff disk."
                                    },
                                    {
                                      "name": "false",
                                      "value": "false",
                                      "description": "Disable create diff disk."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "diskId",
                            "name"
                          ]
                        }
                      }
                    },
                    "infrastructureProfile": {
                      "description": "Gets the infrastructure profile.",
                      "type": "object",
                      "properties": {
                        "inventoryItemId": {
                          "type": "string",
                          "description": "Gets or sets the inventory Item ID for the resource.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "vmmServerId": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "ARM Id of the vmmServer resource in which this resource resides.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.ScVmm/vmmServers"
                              }
                            ]
                          }
                        },
                        "cloudId": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "ARM Id of the cloud resource to use for deploying the vm.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.ScVmm/clouds"
                              }
                            ]
                          }
                        },
                        "templateId": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "ARM Id of the template resource to use for deploying the vm.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.ScVmm/virtualMachineTemplates"
                              }
                            ]
                          }
                        },
                        "vmName": {
                          "type": "string",
                          "description": "VMName is the name of VM on the SCVmm server.",
                          "minLength": 1,
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "uuid": {
                          "type": "string",
                          "description": "Unique ID of the virtual machine.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "lastRestoredVMCheckpoint": {
                          "description": "Last restored checkpoint in the vm.",
                          "readOnly": true,
                          "x-ms-client-name": "lastRestoredVmCheckpoint",
                          "type": "object",
                          "properties": {
                            "parentCheckpointID": {
                              "type": "string",
                              "description": "Gets ID of parent of the checkpoint.",
                              "x-ms-client-name": "parentCheckpointId"
                            },
                            "checkpointID": {
                              "type": "string",
                              "description": "Gets ID of the checkpoint.",
                              "x-ms-client-name": "checkpointId"
                            },
                            "name": {
                              "type": "string",
                              "description": "Gets name of the checkpoint."
                            },
                            "description": {
                              "type": "string",
                              "description": "Gets description of the checkpoint."
                            }
                          }
                        },
                        "checkpoints": {
                          "type": "array",
                          "description": "Checkpoints in the vm.",
                          "items": {
                            "type": "object",
                            "description": "Defines the resource properties.",
                            "properties": {
                              "parentCheckpointID": {
                                "type": "string",
                                "description": "Gets ID of parent of the checkpoint.",
                                "x-ms-client-name": "parentCheckpointId"
                              },
                              "checkpointID": {
                                "type": "string",
                                "description": "Gets ID of the checkpoint.",
                                "x-ms-client-name": "checkpointId"
                              },
                              "name": {
                                "type": "string",
                                "description": "Gets name of the checkpoint."
                              },
                              "description": {
                                "type": "string",
                                "description": "Gets description of the checkpoint."
                              }
                            }
                          },
                          "readOnly": true,
                          "x-ms-identifiers": [
                            "checkpointID"
                          ]
                        },
                        "checkpointType": {
                          "type": "string",
                          "description": "Type of checkpoint supported for the vm.",
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ]
                        },
                        "generation": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Gets or sets the generation for the vm.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "biosGuid": {
                          "type": "string",
                          "description": "Gets or sets the bios guid for the vm.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        }
                      }
                    },
                    "powerState": {
                      "type": "string",
                      "description": "Gets the power state of the virtual machine.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "The extended location name.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ExtendedLocation/customLocations"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "extendedLocation"
              ]
            }
          }
        }
      },
      "put": {
        "operationId": "VirtualMachineInstances_CreateOrUpdate",
        "tags": [
          "VirtualMachineInstances"
        ],
        "summary": "Implements virtual machine PUT method.",
        "description": "The operation to create or update a virtual machine instance. Please note some properties can be set only during virtual machine instance creation.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Define the virtualMachineInstance.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "availabilitySets": {
                      "type": "array",
                      "description": "Availability Sets in vm.",
                      "items": {
                        "type": "object",
                        "description": "Availability Set model",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Gets the ARM Id of the microsoft.scvmm/availabilitySets resource.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.ScVmm/availabilitySets"
                                }
                              ]
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "Gets or sets the name of the availability set."
                          }
                        }
                      }
                    },
                    "osProfile": {
                      "description": "OS properties.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "adminUsername": {
                          "type": "string",
                          "description": "Gets or sets the admin username."
                        },
                        "adminPassword": {
                          "type": "string",
                          "format": "password",
                          "description": "Admin password of the virtual machine.",
                          "x-ms-mutability": [
                            "update",
                            "create"
                          ],
                          "x-ms-secret": true
                        },
                        "computerName": {
                          "type": "string",
                          "description": "Gets or sets computer name."
                        },
                        "osType": {
                          "description": "Gets the type of the os.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Windows",
                            "Linux",
                            "Other"
                          ],
                          "x-ms-enum": {
                            "name": "OsType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Windows",
                                "value": "Windows",
                                "description": "Windows operating system."
                              },
                              {
                                "name": "Linux",
                                "value": "Linux",
                                "description": "Linux operating system."
                              },
                              {
                                "name": "Other",
                                "value": "Other",
                                "description": "Other operating system."
                              }
                            ]
                          }
                        },
                        "osSku": {
                          "type": "string",
                          "description": "Gets os sku.",
                          "readOnly": true
                        },
                        "osVersion": {
                          "type": "string",
                          "description": "Gets os version.",
                          "readOnly": true
                        },
                        "domainName": {
                          "type": "string",
                          "description": "Gets or sets the domain name."
                        },
                        "domainUsername": {
                          "type": "string",
                          "description": "Gets or sets the domain username."
                        },
                        "domainPassword": {
                          "type": "string",
                          "format": "password",
                          "description": "Password of the domain the VM has to join.",
                          "x-ms-mutability": [
                            "update",
                            "create"
                          ],
                          "x-ms-secret": true
                        },
                        "workgroup": {
                          "type": "string",
                          "description": "Gets or sets the workgroup."
                        },
                        "productKey": {
                          "type": "string",
                          "format": "password",
                          "description": "Gets or sets the product key.Input format xxxxx-xxxxx-xxxxx-xxxxx-xxxxx",
                          "x-ms-mutability": [
                            "create"
                          ],
                          "x-ms-secret": true
                        },
                        "timezone": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Gets or sets the index value of the timezone."
                        },
                        "runOnceCommands": {
                          "type": "string",
                          "description": "Get or sets the commands to be run once at the time of creation separated by semicolons."
                        }
                      }
                    },
                    "hardwareProfile": {
                      "description": "Hardware properties.",
                      "type": "object",
                      "properties": {
                        "memoryMB": {
                          "type": "integer",
                          "format": "int32",
                          "description": "MemoryMB is the size of a virtual machine's memory, in MB."
                        },
                        "cpuCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Gets or sets the number of vCPUs for the vm."
                        },
                        "limitCpuForMigration": {
                          "description": "Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.",
                          "type": "string",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "x-ms-enum": {
                            "name": "LimitCpuForMigration",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "true",
                                "value": "true",
                                "description": "Enable limit CPU for migration."
                              },
                              {
                                "name": "false",
                                "value": "false",
                                "description": "Disable limit CPU for migration."
                              }
                            ]
                          }
                        },
                        "dynamicMemoryEnabled": {
                          "description": "Gets or sets a value indicating whether to enable dynamic memory or not.",
                          "type": "string",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "x-ms-enum": {
                            "name": "DynamicMemoryEnabled",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "true",
                                "value": "true",
                                "description": "Enable dynamic memory."
                              },
                              {
                                "name": "false",
                                "value": "false",
                                "description": "Disable dynamic memory."
                              }
                            ]
                          }
                        },
                        "dynamicMemoryMaxMB": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Gets or sets the max dynamic memory for the vm."
                        },
                        "dynamicMemoryMinMB": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Gets or sets the min dynamic memory for the vm."
                        },
                        "isHighlyAvailable": {
                          "description": "Gets highly available property.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "x-ms-enum": {
                            "name": "IsHighlyAvailable",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "true",
                                "value": "true",
                                "description": "Enable highly available."
                              },
                              {
                                "name": "false",
                                "value": "false",
                                "description": "Disable highly available."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "networkProfile": {
                      "description": "Network properties.",
                      "type": "object",
                      "properties": {
                        "networkInterfaces": {
                          "type": "array",
                          "description": "Gets or sets the list of network interfaces associated with the virtual machine.",
                          "items": {
                            "type": "object",
                            "description": "Network Interface model",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Gets or sets the name of the network interface."
                              },
                              "displayName": {
                                "type": "string",
                                "description": "Gets the display name of the network interface as shown in the vmmServer. This is the fallback label for a NIC when the name is not set.",
                                "readOnly": true
                              },
                              "ipv4Addresses": {
                                "type": "array",
                                "description": "Gets the nic ipv4 addresses.",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "ipv6Addresses": {
                                "type": "array",
                                "description": "Gets the nic ipv6 addresses.",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "macAddress": {
                                "type": "string",
                                "description": "Gets or sets the nic MAC address."
                              },
                              "virtualNetworkId": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.ScVmm/virtualNetwork"
                                    }
                                  ]
                                }
                              },
                              "networkName": {
                                "type": "string",
                                "description": "Gets the name of the virtual network in vmmServer that the nic is connected to.",
                                "readOnly": true
                              },
                              "ipv4AddressType": {
                                "description": "Gets or sets the ipv4 address type.",
                                "type": "string",
                                "enum": [
                                  "Dynamic",
                                  "Static"
                                ],
                                "x-ms-enum": {
                                  "name": "AllocationMethod",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Dynamic",
                                      "value": "Dynamic",
                                      "description": "Dynamically allocated address."
                                    },
                                    {
                                      "name": "Static",
                                      "value": "Static",
                                      "description": "Statically allocated address."
                                    }
                                  ]
                                }
                              },
                              "ipv6AddressType": {
                                "description": "Gets or sets the ipv6 address type.",
                                "type": "string",
                                "enum": [
                                  "Dynamic",
                                  "Static"
                                ],
                                "x-ms-enum": {
                                  "name": "AllocationMethod",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Dynamic",
                                      "value": "Dynamic",
                                      "description": "Dynamically allocated address."
                                    },
                                    {
                                      "name": "Static",
                                      "value": "Static",
                                      "description": "Statically allocated address."
                                    }
                                  ]
                                }
                              },
                              "macAddressType": {
                                "description": "Gets or sets the mac address type.",
                                "type": "string",
                                "enum": [
                                  "Dynamic",
                                  "Static"
                                ],
                                "x-ms-enum": {
                                  "name": "AllocationMethod",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Dynamic",
                                      "value": "Dynamic",
                                      "description": "Dynamically allocated address."
                                    },
                                    {
                                      "name": "Static",
                                      "value": "Static",
                                      "description": "Statically allocated address."
                                    }
                                  ]
                                }
                              },
                              "nicId": {
                                "type": "string",
                                "description": "Gets or sets the nic id."
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name",
                            "nicId"
                          ]
                        }
                      }
                    },
                    "storageProfile": {
                      "description": "Storage properties.",
                      "type": "object",
                      "properties": {
                        "disks": {
                          "type": "array",
                          "description": "Gets or sets the list of virtual disks associated with the virtual machine.",
                          "items": {
                            "type": "object",
                            "description": "Virtual disk model",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Gets or sets the name of the disk."
                              },
                              "displayName": {
                                "type": "string",
                                "description": "Gets the display name of the virtual disk as shown in the vmmServer. This is the fallback label for a disk when the name is not set.",
                                "readOnly": true
                              },
                              "diskId": {
                                "type": "string",
                                "description": "Gets or sets the disk id."
                              },
                              "diskSizeGB": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Gets or sets the disk total size."
                              },
                              "maxDiskSizeGB": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Gets the max disk size.",
                                "readOnly": true
                              },
                              "bus": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Gets or sets the disk bus."
                              },
                              "lun": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Gets or sets the disk lun."
                              },
                              "busType": {
                                "type": "string",
                                "description": "Gets or sets the disk bus type."
                              },
                              "vhdType": {
                                "type": "string",
                                "description": "Gets or sets the disk vhd type."
                              },
                              "volumeType": {
                                "type": "string",
                                "description": "Gets the disk volume type.",
                                "readOnly": true
                              },
                              "vhdFormatType": {
                                "type": "string",
                                "description": "Gets the disk vhd format type.",
                                "readOnly": true
                              },
                              "templateDiskId": {
                                "type": "string",
                                "description": "Gets or sets the disk id in the template.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "storageQoSPolicy": {
                                "description": "The QoS policy for the disk.",
                                "x-ms-client-name": "storageQosPolicy",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the policy."
                                  },
                                  "id": {
                                    "type": "string",
                                    "description": "The ID of the QoS policy."
                                  }
                                }
                              },
                              "createDiffDisk": {
                                "description": "Gets or sets a value indicating diff disk.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "x-ms-enum": {
                                  "name": "CreateDiffDisk",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "true",
                                      "value": "true",
                                      "description": "Enable create diff disk."
                                    },
                                    {
                                      "name": "false",
                                      "value": "false",
                                      "description": "Disable create diff disk."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "diskId",
                            "name"
                          ]
                        }
                      }
                    },
                    "infrastructureProfile": {
                      "description": "Gets the infrastructure profile.",
                      "type": "object",
                      "properties": {
                        "inventoryItemId": {
                          "type": "string",
                          "description": "Gets or sets the inventory Item ID for the resource.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "vmmServerId": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "ARM Id of the vmmServer resource in which this resource resides.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.ScVmm/vmmServers"
                              }
                            ]
                          }
                        },
                        "cloudId": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "ARM Id of the cloud resource to use for deploying the vm.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.ScVmm/clouds"
                              }
                            ]
                          }
                        },
                        "templateId": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "ARM Id of the template resource to use for deploying the vm.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.ScVmm/virtualMachineTemplates"
                              }
                            ]
                          }
                        },
                        "vmName": {
                          "type": "string",
                          "description": "VMName is the name of VM on the SCVmm server.",
                          "minLength": 1,
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "uuid": {
                          "type": "string",
                          "description": "Unique ID of the virtual machine.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "lastRestoredVMCheckpoint": {
                          "description": "Last restored checkpoint in the vm.",
                          "readOnly": true,
                          "x-ms-client-name": "lastRestoredVmCheckpoint",
                          "type": "object",
                          "properties": {
                            "parentCheckpointID": {
                              "type": "string",
                              "description": "Gets ID of parent of the checkpoint.",
                              "x-ms-client-name": "parentCheckpointId"
                            },
                            "checkpointID": {
                              "type": "string",
                              "description": "Gets ID of the checkpoint.",
                              "x-ms-client-name": "checkpointId"
                            },
                            "name": {
                              "type": "string",
                              "description": "Gets name of the checkpoint."
                            },
                            "description": {
                              "type": "string",
                              "description": "Gets description of the checkpoint."
                            }
                          }
                        },
                        "checkpoints": {
                          "type": "array",
                          "description": "Checkpoints in the vm.",
                          "items": {
                            "type": "object",
                            "description": "Defines the resource properties.",
                            "properties": {
                              "parentCheckpointID": {
                                "type": "string",
                                "description": "Gets ID of parent of the checkpoint.",
                                "x-ms-client-name": "parentCheckpointId"
                              },
                              "checkpointID": {
                                "type": "string",
                                "description": "Gets ID of the checkpoint.",
                                "x-ms-client-name": "checkpointId"
                              },
                              "name": {
                                "type": "string",
                                "description": "Gets name of the checkpoint."
                              },
                              "description": {
                                "type": "string",
                                "description": "Gets description of the checkpoint."
                              }
                            }
                          },
                          "readOnly": true,
                          "x-ms-identifiers": [
                            "checkpointID"
                          ]
                        },
                        "checkpointType": {
                          "type": "string",
                          "description": "Type of checkpoint supported for the vm.",
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ]
                        },
                        "generation": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Gets or sets the generation for the vm.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "biosGuid": {
                          "type": "string",
                          "description": "Gets or sets the bios guid for the vm.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        }
                      }
                    },
                    "powerState": {
                      "type": "string",
                      "description": "Gets the power state of the virtual machine.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "The extended location name.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ExtendedLocation/customLocations"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "extendedLocation"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'VirtualMachineInstance' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Define the virtualMachineInstance.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "availabilitySets": {
                      "type": "array",
                      "description": "Availability Sets in vm.",
                      "items": {
                        "type": "object",
                        "description": "Availability Set model",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Gets the ARM Id of the microsoft.scvmm/availabilitySets resource.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.ScVmm/availabilitySets"
                                }
                              ]
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "Gets or sets the name of the availability set."
                          }
                        }
                      }
                    },
                    "osProfile": {
                      "description": "OS properties.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "adminUsername": {
                          "type": "string",
                          "description": "Gets or sets the admin username."
                        },
                        "adminPassword": {
                          "type": "string",
                          "format": "password",
                          "description": "Admin password of the virtual machine.",
                          "x-ms-mutability": [
                            "update",
                            "create"
                          ],
                          "x-ms-secret": true
                        },
                        "computerName": {
                          "type": "string",
                          "description": "Gets or sets computer name."
                        },
                        "osType": {
                          "description": "Gets the type of the os.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Windows",
                            "Linux",
                            "Other"
                          ],
                          "x-ms-enum": {
                            "name": "OsType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Windows",
                                "value": "Windows",
                                "description": "Windows operating system."
                              },
                              {
                                "name": "Linux",
                                "value": "Linux",
                                "description": "Linux operating system."
                              },
                              {
                                "name": "Other",
                                "value": "Other",
                                "description": "Other operating system."
                              }
                            ]
                          }
                        },
                        "osSku": {
                          "type": "string",
                          "description": "Gets os sku.",
                          "readOnly": true
                        },
                        "osVersion": {
                          "type": "string",
                          "description": "Gets os version.",
                          "readOnly": true
                        },
                        "domainName": {
                          "type": "string",
                          "description": "Gets or sets the domain name."
                        },
                        "domainUsername": {
                          "type": "string",
                          "description": "Gets or sets the domain username."
                        },
                        "domainPassword": {
                          "type": "string",
                          "format": "password",
                          "description": "Password of the domain the VM has to join.",
                          "x-ms-mutability": [
                            "update",
                            "create"
                          ],
                          "x-ms-secret": true
                        },
                        "workgroup": {
                          "type": "string",
                          "description": "Gets or sets the workgroup."
                        },
                        "productKey": {
                          "type": "string",
                          "format": "password",
                          "description": "Gets or sets the product key.Input format xxxxx-xxxxx-xxxxx-xxxxx-xxxxx",
                          "x-ms-mutability": [
                            "create"
                          ],
                          "x-ms-secret": true
                        },
                        "timezone": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Gets or sets the index value of the timezone."
                        },
                        "runOnceCommands": {
                          "type": "string",
                          "description": "Get or sets the commands to be run once at the time of creation separated by semicolons."
                        }
                      }
                    },
                    "hardwareProfile": {
                      "description": "Hardware properties.",
                      "type": "object",
                      "properties": {
                        "memoryMB": {
                          "type": "integer",
                          "format": "int32",
                          "description": "MemoryMB is the size of a virtual machine's memory, in MB."
                        },
                        "cpuCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Gets or sets the number of vCPUs for the vm."
                        },
                        "limitCpuForMigration": {
                          "description": "Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.",
                          "type": "string",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "x-ms-enum": {
                            "name": "LimitCpuForMigration",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "true",
                                "value": "true",
                                "description": "Enable limit CPU for migration."
                              },
                              {
                                "name": "false",
                                "value": "false",
                                "description": "Disable limit CPU for migration."
                              }
                            ]
                          }
                        },
                        "dynamicMemoryEnabled": {
                          "description": "Gets or sets a value indicating whether to enable dynamic memory or not.",
                          "type": "string",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "x-ms-enum": {
                            "name": "DynamicMemoryEnabled",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "true",
                                "value": "true",
                                "description": "Enable dynamic memory."
                              },
                              {
                                "name": "false",
                                "value": "false",
                                "description": "Disable dynamic memory."
                              }
                            ]
                          }
                        },
                        "dynamicMemoryMaxMB": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Gets or sets the max dynamic memory for the vm."
                        },
                        "dynamicMemoryMinMB": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Gets or sets the min dynamic memory for the vm."
                        },
                        "isHighlyAvailable": {
                          "description": "Gets highly available property.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "x-ms-enum": {
                            "name": "IsHighlyAvailable",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "true",
                                "value": "true",
                                "description": "Enable highly available."
                              },
                              {
                                "name": "false",
                                "value": "false",
                                "description": "Disable highly available."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "networkProfile": {
                      "description": "Network properties.",
                      "type": "object",
                      "properties": {
                        "networkInterfaces": {
                          "type": "array",
                          "description": "Gets or sets the list of network interfaces associated with the virtual machine.",
                          "items": {
                            "type": "object",
                            "description": "Network Interface model",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Gets or sets the name of the network interface."
                              },
                              "displayName": {
                                "type": "string",
                                "description": "Gets the display name of the network interface as shown in the vmmServer. This is the fallback label for a NIC when the name is not set.",
                                "readOnly": true
                              },
                              "ipv4Addresses": {
                                "type": "array",
                                "description": "Gets the nic ipv4 addresses.",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "ipv6Addresses": {
                                "type": "array",
                                "description": "Gets the nic ipv6 addresses.",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "macAddress": {
                                "type": "string",
                                "description": "Gets or sets the nic MAC address."
                              },
                              "virtualNetworkId": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.ScVmm/virtualNetwork"
                                    }
                                  ]
                                }
                              },
                              "networkName": {
                                "type": "string",
                                "description": "Gets the name of the virtual network in vmmServer that the nic is connected to.",
                                "readOnly": true
                              },
                              "ipv4AddressType": {
                                "description": "Gets or sets the ipv4 address type.",
                                "type": "string",
                                "enum": [
                                  "Dynamic",
                                  "Static"
                                ],
                                "x-ms-enum": {
                                  "name": "AllocationMethod",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Dynamic",
                                      "value": "Dynamic",
                                      "description": "Dynamically allocated address."
                                    },
                                    {
                                      "name": "Static",
                                      "value": "Static",
                                      "description": "Statically allocated address."
                                    }
                                  ]
                                }
                              },
                              "ipv6AddressType": {
                                "description": "Gets or sets the ipv6 address type.",
                                "type": "string",
                                "enum": [
                                  "Dynamic",
                                  "Static"
                                ],
                                "x-ms-enum": {
                                  "name": "AllocationMethod",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Dynamic",
                                      "value": "Dynamic",
                                      "description": "Dynamically allocated address."
                                    },
                                    {
                                      "name": "Static",
                                      "value": "Static",
                                      "description": "Statically allocated address."
                                    }
                                  ]
                                }
                              },
                              "macAddressType": {
                                "description": "Gets or sets the mac address type.",
                                "type": "string",
                                "enum": [
                                  "Dynamic",
                                  "Static"
                                ],
                                "x-ms-enum": {
                                  "name": "AllocationMethod",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Dynamic",
                                      "value": "Dynamic",
                                      "description": "Dynamically allocated address."
                                    },
                                    {
                                      "name": "Static",
                                      "value": "Static",
                                      "description": "Statically allocated address."
                                    }
                                  ]
                                }
                              },
                              "nicId": {
                                "type": "string",
                                "description": "Gets or sets the nic id."
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name",
                            "nicId"
                          ]
                        }
                      }
                    },
                    "storageProfile": {
                      "description": "Storage properties.",
                      "type": "object",
                      "properties": {
                        "disks": {
                          "type": "array",
                          "description": "Gets or sets the list of virtual disks associated with the virtual machine.",
                          "items": {
                            "type": "object",
                            "description": "Virtual disk model",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Gets or sets the name of the disk."
                              },
                              "displayName": {
                                "type": "string",
                                "description": "Gets the display name of the virtual disk as shown in the vmmServer. This is the fallback label for a disk when the name is not set.",
                                "readOnly": true
                              },
                              "diskId": {
                                "type": "string",
                                "description": "Gets or sets the disk id."
                              },
                              "diskSizeGB": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Gets or sets the disk total size."
                              },
                              "maxDiskSizeGB": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Gets the max disk size.",
                                "readOnly": true
                              },
                              "bus": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Gets or sets the disk bus."
                              },
                              "lun": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Gets or sets the disk lun."
                              },
                              "busType": {
                                "type": "string",
                                "description": "Gets or sets the disk bus type."
                              },
                              "vhdType": {
                                "type": "string",
                                "description": "Gets or sets the disk vhd type."
                              },
                              "volumeType": {
                                "type": "string",
                                "description": "Gets the disk volume type.",
                                "readOnly": true
                              },
                              "vhdFormatType": {
                                "type": "string",
                                "description": "Gets the disk vhd format type.",
                                "readOnly": true
                              },
                              "templateDiskId": {
                                "type": "string",
                                "description": "Gets or sets the disk id in the template.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "storageQoSPolicy": {
                                "description": "The QoS policy for the disk.",
                                "x-ms-client-name": "storageQosPolicy",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the policy."
                                  },
                                  "id": {
                                    "type": "string",
                                    "description": "The ID of the QoS policy."
                                  }
                                }
                              },
                              "createDiffDisk": {
                                "description": "Gets or sets a value indicating diff disk.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "x-ms-enum": {
                                  "name": "CreateDiffDisk",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "true",
                                      "value": "true",
                                      "description": "Enable create diff disk."
                                    },
                                    {
                                      "name": "false",
                                      "value": "false",
                                      "description": "Disable create diff disk."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "diskId",
                            "name"
                          ]
                        }
                      }
                    },
                    "infrastructureProfile": {
                      "description": "Gets the infrastructure profile.",
                      "type": "object",
                      "properties": {
                        "inventoryItemId": {
                          "type": "string",
                          "description": "Gets or sets the inventory Item ID for the resource.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "vmmServerId": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "ARM Id of the vmmServer resource in which this resource resides.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.ScVmm/vmmServers"
                              }
                            ]
                          }
                        },
                        "cloudId": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "ARM Id of the cloud resource to use for deploying the vm.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.ScVmm/clouds"
                              }
                            ]
                          }
                        },
                        "templateId": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "ARM Id of the template resource to use for deploying the vm.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.ScVmm/virtualMachineTemplates"
                              }
                            ]
                          }
                        },
                        "vmName": {
                          "type": "string",
                          "description": "VMName is the name of VM on the SCVmm server.",
                          "minLength": 1,
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "uuid": {
                          "type": "string",
                          "description": "Unique ID of the virtual machine.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "lastRestoredVMCheckpoint": {
                          "description": "Last restored checkpoint in the vm.",
                          "readOnly": true,
                          "x-ms-client-name": "lastRestoredVmCheckpoint",
                          "type": "object",
                          "properties": {
                            "parentCheckpointID": {
                              "type": "string",
                              "description": "Gets ID of parent of the checkpoint.",
                              "x-ms-client-name": "parentCheckpointId"
                            },
                            "checkpointID": {
                              "type": "string",
                              "description": "Gets ID of the checkpoint.",
                              "x-ms-client-name": "checkpointId"
                            },
                            "name": {
                              "type": "string",
                              "description": "Gets name of the checkpoint."
                            },
                            "description": {
                              "type": "string",
                              "description": "Gets description of the checkpoint."
                            }
                          }
                        },
                        "checkpoints": {
                          "type": "array",
                          "description": "Checkpoints in the vm.",
                          "items": {
                            "type": "object",
                            "description": "Defines the resource properties.",
                            "properties": {
                              "parentCheckpointID": {
                                "type": "string",
                                "description": "Gets ID of parent of the checkpoint.",
                                "x-ms-client-name": "parentCheckpointId"
                              },
                              "checkpointID": {
                                "type": "string",
                                "description": "Gets ID of the checkpoint.",
                                "x-ms-client-name": "checkpointId"
                              },
                              "name": {
                                "type": "string",
                                "description": "Gets name of the checkpoint."
                              },
                              "description": {
                                "type": "string",
                                "description": "Gets description of the checkpoint."
                              }
                            }
                          },
                          "readOnly": true,
                          "x-ms-identifiers": [
                            "checkpointID"
                          ]
                        },
                        "checkpointType": {
                          "type": "string",
                          "description": "Type of checkpoint supported for the vm.",
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ]
                        },
                        "generation": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Gets or sets the generation for the vm.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "biosGuid": {
                          "type": "string",
                          "description": "Gets or sets the bios guid for the vm.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        }
                      }
                    },
                    "powerState": {
                      "type": "string",
                      "description": "Gets the power state of the virtual machine.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "The extended location name.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ExtendedLocation/customLocations"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "extendedLocation"
              ]
            }
          },
          "201": {
            "description": "Resource 'VirtualMachineInstance' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Define the virtualMachineInstance.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "availabilitySets": {
                      "type": "array",
                      "description": "Availability Sets in vm.",
                      "items": {
                        "type": "object",
                        "description": "Availability Set model",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Gets the ARM Id of the microsoft.scvmm/availabilitySets resource.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.ScVmm/availabilitySets"
                                }
                              ]
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "Gets or sets the name of the availability set."
                          }
                        }
                      }
                    },
                    "osProfile": {
                      "description": "OS properties.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "adminUsername": {
                          "type": "string",
                          "description": "Gets or sets the admin username."
                        },
                        "adminPassword": {
                          "type": "string",
                          "format": "password",
                          "description": "Admin password of the virtual machine.",
                          "x-ms-mutability": [
                            "update",
                            "create"
                          ],
                          "x-ms-secret": true
                        },
                        "computerName": {
                          "type": "string",
                          "description": "Gets or sets computer name."
                        },
                        "osType": {
                          "description": "Gets the type of the os.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Windows",
                            "Linux",
                            "Other"
                          ],
                          "x-ms-enum": {
                            "name": "OsType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Windows",
                                "value": "Windows",
                                "description": "Windows operating system."
                              },
                              {
                                "name": "Linux",
                                "value": "Linux",
                                "description": "Linux operating system."
                              },
                              {
                                "name": "Other",
                                "value": "Other",
                                "description": "Other operating system."
                              }
                            ]
                          }
                        },
                        "osSku": {
                          "type": "string",
                          "description": "Gets os sku.",
                          "readOnly": true
                        },
                        "osVersion": {
                          "type": "string",
                          "description": "Gets os version.",
                          "readOnly": true
                        },
                        "domainName": {
                          "type": "string",
                          "description": "Gets or sets the domain name."
                        },
                        "domainUsername": {
                          "type": "string",
                          "description": "Gets or sets the domain username."
                        },
                        "domainPassword": {
                          "type": "string",
                          "format": "password",
                          "description": "Password of the domain the VM has to join.",
                          "x-ms-mutability": [
                            "update",
                            "create"
                          ],
                          "x-ms-secret": true
                        },
                        "workgroup": {
                          "type": "string",
                          "description": "Gets or sets the workgroup."
                        },
                        "productKey": {
                          "type": "string",
                          "format": "password",
                          "description": "Gets or sets the product key.Input format xxxxx-xxxxx-xxxxx-xxxxx-xxxxx",
                          "x-ms-mutability": [
                            "create"
                          ],
                          "x-ms-secret": true
                        },
                        "timezone": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Gets or sets the index value of the timezone."
                        },
                        "runOnceCommands": {
                          "type": "string",
                          "description": "Get or sets the commands to be run once at the time of creation separated by semicolons."
                        }
                      }
                    },
                    "hardwareProfile": {
                      "description": "Hardware properties.",
                      "type": "object",
                      "properties": {
                        "memoryMB": {
                          "type": "integer",
                          "format": "int32",
                          "description": "MemoryMB is the size of a virtual machine's memory, in MB."
                        },
                        "cpuCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Gets or sets the number of vCPUs for the vm."
                        },
                        "limitCpuForMigration": {
                          "description": "Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.",
                          "type": "string",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "x-ms-enum": {
                            "name": "LimitCpuForMigration",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "true",
                                "value": "true",
                                "description": "Enable limit CPU for migration."
                              },
                              {
                                "name": "false",
                                "value": "false",
                                "description": "Disable limit CPU for migration."
                              }
                            ]
                          }
                        },
                        "dynamicMemoryEnabled": {
                          "description": "Gets or sets a value indicating whether to enable dynamic memory or not.",
                          "type": "string",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "x-ms-enum": {
                            "name": "DynamicMemoryEnabled",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "true",
                                "value": "true",
                                "description": "Enable dynamic memory."
                              },
                              {
                                "name": "false",
                                "value": "false",
                                "description": "Disable dynamic memory."
                              }
                            ]
                          }
                        },
                        "dynamicMemoryMaxMB": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Gets or sets the max dynamic memory for the vm."
                        },
                        "dynamicMemoryMinMB": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Gets or sets the min dynamic memory for the vm."
                        },
                        "isHighlyAvailable": {
                          "description": "Gets highly available property.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "x-ms-enum": {
                            "name": "IsHighlyAvailable",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "true",
                                "value": "true",
                                "description": "Enable highly available."
                              },
                              {
                                "name": "false",
                                "value": "false",
                                "description": "Disable highly available."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "networkProfile": {
                      "description": "Network properties.",
                      "type": "object",
                      "properties": {
                        "networkInterfaces": {
                          "type": "array",
                          "description": "Gets or sets the list of network interfaces associated with the virtual machine.",
                          "items": {
                            "type": "object",
                            "description": "Network Interface model",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Gets or sets the name of the network interface."
                              },
                              "displayName": {
                                "type": "string",
                                "description": "Gets the display name of the network interface as shown in the vmmServer. This is the fallback label for a NIC when the name is not set.",
                                "readOnly": true
                              },
                              "ipv4Addresses": {
                                "type": "array",
                                "description": "Gets the nic ipv4 addresses.",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "ipv6Addresses": {
                                "type": "array",
                                "description": "Gets the nic ipv6 addresses.",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "macAddress": {
                                "type": "string",
                                "description": "Gets or sets the nic MAC address."
                              },
                              "virtualNetworkId": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.ScVmm/virtualNetwork"
                                    }
                                  ]
                                }
                              },
                              "networkName": {
                                "type": "string",
                                "description": "Gets the name of the virtual network in vmmServer that the nic is connected to.",
                                "readOnly": true
                              },
                              "ipv4AddressType": {
                                "description": "Gets or sets the ipv4 address type.",
                                "type": "string",
                                "enum": [
                                  "Dynamic",
                                  "Static"
                                ],
                                "x-ms-enum": {
                                  "name": "AllocationMethod",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Dynamic",
                                      "value": "Dynamic",
                                      "description": "Dynamically allocated address."
                                    },
                                    {
                                      "name": "Static",
                                      "value": "Static",
                                      "description": "Statically allocated address."
                                    }
                                  ]
                                }
                              },
                              "ipv6AddressType": {
                                "description": "Gets or sets the ipv6 address type.",
                                "type": "string",
                                "enum": [
                                  "Dynamic",
                                  "Static"
                                ],
                                "x-ms-enum": {
                                  "name": "AllocationMethod",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Dynamic",
                                      "value": "Dynamic",
                                      "description": "Dynamically allocated address."
                                    },
                                    {
                                      "name": "Static",
                                      "value": "Static",
                                      "description": "Statically allocated address."
                                    }
                                  ]
                                }
                              },
                              "macAddressType": {
                                "description": "Gets or sets the mac address type.",
                                "type": "string",
                                "enum": [
                                  "Dynamic",
                                  "Static"
                                ],
                                "x-ms-enum": {
                                  "name": "AllocationMethod",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Dynamic",
                                      "value": "Dynamic",
                                      "description": "Dynamically allocated address."
                                    },
                                    {
                                      "name": "Static",
                                      "value": "Static",
                                      "description": "Statically allocated address."
                                    }
                                  ]
                                }
                              },
                              "nicId": {
                                "type": "string",
                                "description": "Gets or sets the nic id."
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name",
                            "nicId"
                          ]
                        }
                      }
                    },
                    "storageProfile": {
                      "description": "Storage properties.",
                      "type": "object",
                      "properties": {
                        "disks": {
                          "type": "array",
                          "description": "Gets or sets the list of virtual disks associated with the virtual machine.",
                          "items": {
                            "type": "object",
                            "description": "Virtual disk model",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Gets or sets the name of the disk."
                              },
                              "displayName": {
                                "type": "string",
                                "description": "Gets the display name of the virtual disk as shown in the vmmServer. This is the fallback label for a disk when the name is not set.",
                                "readOnly": true
                              },
                              "diskId": {
                                "type": "string",
                                "description": "Gets or sets the disk id."
                              },
                              "diskSizeGB": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Gets or sets the disk total size."
                              },
                              "maxDiskSizeGB": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Gets the max disk size.",
                                "readOnly": true
                              },
                              "bus": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Gets or sets the disk bus."
                              },
                              "lun": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Gets or sets the disk lun."
                              },
                              "busType": {
                                "type": "string",
                                "description": "Gets or sets the disk bus type."
                              },
                              "vhdType": {
                                "type": "string",
                                "description": "Gets or sets the disk vhd type."
                              },
                              "volumeType": {
                                "type": "string",
                                "description": "Gets the disk volume type.",
                                "readOnly": true
                              },
                              "vhdFormatType": {
                                "type": "string",
                                "description": "Gets the disk vhd format type.",
                                "readOnly": true
                              },
                              "templateDiskId": {
                                "type": "string",
                                "description": "Gets or sets the disk id in the template.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "storageQoSPolicy": {
                                "description": "The QoS policy for the disk.",
                                "x-ms-client-name": "storageQosPolicy",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the policy."
                                  },
                                  "id": {
                                    "type": "string",
                                    "description": "The ID of the QoS policy."
                                  }
                                }
                              },
                              "createDiffDisk": {
                                "description": "Gets or sets a value indicating diff disk.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "x-ms-enum": {
                                  "name": "CreateDiffDisk",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "true",
                                      "value": "true",
                                      "description": "Enable create diff disk."
                                    },
                                    {
                                      "name": "false",
                                      "value": "false",
                                      "description": "Disable create diff disk."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "diskId",
                            "name"
                          ]
                        }
                      }
                    },
                    "infrastructureProfile": {
                      "description": "Gets the infrastructure profile.",
                      "type": "object",
                      "properties": {
                        "inventoryItemId": {
                          "type": "string",
                          "description": "Gets or sets the inventory Item ID for the resource.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "vmmServerId": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "ARM Id of the vmmServer resource in which this resource resides.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.ScVmm/vmmServers"
                              }
                            ]
                          }
                        },
                        "cloudId": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "ARM Id of the cloud resource to use for deploying the vm.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.ScVmm/clouds"
                              }
                            ]
                          }
                        },
                        "templateId": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "ARM Id of the template resource to use for deploying the vm.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.ScVmm/virtualMachineTemplates"
                              }
                            ]
                          }
                        },
                        "vmName": {
                          "type": "string",
                          "description": "VMName is the name of VM on the SCVmm server.",
                          "minLength": 1,
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "uuid": {
                          "type": "string",
                          "description": "Unique ID of the virtual machine.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "lastRestoredVMCheckpoint": {
                          "description": "Last restored checkpoint in the vm.",
                          "readOnly": true,
                          "x-ms-client-name": "lastRestoredVmCheckpoint",
                          "type": "object",
                          "properties": {
                            "parentCheckpointID": {
                              "type": "string",
                              "description": "Gets ID of parent of the checkpoint.",
                              "x-ms-client-name": "parentCheckpointId"
                            },
                            "checkpointID": {
                              "type": "string",
                              "description": "Gets ID of the checkpoint.",
                              "x-ms-client-name": "checkpointId"
                            },
                            "name": {
                              "type": "string",
                              "description": "Gets name of the checkpoint."
                            },
                            "description": {
                              "type": "string",
                              "description": "Gets description of the checkpoint."
                            }
                          }
                        },
                        "checkpoints": {
                          "type": "array",
                          "description": "Checkpoints in the vm.",
                          "items": {
                            "type": "object",
                            "description": "Defines the resource properties.",
                            "properties": {
                              "parentCheckpointID": {
                                "type": "string",
                                "description": "Gets ID of parent of the checkpoint.",
                                "x-ms-client-name": "parentCheckpointId"
                              },
                              "checkpointID": {
                                "type": "string",
                                "description": "Gets ID of the checkpoint.",
                                "x-ms-client-name": "checkpointId"
                              },
                              "name": {
                                "type": "string",
                                "description": "Gets name of the checkpoint."
                              },
                              "description": {
                                "type": "string",
                                "description": "Gets description of the checkpoint."
                              }
                            }
                          },
                          "readOnly": true,
                          "x-ms-identifiers": [
                            "checkpointID"
                          ]
                        },
                        "checkpointType": {
                          "type": "string",
                          "description": "Type of checkpoint supported for the vm.",
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ]
                        },
                        "generation": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Gets or sets the generation for the vm.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "biosGuid": {
                          "type": "string",
                          "description": "Gets or sets the bios guid for the vm.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        }
                      }
                    },
                    "powerState": {
                      "type": "string",
                      "description": "Gets the power state of the virtual machine.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "The extended location name.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ExtendedLocation/customLocations"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "extendedLocation"
              ]
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "VirtualMachineInstances_Update",
        "tags": [
          "VirtualMachineInstances"
        ],
        "summary": "Updates a virtual machine.",
        "description": "The operation to update a virtual machine instance.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The type used for update operations of the VirtualMachineInstance.",
              "properties": {
                "properties": {
                  "description": "The update properties of the VirtualMachineInstance.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "availabilitySets": {
                      "type": "array",
                      "description": "Availability Sets in vm.",
                      "items": {
                        "type": "object",
                        "description": "Availability Set model",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Gets the ARM Id of the microsoft.scvmm/availabilitySets resource.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.ScVmm/availabilitySets"
                                }
                              ]
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "Gets or sets the name of the availability set."
                          }
                        }
                      }
                    },
                    "hardwareProfile": {
                      "description": "Hardware properties.",
                      "type": "object",
                      "properties": {
                        "memoryMB": {
                          "type": "integer",
                          "format": "int32",
                          "description": "MemoryMB is the size of a virtual machine's memory, in MB."
                        },
                        "cpuCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Gets or sets the number of vCPUs for the vm."
                        },
                        "limitCpuForMigration": {
                          "description": "Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.",
                          "type": "string",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "x-ms-enum": {
                            "name": "LimitCpuForMigration",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "true",
                                "value": "true",
                                "description": "Enable limit CPU for migration."
                              },
                              {
                                "name": "false",
                                "value": "false",
                                "description": "Disable limit CPU for migration."
                              }
                            ]
                          }
                        },
                        "dynamicMemoryEnabled": {
                          "description": "Gets or sets a value indicating whether to enable dynamic memory or not.",
                          "type": "string",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "x-ms-enum": {
                            "name": "DynamicMemoryEnabled",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "true",
                                "value": "true",
                                "description": "Enable dynamic memory."
                              },
                              {
                                "name": "false",
                                "value": "false",
                                "description": "Disable dynamic memory."
                              }
                            ]
                          }
                        },
                        "dynamicMemoryMaxMB": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Gets or sets the max dynamic memory for the vm."
                        },
                        "dynamicMemoryMinMB": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Gets or sets the min dynamic memory for the vm."
                        }
                      }
                    },
                    "networkProfile": {
                      "description": "Network properties.",
                      "type": "object",
                      "properties": {
                        "networkInterfaces": {
                          "type": "array",
                          "description": "Gets or sets the list of network interfaces associated with the virtual machine.",
                          "items": {
                            "type": "object",
                            "description": "Network Interface Update model",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Gets or sets the name of the network interface."
                              },
                              "macAddress": {
                                "type": "string",
                                "description": "Gets or sets the nic MAC address."
                              },
                              "virtualNetworkId": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.ScVmm/virtualNetwork"
                                    }
                                  ]
                                }
                              },
                              "ipv4AddressType": {
                                "description": "Gets or sets the ipv4 address type.",
                                "type": "string",
                                "enum": [
                                  "Dynamic",
                                  "Static"
                                ],
                                "x-ms-enum": {
                                  "name": "AllocationMethod",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Dynamic",
                                      "value": "Dynamic",
                                      "description": "Dynamically allocated address."
                                    },
                                    {
                                      "name": "Static",
                                      "value": "Static",
                                      "description": "Statically allocated address."
                                    }
                                  ]
                                }
                              },
                              "ipv6AddressType": {
                                "description": "Gets or sets the ipv6 address type.",
                                "type": "string",
                                "enum": [
                                  "Dynamic",
                                  "Static"
                                ],
                                "x-ms-enum": {
                                  "name": "AllocationMethod",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Dynamic",
                                      "value": "Dynamic",
                                      "description": "Dynamically allocated address."
                                    },
                                    {
                                      "name": "Static",
                                      "value": "Static",
                                      "description": "Statically allocated address."
                                    }
                                  ]
                                }
                              },
                              "macAddressType": {
                                "description": "Gets or sets the mac address type.",
                                "type": "string",
                                "enum": [
                                  "Dynamic",
                                  "Static"
                                ],
                                "x-ms-enum": {
                                  "name": "AllocationMethod",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Dynamic",
                                      "value": "Dynamic",
                                      "description": "Dynamically allocated address."
                                    },
                                    {
                                      "name": "Static",
                                      "value": "Static",
                                      "description": "Statically allocated address."
                                    }
                                  ]
                                }
                              },
                              "nicId": {
                                "type": "string",
                                "description": "Gets or sets the nic id."
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name",
                            "nicId"
                          ]
                        }
                      }
                    },
                    "storageProfile": {
                      "description": "Storage properties.",
                      "type": "object",
                      "properties": {
                        "disks": {
                          "type": "array",
                          "description": "Gets or sets the list of virtual disks associated with the virtual machine.",
                          "items": {
                            "type": "object",
                            "description": "Virtual Disk Update model",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Gets or sets the name of the disk."
                              },
                              "diskId": {
                                "type": "string",
                                "description": "Gets or sets the disk id."
                              },
                              "diskSizeGB": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Gets or sets the disk total size."
                              },
                              "bus": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Gets or sets the disk bus."
                              },
                              "lun": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Gets or sets the disk lun."
                              },
                              "busType": {
                                "type": "string",
                                "description": "Gets or sets the disk bus type."
                              },
                              "vhdType": {
                                "type": "string",
                                "description": "Gets or sets the disk vhd type."
                              },
                              "storageQoSPolicy": {
                                "description": "The QoS policy for the disk.",
                                "x-ms-client-name": "storageQosPolicy",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the policy."
                                  },
                                  "id": {
                                    "type": "string",
                                    "description": "The ID of the QoS policy."
                                  }
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "diskId",
                            "name"
                          ]
                        }
                      }
                    },
                    "infrastructureProfile": {
                      "description": "Gets the infrastructure profile.",
                      "type": "object",
                      "properties": {
                        "checkpointType": {
                          "type": "string",
                          "description": "Type of checkpoint supported for the vm.",
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Define the virtualMachineInstance.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "availabilitySets": {
                      "type": "array",
                      "description": "Availability Sets in vm.",
                      "items": {
                        "type": "object",
                        "description": "Availability Set model",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Gets the ARM Id of the microsoft.scvmm/availabilitySets resource.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.ScVmm/availabilitySets"
                                }
                              ]
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "Gets or sets the name of the availability set."
                          }
                        }
                      }
                    },
                    "osProfile": {
                      "description": "OS properties.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "adminUsername": {
                          "type": "string",
                          "description": "Gets or sets the admin username."
                        },
                        "adminPassword": {
                          "type": "string",
                          "format": "password",
                          "description": "Admin password of the virtual machine.",
                          "x-ms-mutability": [
                            "update",
                            "create"
                          ],
                          "x-ms-secret": true
                        },
                        "computerName": {
                          "type": "string",
                          "description": "Gets or sets computer name."
                        },
                        "osType": {
                          "description": "Gets the type of the os.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Windows",
                            "Linux",
                            "Other"
                          ],
                          "x-ms-enum": {
                            "name": "OsType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Windows",
                                "value": "Windows",
                                "description": "Windows operating system."
                              },
                              {
                                "name": "Linux",
                                "value": "Linux",
                                "description": "Linux operating system."
                              },
                              {
                                "name": "Other",
                                "value": "Other",
                                "description": "Other operating system."
                              }
                            ]
                          }
                        },
                        "osSku": {
                          "type": "string",
                          "description": "Gets os sku.",
                          "readOnly": true
                        },
                        "osVersion": {
                          "type": "string",
                          "description": "Gets os version.",
                          "readOnly": true
                        },
                        "domainName": {
                          "type": "string",
                          "description": "Gets or sets the domain name."
                        },
                        "domainUsername": {
                          "type": "string",
                          "description": "Gets or sets the domain username."
                        },
                        "domainPassword": {
                          "type": "string",
                          "format": "password",
                          "description": "Password of the domain the VM has to join.",
                          "x-ms-mutability": [
                            "update",
                            "create"
                          ],
                          "x-ms-secret": true
                        },
                        "workgroup": {
                          "type": "string",
                          "description": "Gets or sets the workgroup."
                        },
                        "productKey": {
                          "type": "string",
                          "format": "password",
                          "description": "Gets or sets the product key.Input format xxxxx-xxxxx-xxxxx-xxxxx-xxxxx",
                          "x-ms-mutability": [
                            "create"
                          ],
                          "x-ms-secret": true
                        },
                        "timezone": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Gets or sets the index value of the timezone."
                        },
                        "runOnceCommands": {
                          "type": "string",
                          "description": "Get or sets the commands to be run once at the time of creation separated by semicolons."
                        }
                      }
                    },
                    "hardwareProfile": {
                      "description": "Hardware properties.",
                      "type": "object",
                      "properties": {
                        "memoryMB": {
                          "type": "integer",
                          "format": "int32",
                          "description": "MemoryMB is the size of a virtual machine's memory, in MB."
                        },
                        "cpuCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Gets or sets the number of vCPUs for the vm."
                        },
                        "limitCpuForMigration": {
                          "description": "Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.",
                          "type": "string",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "x-ms-enum": {
                            "name": "LimitCpuForMigration",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "true",
                                "value": "true",
                                "description": "Enable limit CPU for migration."
                              },
                              {
                                "name": "false",
                                "value": "false",
                                "description": "Disable limit CPU for migration."
                              }
                            ]
                          }
                        },
                        "dynamicMemoryEnabled": {
                          "description": "Gets or sets a value indicating whether to enable dynamic memory or not.",
                          "type": "string",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "x-ms-enum": {
                            "name": "DynamicMemoryEnabled",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "true",
                                "value": "true",
                                "description": "Enable dynamic memory."
                              },
                              {
                                "name": "false",
                                "value": "false",
                                "description": "Disable dynamic memory."
                              }
                            ]
                          }
                        },
                        "dynamicMemoryMaxMB": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Gets or sets the max dynamic memory for the vm."
                        },
                        "dynamicMemoryMinMB": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Gets or sets the min dynamic memory for the vm."
                        },
                        "isHighlyAvailable": {
                          "description": "Gets highly available property.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "x-ms-enum": {
                            "name": "IsHighlyAvailable",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "true",
                                "value": "true",
                                "description": "Enable highly available."
                              },
                              {
                                "name": "false",
                                "value": "false",
                                "description": "Disable highly available."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "networkProfile": {
                      "description": "Network properties.",
                      "type": "object",
                      "properties": {
                        "networkInterfaces": {
                          "type": "array",
                          "description": "Gets or sets the list of network interfaces associated with the virtual machine.",
                          "items": {
                            "type": "object",
                            "description": "Network Interface model",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Gets or sets the name of the network interface."
                              },
                              "displayName": {
                                "type": "string",
                                "description": "Gets the display name of the network interface as shown in the vmmServer. This is the fallback label for a NIC when the name is not set.",
                                "readOnly": true
                              },
                              "ipv4Addresses": {
                                "type": "array",
                                "description": "Gets the nic ipv4 addresses.",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "ipv6Addresses": {
                                "type": "array",
                                "description": "Gets the nic ipv6 addresses.",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "macAddress": {
                                "type": "string",
                                "description": "Gets or sets the nic MAC address."
                              },
                              "virtualNetworkId": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.ScVmm/virtualNetwork"
                                    }
                                  ]
                                }
                              },
                              "networkName": {
                                "type": "string",
                                "description": "Gets the name of the virtual network in vmmServer that the nic is connected to.",
                                "readOnly": true
                              },
                              "ipv4AddressType": {
                                "description": "Gets or sets the ipv4 address type.",
                                "type": "string",
                                "enum": [
                                  "Dynamic",
                                  "Static"
                                ],
                                "x-ms-enum": {
                                  "name": "AllocationMethod",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Dynamic",
                                      "value": "Dynamic",
                                      "description": "Dynamically allocated address."
                                    },
                                    {
                                      "name": "Static",
                                      "value": "Static",
                                      "description": "Statically allocated address."
                                    }
                                  ]
                                }
                              },
                              "ipv6AddressType": {
                                "description": "Gets or sets the ipv6 address type.",
                                "type": "string",
                                "enum": [
                                  "Dynamic",
                                  "Static"
                                ],
                                "x-ms-enum": {
                                  "name": "AllocationMethod",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Dynamic",
                                      "value": "Dynamic",
                                      "description": "Dynamically allocated address."
                                    },
                                    {
                                      "name": "Static",
                                      "value": "Static",
                                      "description": "Statically allocated address."
                                    }
                                  ]
                                }
                              },
                              "macAddressType": {
                                "description": "Gets or sets the mac address type.",
                                "type": "string",
                                "enum": [
                                  "Dynamic",
                                  "Static"
                                ],
                                "x-ms-enum": {
                                  "name": "AllocationMethod",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Dynamic",
                                      "value": "Dynamic",
                                      "description": "Dynamically allocated address."
                                    },
                                    {
                                      "name": "Static",
                                      "value": "Static",
                                      "description": "Statically allocated address."
                                    }
                                  ]
                                }
                              },
                              "nicId": {
                                "type": "string",
                                "description": "Gets or sets the nic id."
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name",
                            "nicId"
                          ]
                        }
                      }
                    },
                    "storageProfile": {
                      "description": "Storage properties.",
                      "type": "object",
                      "properties": {
                        "disks": {
                          "type": "array",
                          "description": "Gets or sets the list of virtual disks associated with the virtual machine.",
                          "items": {
                            "type": "object",
                            "description": "Virtual disk model",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Gets or sets the name of the disk."
                              },
                              "displayName": {
                                "type": "string",
                                "description": "Gets the display name of the virtual disk as shown in the vmmServer. This is the fallback label for a disk when the name is not set.",
                                "readOnly": true
                              },
                              "diskId": {
                                "type": "string",
                                "description": "Gets or sets the disk id."
                              },
                              "diskSizeGB": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Gets or sets the disk total size."
                              },
                              "maxDiskSizeGB": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Gets the max disk size.",
                                "readOnly": true
                              },
                              "bus": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Gets or sets the disk bus."
                              },
                              "lun": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Gets or sets the disk lun."
                              },
                              "busType": {
                                "type": "string",
                                "description": "Gets or sets the disk bus type."
                              },
                              "vhdType": {
                                "type": "string",
                                "description": "Gets or sets the disk vhd type."
                              },
                              "volumeType": {
                                "type": "string",
                                "description": "Gets the disk volume type.",
                                "readOnly": true
                              },
                              "vhdFormatType": {
                                "type": "string",
                                "description": "Gets the disk vhd format type.",
                                "readOnly": true
                              },
                              "templateDiskId": {
                                "type": "string",
                                "description": "Gets or sets the disk id in the template.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "storageQoSPolicy": {
                                "description": "The QoS policy for the disk.",
                                "x-ms-client-name": "storageQosPolicy",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the policy."
                                  },
                                  "id": {
                                    "type": "string",
                                    "description": "The ID of the QoS policy."
                                  }
                                }
                              },
                              "createDiffDisk": {
                                "description": "Gets or sets a value indicating diff disk.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "x-ms-enum": {
                                  "name": "CreateDiffDisk",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "true",
                                      "value": "true",
                                      "description": "Enable create diff disk."
                                    },
                                    {
                                      "name": "false",
                                      "value": "false",
                                      "description": "Disable create diff disk."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "diskId",
                            "name"
                          ]
                        }
                      }
                    },
                    "infrastructureProfile": {
                      "description": "Gets the infrastructure profile.",
                      "type": "object",
                      "properties": {
                        "inventoryItemId": {
                          "type": "string",
                          "description": "Gets or sets the inventory Item ID for the resource.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "vmmServerId": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "ARM Id of the vmmServer resource in which this resource resides.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.ScVmm/vmmServers"
                              }
                            ]
                          }
                        },
                        "cloudId": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "ARM Id of the cloud resource to use for deploying the vm.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.ScVmm/clouds"
                              }
                            ]
                          }
                        },
                        "templateId": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "ARM Id of the template resource to use for deploying the vm.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.ScVmm/virtualMachineTemplates"
                              }
                            ]
                          }
                        },
                        "vmName": {
                          "type": "string",
                          "description": "VMName is the name of VM on the SCVmm server.",
                          "minLength": 1,
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "uuid": {
                          "type": "string",
                          "description": "Unique ID of the virtual machine.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "lastRestoredVMCheckpoint": {
                          "description": "Last restored checkpoint in the vm.",
                          "readOnly": true,
                          "x-ms-client-name": "lastRestoredVmCheckpoint",
                          "type": "object",
                          "properties": {
                            "parentCheckpointID": {
                              "type": "string",
                              "description": "Gets ID of parent of the checkpoint.",
                              "x-ms-client-name": "parentCheckpointId"
                            },
                            "checkpointID": {
                              "type": "string",
                              "description": "Gets ID of the checkpoint.",
                              "x-ms-client-name": "checkpointId"
                            },
                            "name": {
                              "type": "string",
                              "description": "Gets name of the checkpoint."
                            },
                            "description": {
                              "type": "string",
                              "description": "Gets description of the checkpoint."
                            }
                          }
                        },
                        "checkpoints": {
                          "type": "array",
                          "description": "Checkpoints in the vm.",
                          "items": {
                            "type": "object",
                            "description": "Defines the resource properties.",
                            "properties": {
                              "parentCheckpointID": {
                                "type": "string",
                                "description": "Gets ID of parent of the checkpoint.",
                                "x-ms-client-name": "parentCheckpointId"
                              },
                              "checkpointID": {
                                "type": "string",
                                "description": "Gets ID of the checkpoint.",
                                "x-ms-client-name": "checkpointId"
                              },
                              "name": {
                                "type": "string",
                                "description": "Gets name of the checkpoint."
                              },
                              "description": {
                                "type": "string",
                                "description": "Gets description of the checkpoint."
                              }
                            }
                          },
                          "readOnly": true,
                          "x-ms-identifiers": [
                            "checkpointID"
                          ]
                        },
                        "checkpointType": {
                          "type": "string",
                          "description": "Type of checkpoint supported for the vm.",
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ]
                        },
                        "generation": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Gets or sets the generation for the vm.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "biosGuid": {
                          "type": "string",
                          "description": "Gets or sets the bios guid for the vm.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        }
                      }
                    },
                    "powerState": {
                      "type": "string",
                      "description": "Gets the power state of the virtual machine.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "The extended location name.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ExtendedLocation/customLocations"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "extendedLocation"
              ]
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "VirtualMachineInstances_Delete",
        "tags": [
          "VirtualMachineInstances"
        ],
        "summary": "Deletes an virtual machine.",
        "description": "The operation to delete a virtual machine instance.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "force",
            "in": "query",
            "description": "Forces the resource to be deleted.",
            "required": false,
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "x-ms-enum": {
              "name": "ForceDelete",
              "modelAsString": true,
              "values": [
                {
                  "name": "true",
                  "value": "true",
                  "description": "Enable force delete."
                },
                {
                  "name": "false",
                  "value": "false",
                  "description": "Disable force delete."
                }
              ]
            },
            "x-ms-parameter-location": "method"
          },
          {
            "name": "deleteFromHost",
            "in": "query",
            "description": "Whether to disable the VM from azure and also delete it from Vmm.",
            "required": false,
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "x-ms-enum": {
              "name": "DeleteFromHost",
              "modelAsString": true,
              "values": [
                {
                  "name": "true",
                  "value": "true",
                  "description": "Enable delete from host."
                },
                {
                  "name": "false",
                  "value": "false",
                  "description": "Disable delete from host."
                }
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ScVmm/virtualMachineInstances/default/createCheckpoint": {
      "post": {
        "operationId": "VirtualMachineInstances_CreateCheckpoint",
        "tags": [
          "VirtualMachineInstances"
        ],
        "summary": "Implements the operation to creates a checkpoint in a virtual machine instance.",
        "description": "Creates a checkpoint in virtual machine instance.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Defines the create checkpoint action properties.",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the checkpoint."
                },
                "description": {
                  "type": "string",
                  "description": "Description of the checkpoint."
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ScVmm/virtualMachineInstances/default/deleteCheckpoint": {
      "post": {
        "operationId": "VirtualMachineInstances_DeleteCheckpoint",
        "tags": [
          "VirtualMachineInstances"
        ],
        "summary": "Implements the operation to delete a checkpoint in a virtual machine instance.",
        "description": "Deletes a checkpoint in virtual machine instance.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Defines the delete checkpoint action properties.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "ID of the checkpoint to be deleted."
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ScVmm/virtualMachineInstances/default/guestAgents": {
      "get": {
        "operationId": "GuestAgents_ListByVirtualMachineInstance",
        "tags": [
          "GuestAgents"
        ],
        "summary": "Implements GET GuestAgent in a vm.",
        "description": "Returns the list of GuestAgent of the given vm.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a GuestAgent list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The GuestAgent items on this page",
                  "items": {
                    "type": "object",
                    "description": "Defines the GuestAgent.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "description": "Gets a unique identifier for this resource.",
                            "readOnly": true
                          },
                          "credentials": {
                            "description": "Username / Password Credentials to provision guest agent.",
                            "type": "object",
                            "properties": {
                              "username": {
                                "type": "string",
                                "description": "Gets or sets username to connect with the guest."
                              },
                              "password": {
                                "type": "string",
                                "format": "password",
                                "description": "Gets or sets the password to connect with the guest.",
                                "x-ms-mutability": [
                                  "update",
                                  "create"
                                ],
                                "x-ms-secret": true
                              }
                            },
                            "required": [
                              "username",
                              "password"
                            ]
                          },
                          "httpProxyConfig": {
                            "description": "HTTP Proxy configuration for the VM.",
                            "type": "object",
                            "properties": {
                              "httpsProxy": {
                                "type": "string",
                                "description": "Gets or sets httpsProxy url."
                              }
                            }
                          },
                          "provisioningAction": {
                            "description": "Gets or sets the guest agent provisioning action.",
                            "type": "string",
                            "enum": [
                              "install",
                              "uninstall",
                              "repair"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningAction",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "install",
                                  "value": "install",
                                  "description": "Install guest agent."
                                },
                                {
                                  "name": "uninstall",
                                  "value": "uninstall",
                                  "description": "Uninstall guest agent."
                                },
                                {
                                  "name": "repair",
                                  "value": "repair",
                                  "description": "Repair guest agent."
                                }
                              ]
                            }
                          },
                          "status": {
                            "type": "string",
                            "description": "Gets the guest agent status.",
                            "readOnly": true
                          },
                          "customResourceName": {
                            "type": "string",
                            "description": "Gets the name of the corresponding resource in Kubernetes.",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the resource.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted",
                              "Created"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The resource is provisioning."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The resource is updating."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The resource is being deleted."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "The resource has been accepted."
                                },
                                {
                                  "name": "Created",
                                  "value": "Created",
                                  "description": "The resource was created."
                                }
                              ]
                            }
                          },
                          "privateLinkScopeResourceId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "The resource id of the private link scope this machine is assigned to, if any.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.HybridCompute/privateLinkScopes"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items",
                  "readOnly": true
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ScVmm/virtualMachineInstances/default/guestAgents/default": {
      "get": {
        "operationId": "GuestAgents_Get",
        "tags": [
          "GuestAgents"
        ],
        "summary": "Gets GuestAgent.",
        "description": "Implements GuestAgent GET method.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Defines the GuestAgent.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "description": "Gets a unique identifier for this resource.",
                      "readOnly": true
                    },
                    "credentials": {
                      "description": "Username / Password Credentials to provision guest agent.",
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "string",
                          "description": "Gets or sets username to connect with the guest."
                        },
                        "password": {
                          "type": "string",
                          "format": "password",
                          "description": "Gets or sets the password to connect with the guest.",
                          "x-ms-mutability": [
                            "update",
                            "create"
                          ],
                          "x-ms-secret": true
                        }
                      },
                      "required": [
                        "username",
                        "password"
                      ]
                    },
                    "httpProxyConfig": {
                      "description": "HTTP Proxy configuration for the VM.",
                      "type": "object",
                      "properties": {
                        "httpsProxy": {
                          "type": "string",
                          "description": "Gets or sets httpsProxy url."
                        }
                      }
                    },
                    "provisioningAction": {
                      "description": "Gets or sets the guest agent provisioning action.",
                      "type": "string",
                      "enum": [
                        "install",
                        "uninstall",
                        "repair"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningAction",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "install",
                            "value": "install",
                            "description": "Install guest agent."
                          },
                          {
                            "name": "uninstall",
                            "value": "uninstall",
                            "description": "Uninstall guest agent."
                          },
                          {
                            "name": "repair",
                            "value": "repair",
                            "description": "Repair guest agent."
                          }
                        ]
                      }
                    },
                    "status": {
                      "type": "string",
                      "description": "Gets the guest agent status.",
                      "readOnly": true
                    },
                    "customResourceName": {
                      "type": "string",
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    },
                    "privateLinkScopeResourceId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "The resource id of the private link scope this machine is assigned to, if any.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.HybridCompute/privateLinkScopes"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "GuestAgents_Create",
        "tags": [
          "GuestAgents"
        ],
        "summary": "Implements GuestAgent PUT method.",
        "description": "Create Or Update GuestAgent.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Defines the GuestAgent.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "description": "Gets a unique identifier for this resource.",
                      "readOnly": true
                    },
                    "credentials": {
                      "description": "Username / Password Credentials to provision guest agent.",
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "string",
                          "description": "Gets or sets username to connect with the guest."
                        },
                        "password": {
                          "type": "string",
                          "format": "password",
                          "description": "Gets or sets the password to connect with the guest.",
                          "x-ms-mutability": [
                            "update",
                            "create"
                          ],
                          "x-ms-secret": true
                        }
                      },
                      "required": [
                        "username",
                        "password"
                      ]
                    },
                    "httpProxyConfig": {
                      "description": "HTTP Proxy configuration for the VM.",
                      "type": "object",
                      "properties": {
                        "httpsProxy": {
                          "type": "string",
                          "description": "Gets or sets httpsProxy url."
                        }
                      }
                    },
                    "provisioningAction": {
                      "description": "Gets or sets the guest agent provisioning action.",
                      "type": "string",
                      "enum": [
                        "install",
                        "uninstall",
                        "repair"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningAction",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "install",
                            "value": "install",
                            "description": "Install guest agent."
                          },
                          {
                            "name": "uninstall",
                            "value": "uninstall",
                            "description": "Uninstall guest agent."
                          },
                          {
                            "name": "repair",
                            "value": "repair",
                            "description": "Repair guest agent."
                          }
                        ]
                      }
                    },
                    "status": {
                      "type": "string",
                      "description": "Gets the guest agent status.",
                      "readOnly": true
                    },
                    "customResourceName": {
                      "type": "string",
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    },
                    "privateLinkScopeResourceId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "The resource id of the private link scope this machine is assigned to, if any.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.HybridCompute/privateLinkScopes"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'GuestAgent' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Defines the GuestAgent.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "description": "Gets a unique identifier for this resource.",
                      "readOnly": true
                    },
                    "credentials": {
                      "description": "Username / Password Credentials to provision guest agent.",
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "string",
                          "description": "Gets or sets username to connect with the guest."
                        },
                        "password": {
                          "type": "string",
                          "format": "password",
                          "description": "Gets or sets the password to connect with the guest.",
                          "x-ms-mutability": [
                            "update",
                            "create"
                          ],
                          "x-ms-secret": true
                        }
                      },
                      "required": [
                        "username",
                        "password"
                      ]
                    },
                    "httpProxyConfig": {
                      "description": "HTTP Proxy configuration for the VM.",
                      "type": "object",
                      "properties": {
                        "httpsProxy": {
                          "type": "string",
                          "description": "Gets or sets httpsProxy url."
                        }
                      }
                    },
                    "provisioningAction": {
                      "description": "Gets or sets the guest agent provisioning action.",
                      "type": "string",
                      "enum": [
                        "install",
                        "uninstall",
                        "repair"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningAction",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "install",
                            "value": "install",
                            "description": "Install guest agent."
                          },
                          {
                            "name": "uninstall",
                            "value": "uninstall",
                            "description": "Uninstall guest agent."
                          },
                          {
                            "name": "repair",
                            "value": "repair",
                            "description": "Repair guest agent."
                          }
                        ]
                      }
                    },
                    "status": {
                      "type": "string",
                      "description": "Gets the guest agent status.",
                      "readOnly": true
                    },
                    "customResourceName": {
                      "type": "string",
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    },
                    "privateLinkScopeResourceId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "The resource id of the private link scope this machine is assigned to, if any.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.HybridCompute/privateLinkScopes"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource 'GuestAgent' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Defines the GuestAgent.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "description": "Gets a unique identifier for this resource.",
                      "readOnly": true
                    },
                    "credentials": {
                      "description": "Username / Password Credentials to provision guest agent.",
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "string",
                          "description": "Gets or sets username to connect with the guest."
                        },
                        "password": {
                          "type": "string",
                          "format": "password",
                          "description": "Gets or sets the password to connect with the guest.",
                          "x-ms-mutability": [
                            "update",
                            "create"
                          ],
                          "x-ms-secret": true
                        }
                      },
                      "required": [
                        "username",
                        "password"
                      ]
                    },
                    "httpProxyConfig": {
                      "description": "HTTP Proxy configuration for the VM.",
                      "type": "object",
                      "properties": {
                        "httpsProxy": {
                          "type": "string",
                          "description": "Gets or sets httpsProxy url."
                        }
                      }
                    },
                    "provisioningAction": {
                      "description": "Gets or sets the guest agent provisioning action.",
                      "type": "string",
                      "enum": [
                        "install",
                        "uninstall",
                        "repair"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningAction",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "install",
                            "value": "install",
                            "description": "Install guest agent."
                          },
                          {
                            "name": "uninstall",
                            "value": "uninstall",
                            "description": "Uninstall guest agent."
                          },
                          {
                            "name": "repair",
                            "value": "repair",
                            "description": "Repair guest agent."
                          }
                        ]
                      }
                    },
                    "status": {
                      "type": "string",
                      "description": "Gets the guest agent status.",
                      "readOnly": true
                    },
                    "customResourceName": {
                      "type": "string",
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    },
                    "privateLinkScopeResourceId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "The resource id of the private link scope this machine is assigned to, if any.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.HybridCompute/privateLinkScopes"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "GuestAgents_Delete",
        "tags": [
          "GuestAgents"
        ],
        "summary": "Deletes a GuestAgent resource.",
        "description": "Implements GuestAgent DELETE method.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ScVmm/virtualMachineInstances/default/hybridIdentityMetadata": {
      "get": {
        "operationId": "VmInstanceHybridIdentityMetadatas_ListByVirtualMachineInstance",
        "tags": [
          "VmInstanceHybridIdentityMetadatas"
        ],
        "summary": "Implements GET HybridIdentityMetadata in a vm.",
        "description": "Returns the list of HybridIdentityMetadata of the given VM.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a VmInstanceHybridIdentityMetadata list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The VmInstanceHybridIdentityMetadata items on this page",
                  "items": {
                    "type": "object",
                    "description": "Defines the HybridIdentityMetadata.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "resourceUid": {
                            "type": "string",
                            "description": "The unique identifier for the resource."
                          },
                          "publicKey": {
                            "type": "string",
                            "description": "Gets or sets the Public Key."
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the resource.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted",
                              "Created"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The resource is provisioning."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The resource is updating."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The resource is being deleted."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "The resource has been accepted."
                                },
                                {
                                  "name": "Created",
                                  "value": "Created",
                                  "description": "The resource was created."
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items",
                  "readOnly": true
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ScVmm/virtualMachineInstances/default/hybridIdentityMetadata/default": {
      "get": {
        "operationId": "VmInstanceHybridIdentityMetadatas_Get",
        "tags": [
          "VmInstanceHybridIdentityMetadatas"
        ],
        "summary": "Gets HybridIdentityMetadata.",
        "description": "Implements HybridIdentityMetadata GET method.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Defines the HybridIdentityMetadata.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "resourceUid": {
                      "type": "string",
                      "description": "The unique identifier for the resource."
                    },
                    "publicKey": {
                      "type": "string",
                      "description": "Gets or sets the Public Key."
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ScVmm/virtualMachineInstances/default/restart": {
      "post": {
        "operationId": "VirtualMachineInstances_Restart",
        "tags": [
          "VirtualMachineInstances"
        ],
        "summary": "Implements the operation to restart a virtual machine.",
        "description": "The operation to restart a virtual machine instance.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ScVmm/virtualMachineInstances/default/restoreCheckpoint": {
      "post": {
        "operationId": "VirtualMachineInstances_RestoreCheckpoint",
        "tags": [
          "VirtualMachineInstances"
        ],
        "summary": "Implements the operation to restores to a checkpoint in a virtual machine instance.",
        "description": "Restores to a checkpoint in virtual machine instance.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Defines the restore checkpoint action properties.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "ID of the checkpoint to be restored to."
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ScVmm/virtualMachineInstances/default/start": {
      "post": {
        "operationId": "VirtualMachineInstances_Start",
        "tags": [
          "VirtualMachineInstances"
        ],
        "summary": "Implements the operation to start a virtual machine.",
        "description": "The operation to start a virtual machine instance.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ScVmm/virtualMachineInstances/default/stop": {
      "post": {
        "operationId": "VirtualMachineInstances_Stop",
        "tags": [
          "VirtualMachineInstances"
        ],
        "summary": "Implements the operation to stop a virtual machine.",
        "description": "The operation to power off (stop) a virtual machine instance.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": false,
            "schema": {
              "type": "object",
              "description": "Defines the stop action properties.",
              "properties": {
                "skipShutdown": {
                  "type": "string",
                  "description": "Gets or sets a value indicating whether to request non-graceful VM shutdown. True value for this flag indicates non-graceful shutdown whereas false indicates otherwise. Defaults to false.",
                  "default": "false",
                  "enum": [
                    "true",
                    "false"
                  ],
                  "x-ms-enum": {
                    "name": "SkipShutdown",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "true",
                        "value": "true",
                        "description": "Enable skip shutdown."
                      },
                      {
                        "name": "false",
                        "value": "false",
                        "description": "Disable skip shutdown."
                      }
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.ScVmm/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of operations supported by the resource provider",
                  "items": {
                    "type": "object",
                    "title": "REST API Operation",
                    "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
                        "readOnly": true
                      },
                      "isDataAction": {
                        "type": "boolean",
                        "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
                        "readOnly": true
                      },
                      "display": {
                        "type": "object",
                        "description": "Localized display information for this particular operation.",
                        "properties": {
                          "provider": {
                            "type": "string",
                            "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
                            "readOnly": true
                          },
                          "resource": {
                            "type": "string",
                            "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
                            "readOnly": true
                          },
                          "operation": {
                            "type": "string",
                            "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
                            "readOnly": true
                          },
                          "description": {
                            "type": "string",
                            "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
                            "readOnly": true
                          }
                        }
                      },
                      "origin": {
                        "type": "string",
                        "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
                        "enum": [
                          "user",
                          "system",
                          "user,system"
                        ],
                        "x-ms-enum": {
                          "name": "Origin",
                          "modelAsString": true
                        },
                        "readOnly": true
                      },
                      "actionType": {
                        "type": "string",
                        "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
                        "enum": [
                          "Internal"
                        ],
                        "x-ms-enum": {
                          "name": "ActionType",
                          "modelAsString": true
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "URL to get the next set of operation list results (if there are any).",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ScVmm/availabilitySets": {
      "get": {
        "operationId": "AvailabilitySets_ListBySubscription",
        "tags": [
          "AvailabilitySets"
        ],
        "summary": "Implements GET AvailabilitySets in a subscription.",
        "description": "List of AvailabilitySets in a subscription.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a AvailabilitySet list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The AvailabilitySet items on this page",
                  "items": {
                    "type": "object",
                    "description": "The AvailabilitySets resource definition.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "availabilitySetName": {
                            "type": "string",
                            "description": "Name of the availability set.",
                            "minLength": 1
                          },
                          "vmmServerId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "ARM Id of the vmmServer resource in which this resource resides.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.ScVmm/vmmServers"
                                }
                              ]
                            }
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the resource.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted",
                              "Created"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The resource is provisioning."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The resource is updating."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The resource is being deleted."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "The resource has been accepted."
                                },
                                {
                                  "name": "Created",
                                  "value": "Created",
                                  "description": "The resource was created."
                                }
                              ]
                            }
                          }
                        }
                      },
                      "extendedLocation": {
                        "description": "The extended location.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The extended location type."
                          },
                          "name": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "The extended location name.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.ExtendedLocation/customLocations"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "extendedLocation"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items",
                  "readOnly": true
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ScVmm/clouds": {
      "get": {
        "operationId": "Clouds_ListBySubscription",
        "tags": [
          "Clouds"
        ],
        "summary": "Implements GET Clouds in a subscription.",
        "description": "List of Clouds in a subscription.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Cloud list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Cloud items on this page",
                  "items": {
                    "type": "object",
                    "description": "The Clouds resource definition.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "inventoryItemId": {
                            "type": "string",
                            "description": "Gets or sets the inventory Item ID for the resource."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "Unique ID of the cloud.",
                            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
                          },
                          "vmmServerId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "ARM Id of the vmmServer resource in which this resource resides.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.ScVmm/vmmServers"
                                }
                              ]
                            }
                          },
                          "cloudName": {
                            "type": "string",
                            "description": "Name of the cloud in VmmServer.",
                            "readOnly": true
                          },
                          "cloudCapacity": {
                            "description": "Capacity of the cloud.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "cpuCount": {
                                "type": "integer",
                                "format": "int64",
                                "description": "CPUCount specifies the maximum number of CPUs that can be allocated in the cloud.",
                                "readOnly": true
                              },
                              "memoryMB": {
                                "type": "integer",
                                "format": "int64",
                                "description": "MemoryMB specifies a memory usage limit in megabytes.",
                                "readOnly": true
                              },
                              "vmCount": {
                                "type": "integer",
                                "format": "int64",
                                "description": "VMCount gives the max number of VMs that can be deployed in the cloud.",
                                "readOnly": true
                              },
                              "storageGB": {
                                "type": "integer",
                                "format": "int64",
                                "description": "StorageGB gives the storage in GB present in the cloud.",
                                "readOnly": true
                              }
                            }
                          },
                          "storageQoSPolicies": {
                            "type": "array",
                            "description": "List of QoS policies available for the cloud.",
                            "items": {
                              "type": "object",
                              "description": "The StorageQoSPolicy definition.",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the policy."
                                },
                                "id": {
                                  "type": "string",
                                  "description": "The ID of the QoS policy."
                                },
                                "iopsMaximum": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The maximum IO operations per second."
                                },
                                "iopsMinimum": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The minimum IO operations per second."
                                },
                                "bandwidthLimit": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The Bandwidth Limit for internet traffic."
                                },
                                "policyId": {
                                  "type": "string",
                                  "description": "The underlying policy."
                                }
                              }
                            },
                            "readOnly": true,
                            "x-ms-client-name": "storageQosPolicies"
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the resource.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted",
                              "Created"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The resource is provisioning."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The resource is updating."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The resource is being deleted."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "The resource has been accepted."
                                },
                                {
                                  "name": "Created",
                                  "value": "Created",
                                  "description": "The resource was created."
                                }
                              ]
                            }
                          }
                        }
                      },
                      "extendedLocation": {
                        "description": "The extended location.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The extended location type."
                          },
                          "name": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "The extended location name.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.ExtendedLocation/customLocations"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "extendedLocation"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items",
                  "readOnly": true
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ScVmm/virtualMachineTemplates": {
      "get": {
        "operationId": "VirtualMachineTemplates_ListBySubscription",
        "tags": [
          "VirtualMachineTemplates"
        ],
        "summary": "Implements GET VirtualMachineTemplates in a subscription.",
        "description": "List of VirtualMachineTemplates in a subscription.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a VirtualMachineTemplate list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The VirtualMachineTemplate items on this page",
                  "items": {
                    "type": "object",
                    "description": "The VirtualMachineTemplates resource definition.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "inventoryItemId": {
                            "type": "string",
                            "description": "Gets or sets the inventory Item ID for the resource."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "Unique ID of the virtual machine template.",
                            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
                          },
                          "vmmServerId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "ARM Id of the vmmServer resource in which this resource resides.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.ScVmm/vmmServers"
                                }
                              ]
                            }
                          },
                          "osType": {
                            "description": "Gets the type of the os.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Windows",
                              "Linux",
                              "Other"
                            ],
                            "x-ms-enum": {
                              "name": "OsType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Windows",
                                  "value": "Windows",
                                  "description": "Windows operating system."
                                },
                                {
                                  "name": "Linux",
                                  "value": "Linux",
                                  "description": "Linux operating system."
                                },
                                {
                                  "name": "Other",
                                  "value": "Other",
                                  "description": "Other operating system."
                                }
                              ]
                            }
                          },
                          "osName": {
                            "type": "string",
                            "description": "Gets os name.",
                            "readOnly": true
                          },
                          "computerName": {
                            "type": "string",
                            "description": "Gets computer name.",
                            "readOnly": true
                          },
                          "memoryMB": {
                            "type": "integer",
                            "format": "int32",
                            "description": "MemoryMB is the desired size of a virtual machine's memory, in MB.",
                            "readOnly": true
                          },
                          "cpuCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Gets the desired number of vCPUs for the vm.",
                            "readOnly": true
                          },
                          "limitCpuForMigration": {
                            "description": "Gets a value indicating whether to enable processor compatibility mode for live migration of VMs.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "true",
                              "false"
                            ],
                            "x-ms-enum": {
                              "name": "LimitCpuForMigration",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "true",
                                  "value": "true",
                                  "description": "Enable limit CPU for migration."
                                },
                                {
                                  "name": "false",
                                  "value": "false",
                                  "description": "Disable limit CPU for migration."
                                }
                              ]
                            }
                          },
                          "dynamicMemoryEnabled": {
                            "description": "Gets a value indicating whether to enable dynamic memory or not.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "true",
                              "false"
                            ],
                            "x-ms-enum": {
                              "name": "DynamicMemoryEnabled",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "true",
                                  "value": "true",
                                  "description": "Enable dynamic memory."
                                },
                                {
                                  "name": "false",
                                  "value": "false",
                                  "description": "Disable dynamic memory."
                                }
                              ]
                            }
                          },
                          "isCustomizable": {
                            "description": "Gets a value indicating whether the vm template is customizable or not.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "true",
                              "false"
                            ],
                            "x-ms-enum": {
                              "name": "IsCustomizable",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "true",
                                  "value": "true",
                                  "description": "Enable customizable."
                                },
                                {
                                  "name": "false",
                                  "value": "false",
                                  "description": "Disable customizable."
                                }
                              ]
                            }
                          },
                          "dynamicMemoryMaxMB": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Gets the max dynamic memory for the vm.",
                            "readOnly": true
                          },
                          "dynamicMemoryMinMB": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Gets the min dynamic memory for the vm.",
                            "readOnly": true
                          },
                          "isHighlyAvailable": {
                            "description": "Gets highly available property.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "true",
                              "false"
                            ],
                            "x-ms-enum": {
                              "name": "IsHighlyAvailable",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "true",
                                  "value": "true",
                                  "description": "Enable highly available."
                                },
                                {
                                  "name": "false",
                                  "value": "false",
                                  "description": "Disable highly available."
                                }
                              ]
                            }
                          },
                          "generation": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Gets the generation for the vm.",
                            "readOnly": true
                          },
                          "networkInterfaces": {
                            "type": "array",
                            "description": "Gets the network interfaces of the template.",
                            "items": {
                              "type": "object",
                              "description": "Network Interface model",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Gets or sets the name of the network interface."
                                },
                                "displayName": {
                                  "type": "string",
                                  "description": "Gets the display name of the network interface as shown in the vmmServer. This is the fallback label for a NIC when the name is not set.",
                                  "readOnly": true
                                },
                                "ipv4Addresses": {
                                  "type": "array",
                                  "description": "Gets the nic ipv4 addresses.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "readOnly": true
                                },
                                "ipv6Addresses": {
                                  "type": "array",
                                  "description": "Gets the nic ipv6 addresses.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "readOnly": true
                                },
                                "macAddress": {
                                  "type": "string",
                                  "description": "Gets or sets the nic MAC address."
                                },
                                "virtualNetworkId": {
                                  "type": "string",
                                  "format": "arm-id",
                                  "description": "Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.",
                                  "x-ms-arm-id-details": {
                                    "allowedResources": [
                                      {
                                        "type": "Microsoft.ScVmm/virtualNetwork"
                                      }
                                    ]
                                  }
                                },
                                "networkName": {
                                  "type": "string",
                                  "description": "Gets the name of the virtual network in vmmServer that the nic is connected to.",
                                  "readOnly": true
                                },
                                "ipv4AddressType": {
                                  "description": "Gets or sets the ipv4 address type.",
                                  "type": "string",
                                  "enum": [
                                    "Dynamic",
                                    "Static"
                                  ],
                                  "x-ms-enum": {
                                    "name": "AllocationMethod",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Dynamic",
                                        "value": "Dynamic",
                                        "description": "Dynamically allocated address."
                                      },
                                      {
                                        "name": "Static",
                                        "value": "Static",
                                        "description": "Statically allocated address."
                                      }
                                    ]
                                  }
                                },
                                "ipv6AddressType": {
                                  "description": "Gets or sets the ipv6 address type.",
                                  "type": "string",
                                  "enum": [
                                    "Dynamic",
                                    "Static"
                                  ],
                                  "x-ms-enum": {
                                    "name": "AllocationMethod",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Dynamic",
                                        "value": "Dynamic",
                                        "description": "Dynamically allocated address."
                                      },
                                      {
                                        "name": "Static",
                                        "value": "Static",
                                        "description": "Statically allocated address."
                                      }
                                    ]
                                  }
                                },
                                "macAddressType": {
                                  "description": "Gets or sets the mac address type.",
                                  "type": "string",
                                  "enum": [
                                    "Dynamic",
                                    "Static"
                                  ],
                                  "x-ms-enum": {
                                    "name": "AllocationMethod",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Dynamic",
                                        "value": "Dynamic",
                                        "description": "Dynamically allocated address."
                                      },
                                      {
                                        "name": "Static",
                                        "value": "Static",
                                        "description": "Statically allocated address."
                                      }
                                    ]
                                  }
                                },
                                "nicId": {
                                  "type": "string",
                                  "description": "Gets or sets the nic id."
                                }
                              }
                            },
                            "readOnly": true,
                            "x-ms-identifiers": [
                              "name",
                              "nicId"
                            ]
                          },
                          "disks": {
                            "type": "array",
                            "description": "Gets the disks of the template.",
                            "items": {
                              "type": "object",
                              "description": "Virtual disk model",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Gets or sets the name of the disk."
                                },
                                "displayName": {
                                  "type": "string",
                                  "description": "Gets the display name of the virtual disk as shown in the vmmServer. This is the fallback label for a disk when the name is not set.",
                                  "readOnly": true
                                },
                                "diskId": {
                                  "type": "string",
                                  "description": "Gets or sets the disk id."
                                },
                                "diskSizeGB": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Gets or sets the disk total size."
                                },
                                "maxDiskSizeGB": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Gets the max disk size.",
                                  "readOnly": true
                                },
                                "bus": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Gets or sets the disk bus."
                                },
                                "lun": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Gets or sets the disk lun."
                                },
                                "busType": {
                                  "type": "string",
                                  "description": "Gets or sets the disk bus type."
                                },
                                "vhdType": {
                                  "type": "string",
                                  "description": "Gets or sets the disk vhd type."
                                },
                                "volumeType": {
                                  "type": "string",
                                  "description": "Gets the disk volume type.",
                                  "readOnly": true
                                },
                                "vhdFormatType": {
                                  "type": "string",
                                  "description": "Gets the disk vhd format type.",
                                  "readOnly": true
                                },
                                "templateDiskId": {
                                  "type": "string",
                                  "description": "Gets or sets the disk id in the template.",
                                  "x-ms-mutability": [
                                    "read",
                                    "create"
                                  ]
                                },
                                "storageQoSPolicy": {
                                  "description": "The QoS policy for the disk.",
                                  "x-ms-client-name": "storageQosPolicy",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the policy."
                                    },
                                    "id": {
                                      "type": "string",
                                      "description": "The ID of the QoS policy."
                                    }
                                  }
                                },
                                "createDiffDisk": {
                                  "description": "Gets or sets a value indicating diff disk.",
                                  "x-ms-mutability": [
                                    "read",
                                    "create"
                                  ],
                                  "type": "string",
                                  "enum": [
                                    "true",
                                    "false"
                                  ],
                                  "x-ms-enum": {
                                    "name": "CreateDiffDisk",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "true",
                                        "value": "true",
                                        "description": "Enable create diff disk."
                                      },
                                      {
                                        "name": "false",
                                        "value": "false",
                                        "description": "Disable create diff disk."
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "readOnly": true,
                            "x-ms-identifiers": [
                              "diskId",
                              "name"
                            ]
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the resource.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted",
                              "Created"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The resource is provisioning."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The resource is updating."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The resource is being deleted."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "The resource has been accepted."
                                },
                                {
                                  "name": "Created",
                                  "value": "Created",
                                  "description": "The resource was created."
                                }
                              ]
                            }
                          }
                        }
                      },
                      "extendedLocation": {
                        "description": "The extended location.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The extended location type."
                          },
                          "name": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "The extended location name.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.ExtendedLocation/customLocations"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "extendedLocation"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items",
                  "readOnly": true
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ScVmm/virtualNetworks": {
      "get": {
        "operationId": "VirtualNetworks_ListBySubscription",
        "tags": [
          "VirtualNetworks"
        ],
        "summary": "Implements GET VirtualNetworks in a subscription.",
        "description": "List of VirtualNetworks in a subscription.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a VirtualNetwork list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The VirtualNetwork items on this page",
                  "items": {
                    "type": "object",
                    "description": "The VirtualNetworks resource definition.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "inventoryItemId": {
                            "type": "string",
                            "description": "Gets or sets the inventory Item ID for the resource."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "Unique ID of the virtual network.",
                            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
                          },
                          "vmmServerId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "ARM Id of the vmmServer resource in which this resource resides.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.ScVmm/vmmServers"
                                }
                              ]
                            }
                          },
                          "networkName": {
                            "type": "string",
                            "description": "Name of the virtual network in vmmServer.",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the resource.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted",
                              "Created"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The resource is provisioning."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The resource is updating."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The resource is being deleted."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "The resource has been accepted."
                                },
                                {
                                  "name": "Created",
                                  "value": "Created",
                                  "description": "The resource was created."
                                }
                              ]
                            }
                          }
                        }
                      },
                      "extendedLocation": {
                        "description": "The extended location.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The extended location type."
                          },
                          "name": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "The extended location name.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.ExtendedLocation/customLocations"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "extendedLocation"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items",
                  "readOnly": true
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ScVmm/vmmServers": {
      "get": {
        "operationId": "VmmServers_ListBySubscription",
        "tags": [
          "VmmServers"
        ],
        "summary": "Implements GET VmmServers in a subscription.",
        "description": "List of VmmServers in a subscription.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a VmmServer list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The VmmServer items on this page",
                  "items": {
                    "type": "object",
                    "description": "The VmmServers resource definition.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "credentials": {
                            "description": "Credentials to connect to VmmServer.",
                            "type": "object",
                            "properties": {
                              "username": {
                                "type": "string",
                                "description": "Username to use to connect to VmmServer."
                              },
                              "password": {
                                "type": "string",
                                "format": "password",
                                "description": "Password to use to connect to VmmServer.",
                                "x-ms-mutability": [
                                  "update",
                                  "create"
                                ],
                                "x-ms-secret": true
                              }
                            }
                          },
                          "fqdn": {
                            "type": "string",
                            "description": "Fqdn is the hostname/ip of the vmmServer.",
                            "minLength": 1
                          },
                          "port": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Port is the port on which the vmmServer is listening.",
                            "minimum": 1,
                            "maximum": 65535
                          },
                          "connectionStatus": {
                            "type": "string",
                            "description": "Gets the connection status to the vmmServer.",
                            "readOnly": true
                          },
                          "errorMessage": {
                            "type": "string",
                            "description": "Gets any error message if connection to vmmServer is having any issue.",
                            "readOnly": true
                          },
                          "uuid": {
                            "type": "string",
                            "description": "Unique ID of vmmServer.",
                            "readOnly": true
                          },
                          "version": {
                            "type": "string",
                            "description": "Version is the version of the vmmSever.",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the resource.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted",
                              "Created"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The resource is provisioning."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The resource is updating."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The resource is being deleted."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "The resource has been accepted."
                                },
                                {
                                  "name": "Created",
                                  "value": "Created",
                                  "description": "The resource was created."
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "fqdn"
                        ]
                      },
                      "extendedLocation": {
                        "description": "The extended location.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The extended location type."
                          },
                          "name": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "The extended location name.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.ExtendedLocation/customLocations"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "extendedLocation"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items",
                  "readOnly": true
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/availabilitySets": {
      "get": {
        "operationId": "AvailabilitySets_ListByResourceGroup",
        "tags": [
          "AvailabilitySets"
        ],
        "summary": "Implements GET AvailabilitySets in a resource group.",
        "description": "List of AvailabilitySets in a resource group.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a AvailabilitySet list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The AvailabilitySet items on this page",
                  "items": {
                    "type": "object",
                    "description": "The AvailabilitySets resource definition.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "availabilitySetName": {
                            "type": "string",
                            "description": "Name of the availability set.",
                            "minLength": 1
                          },
                          "vmmServerId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "ARM Id of the vmmServer resource in which this resource resides.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.ScVmm/vmmServers"
                                }
                              ]
                            }
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the resource.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted",
                              "Created"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The resource is provisioning."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The resource is updating."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The resource is being deleted."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "The resource has been accepted."
                                },
                                {
                                  "name": "Created",
                                  "value": "Created",
                                  "description": "The resource was created."
                                }
                              ]
                            }
                          }
                        }
                      },
                      "extendedLocation": {
                        "description": "The extended location.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The extended location type."
                          },
                          "name": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "The extended location name.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.ExtendedLocation/customLocations"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "extendedLocation"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items",
                  "readOnly": true
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/availabilitySets/{availabilitySetResourceName}": {
      "get": {
        "operationId": "AvailabilitySets_Get",
        "tags": [
          "AvailabilitySets"
        ],
        "summary": "Gets an AvailabilitySet.",
        "description": "Implements AvailabilitySet GET method.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "availabilitySetResourceName",
            "in": "path",
            "description": "Name of the AvailabilitySet.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 54,
            "pattern": "[a-zA-Z0-9-_\\.]"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The AvailabilitySets resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "availabilitySetName": {
                      "type": "string",
                      "description": "Name of the availability set.",
                      "minLength": 1
                    },
                    "vmmServerId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "ARM Id of the vmmServer resource in which this resource resides.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ScVmm/vmmServers"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "description": "The extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "The extended location name.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ExtendedLocation/customLocations"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "extendedLocation"
              ]
            }
          }
        }
      },
      "put": {
        "operationId": "AvailabilitySets_CreateOrUpdate",
        "tags": [
          "AvailabilitySets"
        ],
        "summary": "Implements AvailabilitySets PUT method.",
        "description": "Onboards the ScVmm availability set as an Azure resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "availabilitySetResourceName",
            "in": "path",
            "description": "Name of the AvailabilitySet.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 54,
            "pattern": "[a-zA-Z0-9-_\\.]"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The AvailabilitySets resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "availabilitySetName": {
                      "type": "string",
                      "description": "Name of the availability set.",
                      "minLength": 1
                    },
                    "vmmServerId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "ARM Id of the vmmServer resource in which this resource resides.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ScVmm/vmmServers"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "description": "The extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "The extended location name.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ExtendedLocation/customLocations"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "extendedLocation"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'AvailabilitySet' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "The AvailabilitySets resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "availabilitySetName": {
                      "type": "string",
                      "description": "Name of the availability set.",
                      "minLength": 1
                    },
                    "vmmServerId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "ARM Id of the vmmServer resource in which this resource resides.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ScVmm/vmmServers"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "description": "The extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "The extended location name.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ExtendedLocation/customLocations"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "extendedLocation"
              ]
            }
          },
          "201": {
            "description": "Resource 'AvailabilitySet' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "The AvailabilitySets resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "availabilitySetName": {
                      "type": "string",
                      "description": "Name of the availability set.",
                      "minLength": 1
                    },
                    "vmmServerId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "ARM Id of the vmmServer resource in which this resource resides.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ScVmm/vmmServers"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "description": "The extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "The extended location name.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ExtendedLocation/customLocations"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "extendedLocation"
              ]
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "AvailabilitySets_Update",
        "tags": [
          "AvailabilitySets"
        ],
        "summary": "Implements the AvailabilitySets PATCH method.",
        "description": "Updates the AvailabilitySets resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "availabilitySetResourceName",
            "in": "path",
            "description": "Name of the AvailabilitySet.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 54,
            "pattern": "[a-zA-Z0-9-_\\.]"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The type used for updating tags in AvailabilitySet resources.",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The AvailabilitySets resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "availabilitySetName": {
                      "type": "string",
                      "description": "Name of the availability set.",
                      "minLength": 1
                    },
                    "vmmServerId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "ARM Id of the vmmServer resource in which this resource resides.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ScVmm/vmmServers"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "description": "The extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "The extended location name.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ExtendedLocation/customLocations"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "extendedLocation"
              ]
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "AvailabilitySets_Delete",
        "tags": [
          "AvailabilitySets"
        ],
        "summary": "Implements AvailabilitySet DELETE method.",
        "description": "Deregisters the ScVmm availability set from Azure.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Forces the resource to be deleted.",
            "required": false,
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "x-ms-enum": {
              "name": "ForceDelete",
              "modelAsString": true,
              "values": [
                {
                  "name": "true",
                  "value": "true",
                  "description": "Enable force delete."
                },
                {
                  "name": "false",
                  "value": "false",
                  "description": "Disable force delete."
                }
              ]
            },
            "x-ms-parameter-location": "method"
          },
          {
            "name": "availabilitySetResourceName",
            "in": "path",
            "description": "Name of the AvailabilitySet.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 54,
            "pattern": "[a-zA-Z0-9-_\\.]"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/clouds": {
      "get": {
        "operationId": "Clouds_ListByResourceGroup",
        "tags": [
          "Clouds"
        ],
        "summary": "Implements GET Clouds in a resource group.",
        "description": "List of Clouds in a resource group.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Cloud list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Cloud items on this page",
                  "items": {
                    "type": "object",
                    "description": "The Clouds resource definition.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "inventoryItemId": {
                            "type": "string",
                            "description": "Gets or sets the inventory Item ID for the resource."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "Unique ID of the cloud.",
                            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
                          },
                          "vmmServerId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "ARM Id of the vmmServer resource in which this resource resides.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.ScVmm/vmmServers"
                                }
                              ]
                            }
                          },
                          "cloudName": {
                            "type": "string",
                            "description": "Name of the cloud in VmmServer.",
                            "readOnly": true
                          },
                          "cloudCapacity": {
                            "description": "Capacity of the cloud.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "cpuCount": {
                                "type": "integer",
                                "format": "int64",
                                "description": "CPUCount specifies the maximum number of CPUs that can be allocated in the cloud.",
                                "readOnly": true
                              },
                              "memoryMB": {
                                "type": "integer",
                                "format": "int64",
                                "description": "MemoryMB specifies a memory usage limit in megabytes.",
                                "readOnly": true
                              },
                              "vmCount": {
                                "type": "integer",
                                "format": "int64",
                                "description": "VMCount gives the max number of VMs that can be deployed in the cloud.",
                                "readOnly": true
                              },
                              "storageGB": {
                                "type": "integer",
                                "format": "int64",
                                "description": "StorageGB gives the storage in GB present in the cloud.",
                                "readOnly": true
                              }
                            }
                          },
                          "storageQoSPolicies": {
                            "type": "array",
                            "description": "List of QoS policies available for the cloud.",
                            "items": {
                              "type": "object",
                              "description": "The StorageQoSPolicy definition.",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the policy."
                                },
                                "id": {
                                  "type": "string",
                                  "description": "The ID of the QoS policy."
                                },
                                "iopsMaximum": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The maximum IO operations per second."
                                },
                                "iopsMinimum": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The minimum IO operations per second."
                                },
                                "bandwidthLimit": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The Bandwidth Limit for internet traffic."
                                },
                                "policyId": {
                                  "type": "string",
                                  "description": "The underlying policy."
                                }
                              }
                            },
                            "readOnly": true,
                            "x-ms-client-name": "storageQosPolicies"
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the resource.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted",
                              "Created"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The resource is provisioning."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The resource is updating."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The resource is being deleted."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "The resource has been accepted."
                                },
                                {
                                  "name": "Created",
                                  "value": "Created",
                                  "description": "The resource was created."
                                }
                              ]
                            }
                          }
                        }
                      },
                      "extendedLocation": {
                        "description": "The extended location.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The extended location type."
                          },
                          "name": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "The extended location name.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.ExtendedLocation/customLocations"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "extendedLocation"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items",
                  "readOnly": true
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/clouds/{cloudResourceName}": {
      "get": {
        "operationId": "Clouds_Get",
        "tags": [
          "Clouds"
        ],
        "summary": "Gets a Cloud.",
        "description": "Implements Cloud GET method.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "cloudResourceName",
            "in": "path",
            "description": "Name of the Cloud.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 54,
            "pattern": "[a-zA-Z0-9-_\\.]"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The Clouds resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "inventoryItemId": {
                      "type": "string",
                      "description": "Gets or sets the inventory Item ID for the resource."
                    },
                    "uuid": {
                      "type": "string",
                      "description": "Unique ID of the cloud.",
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
                    },
                    "vmmServerId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "ARM Id of the vmmServer resource in which this resource resides.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ScVmm/vmmServers"
                          }
                        ]
                      }
                    },
                    "cloudName": {
                      "type": "string",
                      "description": "Name of the cloud in VmmServer.",
                      "readOnly": true
                    },
                    "cloudCapacity": {
                      "description": "Capacity of the cloud.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "cpuCount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "CPUCount specifies the maximum number of CPUs that can be allocated in the cloud.",
                          "readOnly": true
                        },
                        "memoryMB": {
                          "type": "integer",
                          "format": "int64",
                          "description": "MemoryMB specifies a memory usage limit in megabytes.",
                          "readOnly": true
                        },
                        "vmCount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "VMCount gives the max number of VMs that can be deployed in the cloud.",
                          "readOnly": true
                        },
                        "storageGB": {
                          "type": "integer",
                          "format": "int64",
                          "description": "StorageGB gives the storage in GB present in the cloud.",
                          "readOnly": true
                        }
                      }
                    },
                    "storageQoSPolicies": {
                      "type": "array",
                      "description": "List of QoS policies available for the cloud.",
                      "items": {
                        "type": "object",
                        "description": "The StorageQoSPolicy definition.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the policy."
                          },
                          "id": {
                            "type": "string",
                            "description": "The ID of the QoS policy."
                          },
                          "iopsMaximum": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The maximum IO operations per second."
                          },
                          "iopsMinimum": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The minimum IO operations per second."
                          },
                          "bandwidthLimit": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The Bandwidth Limit for internet traffic."
                          },
                          "policyId": {
                            "type": "string",
                            "description": "The underlying policy."
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-client-name": "storageQosPolicies"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "description": "The extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "The extended location name.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ExtendedLocation/customLocations"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "extendedLocation"
              ]
            }
          }
        }
      },
      "put": {
        "operationId": "Clouds_CreateOrUpdate",
        "tags": [
          "Clouds"
        ],
        "summary": "Implements Clouds PUT method.",
        "description": "Onboards the ScVmm fabric cloud as an Azure cloud resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "cloudResourceName",
            "in": "path",
            "description": "Name of the Cloud.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 54,
            "pattern": "[a-zA-Z0-9-_\\.]"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The Clouds resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "inventoryItemId": {
                      "type": "string",
                      "description": "Gets or sets the inventory Item ID for the resource."
                    },
                    "uuid": {
                      "type": "string",
                      "description": "Unique ID of the cloud.",
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
                    },
                    "vmmServerId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "ARM Id of the vmmServer resource in which this resource resides.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ScVmm/vmmServers"
                          }
                        ]
                      }
                    },
                    "cloudName": {
                      "type": "string",
                      "description": "Name of the cloud in VmmServer.",
                      "readOnly": true
                    },
                    "cloudCapacity": {
                      "description": "Capacity of the cloud.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "cpuCount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "CPUCount specifies the maximum number of CPUs that can be allocated in the cloud.",
                          "readOnly": true
                        },
                        "memoryMB": {
                          "type": "integer",
                          "format": "int64",
                          "description": "MemoryMB specifies a memory usage limit in megabytes.",
                          "readOnly": true
                        },
                        "vmCount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "VMCount gives the max number of VMs that can be deployed in the cloud.",
                          "readOnly": true
                        },
                        "storageGB": {
                          "type": "integer",
                          "format": "int64",
                          "description": "StorageGB gives the storage in GB present in the cloud.",
                          "readOnly": true
                        }
                      }
                    },
                    "storageQoSPolicies": {
                      "type": "array",
                      "description": "List of QoS policies available for the cloud.",
                      "items": {
                        "type": "object",
                        "description": "The StorageQoSPolicy definition.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the policy."
                          },
                          "id": {
                            "type": "string",
                            "description": "The ID of the QoS policy."
                          },
                          "iopsMaximum": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The maximum IO operations per second."
                          },
                          "iopsMinimum": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The minimum IO operations per second."
                          },
                          "bandwidthLimit": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The Bandwidth Limit for internet traffic."
                          },
                          "policyId": {
                            "type": "string",
                            "description": "The underlying policy."
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-client-name": "storageQosPolicies"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "description": "The extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "The extended location name.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ExtendedLocation/customLocations"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "extendedLocation"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Cloud' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "The Clouds resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "inventoryItemId": {
                      "type": "string",
                      "description": "Gets or sets the inventory Item ID for the resource."
                    },
                    "uuid": {
                      "type": "string",
                      "description": "Unique ID of the cloud.",
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
                    },
                    "vmmServerId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "ARM Id of the vmmServer resource in which this resource resides.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ScVmm/vmmServers"
                          }
                        ]
                      }
                    },
                    "cloudName": {
                      "type": "string",
                      "description": "Name of the cloud in VmmServer.",
                      "readOnly": true
                    },
                    "cloudCapacity": {
                      "description": "Capacity of the cloud.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "cpuCount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "CPUCount specifies the maximum number of CPUs that can be allocated in the cloud.",
                          "readOnly": true
                        },
                        "memoryMB": {
                          "type": "integer",
                          "format": "int64",
                          "description": "MemoryMB specifies a memory usage limit in megabytes.",
                          "readOnly": true
                        },
                        "vmCount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "VMCount gives the max number of VMs that can be deployed in the cloud.",
                          "readOnly": true
                        },
                        "storageGB": {
                          "type": "integer",
                          "format": "int64",
                          "description": "StorageGB gives the storage in GB present in the cloud.",
                          "readOnly": true
                        }
                      }
                    },
                    "storageQoSPolicies": {
                      "type": "array",
                      "description": "List of QoS policies available for the cloud.",
                      "items": {
                        "type": "object",
                        "description": "The StorageQoSPolicy definition.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the policy."
                          },
                          "id": {
                            "type": "string",
                            "description": "The ID of the QoS policy."
                          },
                          "iopsMaximum": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The maximum IO operations per second."
                          },
                          "iopsMinimum": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The minimum IO operations per second."
                          },
                          "bandwidthLimit": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The Bandwidth Limit for internet traffic."
                          },
                          "policyId": {
                            "type": "string",
                            "description": "The underlying policy."
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-client-name": "storageQosPolicies"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "description": "The extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "The extended location name.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ExtendedLocation/customLocations"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "extendedLocation"
              ]
            }
          },
          "201": {
            "description": "Resource 'Cloud' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "The Clouds resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "inventoryItemId": {
                      "type": "string",
                      "description": "Gets or sets the inventory Item ID for the resource."
                    },
                    "uuid": {
                      "type": "string",
                      "description": "Unique ID of the cloud.",
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
                    },
                    "vmmServerId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "ARM Id of the vmmServer resource in which this resource resides.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ScVmm/vmmServers"
                          }
                        ]
                      }
                    },
                    "cloudName": {
                      "type": "string",
                      "description": "Name of the cloud in VmmServer.",
                      "readOnly": true
                    },
                    "cloudCapacity": {
                      "description": "Capacity of the cloud.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "cpuCount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "CPUCount specifies the maximum number of CPUs that can be allocated in the cloud.",
                          "readOnly": true
                        },
                        "memoryMB": {
                          "type": "integer",
                          "format": "int64",
                          "description": "MemoryMB specifies a memory usage limit in megabytes.",
                          "readOnly": true
                        },
                        "vmCount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "VMCount gives the max number of VMs that can be deployed in the cloud.",
                          "readOnly": true
                        },
                        "storageGB": {
                          "type": "integer",
                          "format": "int64",
                          "description": "StorageGB gives the storage in GB present in the cloud.",
                          "readOnly": true
                        }
                      }
                    },
                    "storageQoSPolicies": {
                      "type": "array",
                      "description": "List of QoS policies available for the cloud.",
                      "items": {
                        "type": "object",
                        "description": "The StorageQoSPolicy definition.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the policy."
                          },
                          "id": {
                            "type": "string",
                            "description": "The ID of the QoS policy."
                          },
                          "iopsMaximum": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The maximum IO operations per second."
                          },
                          "iopsMinimum": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The minimum IO operations per second."
                          },
                          "bandwidthLimit": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The Bandwidth Limit for internet traffic."
                          },
                          "policyId": {
                            "type": "string",
                            "description": "The underlying policy."
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-client-name": "storageQosPolicies"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "description": "The extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "The extended location name.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ExtendedLocation/customLocations"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "extendedLocation"
              ]
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Clouds_Update",
        "tags": [
          "Clouds"
        ],
        "summary": "Implements the Clouds PATCH method.",
        "description": "Updates the Clouds resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "cloudResourceName",
            "in": "path",
            "description": "Name of the Cloud.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 54,
            "pattern": "[a-zA-Z0-9-_\\.]"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The type used for updating tags in Cloud resources.",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The Clouds resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "inventoryItemId": {
                      "type": "string",
                      "description": "Gets or sets the inventory Item ID for the resource."
                    },
                    "uuid": {
                      "type": "string",
                      "description": "Unique ID of the cloud.",
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
                    },
                    "vmmServerId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "ARM Id of the vmmServer resource in which this resource resides.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ScVmm/vmmServers"
                          }
                        ]
                      }
                    },
                    "cloudName": {
                      "type": "string",
                      "description": "Name of the cloud in VmmServer.",
                      "readOnly": true
                    },
                    "cloudCapacity": {
                      "description": "Capacity of the cloud.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "cpuCount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "CPUCount specifies the maximum number of CPUs that can be allocated in the cloud.",
                          "readOnly": true
                        },
                        "memoryMB": {
                          "type": "integer",
                          "format": "int64",
                          "description": "MemoryMB specifies a memory usage limit in megabytes.",
                          "readOnly": true
                        },
                        "vmCount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "VMCount gives the max number of VMs that can be deployed in the cloud.",
                          "readOnly": true
                        },
                        "storageGB": {
                          "type": "integer",
                          "format": "int64",
                          "description": "StorageGB gives the storage in GB present in the cloud.",
                          "readOnly": true
                        }
                      }
                    },
                    "storageQoSPolicies": {
                      "type": "array",
                      "description": "List of QoS policies available for the cloud.",
                      "items": {
                        "type": "object",
                        "description": "The StorageQoSPolicy definition.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the policy."
                          },
                          "id": {
                            "type": "string",
                            "description": "The ID of the QoS policy."
                          },
                          "iopsMaximum": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The maximum IO operations per second."
                          },
                          "iopsMinimum": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The minimum IO operations per second."
                          },
                          "bandwidthLimit": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The Bandwidth Limit for internet traffic."
                          },
                          "policyId": {
                            "type": "string",
                            "description": "The underlying policy."
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-client-name": "storageQosPolicies"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "description": "The extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "The extended location name.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ExtendedLocation/customLocations"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "extendedLocation"
              ]
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Clouds_Delete",
        "tags": [
          "Clouds"
        ],
        "summary": "Implements Cloud resource DELETE method.",
        "description": "Deregisters the ScVmm fabric cloud from Azure.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Forces the resource to be deleted.",
            "required": false,
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "x-ms-enum": {
              "name": "ForceDelete",
              "modelAsString": true,
              "values": [
                {
                  "name": "true",
                  "value": "true",
                  "description": "Enable force delete."
                },
                {
                  "name": "false",
                  "value": "false",
                  "description": "Disable force delete."
                }
              ]
            },
            "x-ms-parameter-location": "method"
          },
          {
            "name": "cloudResourceName",
            "in": "path",
            "description": "Name of the Cloud.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 54,
            "pattern": "[a-zA-Z0-9-_\\.]"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/virtualMachineTemplates": {
      "get": {
        "operationId": "VirtualMachineTemplates_ListByResourceGroup",
        "tags": [
          "VirtualMachineTemplates"
        ],
        "summary": "Implements GET VirtualMachineTemplates in a resource group.",
        "description": "List of VirtualMachineTemplates in a resource group.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a VirtualMachineTemplate list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The VirtualMachineTemplate items on this page",
                  "items": {
                    "type": "object",
                    "description": "The VirtualMachineTemplates resource definition.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "inventoryItemId": {
                            "type": "string",
                            "description": "Gets or sets the inventory Item ID for the resource."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "Unique ID of the virtual machine template.",
                            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
                          },
                          "vmmServerId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "ARM Id of the vmmServer resource in which this resource resides.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.ScVmm/vmmServers"
                                }
                              ]
                            }
                          },
                          "osType": {
                            "description": "Gets the type of the os.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Windows",
                              "Linux",
                              "Other"
                            ],
                            "x-ms-enum": {
                              "name": "OsType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Windows",
                                  "value": "Windows",
                                  "description": "Windows operating system."
                                },
                                {
                                  "name": "Linux",
                                  "value": "Linux",
                                  "description": "Linux operating system."
                                },
                                {
                                  "name": "Other",
                                  "value": "Other",
                                  "description": "Other operating system."
                                }
                              ]
                            }
                          },
                          "osName": {
                            "type": "string",
                            "description": "Gets os name.",
                            "readOnly": true
                          },
                          "computerName": {
                            "type": "string",
                            "description": "Gets computer name.",
                            "readOnly": true
                          },
                          "memoryMB": {
                            "type": "integer",
                            "format": "int32",
                            "description": "MemoryMB is the desired size of a virtual machine's memory, in MB.",
                            "readOnly": true
                          },
                          "cpuCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Gets the desired number of vCPUs for the vm.",
                            "readOnly": true
                          },
                          "limitCpuForMigration": {
                            "description": "Gets a value indicating whether to enable processor compatibility mode for live migration of VMs.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "true",
                              "false"
                            ],
                            "x-ms-enum": {
                              "name": "LimitCpuForMigration",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "true",
                                  "value": "true",
                                  "description": "Enable limit CPU for migration."
                                },
                                {
                                  "name": "false",
                                  "value": "false",
                                  "description": "Disable limit CPU for migration."
                                }
                              ]
                            }
                          },
                          "dynamicMemoryEnabled": {
                            "description": "Gets a value indicating whether to enable dynamic memory or not.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "true",
                              "false"
                            ],
                            "x-ms-enum": {
                              "name": "DynamicMemoryEnabled",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "true",
                                  "value": "true",
                                  "description": "Enable dynamic memory."
                                },
                                {
                                  "name": "false",
                                  "value": "false",
                                  "description": "Disable dynamic memory."
                                }
                              ]
                            }
                          },
                          "isCustomizable": {
                            "description": "Gets a value indicating whether the vm template is customizable or not.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "true",
                              "false"
                            ],
                            "x-ms-enum": {
                              "name": "IsCustomizable",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "true",
                                  "value": "true",
                                  "description": "Enable customizable."
                                },
                                {
                                  "name": "false",
                                  "value": "false",
                                  "description": "Disable customizable."
                                }
                              ]
                            }
                          },
                          "dynamicMemoryMaxMB": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Gets the max dynamic memory for the vm.",
                            "readOnly": true
                          },
                          "dynamicMemoryMinMB": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Gets the min dynamic memory for the vm.",
                            "readOnly": true
                          },
                          "isHighlyAvailable": {
                            "description": "Gets highly available property.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "true",
                              "false"
                            ],
                            "x-ms-enum": {
                              "name": "IsHighlyAvailable",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "true",
                                  "value": "true",
                                  "description": "Enable highly available."
                                },
                                {
                                  "name": "false",
                                  "value": "false",
                                  "description": "Disable highly available."
                                }
                              ]
                            }
                          },
                          "generation": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Gets the generation for the vm.",
                            "readOnly": true
                          },
                          "networkInterfaces": {
                            "type": "array",
                            "description": "Gets the network interfaces of the template.",
                            "items": {
                              "type": "object",
                              "description": "Network Interface model",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Gets or sets the name of the network interface."
                                },
                                "displayName": {
                                  "type": "string",
                                  "description": "Gets the display name of the network interface as shown in the vmmServer. This is the fallback label for a NIC when the name is not set.",
                                  "readOnly": true
                                },
                                "ipv4Addresses": {
                                  "type": "array",
                                  "description": "Gets the nic ipv4 addresses.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "readOnly": true
                                },
                                "ipv6Addresses": {
                                  "type": "array",
                                  "description": "Gets the nic ipv6 addresses.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "readOnly": true
                                },
                                "macAddress": {
                                  "type": "string",
                                  "description": "Gets or sets the nic MAC address."
                                },
                                "virtualNetworkId": {
                                  "type": "string",
                                  "format": "arm-id",
                                  "description": "Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.",
                                  "x-ms-arm-id-details": {
                                    "allowedResources": [
                                      {
                                        "type": "Microsoft.ScVmm/virtualNetwork"
                                      }
                                    ]
                                  }
                                },
                                "networkName": {
                                  "type": "string",
                                  "description": "Gets the name of the virtual network in vmmServer that the nic is connected to.",
                                  "readOnly": true
                                },
                                "ipv4AddressType": {
                                  "description": "Gets or sets the ipv4 address type.",
                                  "type": "string",
                                  "enum": [
                                    "Dynamic",
                                    "Static"
                                  ],
                                  "x-ms-enum": {
                                    "name": "AllocationMethod",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Dynamic",
                                        "value": "Dynamic",
                                        "description": "Dynamically allocated address."
                                      },
                                      {
                                        "name": "Static",
                                        "value": "Static",
                                        "description": "Statically allocated address."
                                      }
                                    ]
                                  }
                                },
                                "ipv6AddressType": {
                                  "description": "Gets or sets the ipv6 address type.",
                                  "type": "string",
                                  "enum": [
                                    "Dynamic",
                                    "Static"
                                  ],
                                  "x-ms-enum": {
                                    "name": "AllocationMethod",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Dynamic",
                                        "value": "Dynamic",
                                        "description": "Dynamically allocated address."
                                      },
                                      {
                                        "name": "Static",
                                        "value": "Static",
                                        "description": "Statically allocated address."
                                      }
                                    ]
                                  }
                                },
                                "macAddressType": {
                                  "description": "Gets or sets the mac address type.",
                                  "type": "string",
                                  "enum": [
                                    "Dynamic",
                                    "Static"
                                  ],
                                  "x-ms-enum": {
                                    "name": "AllocationMethod",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Dynamic",
                                        "value": "Dynamic",
                                        "description": "Dynamically allocated address."
                                      },
                                      {
                                        "name": "Static",
                                        "value": "Static",
                                        "description": "Statically allocated address."
                                      }
                                    ]
                                  }
                                },
                                "nicId": {
                                  "type": "string",
                                  "description": "Gets or sets the nic id."
                                }
                              }
                            },
                            "readOnly": true,
                            "x-ms-identifiers": [
                              "name",
                              "nicId"
                            ]
                          },
                          "disks": {
                            "type": "array",
                            "description": "Gets the disks of the template.",
                            "items": {
                              "type": "object",
                              "description": "Virtual disk model",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Gets or sets the name of the disk."
                                },
                                "displayName": {
                                  "type": "string",
                                  "description": "Gets the display name of the virtual disk as shown in the vmmServer. This is the fallback label for a disk when the name is not set.",
                                  "readOnly": true
                                },
                                "diskId": {
                                  "type": "string",
                                  "description": "Gets or sets the disk id."
                                },
                                "diskSizeGB": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Gets or sets the disk total size."
                                },
                                "maxDiskSizeGB": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Gets the max disk size.",
                                  "readOnly": true
                                },
                                "bus": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Gets or sets the disk bus."
                                },
                                "lun": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Gets or sets the disk lun."
                                },
                                "busType": {
                                  "type": "string",
                                  "description": "Gets or sets the disk bus type."
                                },
                                "vhdType": {
                                  "type": "string",
                                  "description": "Gets or sets the disk vhd type."
                                },
                                "volumeType": {
                                  "type": "string",
                                  "description": "Gets the disk volume type.",
                                  "readOnly": true
                                },
                                "vhdFormatType": {
                                  "type": "string",
                                  "description": "Gets the disk vhd format type.",
                                  "readOnly": true
                                },
                                "templateDiskId": {
                                  "type": "string",
                                  "description": "Gets or sets the disk id in the template.",
                                  "x-ms-mutability": [
                                    "read",
                                    "create"
                                  ]
                                },
                                "storageQoSPolicy": {
                                  "description": "The QoS policy for the disk.",
                                  "x-ms-client-name": "storageQosPolicy",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the policy."
                                    },
                                    "id": {
                                      "type": "string",
                                      "description": "The ID of the QoS policy."
                                    }
                                  }
                                },
                                "createDiffDisk": {
                                  "description": "Gets or sets a value indicating diff disk.",
                                  "x-ms-mutability": [
                                    "read",
                                    "create"
                                  ],
                                  "type": "string",
                                  "enum": [
                                    "true",
                                    "false"
                                  ],
                                  "x-ms-enum": {
                                    "name": "CreateDiffDisk",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "true",
                                        "value": "true",
                                        "description": "Enable create diff disk."
                                      },
                                      {
                                        "name": "false",
                                        "value": "false",
                                        "description": "Disable create diff disk."
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "readOnly": true,
                            "x-ms-identifiers": [
                              "diskId",
                              "name"
                            ]
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the resource.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted",
                              "Created"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The resource is provisioning."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The resource is updating."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The resource is being deleted."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "The resource has been accepted."
                                },
                                {
                                  "name": "Created",
                                  "value": "Created",
                                  "description": "The resource was created."
                                }
                              ]
                            }
                          }
                        }
                      },
                      "extendedLocation": {
                        "description": "The extended location.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The extended location type."
                          },
                          "name": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "The extended location name.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.ExtendedLocation/customLocations"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "extendedLocation"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items",
                  "readOnly": true
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/virtualMachineTemplates/{virtualMachineTemplateName}": {
      "get": {
        "operationId": "VirtualMachineTemplates_Get",
        "tags": [
          "VirtualMachineTemplates"
        ],
        "summary": "Gets a VirtualMachineTemplate.",
        "description": "Implements VirtualMachineTemplate GET method.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "virtualMachineTemplateName",
            "in": "path",
            "description": "Name of the VirtualMachineTemplate.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 54,
            "pattern": "[a-zA-Z0-9-_\\.]"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The VirtualMachineTemplates resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "inventoryItemId": {
                      "type": "string",
                      "description": "Gets or sets the inventory Item ID for the resource."
                    },
                    "uuid": {
                      "type": "string",
                      "description": "Unique ID of the virtual machine template.",
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
                    },
                    "vmmServerId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "ARM Id of the vmmServer resource in which this resource resides.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ScVmm/vmmServers"
                          }
                        ]
                      }
                    },
                    "osType": {
                      "description": "Gets the type of the os.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Windows",
                        "Linux",
                        "Other"
                      ],
                      "x-ms-enum": {
                        "name": "OsType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Windows",
                            "value": "Windows",
                            "description": "Windows operating system."
                          },
                          {
                            "name": "Linux",
                            "value": "Linux",
                            "description": "Linux operating system."
                          },
                          {
                            "name": "Other",
                            "value": "Other",
                            "description": "Other operating system."
                          }
                        ]
                      }
                    },
                    "osName": {
                      "type": "string",
                      "description": "Gets os name.",
                      "readOnly": true
                    },
                    "computerName": {
                      "type": "string",
                      "description": "Gets computer name.",
                      "readOnly": true
                    },
                    "memoryMB": {
                      "type": "integer",
                      "format": "int32",
                      "description": "MemoryMB is the desired size of a virtual machine's memory, in MB.",
                      "readOnly": true
                    },
                    "cpuCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Gets the desired number of vCPUs for the vm.",
                      "readOnly": true
                    },
                    "limitCpuForMigration": {
                      "description": "Gets a value indicating whether to enable processor compatibility mode for live migration of VMs.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "LimitCpuForMigration",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "true",
                            "value": "true",
                            "description": "Enable limit CPU for migration."
                          },
                          {
                            "name": "false",
                            "value": "false",
                            "description": "Disable limit CPU for migration."
                          }
                        ]
                      }
                    },
                    "dynamicMemoryEnabled": {
                      "description": "Gets a value indicating whether to enable dynamic memory or not.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "DynamicMemoryEnabled",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "true",
                            "value": "true",
                            "description": "Enable dynamic memory."
                          },
                          {
                            "name": "false",
                            "value": "false",
                            "description": "Disable dynamic memory."
                          }
                        ]
                      }
                    },
                    "isCustomizable": {
                      "description": "Gets a value indicating whether the vm template is customizable or not.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "IsCustomizable",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "true",
                            "value": "true",
                            "description": "Enable customizable."
                          },
                          {
                            "name": "false",
                            "value": "false",
                            "description": "Disable customizable."
                          }
                        ]
                      }
                    },
                    "dynamicMemoryMaxMB": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Gets the max dynamic memory for the vm.",
                      "readOnly": true
                    },
                    "dynamicMemoryMinMB": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Gets the min dynamic memory for the vm.",
                      "readOnly": true
                    },
                    "isHighlyAvailable": {
                      "description": "Gets highly available property.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "IsHighlyAvailable",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "true",
                            "value": "true",
                            "description": "Enable highly available."
                          },
                          {
                            "name": "false",
                            "value": "false",
                            "description": "Disable highly available."
                          }
                        ]
                      }
                    },
                    "generation": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Gets the generation for the vm.",
                      "readOnly": true
                    },
                    "networkInterfaces": {
                      "type": "array",
                      "description": "Gets the network interfaces of the template.",
                      "items": {
                        "type": "object",
                        "description": "Network Interface model",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Gets or sets the name of the network interface."
                          },
                          "displayName": {
                            "type": "string",
                            "description": "Gets the display name of the network interface as shown in the vmmServer. This is the fallback label for a NIC when the name is not set.",
                            "readOnly": true
                          },
                          "ipv4Addresses": {
                            "type": "array",
                            "description": "Gets the nic ipv4 addresses.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "ipv6Addresses": {
                            "type": "array",
                            "description": "Gets the nic ipv6 addresses.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "macAddress": {
                            "type": "string",
                            "description": "Gets or sets the nic MAC address."
                          },
                          "virtualNetworkId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.ScVmm/virtualNetwork"
                                }
                              ]
                            }
                          },
                          "networkName": {
                            "type": "string",
                            "description": "Gets the name of the virtual network in vmmServer that the nic is connected to.",
                            "readOnly": true
                          },
                          "ipv4AddressType": {
                            "description": "Gets or sets the ipv4 address type.",
                            "type": "string",
                            "enum": [
                              "Dynamic",
                              "Static"
                            ],
                            "x-ms-enum": {
                              "name": "AllocationMethod",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Dynamic",
                                  "value": "Dynamic",
                                  "description": "Dynamically allocated address."
                                },
                                {
                                  "name": "Static",
                                  "value": "Static",
                                  "description": "Statically allocated address."
                                }
                              ]
                            }
                          },
                          "ipv6AddressType": {
                            "description": "Gets or sets the ipv6 address type.",
                            "type": "string",
                            "enum": [
                              "Dynamic",
                              "Static"
                            ],
                            "x-ms-enum": {
                              "name": "AllocationMethod",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Dynamic",
                                  "value": "Dynamic",
                                  "description": "Dynamically allocated address."
                                },
                                {
                                  "name": "Static",
                                  "value": "Static",
                                  "description": "Statically allocated address."
                                }
                              ]
                            }
                          },
                          "macAddressType": {
                            "description": "Gets or sets the mac address type.",
                            "type": "string",
                            "enum": [
                              "Dynamic",
                              "Static"
                            ],
                            "x-ms-enum": {
                              "name": "AllocationMethod",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Dynamic",
                                  "value": "Dynamic",
                                  "description": "Dynamically allocated address."
                                },
                                {
                                  "name": "Static",
                                  "value": "Static",
                                  "description": "Statically allocated address."
                                }
                              ]
                            }
                          },
                          "nicId": {
                            "type": "string",
                            "description": "Gets or sets the nic id."
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "name",
                        "nicId"
                      ]
                    },
                    "disks": {
                      "type": "array",
                      "description": "Gets the disks of the template.",
                      "items": {
                        "type": "object",
                        "description": "Virtual disk model",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Gets or sets the name of the disk."
                          },
                          "displayName": {
                            "type": "string",
                            "description": "Gets the display name of the virtual disk as shown in the vmmServer. This is the fallback label for a disk when the name is not set.",
                            "readOnly": true
                          },
                          "diskId": {
                            "type": "string",
                            "description": "Gets or sets the disk id."
                          },
                          "diskSizeGB": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Gets or sets the disk total size."
                          },
                          "maxDiskSizeGB": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Gets the max disk size.",
                            "readOnly": true
                          },
                          "bus": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Gets or sets the disk bus."
                          },
                          "lun": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Gets or sets the disk lun."
                          },
                          "busType": {
                            "type": "string",
                            "description": "Gets or sets the disk bus type."
                          },
                          "vhdType": {
                            "type": "string",
                            "description": "Gets or sets the disk vhd type."
                          },
                          "volumeType": {
                            "type": "string",
                            "description": "Gets the disk volume type.",
                            "readOnly": true
                          },
                          "vhdFormatType": {
                            "type": "string",
                            "description": "Gets the disk vhd format type.",
                            "readOnly": true
                          },
                          "templateDiskId": {
                            "type": "string",
                            "description": "Gets or sets the disk id in the template.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "storageQoSPolicy": {
                            "description": "The QoS policy for the disk.",
                            "x-ms-client-name": "storageQosPolicy",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the policy."
                              },
                              "id": {
                                "type": "string",
                                "description": "The ID of the QoS policy."
                              }
                            }
                          },
                          "createDiffDisk": {
                            "description": "Gets or sets a value indicating diff disk.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "string",
                            "enum": [
                              "true",
                              "false"
                            ],
                            "x-ms-enum": {
                              "name": "CreateDiffDisk",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "true",
                                  "value": "true",
                                  "description": "Enable create diff disk."
                                },
                                {
                                  "name": "false",
                                  "value": "false",
                                  "description": "Disable create diff disk."
                                }
                              ]
                            }
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "diskId",
                        "name"
                      ]
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "description": "The extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "The extended location name.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ExtendedLocation/customLocations"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "extendedLocation"
              ]
            }
          }
        }
      },
      "put": {
        "operationId": "VirtualMachineTemplates_CreateOrUpdate",
        "tags": [
          "VirtualMachineTemplates"
        ],
        "summary": "Implements VirtualMachineTemplates PUT method.",
        "description": "Onboards the ScVmm VM Template as an Azure VM Template resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "virtualMachineTemplateName",
            "in": "path",
            "description": "Name of the VirtualMachineTemplate.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 54,
            "pattern": "[a-zA-Z0-9-_\\.]"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The VirtualMachineTemplates resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "inventoryItemId": {
                      "type": "string",
                      "description": "Gets or sets the inventory Item ID for the resource."
                    },
                    "uuid": {
                      "type": "string",
                      "description": "Unique ID of the virtual machine template.",
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
                    },
                    "vmmServerId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "ARM Id of the vmmServer resource in which this resource resides.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ScVmm/vmmServers"
                          }
                        ]
                      }
                    },
                    "osType": {
                      "description": "Gets the type of the os.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Windows",
                        "Linux",
                        "Other"
                      ],
                      "x-ms-enum": {
                        "name": "OsType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Windows",
                            "value": "Windows",
                            "description": "Windows operating system."
                          },
                          {
                            "name": "Linux",
                            "value": "Linux",
                            "description": "Linux operating system."
                          },
                          {
                            "name": "Other",
                            "value": "Other",
                            "description": "Other operating system."
                          }
                        ]
                      }
                    },
                    "osName": {
                      "type": "string",
                      "description": "Gets os name.",
                      "readOnly": true
                    },
                    "computerName": {
                      "type": "string",
                      "description": "Gets computer name.",
                      "readOnly": true
                    },
                    "memoryMB": {
                      "type": "integer",
                      "format": "int32",
                      "description": "MemoryMB is the desired size of a virtual machine's memory, in MB.",
                      "readOnly": true
                    },
                    "cpuCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Gets the desired number of vCPUs for the vm.",
                      "readOnly": true
                    },
                    "limitCpuForMigration": {
                      "description": "Gets a value indicating whether to enable processor compatibility mode for live migration of VMs.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "LimitCpuForMigration",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "true",
                            "value": "true",
                            "description": "Enable limit CPU for migration."
                          },
                          {
                            "name": "false",
                            "value": "false",
                            "description": "Disable limit CPU for migration."
                          }
                        ]
                      }
                    },
                    "dynamicMemoryEnabled": {
                      "description": "Gets a value indicating whether to enable dynamic memory or not.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "DynamicMemoryEnabled",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "true",
                            "value": "true",
                            "description": "Enable dynamic memory."
                          },
                          {
                            "name": "false",
                            "value": "false",
                            "description": "Disable dynamic memory."
                          }
                        ]
                      }
                    },
                    "isCustomizable": {
                      "description": "Gets a value indicating whether the vm template is customizable or not.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "IsCustomizable",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "true",
                            "value": "true",
                            "description": "Enable customizable."
                          },
                          {
                            "name": "false",
                            "value": "false",
                            "description": "Disable customizable."
                          }
                        ]
                      }
                    },
                    "dynamicMemoryMaxMB": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Gets the max dynamic memory for the vm.",
                      "readOnly": true
                    },
                    "dynamicMemoryMinMB": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Gets the min dynamic memory for the vm.",
                      "readOnly": true
                    },
                    "isHighlyAvailable": {
                      "description": "Gets highly available property.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "IsHighlyAvailable",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "true",
                            "value": "true",
                            "description": "Enable highly available."
                          },
                          {
                            "name": "false",
                            "value": "false",
                            "description": "Disable highly available."
                          }
                        ]
                      }
                    },
                    "generation": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Gets the generation for the vm.",
                      "readOnly": true
                    },
                    "networkInterfaces": {
                      "type": "array",
                      "description": "Gets the network interfaces of the template.",
                      "items": {
                        "type": "object",
                        "description": "Network Interface model",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Gets or sets the name of the network interface."
                          },
                          "displayName": {
                            "type": "string",
                            "description": "Gets the display name of the network interface as shown in the vmmServer. This is the fallback label for a NIC when the name is not set.",
                            "readOnly": true
                          },
                          "ipv4Addresses": {
                            "type": "array",
                            "description": "Gets the nic ipv4 addresses.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "ipv6Addresses": {
                            "type": "array",
                            "description": "Gets the nic ipv6 addresses.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "macAddress": {
                            "type": "string",
                            "description": "Gets or sets the nic MAC address."
                          },
                          "virtualNetworkId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.ScVmm/virtualNetwork"
                                }
                              ]
                            }
                          },
                          "networkName": {
                            "type": "string",
                            "description": "Gets the name of the virtual network in vmmServer that the nic is connected to.",
                            "readOnly": true
                          },
                          "ipv4AddressType": {
                            "description": "Gets or sets the ipv4 address type.",
                            "type": "string",
                            "enum": [
                              "Dynamic",
                              "Static"
                            ],
                            "x-ms-enum": {
                              "name": "AllocationMethod",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Dynamic",
                                  "value": "Dynamic",
                                  "description": "Dynamically allocated address."
                                },
                                {
                                  "name": "Static",
                                  "value": "Static",
                                  "description": "Statically allocated address."
                                }
                              ]
                            }
                          },
                          "ipv6AddressType": {
                            "description": "Gets or sets the ipv6 address type.",
                            "type": "string",
                            "enum": [
                              "Dynamic",
                              "Static"
                            ],
                            "x-ms-enum": {
                              "name": "AllocationMethod",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Dynamic",
                                  "value": "Dynamic",
                                  "description": "Dynamically allocated address."
                                },
                                {
                                  "name": "Static",
                                  "value": "Static",
                                  "description": "Statically allocated address."
                                }
                              ]
                            }
                          },
                          "macAddressType": {
                            "description": "Gets or sets the mac address type.",
                            "type": "string",
                            "enum": [
                              "Dynamic",
                              "Static"
                            ],
                            "x-ms-enum": {
                              "name": "AllocationMethod",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Dynamic",
                                  "value": "Dynamic",
                                  "description": "Dynamically allocated address."
                                },
                                {
                                  "name": "Static",
                                  "value": "Static",
                                  "description": "Statically allocated address."
                                }
                              ]
                            }
                          },
                          "nicId": {
                            "type": "string",
                            "description": "Gets or sets the nic id."
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "name",
                        "nicId"
                      ]
                    },
                    "disks": {
                      "type": "array",
                      "description": "Gets the disks of the template.",
                      "items": {
                        "type": "object",
                        "description": "Virtual disk model",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Gets or sets the name of the disk."
                          },
                          "displayName": {
                            "type": "string",
                            "description": "Gets the display name of the virtual disk as shown in the vmmServer. This is the fallback label for a disk when the name is not set.",
                            "readOnly": true
                          },
                          "diskId": {
                            "type": "string",
                            "description": "Gets or sets the disk id."
                          },
                          "diskSizeGB": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Gets or sets the disk total size."
                          },
                          "maxDiskSizeGB": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Gets the max disk size.",
                            "readOnly": true
                          },
                          "bus": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Gets or sets the disk bus."
                          },
                          "lun": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Gets or sets the disk lun."
                          },
                          "busType": {
                            "type": "string",
                            "description": "Gets or sets the disk bus type."
                          },
                          "vhdType": {
                            "type": "string",
                            "description": "Gets or sets the disk vhd type."
                          },
                          "volumeType": {
                            "type": "string",
                            "description": "Gets the disk volume type.",
                            "readOnly": true
                          },
                          "vhdFormatType": {
                            "type": "string",
                            "description": "Gets the disk vhd format type.",
                            "readOnly": true
                          },
                          "templateDiskId": {
                            "type": "string",
                            "description": "Gets or sets the disk id in the template.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "storageQoSPolicy": {
                            "description": "The QoS policy for the disk.",
                            "x-ms-client-name": "storageQosPolicy",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the policy."
                              },
                              "id": {
                                "type": "string",
                                "description": "The ID of the QoS policy."
                              }
                            }
                          },
                          "createDiffDisk": {
                            "description": "Gets or sets a value indicating diff disk.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "string",
                            "enum": [
                              "true",
                              "false"
                            ],
                            "x-ms-enum": {
                              "name": "CreateDiffDisk",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "true",
                                  "value": "true",
                                  "description": "Enable create diff disk."
                                },
                                {
                                  "name": "false",
                                  "value": "false",
                                  "description": "Disable create diff disk."
                                }
                              ]
                            }
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "diskId",
                        "name"
                      ]
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "description": "The extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "The extended location name.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ExtendedLocation/customLocations"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "extendedLocation"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'VirtualMachineTemplate' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "The VirtualMachineTemplates resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "inventoryItemId": {
                      "type": "string",
                      "description": "Gets or sets the inventory Item ID for the resource."
                    },
                    "uuid": {
                      "type": "string",
                      "description": "Unique ID of the virtual machine template.",
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
                    },
                    "vmmServerId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "ARM Id of the vmmServer resource in which this resource resides.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ScVmm/vmmServers"
                          }
                        ]
                      }
                    },
                    "osType": {
                      "description": "Gets the type of the os.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Windows",
                        "Linux",
                        "Other"
                      ],
                      "x-ms-enum": {
                        "name": "OsType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Windows",
                            "value": "Windows",
                            "description": "Windows operating system."
                          },
                          {
                            "name": "Linux",
                            "value": "Linux",
                            "description": "Linux operating system."
                          },
                          {
                            "name": "Other",
                            "value": "Other",
                            "description": "Other operating system."
                          }
                        ]
                      }
                    },
                    "osName": {
                      "type": "string",
                      "description": "Gets os name.",
                      "readOnly": true
                    },
                    "computerName": {
                      "type": "string",
                      "description": "Gets computer name.",
                      "readOnly": true
                    },
                    "memoryMB": {
                      "type": "integer",
                      "format": "int32",
                      "description": "MemoryMB is the desired size of a virtual machine's memory, in MB.",
                      "readOnly": true
                    },
                    "cpuCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Gets the desired number of vCPUs for the vm.",
                      "readOnly": true
                    },
                    "limitCpuForMigration": {
                      "description": "Gets a value indicating whether to enable processor compatibility mode for live migration of VMs.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "LimitCpuForMigration",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "true",
                            "value": "true",
                            "description": "Enable limit CPU for migration."
                          },
                          {
                            "name": "false",
                            "value": "false",
                            "description": "Disable limit CPU for migration."
                          }
                        ]
                      }
                    },
                    "dynamicMemoryEnabled": {
                      "description": "Gets a value indicating whether to enable dynamic memory or not.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "DynamicMemoryEnabled",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "true",
                            "value": "true",
                            "description": "Enable dynamic memory."
                          },
                          {
                            "name": "false",
                            "value": "false",
                            "description": "Disable dynamic memory."
                          }
                        ]
                      }
                    },
                    "isCustomizable": {
                      "description": "Gets a value indicating whether the vm template is customizable or not.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "IsCustomizable",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "true",
                            "value": "true",
                            "description": "Enable customizable."
                          },
                          {
                            "name": "false",
                            "value": "false",
                            "description": "Disable customizable."
                          }
                        ]
                      }
                    },
                    "dynamicMemoryMaxMB": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Gets the max dynamic memory for the vm.",
                      "readOnly": true
                    },
                    "dynamicMemoryMinMB": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Gets the min dynamic memory for the vm.",
                      "readOnly": true
                    },
                    "isHighlyAvailable": {
                      "description": "Gets highly available property.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "IsHighlyAvailable",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "true",
                            "value": "true",
                            "description": "Enable highly available."
                          },
                          {
                            "name": "false",
                            "value": "false",
                            "description": "Disable highly available."
                          }
                        ]
                      }
                    },
                    "generation": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Gets the generation for the vm.",
                      "readOnly": true
                    },
                    "networkInterfaces": {
                      "type": "array",
                      "description": "Gets the network interfaces of the template.",
                      "items": {
                        "type": "object",
                        "description": "Network Interface model",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Gets or sets the name of the network interface."
                          },
                          "displayName": {
                            "type": "string",
                            "description": "Gets the display name of the network interface as shown in the vmmServer. This is the fallback label for a NIC when the name is not set.",
                            "readOnly": true
                          },
                          "ipv4Addresses": {
                            "type": "array",
                            "description": "Gets the nic ipv4 addresses.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "ipv6Addresses": {
                            "type": "array",
                            "description": "Gets the nic ipv6 addresses.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "macAddress": {
                            "type": "string",
                            "description": "Gets or sets the nic MAC address."
                          },
                          "virtualNetworkId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.ScVmm/virtualNetwork"
                                }
                              ]
                            }
                          },
                          "networkName": {
                            "type": "string",
                            "description": "Gets the name of the virtual network in vmmServer that the nic is connected to.",
                            "readOnly": true
                          },
                          "ipv4AddressType": {
                            "description": "Gets or sets the ipv4 address type.",
                            "type": "string",
                            "enum": [
                              "Dynamic",
                              "Static"
                            ],
                            "x-ms-enum": {
                              "name": "AllocationMethod",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Dynamic",
                                  "value": "Dynamic",
                                  "description": "Dynamically allocated address."
                                },
                                {
                                  "name": "Static",
                                  "value": "Static",
                                  "description": "Statically allocated address."
                                }
                              ]
                            }
                          },
                          "ipv6AddressType": {
                            "description": "Gets or sets the ipv6 address type.",
                            "type": "string",
                            "enum": [
                              "Dynamic",
                              "Static"
                            ],
                            "x-ms-enum": {
                              "name": "AllocationMethod",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Dynamic",
                                  "value": "Dynamic",
                                  "description": "Dynamically allocated address."
                                },
                                {
                                  "name": "Static",
                                  "value": "Static",
                                  "description": "Statically allocated address."
                                }
                              ]
                            }
                          },
                          "macAddressType": {
                            "description": "Gets or sets the mac address type.",
                            "type": "string",
                            "enum": [
                              "Dynamic",
                              "Static"
                            ],
                            "x-ms-enum": {
                              "name": "AllocationMethod",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Dynamic",
                                  "value": "Dynamic",
                                  "description": "Dynamically allocated address."
                                },
                                {
                                  "name": "Static",
                                  "value": "Static",
                                  "description": "Statically allocated address."
                                }
                              ]
                            }
                          },
                          "nicId": {
                            "type": "string",
                            "description": "Gets or sets the nic id."
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "name",
                        "nicId"
                      ]
                    },
                    "disks": {
                      "type": "array",
                      "description": "Gets the disks of the template.",
                      "items": {
                        "type": "object",
                        "description": "Virtual disk model",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Gets or sets the name of the disk."
                          },
                          "displayName": {
                            "type": "string",
                            "description": "Gets the display name of the virtual disk as shown in the vmmServer. This is the fallback label for a disk when the name is not set.",
                            "readOnly": true
                          },
                          "diskId": {
                            "type": "string",
                            "description": "Gets or sets the disk id."
                          },
                          "diskSizeGB": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Gets or sets the disk total size."
                          },
                          "maxDiskSizeGB": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Gets the max disk size.",
                            "readOnly": true
                          },
                          "bus": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Gets or sets the disk bus."
                          },
                          "lun": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Gets or sets the disk lun."
                          },
                          "busType": {
                            "type": "string",
                            "description": "Gets or sets the disk bus type."
                          },
                          "vhdType": {
                            "type": "string",
                            "description": "Gets or sets the disk vhd type."
                          },
                          "volumeType": {
                            "type": "string",
                            "description": "Gets the disk volume type.",
                            "readOnly": true
                          },
                          "vhdFormatType": {
                            "type": "string",
                            "description": "Gets the disk vhd format type.",
                            "readOnly": true
                          },
                          "templateDiskId": {
                            "type": "string",
                            "description": "Gets or sets the disk id in the template.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "storageQoSPolicy": {
                            "description": "The QoS policy for the disk.",
                            "x-ms-client-name": "storageQosPolicy",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the policy."
                              },
                              "id": {
                                "type": "string",
                                "description": "The ID of the QoS policy."
                              }
                            }
                          },
                          "createDiffDisk": {
                            "description": "Gets or sets a value indicating diff disk.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "string",
                            "enum": [
                              "true",
                              "false"
                            ],
                            "x-ms-enum": {
                              "name": "CreateDiffDisk",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "true",
                                  "value": "true",
                                  "description": "Enable create diff disk."
                                },
                                {
                                  "name": "false",
                                  "value": "false",
                                  "description": "Disable create diff disk."
                                }
                              ]
                            }
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "diskId",
                        "name"
                      ]
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "description": "The extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "The extended location name.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ExtendedLocation/customLocations"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "extendedLocation"
              ]
            }
          },
          "201": {
            "description": "Resource 'VirtualMachineTemplate' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "The VirtualMachineTemplates resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "inventoryItemId": {
                      "type": "string",
                      "description": "Gets or sets the inventory Item ID for the resource."
                    },
                    "uuid": {
                      "type": "string",
                      "description": "Unique ID of the virtual machine template.",
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
                    },
                    "vmmServerId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "ARM Id of the vmmServer resource in which this resource resides.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ScVmm/vmmServers"
                          }
                        ]
                      }
                    },
                    "osType": {
                      "description": "Gets the type of the os.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Windows",
                        "Linux",
                        "Other"
                      ],
                      "x-ms-enum": {
                        "name": "OsType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Windows",
                            "value": "Windows",
                            "description": "Windows operating system."
                          },
                          {
                            "name": "Linux",
                            "value": "Linux",
                            "description": "Linux operating system."
                          },
                          {
                            "name": "Other",
                            "value": "Other",
                            "description": "Other operating system."
                          }
                        ]
                      }
                    },
                    "osName": {
                      "type": "string",
                      "description": "Gets os name.",
                      "readOnly": true
                    },
                    "computerName": {
                      "type": "string",
                      "description": "Gets computer name.",
                      "readOnly": true
                    },
                    "memoryMB": {
                      "type": "integer",
                      "format": "int32",
                      "description": "MemoryMB is the desired size of a virtual machine's memory, in MB.",
                      "readOnly": true
                    },
                    "cpuCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Gets the desired number of vCPUs for the vm.",
                      "readOnly": true
                    },
                    "limitCpuForMigration": {
                      "description": "Gets a value indicating whether to enable processor compatibility mode for live migration of VMs.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "LimitCpuForMigration",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "true",
                            "value": "true",
                            "description": "Enable limit CPU for migration."
                          },
                          {
                            "name": "false",
                            "value": "false",
                            "description": "Disable limit CPU for migration."
                          }
                        ]
                      }
                    },
                    "dynamicMemoryEnabled": {
                      "description": "Gets a value indicating whether to enable dynamic memory or not.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "DynamicMemoryEnabled",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "true",
                            "value": "true",
                            "description": "Enable dynamic memory."
                          },
                          {
                            "name": "false",
                            "value": "false",
                            "description": "Disable dynamic memory."
                          }
                        ]
                      }
                    },
                    "isCustomizable": {
                      "description": "Gets a value indicating whether the vm template is customizable or not.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "IsCustomizable",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "true",
                            "value": "true",
                            "description": "Enable customizable."
                          },
                          {
                            "name": "false",
                            "value": "false",
                            "description": "Disable customizable."
                          }
                        ]
                      }
                    },
                    "dynamicMemoryMaxMB": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Gets the max dynamic memory for the vm.",
                      "readOnly": true
                    },
                    "dynamicMemoryMinMB": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Gets the min dynamic memory for the vm.",
                      "readOnly": true
                    },
                    "isHighlyAvailable": {
                      "description": "Gets highly available property.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "IsHighlyAvailable",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "true",
                            "value": "true",
                            "description": "Enable highly available."
                          },
                          {
                            "name": "false",
                            "value": "false",
                            "description": "Disable highly available."
                          }
                        ]
                      }
                    },
                    "generation": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Gets the generation for the vm.",
                      "readOnly": true
                    },
                    "networkInterfaces": {
                      "type": "array",
                      "description": "Gets the network interfaces of the template.",
                      "items": {
                        "type": "object",
                        "description": "Network Interface model",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Gets or sets the name of the network interface."
                          },
                          "displayName": {
                            "type": "string",
                            "description": "Gets the display name of the network interface as shown in the vmmServer. This is the fallback label for a NIC when the name is not set.",
                            "readOnly": true
                          },
                          "ipv4Addresses": {
                            "type": "array",
                            "description": "Gets the nic ipv4 addresses.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "ipv6Addresses": {
                            "type": "array",
                            "description": "Gets the nic ipv6 addresses.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "macAddress": {
                            "type": "string",
                            "description": "Gets or sets the nic MAC address."
                          },
                          "virtualNetworkId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.ScVmm/virtualNetwork"
                                }
                              ]
                            }
                          },
                          "networkName": {
                            "type": "string",
                            "description": "Gets the name of the virtual network in vmmServer that the nic is connected to.",
                            "readOnly": true
                          },
                          "ipv4AddressType": {
                            "description": "Gets or sets the ipv4 address type.",
                            "type": "string",
                            "enum": [
                              "Dynamic",
                              "Static"
                            ],
                            "x-ms-enum": {
                              "name": "AllocationMethod",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Dynamic",
                                  "value": "Dynamic",
                                  "description": "Dynamically allocated address."
                                },
                                {
                                  "name": "Static",
                                  "value": "Static",
                                  "description": "Statically allocated address."
                                }
                              ]
                            }
                          },
                          "ipv6AddressType": {
                            "description": "Gets or sets the ipv6 address type.",
                            "type": "string",
                            "enum": [
                              "Dynamic",
                              "Static"
                            ],
                            "x-ms-enum": {
                              "name": "AllocationMethod",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Dynamic",
                                  "value": "Dynamic",
                                  "description": "Dynamically allocated address."
                                },
                                {
                                  "name": "Static",
                                  "value": "Static",
                                  "description": "Statically allocated address."
                                }
                              ]
                            }
                          },
                          "macAddressType": {
                            "description": "Gets or sets the mac address type.",
                            "type": "string",
                            "enum": [
                              "Dynamic",
                              "Static"
                            ],
                            "x-ms-enum": {
                              "name": "AllocationMethod",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Dynamic",
                                  "value": "Dynamic",
                                  "description": "Dynamically allocated address."
                                },
                                {
                                  "name": "Static",
                                  "value": "Static",
                                  "description": "Statically allocated address."
                                }
                              ]
                            }
                          },
                          "nicId": {
                            "type": "string",
                            "description": "Gets or sets the nic id."
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "name",
                        "nicId"
                      ]
                    },
                    "disks": {
                      "type": "array",
                      "description": "Gets the disks of the template.",
                      "items": {
                        "type": "object",
                        "description": "Virtual disk model",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Gets or sets the name of the disk."
                          },
                          "displayName": {
                            "type": "string",
                            "description": "Gets the display name of the virtual disk as shown in the vmmServer. This is the fallback label for a disk when the name is not set.",
                            "readOnly": true
                          },
                          "diskId": {
                            "type": "string",
                            "description": "Gets or sets the disk id."
                          },
                          "diskSizeGB": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Gets or sets the disk total size."
                          },
                          "maxDiskSizeGB": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Gets the max disk size.",
                            "readOnly": true
                          },
                          "bus": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Gets or sets the disk bus."
                          },
                          "lun": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Gets or sets the disk lun."
                          },
                          "busType": {
                            "type": "string",
                            "description": "Gets or sets the disk bus type."
                          },
                          "vhdType": {
                            "type": "string",
                            "description": "Gets or sets the disk vhd type."
                          },
                          "volumeType": {
                            "type": "string",
                            "description": "Gets the disk volume type.",
                            "readOnly": true
                          },
                          "vhdFormatType": {
                            "type": "string",
                            "description": "Gets the disk vhd format type.",
                            "readOnly": true
                          },
                          "templateDiskId": {
                            "type": "string",
                            "description": "Gets or sets the disk id in the template.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "storageQoSPolicy": {
                            "description": "The QoS policy for the disk.",
                            "x-ms-client-name": "storageQosPolicy",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the policy."
                              },
                              "id": {
                                "type": "string",
                                "description": "The ID of the QoS policy."
                              }
                            }
                          },
                          "createDiffDisk": {
                            "description": "Gets or sets a value indicating diff disk.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "string",
                            "enum": [
                              "true",
                              "false"
                            ],
                            "x-ms-enum": {
                              "name": "CreateDiffDisk",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "true",
                                  "value": "true",
                                  "description": "Enable create diff disk."
                                },
                                {
                                  "name": "false",
                                  "value": "false",
                                  "description": "Disable create diff disk."
                                }
                              ]
                            }
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "diskId",
                        "name"
                      ]
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "description": "The extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "The extended location name.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ExtendedLocation/customLocations"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "extendedLocation"
              ]
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "VirtualMachineTemplates_Update",
        "tags": [
          "VirtualMachineTemplates"
        ],
        "summary": "Implements the VirtualMachineTemplate PATCH method.",
        "description": "Updates the VirtualMachineTemplate resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "virtualMachineTemplateName",
            "in": "path",
            "description": "Name of the VirtualMachineTemplate.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 54,
            "pattern": "[a-zA-Z0-9-_\\.]"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The type used for updating tags in VirtualMachineTemplate resources.",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The VirtualMachineTemplates resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "inventoryItemId": {
                      "type": "string",
                      "description": "Gets or sets the inventory Item ID for the resource."
                    },
                    "uuid": {
                      "type": "string",
                      "description": "Unique ID of the virtual machine template.",
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
                    },
                    "vmmServerId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "ARM Id of the vmmServer resource in which this resource resides.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ScVmm/vmmServers"
                          }
                        ]
                      }
                    },
                    "osType": {
                      "description": "Gets the type of the os.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Windows",
                        "Linux",
                        "Other"
                      ],
                      "x-ms-enum": {
                        "name": "OsType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Windows",
                            "value": "Windows",
                            "description": "Windows operating system."
                          },
                          {
                            "name": "Linux",
                            "value": "Linux",
                            "description": "Linux operating system."
                          },
                          {
                            "name": "Other",
                            "value": "Other",
                            "description": "Other operating system."
                          }
                        ]
                      }
                    },
                    "osName": {
                      "type": "string",
                      "description": "Gets os name.",
                      "readOnly": true
                    },
                    "computerName": {
                      "type": "string",
                      "description": "Gets computer name.",
                      "readOnly": true
                    },
                    "memoryMB": {
                      "type": "integer",
                      "format": "int32",
                      "description": "MemoryMB is the desired size of a virtual machine's memory, in MB.",
                      "readOnly": true
                    },
                    "cpuCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Gets the desired number of vCPUs for the vm.",
                      "readOnly": true
                    },
                    "limitCpuForMigration": {
                      "description": "Gets a value indicating whether to enable processor compatibility mode for live migration of VMs.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "LimitCpuForMigration",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "true",
                            "value": "true",
                            "description": "Enable limit CPU for migration."
                          },
                          {
                            "name": "false",
                            "value": "false",
                            "description": "Disable limit CPU for migration."
                          }
                        ]
                      }
                    },
                    "dynamicMemoryEnabled": {
                      "description": "Gets a value indicating whether to enable dynamic memory or not.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "DynamicMemoryEnabled",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "true",
                            "value": "true",
                            "description": "Enable dynamic memory."
                          },
                          {
                            "name": "false",
                            "value": "false",
                            "description": "Disable dynamic memory."
                          }
                        ]
                      }
                    },
                    "isCustomizable": {
                      "description": "Gets a value indicating whether the vm template is customizable or not.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "IsCustomizable",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "true",
                            "value": "true",
                            "description": "Enable customizable."
                          },
                          {
                            "name": "false",
                            "value": "false",
                            "description": "Disable customizable."
                          }
                        ]
                      }
                    },
                    "dynamicMemoryMaxMB": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Gets the max dynamic memory for the vm.",
                      "readOnly": true
                    },
                    "dynamicMemoryMinMB": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Gets the min dynamic memory for the vm.",
                      "readOnly": true
                    },
                    "isHighlyAvailable": {
                      "description": "Gets highly available property.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "true",
                        "false"
                      ],
                      "x-ms-enum": {
                        "name": "IsHighlyAvailable",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "true",
                            "value": "true",
                            "description": "Enable highly available."
                          },
                          {
                            "name": "false",
                            "value": "false",
                            "description": "Disable highly available."
                          }
                        ]
                      }
                    },
                    "generation": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Gets the generation for the vm.",
                      "readOnly": true
                    },
                    "networkInterfaces": {
                      "type": "array",
                      "description": "Gets the network interfaces of the template.",
                      "items": {
                        "type": "object",
                        "description": "Network Interface model",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Gets or sets the name of the network interface."
                          },
                          "displayName": {
                            "type": "string",
                            "description": "Gets the display name of the network interface as shown in the vmmServer. This is the fallback label for a NIC when the name is not set.",
                            "readOnly": true
                          },
                          "ipv4Addresses": {
                            "type": "array",
                            "description": "Gets the nic ipv4 addresses.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "ipv6Addresses": {
                            "type": "array",
                            "description": "Gets the nic ipv6 addresses.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "macAddress": {
                            "type": "string",
                            "description": "Gets or sets the nic MAC address."
                          },
                          "virtualNetworkId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.ScVmm/virtualNetwork"
                                }
                              ]
                            }
                          },
                          "networkName": {
                            "type": "string",
                            "description": "Gets the name of the virtual network in vmmServer that the nic is connected to.",
                            "readOnly": true
                          },
                          "ipv4AddressType": {
                            "description": "Gets or sets the ipv4 address type.",
                            "type": "string",
                            "enum": [
                              "Dynamic",
                              "Static"
                            ],
                            "x-ms-enum": {
                              "name": "AllocationMethod",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Dynamic",
                                  "value": "Dynamic",
                                  "description": "Dynamically allocated address."
                                },
                                {
                                  "name": "Static",
                                  "value": "Static",
                                  "description": "Statically allocated address."
                                }
                              ]
                            }
                          },
                          "ipv6AddressType": {
                            "description": "Gets or sets the ipv6 address type.",
                            "type": "string",
                            "enum": [
                              "Dynamic",
                              "Static"
                            ],
                            "x-ms-enum": {
                              "name": "AllocationMethod",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Dynamic",
                                  "value": "Dynamic",
                                  "description": "Dynamically allocated address."
                                },
                                {
                                  "name": "Static",
                                  "value": "Static",
                                  "description": "Statically allocated address."
                                }
                              ]
                            }
                          },
                          "macAddressType": {
                            "description": "Gets or sets the mac address type.",
                            "type": "string",
                            "enum": [
                              "Dynamic",
                              "Static"
                            ],
                            "x-ms-enum": {
                              "name": "AllocationMethod",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Dynamic",
                                  "value": "Dynamic",
                                  "description": "Dynamically allocated address."
                                },
                                {
                                  "name": "Static",
                                  "value": "Static",
                                  "description": "Statically allocated address."
                                }
                              ]
                            }
                          },
                          "nicId": {
                            "type": "string",
                            "description": "Gets or sets the nic id."
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "name",
                        "nicId"
                      ]
                    },
                    "disks": {
                      "type": "array",
                      "description": "Gets the disks of the template.",
                      "items": {
                        "type": "object",
                        "description": "Virtual disk model",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Gets or sets the name of the disk."
                          },
                          "displayName": {
                            "type": "string",
                            "description": "Gets the display name of the virtual disk as shown in the vmmServer. This is the fallback label for a disk when the name is not set.",
                            "readOnly": true
                          },
                          "diskId": {
                            "type": "string",
                            "description": "Gets or sets the disk id."
                          },
                          "diskSizeGB": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Gets or sets the disk total size."
                          },
                          "maxDiskSizeGB": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Gets the max disk size.",
                            "readOnly": true
                          },
                          "bus": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Gets or sets the disk bus."
                          },
                          "lun": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Gets or sets the disk lun."
                          },
                          "busType": {
                            "type": "string",
                            "description": "Gets or sets the disk bus type."
                          },
                          "vhdType": {
                            "type": "string",
                            "description": "Gets or sets the disk vhd type."
                          },
                          "volumeType": {
                            "type": "string",
                            "description": "Gets the disk volume type.",
                            "readOnly": true
                          },
                          "vhdFormatType": {
                            "type": "string",
                            "description": "Gets the disk vhd format type.",
                            "readOnly": true
                          },
                          "templateDiskId": {
                            "type": "string",
                            "description": "Gets or sets the disk id in the template.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "storageQoSPolicy": {
                            "description": "The QoS policy for the disk.",
                            "x-ms-client-name": "storageQosPolicy",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the policy."
                              },
                              "id": {
                                "type": "string",
                                "description": "The ID of the QoS policy."
                              }
                            }
                          },
                          "createDiffDisk": {
                            "description": "Gets or sets a value indicating diff disk.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "string",
                            "enum": [
                              "true",
                              "false"
                            ],
                            "x-ms-enum": {
                              "name": "CreateDiffDisk",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "true",
                                  "value": "true",
                                  "description": "Enable create diff disk."
                                },
                                {
                                  "name": "false",
                                  "value": "false",
                                  "description": "Disable create diff disk."
                                }
                              ]
                            }
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "diskId",
                        "name"
                      ]
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "description": "The extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "The extended location name.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ExtendedLocation/customLocations"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "extendedLocation"
              ]
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "VirtualMachineTemplates_Delete",
        "tags": [
          "VirtualMachineTemplates"
        ],
        "summary": "Implements VirtualMachineTemplate DELETE method.",
        "description": "Deregisters the ScVmm VM Template from Azure.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Forces the resource to be deleted.",
            "required": false,
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "x-ms-enum": {
              "name": "ForceDelete",
              "modelAsString": true,
              "values": [
                {
                  "name": "true",
                  "value": "true",
                  "description": "Enable force delete."
                },
                {
                  "name": "false",
                  "value": "false",
                  "description": "Disable force delete."
                }
              ]
            },
            "x-ms-parameter-location": "method"
          },
          {
            "name": "virtualMachineTemplateName",
            "in": "path",
            "description": "Name of the VirtualMachineTemplate.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 54,
            "pattern": "[a-zA-Z0-9-_\\.]"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/virtualNetworks": {
      "get": {
        "operationId": "VirtualNetworks_ListByResourceGroup",
        "tags": [
          "VirtualNetworks"
        ],
        "summary": "Implements GET VirtualNetworks in a resource group.",
        "description": "List of VirtualNetworks in a resource group.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a VirtualNetwork list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The VirtualNetwork items on this page",
                  "items": {
                    "type": "object",
                    "description": "The VirtualNetworks resource definition.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "inventoryItemId": {
                            "type": "string",
                            "description": "Gets or sets the inventory Item ID for the resource."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "Unique ID of the virtual network.",
                            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
                          },
                          "vmmServerId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "ARM Id of the vmmServer resource in which this resource resides.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.ScVmm/vmmServers"
                                }
                              ]
                            }
                          },
                          "networkName": {
                            "type": "string",
                            "description": "Name of the virtual network in vmmServer.",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the resource.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted",
                              "Created"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The resource is provisioning."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The resource is updating."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The resource is being deleted."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "The resource has been accepted."
                                },
                                {
                                  "name": "Created",
                                  "value": "Created",
                                  "description": "The resource was created."
                                }
                              ]
                            }
                          }
                        }
                      },
                      "extendedLocation": {
                        "description": "The extended location.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The extended location type."
                          },
                          "name": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "The extended location name.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.ExtendedLocation/customLocations"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "extendedLocation"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items",
                  "readOnly": true
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/virtualNetworks/{virtualNetworkName}": {
      "get": {
        "operationId": "VirtualNetworks_Get",
        "tags": [
          "VirtualNetworks"
        ],
        "summary": "Gets a VirtualNetwork.",
        "description": "Implements VirtualNetwork GET method.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "description": "Name of the VirtualNetwork.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 54,
            "pattern": "[a-zA-Z0-9-_\\.]"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The VirtualNetworks resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "inventoryItemId": {
                      "type": "string",
                      "description": "Gets or sets the inventory Item ID for the resource."
                    },
                    "uuid": {
                      "type": "string",
                      "description": "Unique ID of the virtual network.",
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
                    },
                    "vmmServerId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "ARM Id of the vmmServer resource in which this resource resides.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ScVmm/vmmServers"
                          }
                        ]
                      }
                    },
                    "networkName": {
                      "type": "string",
                      "description": "Name of the virtual network in vmmServer.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "description": "The extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "The extended location name.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ExtendedLocation/customLocations"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "extendedLocation"
              ]
            }
          }
        }
      },
      "put": {
        "operationId": "VirtualNetworks_CreateOrUpdate",
        "tags": [
          "VirtualNetworks"
        ],
        "summary": "Implements VirtualNetworks PUT method.",
        "description": "Onboards the ScVmm virtual network as an Azure virtual network resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "description": "Name of the VirtualNetwork.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 54,
            "pattern": "[a-zA-Z0-9-_\\.]"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The VirtualNetworks resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "inventoryItemId": {
                      "type": "string",
                      "description": "Gets or sets the inventory Item ID for the resource."
                    },
                    "uuid": {
                      "type": "string",
                      "description": "Unique ID of the virtual network.",
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
                    },
                    "vmmServerId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "ARM Id of the vmmServer resource in which this resource resides.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ScVmm/vmmServers"
                          }
                        ]
                      }
                    },
                    "networkName": {
                      "type": "string",
                      "description": "Name of the virtual network in vmmServer.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "description": "The extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "The extended location name.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ExtendedLocation/customLocations"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "extendedLocation"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'VirtualNetwork' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "The VirtualNetworks resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "inventoryItemId": {
                      "type": "string",
                      "description": "Gets or sets the inventory Item ID for the resource."
                    },
                    "uuid": {
                      "type": "string",
                      "description": "Unique ID of the virtual network.",
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
                    },
                    "vmmServerId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "ARM Id of the vmmServer resource in which this resource resides.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ScVmm/vmmServers"
                          }
                        ]
                      }
                    },
                    "networkName": {
                      "type": "string",
                      "description": "Name of the virtual network in vmmServer.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "description": "The extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "The extended location name.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ExtendedLocation/customLocations"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "extendedLocation"
              ]
            }
          },
          "201": {
            "description": "Resource 'VirtualNetwork' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "The VirtualNetworks resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "inventoryItemId": {
                      "type": "string",
                      "description": "Gets or sets the inventory Item ID for the resource."
                    },
                    "uuid": {
                      "type": "string",
                      "description": "Unique ID of the virtual network.",
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
                    },
                    "vmmServerId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "ARM Id of the vmmServer resource in which this resource resides.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ScVmm/vmmServers"
                          }
                        ]
                      }
                    },
                    "networkName": {
                      "type": "string",
                      "description": "Name of the virtual network in vmmServer.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "description": "The extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "The extended location name.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ExtendedLocation/customLocations"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "extendedLocation"
              ]
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "VirtualNetworks_Update",
        "tags": [
          "VirtualNetworks"
        ],
        "summary": "Implements the VirtualNetworks PATCH method.",
        "description": "Updates the VirtualNetworks resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "description": "Name of the VirtualNetwork.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 54,
            "pattern": "[a-zA-Z0-9-_\\.]"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The type used for updating tags in VirtualNetwork resources.",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The VirtualNetworks resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "inventoryItemId": {
                      "type": "string",
                      "description": "Gets or sets the inventory Item ID for the resource."
                    },
                    "uuid": {
                      "type": "string",
                      "description": "Unique ID of the virtual network.",
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
                    },
                    "vmmServerId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "ARM Id of the vmmServer resource in which this resource resides.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ScVmm/vmmServers"
                          }
                        ]
                      }
                    },
                    "networkName": {
                      "type": "string",
                      "description": "Name of the virtual network in vmmServer.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    }
                  }
                },
                "extendedLocation": {
                  "description": "The extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "The extended location name.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ExtendedLocation/customLocations"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "extendedLocation"
              ]
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "VirtualNetworks_Delete",
        "tags": [
          "VirtualNetworks"
        ],
        "summary": "Implements VirtualNetwork DELETE method.",
        "description": "Deregisters the ScVmm virtual network from Azure.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Forces the resource to be deleted.",
            "required": false,
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "x-ms-enum": {
              "name": "ForceDelete",
              "modelAsString": true,
              "values": [
                {
                  "name": "true",
                  "value": "true",
                  "description": "Enable force delete."
                },
                {
                  "name": "false",
                  "value": "false",
                  "description": "Disable force delete."
                }
              ]
            },
            "x-ms-parameter-location": "method"
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "description": "Name of the VirtualNetwork.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 54,
            "pattern": "[a-zA-Z0-9-_\\.]"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/vmmServers": {
      "get": {
        "operationId": "VmmServers_ListByResourceGroup",
        "tags": [
          "VmmServers"
        ],
        "summary": "Implements GET VmmServers in a resource group.",
        "description": "List of VmmServers in a resource group.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a VmmServer list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The VmmServer items on this page",
                  "items": {
                    "type": "object",
                    "description": "The VmmServers resource definition.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "credentials": {
                            "description": "Credentials to connect to VmmServer.",
                            "type": "object",
                            "properties": {
                              "username": {
                                "type": "string",
                                "description": "Username to use to connect to VmmServer."
                              },
                              "password": {
                                "type": "string",
                                "format": "password",
                                "description": "Password to use to connect to VmmServer.",
                                "x-ms-mutability": [
                                  "update",
                                  "create"
                                ],
                                "x-ms-secret": true
                              }
                            }
                          },
                          "fqdn": {
                            "type": "string",
                            "description": "Fqdn is the hostname/ip of the vmmServer.",
                            "minLength": 1
                          },
                          "port": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Port is the port on which the vmmServer is listening.",
                            "minimum": 1,
                            "maximum": 65535
                          },
                          "connectionStatus": {
                            "type": "string",
                            "description": "Gets the connection status to the vmmServer.",
                            "readOnly": true
                          },
                          "errorMessage": {
                            "type": "string",
                            "description": "Gets any error message if connection to vmmServer is having any issue.",
                            "readOnly": true
                          },
                          "uuid": {
                            "type": "string",
                            "description": "Unique ID of vmmServer.",
                            "readOnly": true
                          },
                          "version": {
                            "type": "string",
                            "description": "Version is the version of the vmmSever.",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the resource.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted",
                              "Created"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The resource is provisioning."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The resource is updating."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The resource is being deleted."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "The resource has been accepted."
                                },
                                {
                                  "name": "Created",
                                  "value": "Created",
                                  "description": "The resource was created."
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "fqdn"
                        ]
                      },
                      "extendedLocation": {
                        "description": "The extended location.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The extended location type."
                          },
                          "name": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "The extended location name.",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.ExtendedLocation/customLocations"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "extendedLocation"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items",
                  "readOnly": true
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/vmmServers/{vmmServerName}": {
      "get": {
        "operationId": "VmmServers_Get",
        "tags": [
          "VmmServers"
        ],
        "summary": "Gets a VMMServer.",
        "description": "Implements VmmServer GET method.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vmmServerName",
            "in": "path",
            "description": "Name of the VmmServer.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 54,
            "pattern": "[a-zA-Z0-9-_\\.]"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The VmmServers resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "credentials": {
                      "description": "Credentials to connect to VmmServer.",
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "string",
                          "description": "Username to use to connect to VmmServer."
                        },
                        "password": {
                          "type": "string",
                          "format": "password",
                          "description": "Password to use to connect to VmmServer.",
                          "x-ms-mutability": [
                            "update",
                            "create"
                          ],
                          "x-ms-secret": true
                        }
                      }
                    },
                    "fqdn": {
                      "type": "string",
                      "description": "Fqdn is the hostname/ip of the vmmServer.",
                      "minLength": 1
                    },
                    "port": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Port is the port on which the vmmServer is listening.",
                      "minimum": 1,
                      "maximum": 65535
                    },
                    "connectionStatus": {
                      "type": "string",
                      "description": "Gets the connection status to the vmmServer.",
                      "readOnly": true
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "Gets any error message if connection to vmmServer is having any issue.",
                      "readOnly": true
                    },
                    "uuid": {
                      "type": "string",
                      "description": "Unique ID of vmmServer.",
                      "readOnly": true
                    },
                    "version": {
                      "type": "string",
                      "description": "Version is the version of the vmmSever.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "fqdn"
                  ]
                },
                "extendedLocation": {
                  "description": "The extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "The extended location name.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ExtendedLocation/customLocations"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "extendedLocation"
              ]
            }
          }
        }
      },
      "put": {
        "operationId": "VmmServers_CreateOrUpdate",
        "tags": [
          "VmmServers"
        ],
        "summary": "Implements VmmServers PUT method.",
        "description": "Onboards the SCVmm fabric as an Azure VmmServer resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vmmServerName",
            "in": "path",
            "description": "Name of the VmmServer.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 54,
            "pattern": "[a-zA-Z0-9-_\\.]"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The VmmServers resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "credentials": {
                      "description": "Credentials to connect to VmmServer.",
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "string",
                          "description": "Username to use to connect to VmmServer."
                        },
                        "password": {
                          "type": "string",
                          "format": "password",
                          "description": "Password to use to connect to VmmServer.",
                          "x-ms-mutability": [
                            "update",
                            "create"
                          ],
                          "x-ms-secret": true
                        }
                      }
                    },
                    "fqdn": {
                      "type": "string",
                      "description": "Fqdn is the hostname/ip of the vmmServer.",
                      "minLength": 1
                    },
                    "port": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Port is the port on which the vmmServer is listening.",
                      "minimum": 1,
                      "maximum": 65535
                    },
                    "connectionStatus": {
                      "type": "string",
                      "description": "Gets the connection status to the vmmServer.",
                      "readOnly": true
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "Gets any error message if connection to vmmServer is having any issue.",
                      "readOnly": true
                    },
                    "uuid": {
                      "type": "string",
                      "description": "Unique ID of vmmServer.",
                      "readOnly": true
                    },
                    "version": {
                      "type": "string",
                      "description": "Version is the version of the vmmSever.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "fqdn"
                  ]
                },
                "extendedLocation": {
                  "description": "The extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "The extended location name.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ExtendedLocation/customLocations"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "extendedLocation"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'VmmServer' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "The VmmServers resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "credentials": {
                      "description": "Credentials to connect to VmmServer.",
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "string",
                          "description": "Username to use to connect to VmmServer."
                        },
                        "password": {
                          "type": "string",
                          "format": "password",
                          "description": "Password to use to connect to VmmServer.",
                          "x-ms-mutability": [
                            "update",
                            "create"
                          ],
                          "x-ms-secret": true
                        }
                      }
                    },
                    "fqdn": {
                      "type": "string",
                      "description": "Fqdn is the hostname/ip of the vmmServer.",
                      "minLength": 1
                    },
                    "port": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Port is the port on which the vmmServer is listening.",
                      "minimum": 1,
                      "maximum": 65535
                    },
                    "connectionStatus": {
                      "type": "string",
                      "description": "Gets the connection status to the vmmServer.",
                      "readOnly": true
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "Gets any error message if connection to vmmServer is having any issue.",
                      "readOnly": true
                    },
                    "uuid": {
                      "type": "string",
                      "description": "Unique ID of vmmServer.",
                      "readOnly": true
                    },
                    "version": {
                      "type": "string",
                      "description": "Version is the version of the vmmSever.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "fqdn"
                  ]
                },
                "extendedLocation": {
                  "description": "The extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "The extended location name.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ExtendedLocation/customLocations"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "extendedLocation"
              ]
            }
          },
          "201": {
            "description": "Resource 'VmmServer' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "The VmmServers resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "credentials": {
                      "description": "Credentials to connect to VmmServer.",
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "string",
                          "description": "Username to use to connect to VmmServer."
                        },
                        "password": {
                          "type": "string",
                          "format": "password",
                          "description": "Password to use to connect to VmmServer.",
                          "x-ms-mutability": [
                            "update",
                            "create"
                          ],
                          "x-ms-secret": true
                        }
                      }
                    },
                    "fqdn": {
                      "type": "string",
                      "description": "Fqdn is the hostname/ip of the vmmServer.",
                      "minLength": 1
                    },
                    "port": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Port is the port on which the vmmServer is listening.",
                      "minimum": 1,
                      "maximum": 65535
                    },
                    "connectionStatus": {
                      "type": "string",
                      "description": "Gets the connection status to the vmmServer.",
                      "readOnly": true
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "Gets any error message if connection to vmmServer is having any issue.",
                      "readOnly": true
                    },
                    "uuid": {
                      "type": "string",
                      "description": "Unique ID of vmmServer.",
                      "readOnly": true
                    },
                    "version": {
                      "type": "string",
                      "description": "Version is the version of the vmmSever.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "fqdn"
                  ]
                },
                "extendedLocation": {
                  "description": "The extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "The extended location name.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ExtendedLocation/customLocations"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "extendedLocation"
              ]
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "VmmServers_Update",
        "tags": [
          "VmmServers"
        ],
        "summary": "Implements VmmServers PATCH method.",
        "description": "Updates the VmmServers resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vmmServerName",
            "in": "path",
            "description": "Name of the VmmServer.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 54,
            "pattern": "[a-zA-Z0-9-_\\.]"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The type used for updating tags in VmmServer resources.",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The VmmServers resource definition.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "credentials": {
                      "description": "Credentials to connect to VmmServer.",
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "string",
                          "description": "Username to use to connect to VmmServer."
                        },
                        "password": {
                          "type": "string",
                          "format": "password",
                          "description": "Password to use to connect to VmmServer.",
                          "x-ms-mutability": [
                            "update",
                            "create"
                          ],
                          "x-ms-secret": true
                        }
                      }
                    },
                    "fqdn": {
                      "type": "string",
                      "description": "Fqdn is the hostname/ip of the vmmServer.",
                      "minLength": 1
                    },
                    "port": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Port is the port on which the vmmServer is listening.",
                      "minimum": 1,
                      "maximum": 65535
                    },
                    "connectionStatus": {
                      "type": "string",
                      "description": "Gets the connection status to the vmmServer.",
                      "readOnly": true
                    },
                    "errorMessage": {
                      "type": "string",
                      "description": "Gets any error message if connection to vmmServer is having any issue.",
                      "readOnly": true
                    },
                    "uuid": {
                      "type": "string",
                      "description": "Unique ID of vmmServer.",
                      "readOnly": true
                    },
                    "version": {
                      "type": "string",
                      "description": "Version is the version of the vmmSever.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "fqdn"
                  ]
                },
                "extendedLocation": {
                  "description": "The extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "The extended location name.",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.ExtendedLocation/customLocations"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "extendedLocation"
              ]
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "VmmServers_Delete",
        "tags": [
          "VmmServers"
        ],
        "summary": "Implements VmmServers DELETE method.",
        "description": "Removes the SCVmm fabric from Azure.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Forces the resource to be deleted.",
            "required": false,
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "x-ms-enum": {
              "name": "ForceDelete",
              "modelAsString": true,
              "values": [
                {
                  "name": "true",
                  "value": "true",
                  "description": "Enable force delete."
                },
                {
                  "name": "false",
                  "value": "false",
                  "description": "Disable force delete."
                }
              ]
            },
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vmmServerName",
            "in": "path",
            "description": "Name of the VmmServer.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 54,
            "pattern": "[a-zA-Z0-9-_\\.]"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/vmmServers/{vmmServerName}/inventoryItems": {
      "get": {
        "operationId": "InventoryItems_ListByVmmServer",
        "tags": [
          "InventoryItems"
        ],
        "summary": "Implements GET for the list of Inventory Items in the VMMServer.",
        "description": "Returns the list of inventoryItems in the given VmmServer.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vmmServerName",
            "in": "path",
            "description": "Name of the VmmServer.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 54,
            "pattern": "[a-zA-Z0-9-_\\.]"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a InventoryItem list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The InventoryItem items on this page",
                  "items": {
                    "type": "object",
                    "description": "Defines the inventory item.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "inventoryType": {
                            "description": "They inventory type.",
                            "type": "string",
                            "enum": [
                              "Cloud",
                              "VirtualNetwork",
                              "VirtualMachine",
                              "VirtualMachineTemplate"
                            ],
                            "x-ms-enum": {
                              "name": "InventoryType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Cloud",
                                  "value": "Cloud",
                                  "description": "Cloud inventory type"
                                },
                                {
                                  "name": "VirtualNetwork",
                                  "value": "VirtualNetwork",
                                  "description": "VirtualNetwork inventory type"
                                },
                                {
                                  "name": "VirtualMachine",
                                  "value": "VirtualMachine",
                                  "description": "VirtualMachine inventory type"
                                },
                                {
                                  "name": "VirtualMachineTemplate",
                                  "value": "VirtualMachineTemplate",
                                  "description": "VirtualMachineTemplate inventory type"
                                }
                              ]
                            }
                          },
                          "managedResourceId": {
                            "type": "string",
                            "description": "Gets the tracked resource id corresponding to the inventory resource.",
                            "readOnly": true
                          },
                          "uuid": {
                            "type": "string",
                            "description": "Gets the UUID (which is assigned by Vmm) for the inventory item.",
                            "readOnly": true
                          },
                          "inventoryItemName": {
                            "type": "string",
                            "description": "Gets the Managed Object name in Vmm for the inventory item.",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the resource.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted",
                              "Created"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The resource is provisioning."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The resource is updating."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The resource is being deleted."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "The resource has been accepted."
                                },
                                {
                                  "name": "Created",
                                  "value": "Created",
                                  "description": "The resource was created."
                                }
                              ]
                            }
                          }
                        },
                        "discriminator": "inventoryType",
                        "required": [
                          "inventoryType"
                        ]
                      },
                      "kind": {
                        "type": "string",
                        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items",
                  "readOnly": true
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/vmmServers/{vmmServerName}/inventoryItems/{inventoryItemResourceName}": {
      "get": {
        "operationId": "InventoryItems_Get",
        "tags": [
          "InventoryItems"
        ],
        "summary": "Implements GET InventoryItem method.",
        "description": "Shows an inventory item.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vmmServerName",
            "in": "path",
            "description": "Name of the VmmServer.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 54,
            "pattern": "[a-zA-Z0-9-_\\.]"
          },
          {
            "name": "inventoryItemResourceName",
            "in": "path",
            "description": "Name of the inventoryItem.",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Defines the inventory item.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "inventoryType": {
                      "description": "They inventory type.",
                      "type": "string",
                      "enum": [
                        "Cloud",
                        "VirtualNetwork",
                        "VirtualMachine",
                        "VirtualMachineTemplate"
                      ],
                      "x-ms-enum": {
                        "name": "InventoryType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Cloud",
                            "value": "Cloud",
                            "description": "Cloud inventory type"
                          },
                          {
                            "name": "VirtualNetwork",
                            "value": "VirtualNetwork",
                            "description": "VirtualNetwork inventory type"
                          },
                          {
                            "name": "VirtualMachine",
                            "value": "VirtualMachine",
                            "description": "VirtualMachine inventory type"
                          },
                          {
                            "name": "VirtualMachineTemplate",
                            "value": "VirtualMachineTemplate",
                            "description": "VirtualMachineTemplate inventory type"
                          }
                        ]
                      }
                    },
                    "managedResourceId": {
                      "type": "string",
                      "description": "Gets the tracked resource id corresponding to the inventory resource.",
                      "readOnly": true
                    },
                    "uuid": {
                      "type": "string",
                      "description": "Gets the UUID (which is assigned by Vmm) for the inventory item.",
                      "readOnly": true
                    },
                    "inventoryItemName": {
                      "type": "string",
                      "description": "Gets the Managed Object name in Vmm for the inventory item.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    }
                  },
                  "discriminator": "inventoryType",
                  "required": [
                    "inventoryType"
                  ]
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "InventoryItems_Create",
        "tags": [
          "InventoryItems"
        ],
        "summary": "Implements InventoryItem PUT method.",
        "description": "Create Or Update InventoryItem.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vmmServerName",
            "in": "path",
            "description": "Name of the VmmServer.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 54,
            "pattern": "[a-zA-Z0-9-_\\.]"
          },
          {
            "name": "inventoryItemResourceName",
            "in": "path",
            "description": "Name of the inventoryItem.",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Defines the inventory item.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "inventoryType": {
                      "description": "They inventory type.",
                      "type": "string",
                      "enum": [
                        "Cloud",
                        "VirtualNetwork",
                        "VirtualMachine",
                        "VirtualMachineTemplate"
                      ],
                      "x-ms-enum": {
                        "name": "InventoryType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Cloud",
                            "value": "Cloud",
                            "description": "Cloud inventory type"
                          },
                          {
                            "name": "VirtualNetwork",
                            "value": "VirtualNetwork",
                            "description": "VirtualNetwork inventory type"
                          },
                          {
                            "name": "VirtualMachine",
                            "value": "VirtualMachine",
                            "description": "VirtualMachine inventory type"
                          },
                          {
                            "name": "VirtualMachineTemplate",
                            "value": "VirtualMachineTemplate",
                            "description": "VirtualMachineTemplate inventory type"
                          }
                        ]
                      }
                    },
                    "managedResourceId": {
                      "type": "string",
                      "description": "Gets the tracked resource id corresponding to the inventory resource.",
                      "readOnly": true
                    },
                    "uuid": {
                      "type": "string",
                      "description": "Gets the UUID (which is assigned by Vmm) for the inventory item.",
                      "readOnly": true
                    },
                    "inventoryItemName": {
                      "type": "string",
                      "description": "Gets the Managed Object name in Vmm for the inventory item.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    }
                  },
                  "discriminator": "inventoryType",
                  "required": [
                    "inventoryType"
                  ]
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'InventoryItem' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Defines the inventory item.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "inventoryType": {
                      "description": "They inventory type.",
                      "type": "string",
                      "enum": [
                        "Cloud",
                        "VirtualNetwork",
                        "VirtualMachine",
                        "VirtualMachineTemplate"
                      ],
                      "x-ms-enum": {
                        "name": "InventoryType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Cloud",
                            "value": "Cloud",
                            "description": "Cloud inventory type"
                          },
                          {
                            "name": "VirtualNetwork",
                            "value": "VirtualNetwork",
                            "description": "VirtualNetwork inventory type"
                          },
                          {
                            "name": "VirtualMachine",
                            "value": "VirtualMachine",
                            "description": "VirtualMachine inventory type"
                          },
                          {
                            "name": "VirtualMachineTemplate",
                            "value": "VirtualMachineTemplate",
                            "description": "VirtualMachineTemplate inventory type"
                          }
                        ]
                      }
                    },
                    "managedResourceId": {
                      "type": "string",
                      "description": "Gets the tracked resource id corresponding to the inventory resource.",
                      "readOnly": true
                    },
                    "uuid": {
                      "type": "string",
                      "description": "Gets the UUID (which is assigned by Vmm) for the inventory item.",
                      "readOnly": true
                    },
                    "inventoryItemName": {
                      "type": "string",
                      "description": "Gets the Managed Object name in Vmm for the inventory item.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    }
                  },
                  "discriminator": "inventoryType",
                  "required": [
                    "inventoryType"
                  ]
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          },
          "201": {
            "description": "Resource 'InventoryItem' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Defines the inventory item.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "inventoryType": {
                      "description": "They inventory type.",
                      "type": "string",
                      "enum": [
                        "Cloud",
                        "VirtualNetwork",
                        "VirtualMachine",
                        "VirtualMachineTemplate"
                      ],
                      "x-ms-enum": {
                        "name": "InventoryType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Cloud",
                            "value": "Cloud",
                            "description": "Cloud inventory type"
                          },
                          {
                            "name": "VirtualNetwork",
                            "value": "VirtualNetwork",
                            "description": "VirtualNetwork inventory type"
                          },
                          {
                            "name": "VirtualMachine",
                            "value": "VirtualMachine",
                            "description": "VirtualMachine inventory type"
                          },
                          {
                            "name": "VirtualMachineTemplate",
                            "value": "VirtualMachineTemplate",
                            "description": "VirtualMachineTemplate inventory type"
                          }
                        ]
                      }
                    },
                    "managedResourceId": {
                      "type": "string",
                      "description": "Gets the tracked resource id corresponding to the inventory resource.",
                      "readOnly": true
                    },
                    "uuid": {
                      "type": "string",
                      "description": "Gets the UUID (which is assigned by Vmm) for the inventory item.",
                      "readOnly": true
                    },
                    "inventoryItemName": {
                      "type": "string",
                      "description": "Gets the Managed Object name in Vmm for the inventory item.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is provisioning."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource has been accepted."
                          },
                          {
                            "name": "Created",
                            "value": "Created",
                            "description": "The resource was created."
                          }
                        ]
                      }
                    }
                  },
                  "discriminator": "inventoryType",
                  "required": [
                    "inventoryType"
                  ]
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "InventoryItems_Delete",
        "tags": [
          "InventoryItems"
        ],
        "summary": "Implements inventoryItem DELETE method.",
        "description": "Deletes an inventoryItem.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vmmServerName",
            "in": "path",
            "description": "Name of the VmmServer.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 54,
            "pattern": "[a-zA-Z0-9-_\\.]"
          },
          {
            "name": "inventoryItemResourceName",
            "in": "path",
            "description": "Name of the inventoryItem.",
            "required": true,
            "type": "string",
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    }
  },
  "definitions": {
    "AllocationMethod": {
      "type": "string",
      "description": "Network address allocation method.",
      "enum": [
        "Dynamic",
        "Static"
      ],
      "x-ms-enum": {
        "name": "AllocationMethod",
        "modelAsString": true,
        "values": [
          {
            "name": "Dynamic",
            "value": "Dynamic",
            "description": "Dynamically allocated address."
          },
          {
            "name": "Static",
            "value": "Static",
            "description": "Statically allocated address."
          }
        ]
      }
    },
    "AvailabilitySet": {
      "type": "object",
      "description": "The AvailabilitySets resource definition.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "availabilitySetName": {
              "type": "string",
              "description": "Name of the availability set.",
              "minLength": 1
            },
            "vmmServerId": {
              "type": "string",
              "format": "arm-id",
              "description": "ARM Id of the vmmServer resource in which this resource resides.",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.ScVmm/vmmServers"
                  }
                ]
              }
            },
            "provisioningState": {
              "description": "Provisioning state of the resource.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted",
                "Created"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "The resource is provisioning."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "The resource is updating."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "The resource is being deleted."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "The resource has been accepted."
                  },
                  {
                    "name": "Created",
                    "value": "Created",
                    "description": "The resource was created."
                  }
                ]
              }
            }
          }
        },
        "extendedLocation": {
          "description": "The extended location.",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "The extended location type."
            },
            "name": {
              "type": "string",
              "format": "arm-id",
              "description": "The extended location name.",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.ExtendedLocation/customLocations"
                  }
                ]
              }
            }
          }
        }
      },
      "required": [
        "extendedLocation"
      ]
    },
    "AvailabilitySetListItem": {
      "type": "object",
      "description": "Availability Set model",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Gets the ARM Id of the microsoft.scvmm/availabilitySets resource.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ScVmm/availabilitySets"
              }
            ]
          }
        },
        "name": {
          "type": "string",
          "description": "Gets or sets the name of the availability set."
        }
      }
    },
    "AvailabilitySetListResult": {
      "type": "object",
      "description": "The response of a AvailabilitySet list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AvailabilitySet items on this page",
          "items": {
            "type": "object",
            "description": "The AvailabilitySets resource definition.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "availabilitySetName": {
                    "type": "string",
                    "description": "Name of the availability set.",
                    "minLength": 1
                  },
                  "vmmServerId": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "ARM Id of the vmmServer resource in which this resource resides.",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.ScVmm/vmmServers"
                        }
                      ]
                    }
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the resource.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted",
                      "Created"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "The resource is provisioning."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "The resource is updating."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "The resource is being deleted."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "The resource has been accepted."
                        },
                        {
                          "name": "Created",
                          "value": "Created",
                          "description": "The resource was created."
                        }
                      ]
                    }
                  }
                }
              },
              "extendedLocation": {
                "description": "The extended location.",
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The extended location type."
                  },
                  "name": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "The extended location name.",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.ExtendedLocation/customLocations"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "required": [
              "extendedLocation"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "AvailabilitySetProperties": {
      "type": "object",
      "description": "Defines the resource properties.",
      "properties": {
        "availabilitySetName": {
          "type": "string",
          "description": "Name of the availability set.",
          "minLength": 1
        },
        "vmmServerId": {
          "type": "string",
          "format": "arm-id",
          "description": "ARM Id of the vmmServer resource in which this resource resides.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ScVmm/vmmServers"
              }
            ]
          }
        },
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted",
            "Created"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "The resource is provisioning."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "The resource is updating."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "The resource is being deleted."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "The resource has been accepted."
              },
              {
                "name": "Created",
                "value": "Created",
                "description": "The resource was created."
              }
            ]
          }
        }
      }
    },
    "AvailabilitySetTagsUpdate": {
      "type": "object",
      "description": "The type used for updating tags in AvailabilitySet resources.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "Checkpoint": {
      "type": "object",
      "description": "Defines the resource properties.",
      "properties": {
        "parentCheckpointID": {
          "type": "string",
          "description": "Gets ID of parent of the checkpoint.",
          "x-ms-client-name": "parentCheckpointId"
        },
        "checkpointID": {
          "type": "string",
          "description": "Gets ID of the checkpoint.",
          "x-ms-client-name": "checkpointId"
        },
        "name": {
          "type": "string",
          "description": "Gets name of the checkpoint."
        },
        "description": {
          "type": "string",
          "description": "Gets description of the checkpoint."
        }
      }
    },
    "Cloud": {
      "type": "object",
      "description": "The Clouds resource definition.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "inventoryItemId": {
              "type": "string",
              "description": "Gets or sets the inventory Item ID for the resource."
            },
            "uuid": {
              "type": "string",
              "description": "Unique ID of the cloud.",
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
            },
            "vmmServerId": {
              "type": "string",
              "format": "arm-id",
              "description": "ARM Id of the vmmServer resource in which this resource resides.",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.ScVmm/vmmServers"
                  }
                ]
              }
            },
            "cloudName": {
              "type": "string",
              "description": "Name of the cloud in VmmServer.",
              "readOnly": true
            },
            "cloudCapacity": {
              "description": "Capacity of the cloud.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "cpuCount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "CPUCount specifies the maximum number of CPUs that can be allocated in the cloud.",
                  "readOnly": true
                },
                "memoryMB": {
                  "type": "integer",
                  "format": "int64",
                  "description": "MemoryMB specifies a memory usage limit in megabytes.",
                  "readOnly": true
                },
                "vmCount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "VMCount gives the max number of VMs that can be deployed in the cloud.",
                  "readOnly": true
                },
                "storageGB": {
                  "type": "integer",
                  "format": "int64",
                  "description": "StorageGB gives the storage in GB present in the cloud.",
                  "readOnly": true
                }
              }
            },
            "storageQoSPolicies": {
              "type": "array",
              "description": "List of QoS policies available for the cloud.",
              "items": {
                "type": "object",
                "description": "The StorageQoSPolicy definition.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the policy."
                  },
                  "id": {
                    "type": "string",
                    "description": "The ID of the QoS policy."
                  },
                  "iopsMaximum": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The maximum IO operations per second."
                  },
                  "iopsMinimum": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The minimum IO operations per second."
                  },
                  "bandwidthLimit": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The Bandwidth Limit for internet traffic."
                  },
                  "policyId": {
                    "type": "string",
                    "description": "The underlying policy."
                  }
                }
              },
              "readOnly": true,
              "x-ms-client-name": "storageQosPolicies"
            },
            "provisioningState": {
              "description": "Provisioning state of the resource.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted",
                "Created"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "The resource is provisioning."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "The resource is updating."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "The resource is being deleted."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "The resource has been accepted."
                  },
                  {
                    "name": "Created",
                    "value": "Created",
                    "description": "The resource was created."
                  }
                ]
              }
            }
          }
        },
        "extendedLocation": {
          "description": "The extended location.",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "The extended location type."
            },
            "name": {
              "type": "string",
              "format": "arm-id",
              "description": "The extended location name.",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.ExtendedLocation/customLocations"
                  }
                ]
              }
            }
          }
        }
      },
      "required": [
        "extendedLocation"
      ]
    },
    "CloudCapacity": {
      "type": "object",
      "description": "Cloud Capacity model",
      "properties": {
        "cpuCount": {
          "type": "integer",
          "format": "int64",
          "description": "CPUCount specifies the maximum number of CPUs that can be allocated in the cloud.",
          "readOnly": true
        },
        "memoryMB": {
          "type": "integer",
          "format": "int64",
          "description": "MemoryMB specifies a memory usage limit in megabytes.",
          "readOnly": true
        },
        "vmCount": {
          "type": "integer",
          "format": "int64",
          "description": "VMCount gives the max number of VMs that can be deployed in the cloud.",
          "readOnly": true
        },
        "storageGB": {
          "type": "integer",
          "format": "int64",
          "description": "StorageGB gives the storage in GB present in the cloud.",
          "readOnly": true
        }
      }
    },
    "CloudInventoryItem": {
      "type": "object",
      "description": "The Cloud inventory item.",
      "allOf": [
        {
          "type": "object",
          "description": "Defines the resource properties.",
          "properties": {
            "inventoryType": {
              "description": "They inventory type.",
              "type": "string",
              "enum": [
                "Cloud",
                "VirtualNetwork",
                "VirtualMachine",
                "VirtualMachineTemplate"
              ],
              "x-ms-enum": {
                "name": "InventoryType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Cloud",
                    "value": "Cloud",
                    "description": "Cloud inventory type"
                  },
                  {
                    "name": "VirtualNetwork",
                    "value": "VirtualNetwork",
                    "description": "VirtualNetwork inventory type"
                  },
                  {
                    "name": "VirtualMachine",
                    "value": "VirtualMachine",
                    "description": "VirtualMachine inventory type"
                  },
                  {
                    "name": "VirtualMachineTemplate",
                    "value": "VirtualMachineTemplate",
                    "description": "VirtualMachineTemplate inventory type"
                  }
                ]
              }
            },
            "managedResourceId": {
              "type": "string",
              "description": "Gets the tracked resource id corresponding to the inventory resource.",
              "readOnly": true
            },
            "uuid": {
              "type": "string",
              "description": "Gets the UUID (which is assigned by Vmm) for the inventory item.",
              "readOnly": true
            },
            "inventoryItemName": {
              "type": "string",
              "description": "Gets the Managed Object name in Vmm for the inventory item.",
              "readOnly": true
            },
            "provisioningState": {
              "description": "Provisioning state of the resource.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted",
                "Created"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "The resource is provisioning."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "The resource is updating."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "The resource is being deleted."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "The resource has been accepted."
                  },
                  {
                    "name": "Created",
                    "value": "Created",
                    "description": "The resource was created."
                  }
                ]
              }
            }
          },
          "discriminator": "inventoryType",
          "required": [
            "inventoryType"
          ]
        }
      ],
      "x-ms-discriminator-value": "Cloud"
    },
    "CloudListResult": {
      "type": "object",
      "description": "The response of a Cloud list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Cloud items on this page",
          "items": {
            "type": "object",
            "description": "The Clouds resource definition.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "inventoryItemId": {
                    "type": "string",
                    "description": "Gets or sets the inventory Item ID for the resource."
                  },
                  "uuid": {
                    "type": "string",
                    "description": "Unique ID of the cloud.",
                    "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
                  },
                  "vmmServerId": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "ARM Id of the vmmServer resource in which this resource resides.",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.ScVmm/vmmServers"
                        }
                      ]
                    }
                  },
                  "cloudName": {
                    "type": "string",
                    "description": "Name of the cloud in VmmServer.",
                    "readOnly": true
                  },
                  "cloudCapacity": {
                    "description": "Capacity of the cloud.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "cpuCount": {
                        "type": "integer",
                        "format": "int64",
                        "description": "CPUCount specifies the maximum number of CPUs that can be allocated in the cloud.",
                        "readOnly": true
                      },
                      "memoryMB": {
                        "type": "integer",
                        "format": "int64",
                        "description": "MemoryMB specifies a memory usage limit in megabytes.",
                        "readOnly": true
                      },
                      "vmCount": {
                        "type": "integer",
                        "format": "int64",
                        "description": "VMCount gives the max number of VMs that can be deployed in the cloud.",
                        "readOnly": true
                      },
                      "storageGB": {
                        "type": "integer",
                        "format": "int64",
                        "description": "StorageGB gives the storage in GB present in the cloud.",
                        "readOnly": true
                      }
                    }
                  },
                  "storageQoSPolicies": {
                    "type": "array",
                    "description": "List of QoS policies available for the cloud.",
                    "items": {
                      "type": "object",
                      "description": "The StorageQoSPolicy definition.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the policy."
                        },
                        "id": {
                          "type": "string",
                          "description": "The ID of the QoS policy."
                        },
                        "iopsMaximum": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The maximum IO operations per second."
                        },
                        "iopsMinimum": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The minimum IO operations per second."
                        },
                        "bandwidthLimit": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The Bandwidth Limit for internet traffic."
                        },
                        "policyId": {
                          "type": "string",
                          "description": "The underlying policy."
                        }
                      }
                    },
                    "readOnly": true,
                    "x-ms-client-name": "storageQosPolicies"
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the resource.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted",
                      "Created"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "The resource is provisioning."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "The resource is updating."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "The resource is being deleted."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "The resource has been accepted."
                        },
                        {
                          "name": "Created",
                          "value": "Created",
                          "description": "The resource was created."
                        }
                      ]
                    }
                  }
                }
              },
              "extendedLocation": {
                "description": "The extended location.",
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The extended location type."
                  },
                  "name": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "The extended location name.",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.ExtendedLocation/customLocations"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "required": [
              "extendedLocation"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "CloudProperties": {
      "type": "object",
      "description": "Defines the resource properties.",
      "properties": {
        "inventoryItemId": {
          "type": "string",
          "description": "Gets or sets the inventory Item ID for the resource."
        },
        "uuid": {
          "type": "string",
          "description": "Unique ID of the cloud.",
          "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
        },
        "vmmServerId": {
          "type": "string",
          "format": "arm-id",
          "description": "ARM Id of the vmmServer resource in which this resource resides.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ScVmm/vmmServers"
              }
            ]
          }
        },
        "cloudName": {
          "type": "string",
          "description": "Name of the cloud in VmmServer.",
          "readOnly": true
        },
        "cloudCapacity": {
          "description": "Capacity of the cloud.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "cpuCount": {
              "type": "integer",
              "format": "int64",
              "description": "CPUCount specifies the maximum number of CPUs that can be allocated in the cloud.",
              "readOnly": true
            },
            "memoryMB": {
              "type": "integer",
              "format": "int64",
              "description": "MemoryMB specifies a memory usage limit in megabytes.",
              "readOnly": true
            },
            "vmCount": {
              "type": "integer",
              "format": "int64",
              "description": "VMCount gives the max number of VMs that can be deployed in the cloud.",
              "readOnly": true
            },
            "storageGB": {
              "type": "integer",
              "format": "int64",
              "description": "StorageGB gives the storage in GB present in the cloud.",
              "readOnly": true
            }
          }
        },
        "storageQoSPolicies": {
          "type": "array",
          "description": "List of QoS policies available for the cloud.",
          "items": {
            "type": "object",
            "description": "The StorageQoSPolicy definition.",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the policy."
              },
              "id": {
                "type": "string",
                "description": "The ID of the QoS policy."
              },
              "iopsMaximum": {
                "type": "integer",
                "format": "int64",
                "description": "The maximum IO operations per second."
              },
              "iopsMinimum": {
                "type": "integer",
                "format": "int64",
                "description": "The minimum IO operations per second."
              },
              "bandwidthLimit": {
                "type": "integer",
                "format": "int64",
                "description": "The Bandwidth Limit for internet traffic."
              },
              "policyId": {
                "type": "string",
                "description": "The underlying policy."
              }
            }
          },
          "readOnly": true,
          "x-ms-client-name": "storageQosPolicies"
        },
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted",
            "Created"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "The resource is provisioning."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "The resource is updating."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "The resource is being deleted."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "The resource has been accepted."
              },
              {
                "name": "Created",
                "value": "Created",
                "description": "The resource was created."
              }
            ]
          }
        }
      }
    },
    "CloudTagsUpdate": {
      "type": "object",
      "description": "The type used for updating tags in Cloud resources.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "CreateDiffDisk": {
      "type": "string",
      "description": "Create diff disk.",
      "enum": [
        "true",
        "false"
      ],
      "x-ms-enum": {
        "name": "CreateDiffDisk",
        "modelAsString": true,
        "values": [
          {
            "name": "true",
            "value": "true",
            "description": "Enable create diff disk."
          },
          {
            "name": "false",
            "value": "false",
            "description": "Disable create diff disk."
          }
        ]
      }
    },
    "DynamicMemoryEnabled": {
      "type": "string",
      "description": "Dynamic memory enabled.",
      "enum": [
        "true",
        "false"
      ],
      "x-ms-enum": {
        "name": "DynamicMemoryEnabled",
        "modelAsString": true,
        "values": [
          {
            "name": "true",
            "value": "true",
            "description": "Enable dynamic memory."
          },
          {
            "name": "false",
            "value": "false",
            "description": "Disable dynamic memory."
          }
        ]
      }
    },
    "ExtendedLocation": {
      "type": "object",
      "description": "The extended location.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The extended location type."
        },
        "name": {
          "type": "string",
          "format": "arm-id",
          "description": "The extended location name.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ExtendedLocation/customLocations"
              }
            ]
          }
        }
      }
    },
    "GuestAgent": {
      "type": "object",
      "description": "Defines the GuestAgent.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "uuid": {
              "type": "string",
              "description": "Gets a unique identifier for this resource.",
              "readOnly": true
            },
            "credentials": {
              "description": "Username / Password Credentials to provision guest agent.",
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "description": "Gets or sets username to connect with the guest."
                },
                "password": {
                  "type": "string",
                  "format": "password",
                  "description": "Gets or sets the password to connect with the guest.",
                  "x-ms-mutability": [
                    "update",
                    "create"
                  ],
                  "x-ms-secret": true
                }
              },
              "required": [
                "username",
                "password"
              ]
            },
            "httpProxyConfig": {
              "description": "HTTP Proxy configuration for the VM.",
              "type": "object",
              "properties": {
                "httpsProxy": {
                  "type": "string",
                  "description": "Gets or sets httpsProxy url."
                }
              }
            },
            "provisioningAction": {
              "description": "Gets or sets the guest agent provisioning action.",
              "type": "string",
              "enum": [
                "install",
                "uninstall",
                "repair"
              ],
              "x-ms-enum": {
                "name": "ProvisioningAction",
                "modelAsString": true,
                "values": [
                  {
                    "name": "install",
                    "value": "install",
                    "description": "Install guest agent."
                  },
                  {
                    "name": "uninstall",
                    "value": "uninstall",
                    "description": "Uninstall guest agent."
                  },
                  {
                    "name": "repair",
                    "value": "repair",
                    "description": "Repair guest agent."
                  }
                ]
              }
            },
            "status": {
              "type": "string",
              "description": "Gets the guest agent status.",
              "readOnly": true
            },
            "customResourceName": {
              "type": "string",
              "description": "Gets the name of the corresponding resource in Kubernetes.",
              "readOnly": true
            },
            "provisioningState": {
              "description": "Provisioning state of the resource.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted",
                "Created"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "The resource is provisioning."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "The resource is updating."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "The resource is being deleted."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "The resource has been accepted."
                  },
                  {
                    "name": "Created",
                    "value": "Created",
                    "description": "The resource was created."
                  }
                ]
              }
            },
            "privateLinkScopeResourceId": {
              "type": "string",
              "format": "arm-id",
              "description": "The resource id of the private link scope this machine is assigned to, if any.",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.HybridCompute/privateLinkScopes"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "GuestAgentListResult": {
      "type": "object",
      "description": "The response of a GuestAgent list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The GuestAgent items on this page",
          "items": {
            "type": "object",
            "description": "Defines the GuestAgent.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "description": "Gets a unique identifier for this resource.",
                    "readOnly": true
                  },
                  "credentials": {
                    "description": "Username / Password Credentials to provision guest agent.",
                    "type": "object",
                    "properties": {
                      "username": {
                        "type": "string",
                        "description": "Gets or sets username to connect with the guest."
                      },
                      "password": {
                        "type": "string",
                        "format": "password",
                        "description": "Gets or sets the password to connect with the guest.",
                        "x-ms-mutability": [
                          "update",
                          "create"
                        ],
                        "x-ms-secret": true
                      }
                    },
                    "required": [
                      "username",
                      "password"
                    ]
                  },
                  "httpProxyConfig": {
                    "description": "HTTP Proxy configuration for the VM.",
                    "type": "object",
                    "properties": {
                      "httpsProxy": {
                        "type": "string",
                        "description": "Gets or sets httpsProxy url."
                      }
                    }
                  },
                  "provisioningAction": {
                    "description": "Gets or sets the guest agent provisioning action.",
                    "type": "string",
                    "enum": [
                      "install",
                      "uninstall",
                      "repair"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningAction",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "install",
                          "value": "install",
                          "description": "Install guest agent."
                        },
                        {
                          "name": "uninstall",
                          "value": "uninstall",
                          "description": "Uninstall guest agent."
                        },
                        {
                          "name": "repair",
                          "value": "repair",
                          "description": "Repair guest agent."
                        }
                      ]
                    }
                  },
                  "status": {
                    "type": "string",
                    "description": "Gets the guest agent status.",
                    "readOnly": true
                  },
                  "customResourceName": {
                    "type": "string",
                    "description": "Gets the name of the corresponding resource in Kubernetes.",
                    "readOnly": true
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the resource.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted",
                      "Created"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "The resource is provisioning."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "The resource is updating."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "The resource is being deleted."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "The resource has been accepted."
                        },
                        {
                          "name": "Created",
                          "value": "Created",
                          "description": "The resource was created."
                        }
                      ]
                    }
                  },
                  "privateLinkScopeResourceId": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "The resource id of the private link scope this machine is assigned to, if any.",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.HybridCompute/privateLinkScopes"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "GuestAgentProperties": {
      "type": "object",
      "description": "Defines the resource properties.",
      "properties": {
        "uuid": {
          "type": "string",
          "description": "Gets a unique identifier for this resource.",
          "readOnly": true
        },
        "credentials": {
          "description": "Username / Password Credentials to provision guest agent.",
          "type": "object",
          "properties": {
            "username": {
              "type": "string",
              "description": "Gets or sets username to connect with the guest."
            },
            "password": {
              "type": "string",
              "format": "password",
              "description": "Gets or sets the password to connect with the guest.",
              "x-ms-mutability": [
                "update",
                "create"
              ],
              "x-ms-secret": true
            }
          },
          "required": [
            "username",
            "password"
          ]
        },
        "httpProxyConfig": {
          "description": "HTTP Proxy configuration for the VM.",
          "type": "object",
          "properties": {
            "httpsProxy": {
              "type": "string",
              "description": "Gets or sets httpsProxy url."
            }
          }
        },
        "provisioningAction": {
          "description": "Gets or sets the guest agent provisioning action.",
          "type": "string",
          "enum": [
            "install",
            "uninstall",
            "repair"
          ],
          "x-ms-enum": {
            "name": "ProvisioningAction",
            "modelAsString": true,
            "values": [
              {
                "name": "install",
                "value": "install",
                "description": "Install guest agent."
              },
              {
                "name": "uninstall",
                "value": "uninstall",
                "description": "Uninstall guest agent."
              },
              {
                "name": "repair",
                "value": "repair",
                "description": "Repair guest agent."
              }
            ]
          }
        },
        "status": {
          "type": "string",
          "description": "Gets the guest agent status.",
          "readOnly": true
        },
        "customResourceName": {
          "type": "string",
          "description": "Gets the name of the corresponding resource in Kubernetes.",
          "readOnly": true
        },
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted",
            "Created"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "The resource is provisioning."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "The resource is updating."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "The resource is being deleted."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "The resource has been accepted."
              },
              {
                "name": "Created",
                "value": "Created",
                "description": "The resource was created."
              }
            ]
          }
        },
        "privateLinkScopeResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "The resource id of the private link scope this machine is assigned to, if any.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.HybridCompute/privateLinkScopes"
              }
            ]
          }
        }
      }
    },
    "GuestCredential": {
      "type": "object",
      "description": "Username / Password Credentials to connect to guest.",
      "properties": {
        "username": {
          "type": "string",
          "description": "Gets or sets username to connect with the guest."
        },
        "password": {
          "type": "string",
          "format": "password",
          "description": "Gets or sets the password to connect with the guest.",
          "x-ms-mutability": [
            "update",
            "create"
          ],
          "x-ms-secret": true
        }
      },
      "required": [
        "username",
        "password"
      ]
    },
    "HardwareProfile": {
      "type": "object",
      "description": "Defines the resource properties.",
      "properties": {
        "memoryMB": {
          "type": "integer",
          "format": "int32",
          "description": "MemoryMB is the size of a virtual machine's memory, in MB."
        },
        "cpuCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of vCPUs for the vm."
        },
        "limitCpuForMigration": {
          "description": "Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.",
          "type": "string",
          "enum": [
            "true",
            "false"
          ],
          "x-ms-enum": {
            "name": "LimitCpuForMigration",
            "modelAsString": true,
            "values": [
              {
                "name": "true",
                "value": "true",
                "description": "Enable limit CPU for migration."
              },
              {
                "name": "false",
                "value": "false",
                "description": "Disable limit CPU for migration."
              }
            ]
          }
        },
        "dynamicMemoryEnabled": {
          "description": "Gets or sets a value indicating whether to enable dynamic memory or not.",
          "type": "string",
          "enum": [
            "true",
            "false"
          ],
          "x-ms-enum": {
            "name": "DynamicMemoryEnabled",
            "modelAsString": true,
            "values": [
              {
                "name": "true",
                "value": "true",
                "description": "Enable dynamic memory."
              },
              {
                "name": "false",
                "value": "false",
                "description": "Disable dynamic memory."
              }
            ]
          }
        },
        "dynamicMemoryMaxMB": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the max dynamic memory for the vm."
        },
        "dynamicMemoryMinMB": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the min dynamic memory for the vm."
        },
        "isHighlyAvailable": {
          "description": "Gets highly available property.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "true",
            "false"
          ],
          "x-ms-enum": {
            "name": "IsHighlyAvailable",
            "modelAsString": true,
            "values": [
              {
                "name": "true",
                "value": "true",
                "description": "Enable highly available."
              },
              {
                "name": "false",
                "value": "false",
                "description": "Disable highly available."
              }
            ]
          }
        }
      }
    },
    "HardwareProfileUpdate": {
      "type": "object",
      "description": "Defines the resource update properties.",
      "properties": {
        "memoryMB": {
          "type": "integer",
          "format": "int32",
          "description": "MemoryMB is the size of a virtual machine's memory, in MB."
        },
        "cpuCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of vCPUs for the vm."
        },
        "limitCpuForMigration": {
          "description": "Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.",
          "type": "string",
          "enum": [
            "true",
            "false"
          ],
          "x-ms-enum": {
            "name": "LimitCpuForMigration",
            "modelAsString": true,
            "values": [
              {
                "name": "true",
                "value": "true",
                "description": "Enable limit CPU for migration."
              },
              {
                "name": "false",
                "value": "false",
                "description": "Disable limit CPU for migration."
              }
            ]
          }
        },
        "dynamicMemoryEnabled": {
          "description": "Gets or sets a value indicating whether to enable dynamic memory or not.",
          "type": "string",
          "enum": [
            "true",
            "false"
          ],
          "x-ms-enum": {
            "name": "DynamicMemoryEnabled",
            "modelAsString": true,
            "values": [
              {
                "name": "true",
                "value": "true",
                "description": "Enable dynamic memory."
              },
              {
                "name": "false",
                "value": "false",
                "description": "Disable dynamic memory."
              }
            ]
          }
        },
        "dynamicMemoryMaxMB": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the max dynamic memory for the vm."
        },
        "dynamicMemoryMinMB": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the min dynamic memory for the vm."
        }
      }
    },
    "HttpProxyConfiguration": {
      "type": "object",
      "description": "HTTP Proxy configuration for the VM.",
      "properties": {
        "httpsProxy": {
          "type": "string",
          "description": "Gets or sets httpsProxy url."
        }
      }
    },
    "InfrastructureProfile": {
      "type": "object",
      "description": "Specifies the vmmServer infrastructure specific settings for the virtual machine instance.",
      "properties": {
        "inventoryItemId": {
          "type": "string",
          "description": "Gets or sets the inventory Item ID for the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "vmmServerId": {
          "type": "string",
          "format": "arm-id",
          "description": "ARM Id of the vmmServer resource in which this resource resides.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ScVmm/vmmServers"
              }
            ]
          }
        },
        "cloudId": {
          "type": "string",
          "format": "arm-id",
          "description": "ARM Id of the cloud resource to use for deploying the vm.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ScVmm/clouds"
              }
            ]
          }
        },
        "templateId": {
          "type": "string",
          "format": "arm-id",
          "description": "ARM Id of the template resource to use for deploying the vm.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ScVmm/virtualMachineTemplates"
              }
            ]
          }
        },
        "vmName": {
          "type": "string",
          "description": "VMName is the name of VM on the SCVmm server.",
          "minLength": 1,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "uuid": {
          "type": "string",
          "description": "Unique ID of the virtual machine.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "lastRestoredVMCheckpoint": {
          "description": "Last restored checkpoint in the vm.",
          "readOnly": true,
          "x-ms-client-name": "lastRestoredVmCheckpoint",
          "type": "object",
          "properties": {
            "parentCheckpointID": {
              "type": "string",
              "description": "Gets ID of parent of the checkpoint.",
              "x-ms-client-name": "parentCheckpointId"
            },
            "checkpointID": {
              "type": "string",
              "description": "Gets ID of the checkpoint.",
              "x-ms-client-name": "checkpointId"
            },
            "name": {
              "type": "string",
              "description": "Gets name of the checkpoint."
            },
            "description": {
              "type": "string",
              "description": "Gets description of the checkpoint."
            }
          }
        },
        "checkpoints": {
          "type": "array",
          "description": "Checkpoints in the vm.",
          "items": {
            "type": "object",
            "description": "Defines the resource properties.",
            "properties": {
              "parentCheckpointID": {
                "type": "string",
                "description": "Gets ID of parent of the checkpoint.",
                "x-ms-client-name": "parentCheckpointId"
              },
              "checkpointID": {
                "type": "string",
                "description": "Gets ID of the checkpoint.",
                "x-ms-client-name": "checkpointId"
              },
              "name": {
                "type": "string",
                "description": "Gets name of the checkpoint."
              },
              "description": {
                "type": "string",
                "description": "Gets description of the checkpoint."
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "checkpointID"
          ]
        },
        "checkpointType": {
          "type": "string",
          "description": "Type of checkpoint supported for the vm.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "generation": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the generation for the vm.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "biosGuid": {
          "type": "string",
          "description": "Gets or sets the bios guid for the vm.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "InfrastructureProfileUpdate": {
      "type": "object",
      "description": "Specifies the vmmServer infrastructure specific update settings for the virtual machine instance.",
      "properties": {
        "checkpointType": {
          "type": "string",
          "description": "Type of checkpoint supported for the vm.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      }
    },
    "InventoryItem": {
      "type": "object",
      "description": "Defines the inventory item.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "inventoryType": {
              "description": "They inventory type.",
              "type": "string",
              "enum": [
                "Cloud",
                "VirtualNetwork",
                "VirtualMachine",
                "VirtualMachineTemplate"
              ],
              "x-ms-enum": {
                "name": "InventoryType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Cloud",
                    "value": "Cloud",
                    "description": "Cloud inventory type"
                  },
                  {
                    "name": "VirtualNetwork",
                    "value": "VirtualNetwork",
                    "description": "VirtualNetwork inventory type"
                  },
                  {
                    "name": "VirtualMachine",
                    "value": "VirtualMachine",
                    "description": "VirtualMachine inventory type"
                  },
                  {
                    "name": "VirtualMachineTemplate",
                    "value": "VirtualMachineTemplate",
                    "description": "VirtualMachineTemplate inventory type"
                  }
                ]
              }
            },
            "managedResourceId": {
              "type": "string",
              "description": "Gets the tracked resource id corresponding to the inventory resource.",
              "readOnly": true
            },
            "uuid": {
              "type": "string",
              "description": "Gets the UUID (which is assigned by Vmm) for the inventory item.",
              "readOnly": true
            },
            "inventoryItemName": {
              "type": "string",
              "description": "Gets the Managed Object name in Vmm for the inventory item.",
              "readOnly": true
            },
            "provisioningState": {
              "description": "Provisioning state of the resource.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted",
                "Created"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "The resource is provisioning."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "The resource is updating."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "The resource is being deleted."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "The resource has been accepted."
                  },
                  {
                    "name": "Created",
                    "value": "Created",
                    "description": "The resource was created."
                  }
                ]
              }
            }
          },
          "discriminator": "inventoryType",
          "required": [
            "inventoryType"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
        }
      }
    },
    "InventoryItemDetails": {
      "type": "object",
      "description": "Defines the resource properties.",
      "properties": {
        "inventoryItemId": {
          "type": "string",
          "description": "Gets or sets the inventory Item ID for the resource."
        },
        "inventoryItemName": {
          "type": "string",
          "description": "Gets or sets the Managed Object name in Vmm for the resource."
        }
      }
    },
    "InventoryItemListResult": {
      "type": "object",
      "description": "The response of a InventoryItem list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The InventoryItem items on this page",
          "items": {
            "type": "object",
            "description": "Defines the inventory item.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "inventoryType": {
                    "description": "They inventory type.",
                    "type": "string",
                    "enum": [
                      "Cloud",
                      "VirtualNetwork",
                      "VirtualMachine",
                      "VirtualMachineTemplate"
                    ],
                    "x-ms-enum": {
                      "name": "InventoryType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Cloud",
                          "value": "Cloud",
                          "description": "Cloud inventory type"
                        },
                        {
                          "name": "VirtualNetwork",
                          "value": "VirtualNetwork",
                          "description": "VirtualNetwork inventory type"
                        },
                        {
                          "name": "VirtualMachine",
                          "value": "VirtualMachine",
                          "description": "VirtualMachine inventory type"
                        },
                        {
                          "name": "VirtualMachineTemplate",
                          "value": "VirtualMachineTemplate",
                          "description": "VirtualMachineTemplate inventory type"
                        }
                      ]
                    }
                  },
                  "managedResourceId": {
                    "type": "string",
                    "description": "Gets the tracked resource id corresponding to the inventory resource.",
                    "readOnly": true
                  },
                  "uuid": {
                    "type": "string",
                    "description": "Gets the UUID (which is assigned by Vmm) for the inventory item.",
                    "readOnly": true
                  },
                  "inventoryItemName": {
                    "type": "string",
                    "description": "Gets the Managed Object name in Vmm for the inventory item.",
                    "readOnly": true
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the resource.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted",
                      "Created"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "The resource is provisioning."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "The resource is updating."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "The resource is being deleted."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "The resource has been accepted."
                        },
                        {
                          "name": "Created",
                          "value": "Created",
                          "description": "The resource was created."
                        }
                      ]
                    }
                  }
                },
                "discriminator": "inventoryType",
                "required": [
                  "inventoryType"
                ]
              },
              "kind": {
                "type": "string",
                "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "InventoryItemProperties": {
      "type": "object",
      "description": "Defines the resource properties.",
      "properties": {
        "inventoryType": {
          "description": "They inventory type.",
          "type": "string",
          "enum": [
            "Cloud",
            "VirtualNetwork",
            "VirtualMachine",
            "VirtualMachineTemplate"
          ],
          "x-ms-enum": {
            "name": "InventoryType",
            "modelAsString": true,
            "values": [
              {
                "name": "Cloud",
                "value": "Cloud",
                "description": "Cloud inventory type"
              },
              {
                "name": "VirtualNetwork",
                "value": "VirtualNetwork",
                "description": "VirtualNetwork inventory type"
              },
              {
                "name": "VirtualMachine",
                "value": "VirtualMachine",
                "description": "VirtualMachine inventory type"
              },
              {
                "name": "VirtualMachineTemplate",
                "value": "VirtualMachineTemplate",
                "description": "VirtualMachineTemplate inventory type"
              }
            ]
          }
        },
        "managedResourceId": {
          "type": "string",
          "description": "Gets the tracked resource id corresponding to the inventory resource.",
          "readOnly": true
        },
        "uuid": {
          "type": "string",
          "description": "Gets the UUID (which is assigned by Vmm) for the inventory item.",
          "readOnly": true
        },
        "inventoryItemName": {
          "type": "string",
          "description": "Gets the Managed Object name in Vmm for the inventory item.",
          "readOnly": true
        },
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted",
            "Created"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "The resource is provisioning."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "The resource is updating."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "The resource is being deleted."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "The resource has been accepted."
              },
              {
                "name": "Created",
                "value": "Created",
                "description": "The resource was created."
              }
            ]
          }
        }
      },
      "discriminator": "inventoryType",
      "required": [
        "inventoryType"
      ]
    },
    "InventoryType": {
      "type": "string",
      "description": "The inventory type",
      "enum": [
        "Cloud",
        "VirtualNetwork",
        "VirtualMachine",
        "VirtualMachineTemplate"
      ],
      "x-ms-enum": {
        "name": "InventoryType",
        "modelAsString": true,
        "values": [
          {
            "name": "Cloud",
            "value": "Cloud",
            "description": "Cloud inventory type"
          },
          {
            "name": "VirtualNetwork",
            "value": "VirtualNetwork",
            "description": "VirtualNetwork inventory type"
          },
          {
            "name": "VirtualMachine",
            "value": "VirtualMachine",
            "description": "VirtualMachine inventory type"
          },
          {
            "name": "VirtualMachineTemplate",
            "value": "VirtualMachineTemplate",
            "description": "VirtualMachineTemplate inventory type"
          }
        ]
      }
    },
    "IsCustomizable": {
      "type": "string",
      "description": "Customizable.",
      "enum": [
        "true",
        "false"
      ],
      "x-ms-enum": {
        "name": "IsCustomizable",
        "modelAsString": true,
        "values": [
          {
            "name": "true",
            "value": "true",
            "description": "Enable customizable."
          },
          {
            "name": "false",
            "value": "false",
            "description": "Disable customizable."
          }
        ]
      }
    },
    "IsHighlyAvailable": {
      "type": "string",
      "description": "Highly available.",
      "enum": [
        "true",
        "false"
      ],
      "x-ms-enum": {
        "name": "IsHighlyAvailable",
        "modelAsString": true,
        "values": [
          {
            "name": "true",
            "value": "true",
            "description": "Enable highly available."
          },
          {
            "name": "false",
            "value": "false",
            "description": "Disable highly available."
          }
        ]
      }
    },
    "LimitCpuForMigration": {
      "type": "string",
      "description": "Limit CPU for migration.",
      "enum": [
        "true",
        "false"
      ],
      "x-ms-enum": {
        "name": "LimitCpuForMigration",
        "modelAsString": true,
        "values": [
          {
            "name": "true",
            "value": "true",
            "description": "Enable limit CPU for migration."
          },
          {
            "name": "false",
            "value": "false",
            "description": "Disable limit CPU for migration."
          }
        ]
      }
    },
    "NetworkInterface": {
      "type": "object",
      "description": "Network Interface model",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the name of the network interface."
        },
        "displayName": {
          "type": "string",
          "description": "Gets the display name of the network interface as shown in the vmmServer. This is the fallback label for a NIC when the name is not set.",
          "readOnly": true
        },
        "ipv4Addresses": {
          "type": "array",
          "description": "Gets the nic ipv4 addresses.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "ipv6Addresses": {
          "type": "array",
          "description": "Gets the nic ipv6 addresses.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "macAddress": {
          "type": "string",
          "description": "Gets or sets the nic MAC address."
        },
        "virtualNetworkId": {
          "type": "string",
          "format": "arm-id",
          "description": "Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ScVmm/virtualNetwork"
              }
            ]
          }
        },
        "networkName": {
          "type": "string",
          "description": "Gets the name of the virtual network in vmmServer that the nic is connected to.",
          "readOnly": true
        },
        "ipv4AddressType": {
          "description": "Gets or sets the ipv4 address type.",
          "type": "string",
          "enum": [
            "Dynamic",
            "Static"
          ],
          "x-ms-enum": {
            "name": "AllocationMethod",
            "modelAsString": true,
            "values": [
              {
                "name": "Dynamic",
                "value": "Dynamic",
                "description": "Dynamically allocated address."
              },
              {
                "name": "Static",
                "value": "Static",
                "description": "Statically allocated address."
              }
            ]
          }
        },
        "ipv6AddressType": {
          "description": "Gets or sets the ipv6 address type.",
          "type": "string",
          "enum": [
            "Dynamic",
            "Static"
          ],
          "x-ms-enum": {
            "name": "AllocationMethod",
            "modelAsString": true,
            "values": [
              {
                "name": "Dynamic",
                "value": "Dynamic",
                "description": "Dynamically allocated address."
              },
              {
                "name": "Static",
                "value": "Static",
                "description": "Statically allocated address."
              }
            ]
          }
        },
        "macAddressType": {
          "description": "Gets or sets the mac address type.",
          "type": "string",
          "enum": [
            "Dynamic",
            "Static"
          ],
          "x-ms-enum": {
            "name": "AllocationMethod",
            "modelAsString": true,
            "values": [
              {
                "name": "Dynamic",
                "value": "Dynamic",
                "description": "Dynamically allocated address."
              },
              {
                "name": "Static",
                "value": "Static",
                "description": "Statically allocated address."
              }
            ]
          }
        },
        "nicId": {
          "type": "string",
          "description": "Gets or sets the nic id."
        }
      }
    },
    "NetworkInterfaceUpdate": {
      "type": "object",
      "description": "Network Interface Update model",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the name of the network interface."
        },
        "macAddress": {
          "type": "string",
          "description": "Gets or sets the nic MAC address."
        },
        "virtualNetworkId": {
          "type": "string",
          "format": "arm-id",
          "description": "Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ScVmm/virtualNetwork"
              }
            ]
          }
        },
        "ipv4AddressType": {
          "description": "Gets or sets the ipv4 address type.",
          "type": "string",
          "enum": [
            "Dynamic",
            "Static"
          ],
          "x-ms-enum": {
            "name": "AllocationMethod",
            "modelAsString": true,
            "values": [
              {
                "name": "Dynamic",
                "value": "Dynamic",
                "description": "Dynamically allocated address."
              },
              {
                "name": "Static",
                "value": "Static",
                "description": "Statically allocated address."
              }
            ]
          }
        },
        "ipv6AddressType": {
          "description": "Gets or sets the ipv6 address type.",
          "type": "string",
          "enum": [
            "Dynamic",
            "Static"
          ],
          "x-ms-enum": {
            "name": "AllocationMethod",
            "modelAsString": true,
            "values": [
              {
                "name": "Dynamic",
                "value": "Dynamic",
                "description": "Dynamically allocated address."
              },
              {
                "name": "Static",
                "value": "Static",
                "description": "Statically allocated address."
              }
            ]
          }
        },
        "macAddressType": {
          "description": "Gets or sets the mac address type.",
          "type": "string",
          "enum": [
            "Dynamic",
            "Static"
          ],
          "x-ms-enum": {
            "name": "AllocationMethod",
            "modelAsString": true,
            "values": [
              {
                "name": "Dynamic",
                "value": "Dynamic",
                "description": "Dynamically allocated address."
              },
              {
                "name": "Static",
                "value": "Static",
                "description": "Statically allocated address."
              }
            ]
          }
        },
        "nicId": {
          "type": "string",
          "description": "Gets or sets the nic id."
        }
      }
    },
    "NetworkProfile": {
      "type": "object",
      "description": "Defines the resource properties.",
      "properties": {
        "networkInterfaces": {
          "type": "array",
          "description": "Gets or sets the list of network interfaces associated with the virtual machine.",
          "items": {
            "type": "object",
            "description": "Network Interface model",
            "properties": {
              "name": {
                "type": "string",
                "description": "Gets or sets the name of the network interface."
              },
              "displayName": {
                "type": "string",
                "description": "Gets the display name of the network interface as shown in the vmmServer. This is the fallback label for a NIC when the name is not set.",
                "readOnly": true
              },
              "ipv4Addresses": {
                "type": "array",
                "description": "Gets the nic ipv4 addresses.",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              },
              "ipv6Addresses": {
                "type": "array",
                "description": "Gets the nic ipv6 addresses.",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              },
              "macAddress": {
                "type": "string",
                "description": "Gets or sets the nic MAC address."
              },
              "virtualNetworkId": {
                "type": "string",
                "format": "arm-id",
                "description": "Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.",
                "x-ms-arm-id-details": {
                  "allowedResources": [
                    {
                      "type": "Microsoft.ScVmm/virtualNetwork"
                    }
                  ]
                }
              },
              "networkName": {
                "type": "string",
                "description": "Gets the name of the virtual network in vmmServer that the nic is connected to.",
                "readOnly": true
              },
              "ipv4AddressType": {
                "description": "Gets or sets the ipv4 address type.",
                "type": "string",
                "enum": [
                  "Dynamic",
                  "Static"
                ],
                "x-ms-enum": {
                  "name": "AllocationMethod",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Dynamic",
                      "value": "Dynamic",
                      "description": "Dynamically allocated address."
                    },
                    {
                      "name": "Static",
                      "value": "Static",
                      "description": "Statically allocated address."
                    }
                  ]
                }
              },
              "ipv6AddressType": {
                "description": "Gets or sets the ipv6 address type.",
                "type": "string",
                "enum": [
                  "Dynamic",
                  "Static"
                ],
                "x-ms-enum": {
                  "name": "AllocationMethod",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Dynamic",
                      "value": "Dynamic",
                      "description": "Dynamically allocated address."
                    },
                    {
                      "name": "Static",
                      "value": "Static",
                      "description": "Statically allocated address."
                    }
                  ]
                }
              },
              "macAddressType": {
                "description": "Gets or sets the mac address type.",
                "type": "string",
                "enum": [
                  "Dynamic",
                  "Static"
                ],
                "x-ms-enum": {
                  "name": "AllocationMethod",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Dynamic",
                      "value": "Dynamic",
                      "description": "Dynamically allocated address."
                    },
                    {
                      "name": "Static",
                      "value": "Static",
                      "description": "Statically allocated address."
                    }
                  ]
                }
              },
              "nicId": {
                "type": "string",
                "description": "Gets or sets the nic id."
              }
            }
          },
          "x-ms-identifiers": [
            "name",
            "nicId"
          ]
        }
      }
    },
    "NetworkProfileUpdate": {
      "type": "object",
      "description": "Defines the resource update properties.",
      "properties": {
        "networkInterfaces": {
          "type": "array",
          "description": "Gets or sets the list of network interfaces associated with the virtual machine.",
          "items": {
            "type": "object",
            "description": "Network Interface Update model",
            "properties": {
              "name": {
                "type": "string",
                "description": "Gets or sets the name of the network interface."
              },
              "macAddress": {
                "type": "string",
                "description": "Gets or sets the nic MAC address."
              },
              "virtualNetworkId": {
                "type": "string",
                "format": "arm-id",
                "description": "Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.",
                "x-ms-arm-id-details": {
                  "allowedResources": [
                    {
                      "type": "Microsoft.ScVmm/virtualNetwork"
                    }
                  ]
                }
              },
              "ipv4AddressType": {
                "description": "Gets or sets the ipv4 address type.",
                "type": "string",
                "enum": [
                  "Dynamic",
                  "Static"
                ],
                "x-ms-enum": {
                  "name": "AllocationMethod",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Dynamic",
                      "value": "Dynamic",
                      "description": "Dynamically allocated address."
                    },
                    {
                      "name": "Static",
                      "value": "Static",
                      "description": "Statically allocated address."
                    }
                  ]
                }
              },
              "ipv6AddressType": {
                "description": "Gets or sets the ipv6 address type.",
                "type": "string",
                "enum": [
                  "Dynamic",
                  "Static"
                ],
                "x-ms-enum": {
                  "name": "AllocationMethod",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Dynamic",
                      "value": "Dynamic",
                      "description": "Dynamically allocated address."
                    },
                    {
                      "name": "Static",
                      "value": "Static",
                      "description": "Statically allocated address."
                    }
                  ]
                }
              },
              "macAddressType": {
                "description": "Gets or sets the mac address type.",
                "type": "string",
                "enum": [
                  "Dynamic",
                  "Static"
                ],
                "x-ms-enum": {
                  "name": "AllocationMethod",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Dynamic",
                      "value": "Dynamic",
                      "description": "Dynamically allocated address."
                    },
                    {
                      "name": "Static",
                      "value": "Static",
                      "description": "Statically allocated address."
                    }
                  ]
                }
              },
              "nicId": {
                "type": "string",
                "description": "Gets or sets the nic id."
              }
            }
          },
          "x-ms-identifiers": [
            "name",
            "nicId"
          ]
        }
      }
    },
    "OsProfileForVmInstance": {
      "type": "object",
      "description": "Defines the resource properties.",
      "properties": {
        "adminUsername": {
          "type": "string",
          "description": "Gets or sets the admin username."
        },
        "adminPassword": {
          "type": "string",
          "format": "password",
          "description": "Admin password of the virtual machine.",
          "x-ms-mutability": [
            "update",
            "create"
          ],
          "x-ms-secret": true
        },
        "computerName": {
          "type": "string",
          "description": "Gets or sets computer name."
        },
        "osType": {
          "description": "Gets the type of the os.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Windows",
            "Linux",
            "Other"
          ],
          "x-ms-enum": {
            "name": "OsType",
            "modelAsString": true,
            "values": [
              {
                "name": "Windows",
                "value": "Windows",
                "description": "Windows operating system."
              },
              {
                "name": "Linux",
                "value": "Linux",
                "description": "Linux operating system."
              },
              {
                "name": "Other",
                "value": "Other",
                "description": "Other operating system."
              }
            ]
          }
        },
        "osSku": {
          "type": "string",
          "description": "Gets os sku.",
          "readOnly": true
        },
        "osVersion": {
          "type": "string",
          "description": "Gets os version.",
          "readOnly": true
        },
        "domainName": {
          "type": "string",
          "description": "Gets or sets the domain name."
        },
        "domainUsername": {
          "type": "string",
          "description": "Gets or sets the domain username."
        },
        "domainPassword": {
          "type": "string",
          "format": "password",
          "description": "Password of the domain the VM has to join.",
          "x-ms-mutability": [
            "update",
            "create"
          ],
          "x-ms-secret": true
        },
        "workgroup": {
          "type": "string",
          "description": "Gets or sets the workgroup."
        },
        "productKey": {
          "type": "string",
          "format": "password",
          "description": "Gets or sets the product key.Input format xxxxx-xxxxx-xxxxx-xxxxx-xxxxx",
          "x-ms-mutability": [
            "create"
          ],
          "x-ms-secret": true
        },
        "timezone": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the index value of the timezone."
        },
        "runOnceCommands": {
          "type": "string",
          "description": "Get or sets the commands to be run once at the time of creation separated by semicolons."
        }
      }
    },
    "OsType": {
      "type": "string",
      "description": "Virtual machine operating system type.",
      "enum": [
        "Windows",
        "Linux",
        "Other"
      ],
      "x-ms-enum": {
        "name": "OsType",
        "modelAsString": true,
        "values": [
          {
            "name": "Windows",
            "value": "Windows",
            "description": "Windows operating system."
          },
          {
            "name": "Linux",
            "value": "Linux",
            "description": "Linux operating system."
          },
          {
            "name": "Other",
            "value": "Other",
            "description": "Other operating system."
          }
        ]
      }
    },
    "ProvisioningAction": {
      "type": "string",
      "description": "Guest agent provisioning action.",
      "enum": [
        "install",
        "uninstall",
        "repair"
      ],
      "x-ms-enum": {
        "name": "ProvisioningAction",
        "modelAsString": true,
        "values": [
          {
            "name": "install",
            "value": "install",
            "description": "Install guest agent."
          },
          {
            "name": "uninstall",
            "value": "uninstall",
            "description": "Uninstall guest agent."
          },
          {
            "name": "repair",
            "value": "repair",
            "description": "Repair guest agent."
          }
        ]
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The provisioning state of the resource.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Updating",
        "Deleting",
        "Accepted",
        "Created"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "The resource is provisioning."
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "The resource is updating."
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "The resource is being deleted."
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "The resource has been accepted."
          },
          {
            "name": "Created",
            "value": "Created",
            "description": "The resource was created."
          }
        ]
      },
      "readOnly": true
    },
    "StopVirtualMachineOptions": {
      "type": "object",
      "description": "Defines the stop action properties.",
      "properties": {
        "skipShutdown": {
          "type": "string",
          "description": "Gets or sets a value indicating whether to request non-graceful VM shutdown. True value for this flag indicates non-graceful shutdown whereas false indicates otherwise. Defaults to false.",
          "default": "false",
          "enum": [
            "true",
            "false"
          ],
          "x-ms-enum": {
            "name": "SkipShutdown",
            "modelAsString": true,
            "values": [
              {
                "name": "true",
                "value": "true",
                "description": "Enable skip shutdown."
              },
              {
                "name": "false",
                "value": "false",
                "description": "Disable skip shutdown."
              }
            ]
          }
        }
      }
    },
    "StorageProfile": {
      "type": "object",
      "description": "Defines the resource properties.",
      "properties": {
        "disks": {
          "type": "array",
          "description": "Gets or sets the list of virtual disks associated with the virtual machine.",
          "items": {
            "type": "object",
            "description": "Virtual disk model",
            "properties": {
              "name": {
                "type": "string",
                "description": "Gets or sets the name of the disk."
              },
              "displayName": {
                "type": "string",
                "description": "Gets the display name of the virtual disk as shown in the vmmServer. This is the fallback label for a disk when the name is not set.",
                "readOnly": true
              },
              "diskId": {
                "type": "string",
                "description": "Gets or sets the disk id."
              },
              "diskSizeGB": {
                "type": "integer",
                "format": "int32",
                "description": "Gets or sets the disk total size."
              },
              "maxDiskSizeGB": {
                "type": "integer",
                "format": "int32",
                "description": "Gets the max disk size.",
                "readOnly": true
              },
              "bus": {
                "type": "integer",
                "format": "int32",
                "description": "Gets or sets the disk bus."
              },
              "lun": {
                "type": "integer",
                "format": "int32",
                "description": "Gets or sets the disk lun."
              },
              "busType": {
                "type": "string",
                "description": "Gets or sets the disk bus type."
              },
              "vhdType": {
                "type": "string",
                "description": "Gets or sets the disk vhd type."
              },
              "volumeType": {
                "type": "string",
                "description": "Gets the disk volume type.",
                "readOnly": true
              },
              "vhdFormatType": {
                "type": "string",
                "description": "Gets the disk vhd format type.",
                "readOnly": true
              },
              "templateDiskId": {
                "type": "string",
                "description": "Gets or sets the disk id in the template.",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "storageQoSPolicy": {
                "description": "The QoS policy for the disk.",
                "x-ms-client-name": "storageQosPolicy",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the policy."
                  },
                  "id": {
                    "type": "string",
                    "description": "The ID of the QoS policy."
                  }
                }
              },
              "createDiffDisk": {
                "description": "Gets or sets a value indicating diff disk.",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "type": "string",
                "enum": [
                  "true",
                  "false"
                ],
                "x-ms-enum": {
                  "name": "CreateDiffDisk",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "true",
                      "value": "true",
                      "description": "Enable create diff disk."
                    },
                    {
                      "name": "false",
                      "value": "false",
                      "description": "Disable create diff disk."
                    }
                  ]
                }
              }
            }
          },
          "x-ms-identifiers": [
            "diskId",
            "name"
          ]
        }
      }
    },
    "StorageProfileUpdate": {
      "type": "object",
      "description": "Defines the resource update properties.",
      "properties": {
        "disks": {
          "type": "array",
          "description": "Gets or sets the list of virtual disks associated with the virtual machine.",
          "items": {
            "type": "object",
            "description": "Virtual Disk Update model",
            "properties": {
              "name": {
                "type": "string",
                "description": "Gets or sets the name of the disk."
              },
              "diskId": {
                "type": "string",
                "description": "Gets or sets the disk id."
              },
              "diskSizeGB": {
                "type": "integer",
                "format": "int32",
                "description": "Gets or sets the disk total size."
              },
              "bus": {
                "type": "integer",
                "format": "int32",
                "description": "Gets or sets the disk bus."
              },
              "lun": {
                "type": "integer",
                "format": "int32",
                "description": "Gets or sets the disk lun."
              },
              "busType": {
                "type": "string",
                "description": "Gets or sets the disk bus type."
              },
              "vhdType": {
                "type": "string",
                "description": "Gets or sets the disk vhd type."
              },
              "storageQoSPolicy": {
                "description": "The QoS policy for the disk.",
                "x-ms-client-name": "storageQosPolicy",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the policy."
                  },
                  "id": {
                    "type": "string",
                    "description": "The ID of the QoS policy."
                  }
                }
              }
            }
          },
          "x-ms-identifiers": [
            "diskId",
            "name"
          ]
        }
      }
    },
    "StorageQosPolicy": {
      "type": "object",
      "description": "The StorageQoSPolicy definition.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the policy."
        },
        "id": {
          "type": "string",
          "description": "The ID of the QoS policy."
        },
        "iopsMaximum": {
          "type": "integer",
          "format": "int64",
          "description": "The maximum IO operations per second."
        },
        "iopsMinimum": {
          "type": "integer",
          "format": "int64",
          "description": "The minimum IO operations per second."
        },
        "bandwidthLimit": {
          "type": "integer",
          "format": "int64",
          "description": "The Bandwidth Limit for internet traffic."
        },
        "policyId": {
          "type": "string",
          "description": "The underlying policy."
        }
      }
    },
    "StorageQosPolicyDetails": {
      "type": "object",
      "description": "The StorageQoSPolicyDetails definition.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the policy."
        },
        "id": {
          "type": "string",
          "description": "The ID of the QoS policy."
        }
      }
    },
    "VirtualDisk": {
      "type": "object",
      "description": "Virtual disk model",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the name of the disk."
        },
        "displayName": {
          "type": "string",
          "description": "Gets the display name of the virtual disk as shown in the vmmServer. This is the fallback label for a disk when the name is not set.",
          "readOnly": true
        },
        "diskId": {
          "type": "string",
          "description": "Gets or sets the disk id."
        },
        "diskSizeGB": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the disk total size."
        },
        "maxDiskSizeGB": {
          "type": "integer",
          "format": "int32",
          "description": "Gets the max disk size.",
          "readOnly": true
        },
        "bus": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the disk bus."
        },
        "lun": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the disk lun."
        },
        "busType": {
          "type": "string",
          "description": "Gets or sets the disk bus type."
        },
        "vhdType": {
          "type": "string",
          "description": "Gets or sets the disk vhd type."
        },
        "volumeType": {
          "type": "string",
          "description": "Gets the disk volume type.",
          "readOnly": true
        },
        "vhdFormatType": {
          "type": "string",
          "description": "Gets the disk vhd format type.",
          "readOnly": true
        },
        "templateDiskId": {
          "type": "string",
          "description": "Gets or sets the disk id in the template.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "storageQoSPolicy": {
          "description": "The QoS policy for the disk.",
          "x-ms-client-name": "storageQosPolicy",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the policy."
            },
            "id": {
              "type": "string",
              "description": "The ID of the QoS policy."
            }
          }
        },
        "createDiffDisk": {
          "description": "Gets or sets a value indicating diff disk.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "string",
          "enum": [
            "true",
            "false"
          ],
          "x-ms-enum": {
            "name": "CreateDiffDisk",
            "modelAsString": true,
            "values": [
              {
                "name": "true",
                "value": "true",
                "description": "Enable create diff disk."
              },
              {
                "name": "false",
                "value": "false",
                "description": "Disable create diff disk."
              }
            ]
          }
        }
      }
    },
    "VirtualDiskUpdate": {
      "type": "object",
      "description": "Virtual Disk Update model",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the name of the disk."
        },
        "diskId": {
          "type": "string",
          "description": "Gets or sets the disk id."
        },
        "diskSizeGB": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the disk total size."
        },
        "bus": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the disk bus."
        },
        "lun": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the disk lun."
        },
        "busType": {
          "type": "string",
          "description": "Gets or sets the disk bus type."
        },
        "vhdType": {
          "type": "string",
          "description": "Gets or sets the disk vhd type."
        },
        "storageQoSPolicy": {
          "description": "The QoS policy for the disk.",
          "x-ms-client-name": "storageQosPolicy",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the policy."
            },
            "id": {
              "type": "string",
              "description": "The ID of the QoS policy."
            }
          }
        }
      }
    },
    "VirtualMachineCreateCheckpoint": {
      "type": "object",
      "description": "Defines the create checkpoint action properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the checkpoint."
        },
        "description": {
          "type": "string",
          "description": "Description of the checkpoint."
        }
      }
    },
    "VirtualMachineDeleteCheckpoint": {
      "type": "object",
      "description": "Defines the delete checkpoint action properties.",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the checkpoint to be deleted."
        }
      }
    },
    "VirtualMachineInstance": {
      "type": "object",
      "description": "Define the virtualMachineInstance.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "availabilitySets": {
              "type": "array",
              "description": "Availability Sets in vm.",
              "items": {
                "type": "object",
                "description": "Availability Set model",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "Gets the ARM Id of the microsoft.scvmm/availabilitySets resource.",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.ScVmm/availabilitySets"
                        }
                      ]
                    }
                  },
                  "name": {
                    "type": "string",
                    "description": "Gets or sets the name of the availability set."
                  }
                }
              }
            },
            "osProfile": {
              "description": "OS properties.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "object",
              "properties": {
                "adminUsername": {
                  "type": "string",
                  "description": "Gets or sets the admin username."
                },
                "adminPassword": {
                  "type": "string",
                  "format": "password",
                  "description": "Admin password of the virtual machine.",
                  "x-ms-mutability": [
                    "update",
                    "create"
                  ],
                  "x-ms-secret": true
                },
                "computerName": {
                  "type": "string",
                  "description": "Gets or sets computer name."
                },
                "osType": {
                  "description": "Gets the type of the os.",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Windows",
                    "Linux",
                    "Other"
                  ],
                  "x-ms-enum": {
                    "name": "OsType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Windows",
                        "value": "Windows",
                        "description": "Windows operating system."
                      },
                      {
                        "name": "Linux",
                        "value": "Linux",
                        "description": "Linux operating system."
                      },
                      {
                        "name": "Other",
                        "value": "Other",
                        "description": "Other operating system."
                      }
                    ]
                  }
                },
                "osSku": {
                  "type": "string",
                  "description": "Gets os sku.",
                  "readOnly": true
                },
                "osVersion": {
                  "type": "string",
                  "description": "Gets os version.",
                  "readOnly": true
                },
                "domainName": {
                  "type": "string",
                  "description": "Gets or sets the domain name."
                },
                "domainUsername": {
                  "type": "string",
                  "description": "Gets or sets the domain username."
                },
                "domainPassword": {
                  "type": "string",
                  "format": "password",
                  "description": "Password of the domain the VM has to join.",
                  "x-ms-mutability": [
                    "update",
                    "create"
                  ],
                  "x-ms-secret": true
                },
                "workgroup": {
                  "type": "string",
                  "description": "Gets or sets the workgroup."
                },
                "productKey": {
                  "type": "string",
                  "format": "password",
                  "description": "Gets or sets the product key.Input format xxxxx-xxxxx-xxxxx-xxxxx-xxxxx",
                  "x-ms-mutability": [
                    "create"
                  ],
                  "x-ms-secret": true
                },
                "timezone": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Gets or sets the index value of the timezone."
                },
                "runOnceCommands": {
                  "type": "string",
                  "description": "Get or sets the commands to be run once at the time of creation separated by semicolons."
                }
              }
            },
            "hardwareProfile": {
              "description": "Hardware properties.",
              "type": "object",
              "properties": {
                "memoryMB": {
                  "type": "integer",
                  "format": "int32",
                  "description": "MemoryMB is the size of a virtual machine's memory, in MB."
                },
                "cpuCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Gets or sets the number of vCPUs for the vm."
                },
                "limitCpuForMigration": {
                  "description": "Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.",
                  "type": "string",
                  "enum": [
                    "true",
                    "false"
                  ],
                  "x-ms-enum": {
                    "name": "LimitCpuForMigration",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "true",
                        "value": "true",
                        "description": "Enable limit CPU for migration."
                      },
                      {
                        "name": "false",
                        "value": "false",
                        "description": "Disable limit CPU for migration."
                      }
                    ]
                  }
                },
                "dynamicMemoryEnabled": {
                  "description": "Gets or sets a value indicating whether to enable dynamic memory or not.",
                  "type": "string",
                  "enum": [
                    "true",
                    "false"
                  ],
                  "x-ms-enum": {
                    "name": "DynamicMemoryEnabled",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "true",
                        "value": "true",
                        "description": "Enable dynamic memory."
                      },
                      {
                        "name": "false",
                        "value": "false",
                        "description": "Disable dynamic memory."
                      }
                    ]
                  }
                },
                "dynamicMemoryMaxMB": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Gets or sets the max dynamic memory for the vm."
                },
                "dynamicMemoryMinMB": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Gets or sets the min dynamic memory for the vm."
                },
                "isHighlyAvailable": {
                  "description": "Gets highly available property.",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "true",
                    "false"
                  ],
                  "x-ms-enum": {
                    "name": "IsHighlyAvailable",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "true",
                        "value": "true",
                        "description": "Enable highly available."
                      },
                      {
                        "name": "false",
                        "value": "false",
                        "description": "Disable highly available."
                      }
                    ]
                  }
                }
              }
            },
            "networkProfile": {
              "description": "Network properties.",
              "type": "object",
              "properties": {
                "networkInterfaces": {
                  "type": "array",
                  "description": "Gets or sets the list of network interfaces associated with the virtual machine.",
                  "items": {
                    "type": "object",
                    "description": "Network Interface model",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Gets or sets the name of the network interface."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Gets the display name of the network interface as shown in the vmmServer. This is the fallback label for a NIC when the name is not set.",
                        "readOnly": true
                      },
                      "ipv4Addresses": {
                        "type": "array",
                        "description": "Gets the nic ipv4 addresses.",
                        "items": {
                          "type": "string"
                        },
                        "readOnly": true
                      },
                      "ipv6Addresses": {
                        "type": "array",
                        "description": "Gets the nic ipv6 addresses.",
                        "items": {
                          "type": "string"
                        },
                        "readOnly": true
                      },
                      "macAddress": {
                        "type": "string",
                        "description": "Gets or sets the nic MAC address."
                      },
                      "virtualNetworkId": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.ScVmm/virtualNetwork"
                            }
                          ]
                        }
                      },
                      "networkName": {
                        "type": "string",
                        "description": "Gets the name of the virtual network in vmmServer that the nic is connected to.",
                        "readOnly": true
                      },
                      "ipv4AddressType": {
                        "description": "Gets or sets the ipv4 address type.",
                        "type": "string",
                        "enum": [
                          "Dynamic",
                          "Static"
                        ],
                        "x-ms-enum": {
                          "name": "AllocationMethod",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Dynamic",
                              "value": "Dynamic",
                              "description": "Dynamically allocated address."
                            },
                            {
                              "name": "Static",
                              "value": "Static",
                              "description": "Statically allocated address."
                            }
                          ]
                        }
                      },
                      "ipv6AddressType": {
                        "description": "Gets or sets the ipv6 address type.",
                        "type": "string",
                        "enum": [
                          "Dynamic",
                          "Static"
                        ],
                        "x-ms-enum": {
                          "name": "AllocationMethod",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Dynamic",
                              "value": "Dynamic",
                              "description": "Dynamically allocated address."
                            },
                            {
                              "name": "Static",
                              "value": "Static",
                              "description": "Statically allocated address."
                            }
                          ]
                        }
                      },
                      "macAddressType": {
                        "description": "Gets or sets the mac address type.",
                        "type": "string",
                        "enum": [
                          "Dynamic",
                          "Static"
                        ],
                        "x-ms-enum": {
                          "name": "AllocationMethod",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Dynamic",
                              "value": "Dynamic",
                              "description": "Dynamically allocated address."
                            },
                            {
                              "name": "Static",
                              "value": "Static",
                              "description": "Statically allocated address."
                            }
                          ]
                        }
                      },
                      "nicId": {
                        "type": "string",
                        "description": "Gets or sets the nic id."
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name",
                    "nicId"
                  ]
                }
              }
            },
            "storageProfile": {
              "description": "Storage properties.",
              "type": "object",
              "properties": {
                "disks": {
                  "type": "array",
                  "description": "Gets or sets the list of virtual disks associated with the virtual machine.",
                  "items": {
                    "type": "object",
                    "description": "Virtual disk model",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Gets or sets the name of the disk."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Gets the display name of the virtual disk as shown in the vmmServer. This is the fallback label for a disk when the name is not set.",
                        "readOnly": true
                      },
                      "diskId": {
                        "type": "string",
                        "description": "Gets or sets the disk id."
                      },
                      "diskSizeGB": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Gets or sets the disk total size."
                      },
                      "maxDiskSizeGB": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Gets the max disk size.",
                        "readOnly": true
                      },
                      "bus": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Gets or sets the disk bus."
                      },
                      "lun": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Gets or sets the disk lun."
                      },
                      "busType": {
                        "type": "string",
                        "description": "Gets or sets the disk bus type."
                      },
                      "vhdType": {
                        "type": "string",
                        "description": "Gets or sets the disk vhd type."
                      },
                      "volumeType": {
                        "type": "string",
                        "description": "Gets the disk volume type.",
                        "readOnly": true
                      },
                      "vhdFormatType": {
                        "type": "string",
                        "description": "Gets the disk vhd format type.",
                        "readOnly": true
                      },
                      "templateDiskId": {
                        "type": "string",
                        "description": "Gets or sets the disk id in the template.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "storageQoSPolicy": {
                        "description": "The QoS policy for the disk.",
                        "x-ms-client-name": "storageQosPolicy",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the policy."
                          },
                          "id": {
                            "type": "string",
                            "description": "The ID of the QoS policy."
                          }
                        }
                      },
                      "createDiffDisk": {
                        "description": "Gets or sets a value indicating diff disk.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "string",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "x-ms-enum": {
                          "name": "CreateDiffDisk",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "true",
                              "value": "true",
                              "description": "Enable create diff disk."
                            },
                            {
                              "name": "false",
                              "value": "false",
                              "description": "Disable create diff disk."
                            }
                          ]
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "diskId",
                    "name"
                  ]
                }
              }
            },
            "infrastructureProfile": {
              "description": "Gets the infrastructure profile.",
              "type": "object",
              "properties": {
                "inventoryItemId": {
                  "type": "string",
                  "description": "Gets or sets the inventory Item ID for the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "vmmServerId": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "ARM Id of the vmmServer resource in which this resource resides.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.ScVmm/vmmServers"
                      }
                    ]
                  }
                },
                "cloudId": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "ARM Id of the cloud resource to use for deploying the vm.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.ScVmm/clouds"
                      }
                    ]
                  }
                },
                "templateId": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "ARM Id of the template resource to use for deploying the vm.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.ScVmm/virtualMachineTemplates"
                      }
                    ]
                  }
                },
                "vmName": {
                  "type": "string",
                  "description": "VMName is the name of VM on the SCVmm server.",
                  "minLength": 1,
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "uuid": {
                  "type": "string",
                  "description": "Unique ID of the virtual machine.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "lastRestoredVMCheckpoint": {
                  "description": "Last restored checkpoint in the vm.",
                  "readOnly": true,
                  "x-ms-client-name": "lastRestoredVmCheckpoint",
                  "type": "object",
                  "properties": {
                    "parentCheckpointID": {
                      "type": "string",
                      "description": "Gets ID of parent of the checkpoint.",
                      "x-ms-client-name": "parentCheckpointId"
                    },
                    "checkpointID": {
                      "type": "string",
                      "description": "Gets ID of the checkpoint.",
                      "x-ms-client-name": "checkpointId"
                    },
                    "name": {
                      "type": "string",
                      "description": "Gets name of the checkpoint."
                    },
                    "description": {
                      "type": "string",
                      "description": "Gets description of the checkpoint."
                    }
                  }
                },
                "checkpoints": {
                  "type": "array",
                  "description": "Checkpoints in the vm.",
                  "items": {
                    "type": "object",
                    "description": "Defines the resource properties.",
                    "properties": {
                      "parentCheckpointID": {
                        "type": "string",
                        "description": "Gets ID of parent of the checkpoint.",
                        "x-ms-client-name": "parentCheckpointId"
                      },
                      "checkpointID": {
                        "type": "string",
                        "description": "Gets ID of the checkpoint.",
                        "x-ms-client-name": "checkpointId"
                      },
                      "name": {
                        "type": "string",
                        "description": "Gets name of the checkpoint."
                      },
                      "description": {
                        "type": "string",
                        "description": "Gets description of the checkpoint."
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": [
                    "checkpointID"
                  ]
                },
                "checkpointType": {
                  "type": "string",
                  "description": "Type of checkpoint supported for the vm.",
                  "x-ms-mutability": [
                    "read",
                    "update",
                    "create"
                  ]
                },
                "generation": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Gets or sets the generation for the vm.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "biosGuid": {
                  "type": "string",
                  "description": "Gets or sets the bios guid for the vm.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                }
              }
            },
            "powerState": {
              "type": "string",
              "description": "Gets the power state of the virtual machine.",
              "readOnly": true
            },
            "provisioningState": {
              "description": "Provisioning state of the resource.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted",
                "Created"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "The resource is provisioning."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "The resource is updating."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "The resource is being deleted."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "The resource has been accepted."
                  },
                  {
                    "name": "Created",
                    "value": "Created",
                    "description": "The resource was created."
                  }
                ]
              }
            }
          }
        },
        "extendedLocation": {
          "description": "Gets or sets the extended location.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "The extended location type."
            },
            "name": {
              "type": "string",
              "format": "arm-id",
              "description": "The extended location name.",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.ExtendedLocation/customLocations"
                  }
                ]
              }
            }
          }
        }
      },
      "required": [
        "extendedLocation"
      ]
    },
    "VirtualMachineInstanceListResult": {
      "type": "object",
      "description": "The response of a VirtualMachineInstance list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The VirtualMachineInstance items on this page",
          "items": {
            "type": "object",
            "description": "Define the virtualMachineInstance.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "availabilitySets": {
                    "type": "array",
                    "description": "Availability Sets in vm.",
                    "items": {
                      "type": "object",
                      "description": "Availability Set model",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "Gets the ARM Id of the microsoft.scvmm/availabilitySets resource.",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.ScVmm/availabilitySets"
                              }
                            ]
                          }
                        },
                        "name": {
                          "type": "string",
                          "description": "Gets or sets the name of the availability set."
                        }
                      }
                    }
                  },
                  "osProfile": {
                    "description": "OS properties.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "type": "object",
                    "properties": {
                      "adminUsername": {
                        "type": "string",
                        "description": "Gets or sets the admin username."
                      },
                      "adminPassword": {
                        "type": "string",
                        "format": "password",
                        "description": "Admin password of the virtual machine.",
                        "x-ms-mutability": [
                          "update",
                          "create"
                        ],
                        "x-ms-secret": true
                      },
                      "computerName": {
                        "type": "string",
                        "description": "Gets or sets computer name."
                      },
                      "osType": {
                        "description": "Gets the type of the os.",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "Windows",
                          "Linux",
                          "Other"
                        ],
                        "x-ms-enum": {
                          "name": "OsType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Windows",
                              "value": "Windows",
                              "description": "Windows operating system."
                            },
                            {
                              "name": "Linux",
                              "value": "Linux",
                              "description": "Linux operating system."
                            },
                            {
                              "name": "Other",
                              "value": "Other",
                              "description": "Other operating system."
                            }
                          ]
                        }
                      },
                      "osSku": {
                        "type": "string",
                        "description": "Gets os sku.",
                        "readOnly": true
                      },
                      "osVersion": {
                        "type": "string",
                        "description": "Gets os version.",
                        "readOnly": true
                      },
                      "domainName": {
                        "type": "string",
                        "description": "Gets or sets the domain name."
                      },
                      "domainUsername": {
                        "type": "string",
                        "description": "Gets or sets the domain username."
                      },
                      "domainPassword": {
                        "type": "string",
                        "format": "password",
                        "description": "Password of the domain the VM has to join.",
                        "x-ms-mutability": [
                          "update",
                          "create"
                        ],
                        "x-ms-secret": true
                      },
                      "workgroup": {
                        "type": "string",
                        "description": "Gets or sets the workgroup."
                      },
                      "productKey": {
                        "type": "string",
                        "format": "password",
                        "description": "Gets or sets the product key.Input format xxxxx-xxxxx-xxxxx-xxxxx-xxxxx",
                        "x-ms-mutability": [
                          "create"
                        ],
                        "x-ms-secret": true
                      },
                      "timezone": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Gets or sets the index value of the timezone."
                      },
                      "runOnceCommands": {
                        "type": "string",
                        "description": "Get or sets the commands to be run once at the time of creation separated by semicolons."
                      }
                    }
                  },
                  "hardwareProfile": {
                    "description": "Hardware properties.",
                    "type": "object",
                    "properties": {
                      "memoryMB": {
                        "type": "integer",
                        "format": "int32",
                        "description": "MemoryMB is the size of a virtual machine's memory, in MB."
                      },
                      "cpuCount": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Gets or sets the number of vCPUs for the vm."
                      },
                      "limitCpuForMigration": {
                        "description": "Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.",
                        "type": "string",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "x-ms-enum": {
                          "name": "LimitCpuForMigration",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "true",
                              "value": "true",
                              "description": "Enable limit CPU for migration."
                            },
                            {
                              "name": "false",
                              "value": "false",
                              "description": "Disable limit CPU for migration."
                            }
                          ]
                        }
                      },
                      "dynamicMemoryEnabled": {
                        "description": "Gets or sets a value indicating whether to enable dynamic memory or not.",
                        "type": "string",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "x-ms-enum": {
                          "name": "DynamicMemoryEnabled",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "true",
                              "value": "true",
                              "description": "Enable dynamic memory."
                            },
                            {
                              "name": "false",
                              "value": "false",
                              "description": "Disable dynamic memory."
                            }
                          ]
                        }
                      },
                      "dynamicMemoryMaxMB": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Gets or sets the max dynamic memory for the vm."
                      },
                      "dynamicMemoryMinMB": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Gets or sets the min dynamic memory for the vm."
                      },
                      "isHighlyAvailable": {
                        "description": "Gets highly available property.",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "true",
                          "false"
                        ],
                        "x-ms-enum": {
                          "name": "IsHighlyAvailable",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "true",
                              "value": "true",
                              "description": "Enable highly available."
                            },
                            {
                              "name": "false",
                              "value": "false",
                              "description": "Disable highly available."
                            }
                          ]
                        }
                      }
                    }
                  },
                  "networkProfile": {
                    "description": "Network properties.",
                    "type": "object",
                    "properties": {
                      "networkInterfaces": {
                        "type": "array",
                        "description": "Gets or sets the list of network interfaces associated with the virtual machine.",
                        "items": {
                          "type": "object",
                          "description": "Network Interface model",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Gets or sets the name of the network interface."
                            },
                            "displayName": {
                              "type": "string",
                              "description": "Gets the display name of the network interface as shown in the vmmServer. This is the fallback label for a NIC when the name is not set.",
                              "readOnly": true
                            },
                            "ipv4Addresses": {
                              "type": "array",
                              "description": "Gets the nic ipv4 addresses.",
                              "items": {
                                "type": "string"
                              },
                              "readOnly": true
                            },
                            "ipv6Addresses": {
                              "type": "array",
                              "description": "Gets the nic ipv6 addresses.",
                              "items": {
                                "type": "string"
                              },
                              "readOnly": true
                            },
                            "macAddress": {
                              "type": "string",
                              "description": "Gets or sets the nic MAC address."
                            },
                            "virtualNetworkId": {
                              "type": "string",
                              "format": "arm-id",
                              "description": "Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.ScVmm/virtualNetwork"
                                  }
                                ]
                              }
                            },
                            "networkName": {
                              "type": "string",
                              "description": "Gets the name of the virtual network in vmmServer that the nic is connected to.",
                              "readOnly": true
                            },
                            "ipv4AddressType": {
                              "description": "Gets or sets the ipv4 address type.",
                              "type": "string",
                              "enum": [
                                "Dynamic",
                                "Static"
                              ],
                              "x-ms-enum": {
                                "name": "AllocationMethod",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Dynamic",
                                    "value": "Dynamic",
                                    "description": "Dynamically allocated address."
                                  },
                                  {
                                    "name": "Static",
                                    "value": "Static",
                                    "description": "Statically allocated address."
                                  }
                                ]
                              }
                            },
                            "ipv6AddressType": {
                              "description": "Gets or sets the ipv6 address type.",
                              "type": "string",
                              "enum": [
                                "Dynamic",
                                "Static"
                              ],
                              "x-ms-enum": {
                                "name": "AllocationMethod",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Dynamic",
                                    "value": "Dynamic",
                                    "description": "Dynamically allocated address."
                                  },
                                  {
                                    "name": "Static",
                                    "value": "Static",
                                    "description": "Statically allocated address."
                                  }
                                ]
                              }
                            },
                            "macAddressType": {
                              "description": "Gets or sets the mac address type.",
                              "type": "string",
                              "enum": [
                                "Dynamic",
                                "Static"
                              ],
                              "x-ms-enum": {
                                "name": "AllocationMethod",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Dynamic",
                                    "value": "Dynamic",
                                    "description": "Dynamically allocated address."
                                  },
                                  {
                                    "name": "Static",
                                    "value": "Static",
                                    "description": "Statically allocated address."
                                  }
                                ]
                              }
                            },
                            "nicId": {
                              "type": "string",
                              "description": "Gets or sets the nic id."
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name",
                          "nicId"
                        ]
                      }
                    }
                  },
                  "storageProfile": {
                    "description": "Storage properties.",
                    "type": "object",
                    "properties": {
                      "disks": {
                        "type": "array",
                        "description": "Gets or sets the list of virtual disks associated with the virtual machine.",
                        "items": {
                          "type": "object",
                          "description": "Virtual disk model",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Gets or sets the name of the disk."
                            },
                            "displayName": {
                              "type": "string",
                              "description": "Gets the display name of the virtual disk as shown in the vmmServer. This is the fallback label for a disk when the name is not set.",
                              "readOnly": true
                            },
                            "diskId": {
                              "type": "string",
                              "description": "Gets or sets the disk id."
                            },
                            "diskSizeGB": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Gets or sets the disk total size."
                            },
                            "maxDiskSizeGB": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Gets the max disk size.",
                              "readOnly": true
                            },
                            "bus": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Gets or sets the disk bus."
                            },
                            "lun": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Gets or sets the disk lun."
                            },
                            "busType": {
                              "type": "string",
                              "description": "Gets or sets the disk bus type."
                            },
                            "vhdType": {
                              "type": "string",
                              "description": "Gets or sets the disk vhd type."
                            },
                            "volumeType": {
                              "type": "string",
                              "description": "Gets the disk volume type.",
                              "readOnly": true
                            },
                            "vhdFormatType": {
                              "type": "string",
                              "description": "Gets the disk vhd format type.",
                              "readOnly": true
                            },
                            "templateDiskId": {
                              "type": "string",
                              "description": "Gets or sets the disk id in the template.",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ]
                            },
                            "storageQoSPolicy": {
                              "description": "The QoS policy for the disk.",
                              "x-ms-client-name": "storageQosPolicy",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the policy."
                                },
                                "id": {
                                  "type": "string",
                                  "description": "The ID of the QoS policy."
                                }
                              }
                            },
                            "createDiffDisk": {
                              "description": "Gets or sets a value indicating diff disk.",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "type": "string",
                              "enum": [
                                "true",
                                "false"
                              ],
                              "x-ms-enum": {
                                "name": "CreateDiffDisk",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "true",
                                    "value": "true",
                                    "description": "Enable create diff disk."
                                  },
                                  {
                                    "name": "false",
                                    "value": "false",
                                    "description": "Disable create diff disk."
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "diskId",
                          "name"
                        ]
                      }
                    }
                  },
                  "infrastructureProfile": {
                    "description": "Gets the infrastructure profile.",
                    "type": "object",
                    "properties": {
                      "inventoryItemId": {
                        "type": "string",
                        "description": "Gets or sets the inventory Item ID for the resource.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "vmmServerId": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "ARM Id of the vmmServer resource in which this resource resides.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.ScVmm/vmmServers"
                            }
                          ]
                        }
                      },
                      "cloudId": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "ARM Id of the cloud resource to use for deploying the vm.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.ScVmm/clouds"
                            }
                          ]
                        }
                      },
                      "templateId": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "ARM Id of the template resource to use for deploying the vm.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.ScVmm/virtualMachineTemplates"
                            }
                          ]
                        }
                      },
                      "vmName": {
                        "type": "string",
                        "description": "VMName is the name of VM on the SCVmm server.",
                        "minLength": 1,
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "uuid": {
                        "type": "string",
                        "description": "Unique ID of the virtual machine.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "lastRestoredVMCheckpoint": {
                        "description": "Last restored checkpoint in the vm.",
                        "readOnly": true,
                        "x-ms-client-name": "lastRestoredVmCheckpoint",
                        "type": "object",
                        "properties": {
                          "parentCheckpointID": {
                            "type": "string",
                            "description": "Gets ID of parent of the checkpoint.",
                            "x-ms-client-name": "parentCheckpointId"
                          },
                          "checkpointID": {
                            "type": "string",
                            "description": "Gets ID of the checkpoint.",
                            "x-ms-client-name": "checkpointId"
                          },
                          "name": {
                            "type": "string",
                            "description": "Gets name of the checkpoint."
                          },
                          "description": {
                            "type": "string",
                            "description": "Gets description of the checkpoint."
                          }
                        }
                      },
                      "checkpoints": {
                        "type": "array",
                        "description": "Checkpoints in the vm.",
                        "items": {
                          "type": "object",
                          "description": "Defines the resource properties.",
                          "properties": {
                            "parentCheckpointID": {
                              "type": "string",
                              "description": "Gets ID of parent of the checkpoint.",
                              "x-ms-client-name": "parentCheckpointId"
                            },
                            "checkpointID": {
                              "type": "string",
                              "description": "Gets ID of the checkpoint.",
                              "x-ms-client-name": "checkpointId"
                            },
                            "name": {
                              "type": "string",
                              "description": "Gets name of the checkpoint."
                            },
                            "description": {
                              "type": "string",
                              "description": "Gets description of the checkpoint."
                            }
                          }
                        },
                        "readOnly": true,
                        "x-ms-identifiers": [
                          "checkpointID"
                        ]
                      },
                      "checkpointType": {
                        "type": "string",
                        "description": "Type of checkpoint supported for the vm.",
                        "x-ms-mutability": [
                          "read",
                          "update",
                          "create"
                        ]
                      },
                      "generation": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Gets or sets the generation for the vm.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "biosGuid": {
                        "type": "string",
                        "description": "Gets or sets the bios guid for the vm.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      }
                    }
                  },
                  "powerState": {
                    "type": "string",
                    "description": "Gets the power state of the virtual machine.",
                    "readOnly": true
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the resource.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted",
                      "Created"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "The resource is provisioning."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "The resource is updating."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "The resource is being deleted."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "The resource has been accepted."
                        },
                        {
                          "name": "Created",
                          "value": "Created",
                          "description": "The resource was created."
                        }
                      ]
                    }
                  }
                }
              },
              "extendedLocation": {
                "description": "Gets or sets the extended location.",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The extended location type."
                  },
                  "name": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "The extended location name.",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.ExtendedLocation/customLocations"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "required": [
              "extendedLocation"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "VirtualMachineInstanceProperties": {
      "type": "object",
      "description": "Defines the resource properties.",
      "properties": {
        "availabilitySets": {
          "type": "array",
          "description": "Availability Sets in vm.",
          "items": {
            "type": "object",
            "description": "Availability Set model",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Gets the ARM Id of the microsoft.scvmm/availabilitySets resource.",
                "x-ms-arm-id-details": {
                  "allowedResources": [
                    {
                      "type": "Microsoft.ScVmm/availabilitySets"
                    }
                  ]
                }
              },
              "name": {
                "type": "string",
                "description": "Gets or sets the name of the availability set."
              }
            }
          }
        },
        "osProfile": {
          "description": "OS properties.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "properties": {
            "adminUsername": {
              "type": "string",
              "description": "Gets or sets the admin username."
            },
            "adminPassword": {
              "type": "string",
              "format": "password",
              "description": "Admin password of the virtual machine.",
              "x-ms-mutability": [
                "update",
                "create"
              ],
              "x-ms-secret": true
            },
            "computerName": {
              "type": "string",
              "description": "Gets or sets computer name."
            },
            "osType": {
              "description": "Gets the type of the os.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Windows",
                "Linux",
                "Other"
              ],
              "x-ms-enum": {
                "name": "OsType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Windows",
                    "value": "Windows",
                    "description": "Windows operating system."
                  },
                  {
                    "name": "Linux",
                    "value": "Linux",
                    "description": "Linux operating system."
                  },
                  {
                    "name": "Other",
                    "value": "Other",
                    "description": "Other operating system."
                  }
                ]
              }
            },
            "osSku": {
              "type": "string",
              "description": "Gets os sku.",
              "readOnly": true
            },
            "osVersion": {
              "type": "string",
              "description": "Gets os version.",
              "readOnly": true
            },
            "domainName": {
              "type": "string",
              "description": "Gets or sets the domain name."
            },
            "domainUsername": {
              "type": "string",
              "description": "Gets or sets the domain username."
            },
            "domainPassword": {
              "type": "string",
              "format": "password",
              "description": "Password of the domain the VM has to join.",
              "x-ms-mutability": [
                "update",
                "create"
              ],
              "x-ms-secret": true
            },
            "workgroup": {
              "type": "string",
              "description": "Gets or sets the workgroup."
            },
            "productKey": {
              "type": "string",
              "format": "password",
              "description": "Gets or sets the product key.Input format xxxxx-xxxxx-xxxxx-xxxxx-xxxxx",
              "x-ms-mutability": [
                "create"
              ],
              "x-ms-secret": true
            },
            "timezone": {
              "type": "integer",
              "format": "int32",
              "description": "Gets or sets the index value of the timezone."
            },
            "runOnceCommands": {
              "type": "string",
              "description": "Get or sets the commands to be run once at the time of creation separated by semicolons."
            }
          }
        },
        "hardwareProfile": {
          "description": "Hardware properties.",
          "type": "object",
          "properties": {
            "memoryMB": {
              "type": "integer",
              "format": "int32",
              "description": "MemoryMB is the size of a virtual machine's memory, in MB."
            },
            "cpuCount": {
              "type": "integer",
              "format": "int32",
              "description": "Gets or sets the number of vCPUs for the vm."
            },
            "limitCpuForMigration": {
              "description": "Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.",
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "x-ms-enum": {
                "name": "LimitCpuForMigration",
                "modelAsString": true,
                "values": [
                  {
                    "name": "true",
                    "value": "true",
                    "description": "Enable limit CPU for migration."
                  },
                  {
                    "name": "false",
                    "value": "false",
                    "description": "Disable limit CPU for migration."
                  }
                ]
              }
            },
            "dynamicMemoryEnabled": {
              "description": "Gets or sets a value indicating whether to enable dynamic memory or not.",
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "x-ms-enum": {
                "name": "DynamicMemoryEnabled",
                "modelAsString": true,
                "values": [
                  {
                    "name": "true",
                    "value": "true",
                    "description": "Enable dynamic memory."
                  },
                  {
                    "name": "false",
                    "value": "false",
                    "description": "Disable dynamic memory."
                  }
                ]
              }
            },
            "dynamicMemoryMaxMB": {
              "type": "integer",
              "format": "int32",
              "description": "Gets or sets the max dynamic memory for the vm."
            },
            "dynamicMemoryMinMB": {
              "type": "integer",
              "format": "int32",
              "description": "Gets or sets the min dynamic memory for the vm."
            },
            "isHighlyAvailable": {
              "description": "Gets highly available property.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "x-ms-enum": {
                "name": "IsHighlyAvailable",
                "modelAsString": true,
                "values": [
                  {
                    "name": "true",
                    "value": "true",
                    "description": "Enable highly available."
                  },
                  {
                    "name": "false",
                    "value": "false",
                    "description": "Disable highly available."
                  }
                ]
              }
            }
          }
        },
        "networkProfile": {
          "description": "Network properties.",
          "type": "object",
          "properties": {
            "networkInterfaces": {
              "type": "array",
              "description": "Gets or sets the list of network interfaces associated with the virtual machine.",
              "items": {
                "type": "object",
                "description": "Network Interface model",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Gets or sets the name of the network interface."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Gets the display name of the network interface as shown in the vmmServer. This is the fallback label for a NIC when the name is not set.",
                    "readOnly": true
                  },
                  "ipv4Addresses": {
                    "type": "array",
                    "description": "Gets the nic ipv4 addresses.",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "ipv6Addresses": {
                    "type": "array",
                    "description": "Gets the nic ipv6 addresses.",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "macAddress": {
                    "type": "string",
                    "description": "Gets or sets the nic MAC address."
                  },
                  "virtualNetworkId": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.ScVmm/virtualNetwork"
                        }
                      ]
                    }
                  },
                  "networkName": {
                    "type": "string",
                    "description": "Gets the name of the virtual network in vmmServer that the nic is connected to.",
                    "readOnly": true
                  },
                  "ipv4AddressType": {
                    "description": "Gets or sets the ipv4 address type.",
                    "type": "string",
                    "enum": [
                      "Dynamic",
                      "Static"
                    ],
                    "x-ms-enum": {
                      "name": "AllocationMethod",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Dynamic",
                          "value": "Dynamic",
                          "description": "Dynamically allocated address."
                        },
                        {
                          "name": "Static",
                          "value": "Static",
                          "description": "Statically allocated address."
                        }
                      ]
                    }
                  },
                  "ipv6AddressType": {
                    "description": "Gets or sets the ipv6 address type.",
                    "type": "string",
                    "enum": [
                      "Dynamic",
                      "Static"
                    ],
                    "x-ms-enum": {
                      "name": "AllocationMethod",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Dynamic",
                          "value": "Dynamic",
                          "description": "Dynamically allocated address."
                        },
                        {
                          "name": "Static",
                          "value": "Static",
                          "description": "Statically allocated address."
                        }
                      ]
                    }
                  },
                  "macAddressType": {
                    "description": "Gets or sets the mac address type.",
                    "type": "string",
                    "enum": [
                      "Dynamic",
                      "Static"
                    ],
                    "x-ms-enum": {
                      "name": "AllocationMethod",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Dynamic",
                          "value": "Dynamic",
                          "description": "Dynamically allocated address."
                        },
                        {
                          "name": "Static",
                          "value": "Static",
                          "description": "Statically allocated address."
                        }
                      ]
                    }
                  },
                  "nicId": {
                    "type": "string",
                    "description": "Gets or sets the nic id."
                  }
                }
              },
              "x-ms-identifiers": [
                "name",
                "nicId"
              ]
            }
          }
        },
        "storageProfile": {
          "description": "Storage properties.",
          "type": "object",
          "properties": {
            "disks": {
              "type": "array",
              "description": "Gets or sets the list of virtual disks associated with the virtual machine.",
              "items": {
                "type": "object",
                "description": "Virtual disk model",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Gets or sets the name of the disk."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Gets the display name of the virtual disk as shown in the vmmServer. This is the fallback label for a disk when the name is not set.",
                    "readOnly": true
                  },
                  "diskId": {
                    "type": "string",
                    "description": "Gets or sets the disk id."
                  },
                  "diskSizeGB": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Gets or sets the disk total size."
                  },
                  "maxDiskSizeGB": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Gets the max disk size.",
                    "readOnly": true
                  },
                  "bus": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Gets or sets the disk bus."
                  },
                  "lun": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Gets or sets the disk lun."
                  },
                  "busType": {
                    "type": "string",
                    "description": "Gets or sets the disk bus type."
                  },
                  "vhdType": {
                    "type": "string",
                    "description": "Gets or sets the disk vhd type."
                  },
                  "volumeType": {
                    "type": "string",
                    "description": "Gets the disk volume type.",
                    "readOnly": true
                  },
                  "vhdFormatType": {
                    "type": "string",
                    "description": "Gets the disk vhd format type.",
                    "readOnly": true
                  },
                  "templateDiskId": {
                    "type": "string",
                    "description": "Gets or sets the disk id in the template.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "storageQoSPolicy": {
                    "description": "The QoS policy for the disk.",
                    "x-ms-client-name": "storageQosPolicy",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the policy."
                      },
                      "id": {
                        "type": "string",
                        "description": "The ID of the QoS policy."
                      }
                    }
                  },
                  "createDiffDisk": {
                    "description": "Gets or sets a value indicating diff disk.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "type": "string",
                    "enum": [
                      "true",
                      "false"
                    ],
                    "x-ms-enum": {
                      "name": "CreateDiffDisk",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "true",
                          "value": "true",
                          "description": "Enable create diff disk."
                        },
                        {
                          "name": "false",
                          "value": "false",
                          "description": "Disable create diff disk."
                        }
                      ]
                    }
                  }
                }
              },
              "x-ms-identifiers": [
                "diskId",
                "name"
              ]
            }
          }
        },
        "infrastructureProfile": {
          "description": "Gets the infrastructure profile.",
          "type": "object",
          "properties": {
            "inventoryItemId": {
              "type": "string",
              "description": "Gets or sets the inventory Item ID for the resource.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "vmmServerId": {
              "type": "string",
              "format": "arm-id",
              "description": "ARM Id of the vmmServer resource in which this resource resides.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.ScVmm/vmmServers"
                  }
                ]
              }
            },
            "cloudId": {
              "type": "string",
              "format": "arm-id",
              "description": "ARM Id of the cloud resource to use for deploying the vm.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.ScVmm/clouds"
                  }
                ]
              }
            },
            "templateId": {
              "type": "string",
              "format": "arm-id",
              "description": "ARM Id of the template resource to use for deploying the vm.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.ScVmm/virtualMachineTemplates"
                  }
                ]
              }
            },
            "vmName": {
              "type": "string",
              "description": "VMName is the name of VM on the SCVmm server.",
              "minLength": 1,
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "uuid": {
              "type": "string",
              "description": "Unique ID of the virtual machine.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "lastRestoredVMCheckpoint": {
              "description": "Last restored checkpoint in the vm.",
              "readOnly": true,
              "x-ms-client-name": "lastRestoredVmCheckpoint",
              "type": "object",
              "properties": {
                "parentCheckpointID": {
                  "type": "string",
                  "description": "Gets ID of parent of the checkpoint.",
                  "x-ms-client-name": "parentCheckpointId"
                },
                "checkpointID": {
                  "type": "string",
                  "description": "Gets ID of the checkpoint.",
                  "x-ms-client-name": "checkpointId"
                },
                "name": {
                  "type": "string",
                  "description": "Gets name of the checkpoint."
                },
                "description": {
                  "type": "string",
                  "description": "Gets description of the checkpoint."
                }
              }
            },
            "checkpoints": {
              "type": "array",
              "description": "Checkpoints in the vm.",
              "items": {
                "type": "object",
                "description": "Defines the resource properties.",
                "properties": {
                  "parentCheckpointID": {
                    "type": "string",
                    "description": "Gets ID of parent of the checkpoint.",
                    "x-ms-client-name": "parentCheckpointId"
                  },
                  "checkpointID": {
                    "type": "string",
                    "description": "Gets ID of the checkpoint.",
                    "x-ms-client-name": "checkpointId"
                  },
                  "name": {
                    "type": "string",
                    "description": "Gets name of the checkpoint."
                  },
                  "description": {
                    "type": "string",
                    "description": "Gets description of the checkpoint."
                  }
                }
              },
              "readOnly": true,
              "x-ms-identifiers": [
                "checkpointID"
              ]
            },
            "checkpointType": {
              "type": "string",
              "description": "Type of checkpoint supported for the vm.",
              "x-ms-mutability": [
                "read",
                "update",
                "create"
              ]
            },
            "generation": {
              "type": "integer",
              "format": "int32",
              "description": "Gets or sets the generation for the vm.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "biosGuid": {
              "type": "string",
              "description": "Gets or sets the bios guid for the vm.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            }
          }
        },
        "powerState": {
          "type": "string",
          "description": "Gets the power state of the virtual machine.",
          "readOnly": true
        },
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted",
            "Created"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "The resource is provisioning."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "The resource is updating."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "The resource is being deleted."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "The resource has been accepted."
              },
              {
                "name": "Created",
                "value": "Created",
                "description": "The resource was created."
              }
            ]
          }
        }
      }
    },
    "VirtualMachineInstanceUpdate": {
      "type": "object",
      "description": "The type used for update operations of the VirtualMachineInstance.",
      "properties": {
        "properties": {
          "description": "The update properties of the VirtualMachineInstance.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "availabilitySets": {
              "type": "array",
              "description": "Availability Sets in vm.",
              "items": {
                "type": "object",
                "description": "Availability Set model",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "Gets the ARM Id of the microsoft.scvmm/availabilitySets resource.",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.ScVmm/availabilitySets"
                        }
                      ]
                    }
                  },
                  "name": {
                    "type": "string",
                    "description": "Gets or sets the name of the availability set."
                  }
                }
              }
            },
            "hardwareProfile": {
              "description": "Hardware properties.",
              "type": "object",
              "properties": {
                "memoryMB": {
                  "type": "integer",
                  "format": "int32",
                  "description": "MemoryMB is the size of a virtual machine's memory, in MB."
                },
                "cpuCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Gets or sets the number of vCPUs for the vm."
                },
                "limitCpuForMigration": {
                  "description": "Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.",
                  "type": "string",
                  "enum": [
                    "true",
                    "false"
                  ],
                  "x-ms-enum": {
                    "name": "LimitCpuForMigration",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "true",
                        "value": "true",
                        "description": "Enable limit CPU for migration."
                      },
                      {
                        "name": "false",
                        "value": "false",
                        "description": "Disable limit CPU for migration."
                      }
                    ]
                  }
                },
                "dynamicMemoryEnabled": {
                  "description": "Gets or sets a value indicating whether to enable dynamic memory or not.",
                  "type": "string",
                  "enum": [
                    "true",
                    "false"
                  ],
                  "x-ms-enum": {
                    "name": "DynamicMemoryEnabled",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "true",
                        "value": "true",
                        "description": "Enable dynamic memory."
                      },
                      {
                        "name": "false",
                        "value": "false",
                        "description": "Disable dynamic memory."
                      }
                    ]
                  }
                },
                "dynamicMemoryMaxMB": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Gets or sets the max dynamic memory for the vm."
                },
                "dynamicMemoryMinMB": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Gets or sets the min dynamic memory for the vm."
                }
              }
            },
            "networkProfile": {
              "description": "Network properties.",
              "type": "object",
              "properties": {
                "networkInterfaces": {
                  "type": "array",
                  "description": "Gets or sets the list of network interfaces associated with the virtual machine.",
                  "items": {
                    "type": "object",
                    "description": "Network Interface Update model",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Gets or sets the name of the network interface."
                      },
                      "macAddress": {
                        "type": "string",
                        "description": "Gets or sets the nic MAC address."
                      },
                      "virtualNetworkId": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.ScVmm/virtualNetwork"
                            }
                          ]
                        }
                      },
                      "ipv4AddressType": {
                        "description": "Gets or sets the ipv4 address type.",
                        "type": "string",
                        "enum": [
                          "Dynamic",
                          "Static"
                        ],
                        "x-ms-enum": {
                          "name": "AllocationMethod",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Dynamic",
                              "value": "Dynamic",
                              "description": "Dynamically allocated address."
                            },
                            {
                              "name": "Static",
                              "value": "Static",
                              "description": "Statically allocated address."
                            }
                          ]
                        }
                      },
                      "ipv6AddressType": {
                        "description": "Gets or sets the ipv6 address type.",
                        "type": "string",
                        "enum": [
                          "Dynamic",
                          "Static"
                        ],
                        "x-ms-enum": {
                          "name": "AllocationMethod",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Dynamic",
                              "value": "Dynamic",
                              "description": "Dynamically allocated address."
                            },
                            {
                              "name": "Static",
                              "value": "Static",
                              "description": "Statically allocated address."
                            }
                          ]
                        }
                      },
                      "macAddressType": {
                        "description": "Gets or sets the mac address type.",
                        "type": "string",
                        "enum": [
                          "Dynamic",
                          "Static"
                        ],
                        "x-ms-enum": {
                          "name": "AllocationMethod",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Dynamic",
                              "value": "Dynamic",
                              "description": "Dynamically allocated address."
                            },
                            {
                              "name": "Static",
                              "value": "Static",
                              "description": "Statically allocated address."
                            }
                          ]
                        }
                      },
                      "nicId": {
                        "type": "string",
                        "description": "Gets or sets the nic id."
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name",
                    "nicId"
                  ]
                }
              }
            },
            "storageProfile": {
              "description": "Storage properties.",
              "type": "object",
              "properties": {
                "disks": {
                  "type": "array",
                  "description": "Gets or sets the list of virtual disks associated with the virtual machine.",
                  "items": {
                    "type": "object",
                    "description": "Virtual Disk Update model",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Gets or sets the name of the disk."
                      },
                      "diskId": {
                        "type": "string",
                        "description": "Gets or sets the disk id."
                      },
                      "diskSizeGB": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Gets or sets the disk total size."
                      },
                      "bus": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Gets or sets the disk bus."
                      },
                      "lun": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Gets or sets the disk lun."
                      },
                      "busType": {
                        "type": "string",
                        "description": "Gets or sets the disk bus type."
                      },
                      "vhdType": {
                        "type": "string",
                        "description": "Gets or sets the disk vhd type."
                      },
                      "storageQoSPolicy": {
                        "description": "The QoS policy for the disk.",
                        "x-ms-client-name": "storageQosPolicy",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the policy."
                          },
                          "id": {
                            "type": "string",
                            "description": "The ID of the QoS policy."
                          }
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "diskId",
                    "name"
                  ]
                }
              }
            },
            "infrastructureProfile": {
              "description": "Gets the infrastructure profile.",
              "type": "object",
              "properties": {
                "checkpointType": {
                  "type": "string",
                  "description": "Type of checkpoint supported for the vm.",
                  "x-ms-mutability": [
                    "read",
                    "update",
                    "create"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "VirtualMachineInstanceUpdateProperties": {
      "type": "object",
      "description": "Virtual Machine Instance Properties Update model",
      "properties": {
        "availabilitySets": {
          "type": "array",
          "description": "Availability Sets in vm.",
          "items": {
            "type": "object",
            "description": "Availability Set model",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Gets the ARM Id of the microsoft.scvmm/availabilitySets resource.",
                "x-ms-arm-id-details": {
                  "allowedResources": [
                    {
                      "type": "Microsoft.ScVmm/availabilitySets"
                    }
                  ]
                }
              },
              "name": {
                "type": "string",
                "description": "Gets or sets the name of the availability set."
              }
            }
          }
        },
        "hardwareProfile": {
          "description": "Hardware properties.",
          "type": "object",
          "properties": {
            "memoryMB": {
              "type": "integer",
              "format": "int32",
              "description": "MemoryMB is the size of a virtual machine's memory, in MB."
            },
            "cpuCount": {
              "type": "integer",
              "format": "int32",
              "description": "Gets or sets the number of vCPUs for the vm."
            },
            "limitCpuForMigration": {
              "description": "Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.",
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "x-ms-enum": {
                "name": "LimitCpuForMigration",
                "modelAsString": true,
                "values": [
                  {
                    "name": "true",
                    "value": "true",
                    "description": "Enable limit CPU for migration."
                  },
                  {
                    "name": "false",
                    "value": "false",
                    "description": "Disable limit CPU for migration."
                  }
                ]
              }
            },
            "dynamicMemoryEnabled": {
              "description": "Gets or sets a value indicating whether to enable dynamic memory or not.",
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "x-ms-enum": {
                "name": "DynamicMemoryEnabled",
                "modelAsString": true,
                "values": [
                  {
                    "name": "true",
                    "value": "true",
                    "description": "Enable dynamic memory."
                  },
                  {
                    "name": "false",
                    "value": "false",
                    "description": "Disable dynamic memory."
                  }
                ]
              }
            },
            "dynamicMemoryMaxMB": {
              "type": "integer",
              "format": "int32",
              "description": "Gets or sets the max dynamic memory for the vm."
            },
            "dynamicMemoryMinMB": {
              "type": "integer",
              "format": "int32",
              "description": "Gets or sets the min dynamic memory for the vm."
            }
          }
        },
        "networkProfile": {
          "description": "Network properties.",
          "type": "object",
          "properties": {
            "networkInterfaces": {
              "type": "array",
              "description": "Gets or sets the list of network interfaces associated with the virtual machine.",
              "items": {
                "type": "object",
                "description": "Network Interface Update model",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Gets or sets the name of the network interface."
                  },
                  "macAddress": {
                    "type": "string",
                    "description": "Gets or sets the nic MAC address."
                  },
                  "virtualNetworkId": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.ScVmm/virtualNetwork"
                        }
                      ]
                    }
                  },
                  "ipv4AddressType": {
                    "description": "Gets or sets the ipv4 address type.",
                    "type": "string",
                    "enum": [
                      "Dynamic",
                      "Static"
                    ],
                    "x-ms-enum": {
                      "name": "AllocationMethod",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Dynamic",
                          "value": "Dynamic",
                          "description": "Dynamically allocated address."
                        },
                        {
                          "name": "Static",
                          "value": "Static",
                          "description": "Statically allocated address."
                        }
                      ]
                    }
                  },
                  "ipv6AddressType": {
                    "description": "Gets or sets the ipv6 address type.",
                    "type": "string",
                    "enum": [
                      "Dynamic",
                      "Static"
                    ],
                    "x-ms-enum": {
                      "name": "AllocationMethod",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Dynamic",
                          "value": "Dynamic",
                          "description": "Dynamically allocated address."
                        },
                        {
                          "name": "Static",
                          "value": "Static",
                          "description": "Statically allocated address."
                        }
                      ]
                    }
                  },
                  "macAddressType": {
                    "description": "Gets or sets the mac address type.",
                    "type": "string",
                    "enum": [
                      "Dynamic",
                      "Static"
                    ],
                    "x-ms-enum": {
                      "name": "AllocationMethod",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Dynamic",
                          "value": "Dynamic",
                          "description": "Dynamically allocated address."
                        },
                        {
                          "name": "Static",
                          "value": "Static",
                          "description": "Statically allocated address."
                        }
                      ]
                    }
                  },
                  "nicId": {
                    "type": "string",
                    "description": "Gets or sets the nic id."
                  }
                }
              },
              "x-ms-identifiers": [
                "name",
                "nicId"
              ]
            }
          }
        },
        "storageProfile": {
          "description": "Storage properties.",
          "type": "object",
          "properties": {
            "disks": {
              "type": "array",
              "description": "Gets or sets the list of virtual disks associated with the virtual machine.",
              "items": {
                "type": "object",
                "description": "Virtual Disk Update model",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Gets or sets the name of the disk."
                  },
                  "diskId": {
                    "type": "string",
                    "description": "Gets or sets the disk id."
                  },
                  "diskSizeGB": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Gets or sets the disk total size."
                  },
                  "bus": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Gets or sets the disk bus."
                  },
                  "lun": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Gets or sets the disk lun."
                  },
                  "busType": {
                    "type": "string",
                    "description": "Gets or sets the disk bus type."
                  },
                  "vhdType": {
                    "type": "string",
                    "description": "Gets or sets the disk vhd type."
                  },
                  "storageQoSPolicy": {
                    "description": "The QoS policy for the disk.",
                    "x-ms-client-name": "storageQosPolicy",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the policy."
                      },
                      "id": {
                        "type": "string",
                        "description": "The ID of the QoS policy."
                      }
                    }
                  }
                }
              },
              "x-ms-identifiers": [
                "diskId",
                "name"
              ]
            }
          }
        },
        "infrastructureProfile": {
          "description": "Gets the infrastructure profile.",
          "type": "object",
          "properties": {
            "checkpointType": {
              "type": "string",
              "description": "Type of checkpoint supported for the vm.",
              "x-ms-mutability": [
                "read",
                "update",
                "create"
              ]
            }
          }
        }
      }
    },
    "VirtualMachineInventoryItem": {
      "type": "object",
      "description": "The Virtual machine inventory item.",
      "properties": {
        "osType": {
          "description": "Gets the type of the os.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Windows",
            "Linux",
            "Other"
          ],
          "x-ms-enum": {
            "name": "OsType",
            "modelAsString": true,
            "values": [
              {
                "name": "Windows",
                "value": "Windows",
                "description": "Windows operating system."
              },
              {
                "name": "Linux",
                "value": "Linux",
                "description": "Linux operating system."
              },
              {
                "name": "Other",
                "value": "Other",
                "description": "Other operating system."
              }
            ]
          }
        },
        "osName": {
          "type": "string",
          "description": "Gets os name.",
          "readOnly": true
        },
        "osVersion": {
          "type": "string",
          "description": "Gets os version.",
          "readOnly": true
        },
        "powerState": {
          "type": "string",
          "description": "Gets the power state of the virtual machine.",
          "readOnly": true
        },
        "generation": {
          "type": "integer",
          "format": "int64",
          "description": "Gets vm generation.",
          "readOnly": true
        },
        "ipAddresses": {
          "type": "array",
          "description": "Gets or sets the nic ip addresses.",
          "items": {
            "type": "string"
          }
        },
        "cloud": {
          "description": "Cloud inventory resource details where the VM is present.",
          "type": "object",
          "properties": {
            "inventoryItemId": {
              "type": "string",
              "description": "Gets or sets the inventory Item ID for the resource."
            },
            "inventoryItemName": {
              "type": "string",
              "description": "Gets or sets the Managed Object name in Vmm for the resource."
            }
          }
        },
        "biosGuid": {
          "type": "string",
          "description": "Gets the bios guid.",
          "readOnly": true
        },
        "managedMachineResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Gets the tracked resource id corresponding to the inventory resource.",
          "readOnly": true,
          "x-ms-arm-id-details": {
            "allowedResources": []
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Defines the resource properties.",
          "properties": {
            "inventoryType": {
              "description": "They inventory type.",
              "type": "string",
              "enum": [
                "Cloud",
                "VirtualNetwork",
                "VirtualMachine",
                "VirtualMachineTemplate"
              ],
              "x-ms-enum": {
                "name": "InventoryType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Cloud",
                    "value": "Cloud",
                    "description": "Cloud inventory type"
                  },
                  {
                    "name": "VirtualNetwork",
                    "value": "VirtualNetwork",
                    "description": "VirtualNetwork inventory type"
                  },
                  {
                    "name": "VirtualMachine",
                    "value": "VirtualMachine",
                    "description": "VirtualMachine inventory type"
                  },
                  {
                    "name": "VirtualMachineTemplate",
                    "value": "VirtualMachineTemplate",
                    "description": "VirtualMachineTemplate inventory type"
                  }
                ]
              }
            },
            "managedResourceId": {
              "type": "string",
              "description": "Gets the tracked resource id corresponding to the inventory resource.",
              "readOnly": true
            },
            "uuid": {
              "type": "string",
              "description": "Gets the UUID (which is assigned by Vmm) for the inventory item.",
              "readOnly": true
            },
            "inventoryItemName": {
              "type": "string",
              "description": "Gets the Managed Object name in Vmm for the inventory item.",
              "readOnly": true
            },
            "provisioningState": {
              "description": "Provisioning state of the resource.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted",
                "Created"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "The resource is provisioning."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "The resource is updating."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "The resource is being deleted."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "The resource has been accepted."
                  },
                  {
                    "name": "Created",
                    "value": "Created",
                    "description": "The resource was created."
                  }
                ]
              }
            }
          },
          "discriminator": "inventoryType",
          "required": [
            "inventoryType"
          ]
        }
      ],
      "x-ms-discriminator-value": "VirtualMachine"
    },
    "VirtualMachineRestoreCheckpoint": {
      "type": "object",
      "description": "Defines the restore checkpoint action properties.",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the checkpoint to be restored to."
        }
      }
    },
    "VirtualMachineTemplate": {
      "type": "object",
      "description": "The VirtualMachineTemplates resource definition.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "inventoryItemId": {
              "type": "string",
              "description": "Gets or sets the inventory Item ID for the resource."
            },
            "uuid": {
              "type": "string",
              "description": "Unique ID of the virtual machine template.",
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
            },
            "vmmServerId": {
              "type": "string",
              "format": "arm-id",
              "description": "ARM Id of the vmmServer resource in which this resource resides.",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.ScVmm/vmmServers"
                  }
                ]
              }
            },
            "osType": {
              "description": "Gets the type of the os.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Windows",
                "Linux",
                "Other"
              ],
              "x-ms-enum": {
                "name": "OsType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Windows",
                    "value": "Windows",
                    "description": "Windows operating system."
                  },
                  {
                    "name": "Linux",
                    "value": "Linux",
                    "description": "Linux operating system."
                  },
                  {
                    "name": "Other",
                    "value": "Other",
                    "description": "Other operating system."
                  }
                ]
              }
            },
            "osName": {
              "type": "string",
              "description": "Gets os name.",
              "readOnly": true
            },
            "computerName": {
              "type": "string",
              "description": "Gets computer name.",
              "readOnly": true
            },
            "memoryMB": {
              "type": "integer",
              "format": "int32",
              "description": "MemoryMB is the desired size of a virtual machine's memory, in MB.",
              "readOnly": true
            },
            "cpuCount": {
              "type": "integer",
              "format": "int32",
              "description": "Gets the desired number of vCPUs for the vm.",
              "readOnly": true
            },
            "limitCpuForMigration": {
              "description": "Gets a value indicating whether to enable processor compatibility mode for live migration of VMs.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "x-ms-enum": {
                "name": "LimitCpuForMigration",
                "modelAsString": true,
                "values": [
                  {
                    "name": "true",
                    "value": "true",
                    "description": "Enable limit CPU for migration."
                  },
                  {
                    "name": "false",
                    "value": "false",
                    "description": "Disable limit CPU for migration."
                  }
                ]
              }
            },
            "dynamicMemoryEnabled": {
              "description": "Gets a value indicating whether to enable dynamic memory or not.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "x-ms-enum": {
                "name": "DynamicMemoryEnabled",
                "modelAsString": true,
                "values": [
                  {
                    "name": "true",
                    "value": "true",
                    "description": "Enable dynamic memory."
                  },
                  {
                    "name": "false",
                    "value": "false",
                    "description": "Disable dynamic memory."
                  }
                ]
              }
            },
            "isCustomizable": {
              "description": "Gets a value indicating whether the vm template is customizable or not.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "x-ms-enum": {
                "name": "IsCustomizable",
                "modelAsString": true,
                "values": [
                  {
                    "name": "true",
                    "value": "true",
                    "description": "Enable customizable."
                  },
                  {
                    "name": "false",
                    "value": "false",
                    "description": "Disable customizable."
                  }
                ]
              }
            },
            "dynamicMemoryMaxMB": {
              "type": "integer",
              "format": "int32",
              "description": "Gets the max dynamic memory for the vm.",
              "readOnly": true
            },
            "dynamicMemoryMinMB": {
              "type": "integer",
              "format": "int32",
              "description": "Gets the min dynamic memory for the vm.",
              "readOnly": true
            },
            "isHighlyAvailable": {
              "description": "Gets highly available property.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "x-ms-enum": {
                "name": "IsHighlyAvailable",
                "modelAsString": true,
                "values": [
                  {
                    "name": "true",
                    "value": "true",
                    "description": "Enable highly available."
                  },
                  {
                    "name": "false",
                    "value": "false",
                    "description": "Disable highly available."
                  }
                ]
              }
            },
            "generation": {
              "type": "integer",
              "format": "int32",
              "description": "Gets the generation for the vm.",
              "readOnly": true
            },
            "networkInterfaces": {
              "type": "array",
              "description": "Gets the network interfaces of the template.",
              "items": {
                "type": "object",
                "description": "Network Interface model",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Gets or sets the name of the network interface."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Gets the display name of the network interface as shown in the vmmServer. This is the fallback label for a NIC when the name is not set.",
                    "readOnly": true
                  },
                  "ipv4Addresses": {
                    "type": "array",
                    "description": "Gets the nic ipv4 addresses.",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "ipv6Addresses": {
                    "type": "array",
                    "description": "Gets the nic ipv6 addresses.",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "macAddress": {
                    "type": "string",
                    "description": "Gets or sets the nic MAC address."
                  },
                  "virtualNetworkId": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.ScVmm/virtualNetwork"
                        }
                      ]
                    }
                  },
                  "networkName": {
                    "type": "string",
                    "description": "Gets the name of the virtual network in vmmServer that the nic is connected to.",
                    "readOnly": true
                  },
                  "ipv4AddressType": {
                    "description": "Gets or sets the ipv4 address type.",
                    "type": "string",
                    "enum": [
                      "Dynamic",
                      "Static"
                    ],
                    "x-ms-enum": {
                      "name": "AllocationMethod",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Dynamic",
                          "value": "Dynamic",
                          "description": "Dynamically allocated address."
                        },
                        {
                          "name": "Static",
                          "value": "Static",
                          "description": "Statically allocated address."
                        }
                      ]
                    }
                  },
                  "ipv6AddressType": {
                    "description": "Gets or sets the ipv6 address type.",
                    "type": "string",
                    "enum": [
                      "Dynamic",
                      "Static"
                    ],
                    "x-ms-enum": {
                      "name": "AllocationMethod",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Dynamic",
                          "value": "Dynamic",
                          "description": "Dynamically allocated address."
                        },
                        {
                          "name": "Static",
                          "value": "Static",
                          "description": "Statically allocated address."
                        }
                      ]
                    }
                  },
                  "macAddressType": {
                    "description": "Gets or sets the mac address type.",
                    "type": "string",
                    "enum": [
                      "Dynamic",
                      "Static"
                    ],
                    "x-ms-enum": {
                      "name": "AllocationMethod",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Dynamic",
                          "value": "Dynamic",
                          "description": "Dynamically allocated address."
                        },
                        {
                          "name": "Static",
                          "value": "Static",
                          "description": "Statically allocated address."
                        }
                      ]
                    }
                  },
                  "nicId": {
                    "type": "string",
                    "description": "Gets or sets the nic id."
                  }
                }
              },
              "readOnly": true,
              "x-ms-identifiers": [
                "name",
                "nicId"
              ]
            },
            "disks": {
              "type": "array",
              "description": "Gets the disks of the template.",
              "items": {
                "type": "object",
                "description": "Virtual disk model",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Gets or sets the name of the disk."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Gets the display name of the virtual disk as shown in the vmmServer. This is the fallback label for a disk when the name is not set.",
                    "readOnly": true
                  },
                  "diskId": {
                    "type": "string",
                    "description": "Gets or sets the disk id."
                  },
                  "diskSizeGB": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Gets or sets the disk total size."
                  },
                  "maxDiskSizeGB": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Gets the max disk size.",
                    "readOnly": true
                  },
                  "bus": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Gets or sets the disk bus."
                  },
                  "lun": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Gets or sets the disk lun."
                  },
                  "busType": {
                    "type": "string",
                    "description": "Gets or sets the disk bus type."
                  },
                  "vhdType": {
                    "type": "string",
                    "description": "Gets or sets the disk vhd type."
                  },
                  "volumeType": {
                    "type": "string",
                    "description": "Gets the disk volume type.",
                    "readOnly": true
                  },
                  "vhdFormatType": {
                    "type": "string",
                    "description": "Gets the disk vhd format type.",
                    "readOnly": true
                  },
                  "templateDiskId": {
                    "type": "string",
                    "description": "Gets or sets the disk id in the template.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "storageQoSPolicy": {
                    "description": "The QoS policy for the disk.",
                    "x-ms-client-name": "storageQosPolicy",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the policy."
                      },
                      "id": {
                        "type": "string",
                        "description": "The ID of the QoS policy."
                      }
                    }
                  },
                  "createDiffDisk": {
                    "description": "Gets or sets a value indicating diff disk.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "type": "string",
                    "enum": [
                      "true",
                      "false"
                    ],
                    "x-ms-enum": {
                      "name": "CreateDiffDisk",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "true",
                          "value": "true",
                          "description": "Enable create diff disk."
                        },
                        {
                          "name": "false",
                          "value": "false",
                          "description": "Disable create diff disk."
                        }
                      ]
                    }
                  }
                }
              },
              "readOnly": true,
              "x-ms-identifiers": [
                "diskId",
                "name"
              ]
            },
            "provisioningState": {
              "description": "Provisioning state of the resource.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted",
                "Created"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "The resource is provisioning."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "The resource is updating."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "The resource is being deleted."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "The resource has been accepted."
                  },
                  {
                    "name": "Created",
                    "value": "Created",
                    "description": "The resource was created."
                  }
                ]
              }
            }
          }
        },
        "extendedLocation": {
          "description": "The extended location.",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "The extended location type."
            },
            "name": {
              "type": "string",
              "format": "arm-id",
              "description": "The extended location name.",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.ExtendedLocation/customLocations"
                  }
                ]
              }
            }
          }
        }
      },
      "required": [
        "extendedLocation"
      ]
    },
    "VirtualMachineTemplateInventoryItem": {
      "type": "object",
      "description": "The Virtual machine template inventory item.",
      "properties": {
        "cpuCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets the desired number of vCPUs for the vm.",
          "readOnly": true
        },
        "memoryMB": {
          "type": "integer",
          "format": "int32",
          "description": "MemoryMB is the desired size of a virtual machine's memory, in MB.",
          "readOnly": true
        },
        "osType": {
          "description": "Gets the type of the os.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Windows",
            "Linux",
            "Other"
          ],
          "x-ms-enum": {
            "name": "OsType",
            "modelAsString": true,
            "values": [
              {
                "name": "Windows",
                "value": "Windows",
                "description": "Windows operating system."
              },
              {
                "name": "Linux",
                "value": "Linux",
                "description": "Linux operating system."
              },
              {
                "name": "Other",
                "value": "Other",
                "description": "Other operating system."
              }
            ]
          }
        },
        "osName": {
          "type": "string",
          "description": "Gets os name.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Defines the resource properties.",
          "properties": {
            "inventoryType": {
              "description": "They inventory type.",
              "type": "string",
              "enum": [
                "Cloud",
                "VirtualNetwork",
                "VirtualMachine",
                "VirtualMachineTemplate"
              ],
              "x-ms-enum": {
                "name": "InventoryType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Cloud",
                    "value": "Cloud",
                    "description": "Cloud inventory type"
                  },
                  {
                    "name": "VirtualNetwork",
                    "value": "VirtualNetwork",
                    "description": "VirtualNetwork inventory type"
                  },
                  {
                    "name": "VirtualMachine",
                    "value": "VirtualMachine",
                    "description": "VirtualMachine inventory type"
                  },
                  {
                    "name": "VirtualMachineTemplate",
                    "value": "VirtualMachineTemplate",
                    "description": "VirtualMachineTemplate inventory type"
                  }
                ]
              }
            },
            "managedResourceId": {
              "type": "string",
              "description": "Gets the tracked resource id corresponding to the inventory resource.",
              "readOnly": true
            },
            "uuid": {
              "type": "string",
              "description": "Gets the UUID (which is assigned by Vmm) for the inventory item.",
              "readOnly": true
            },
            "inventoryItemName": {
              "type": "string",
              "description": "Gets the Managed Object name in Vmm for the inventory item.",
              "readOnly": true
            },
            "provisioningState": {
              "description": "Provisioning state of the resource.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted",
                "Created"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "The resource is provisioning."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "The resource is updating."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "The resource is being deleted."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "The resource has been accepted."
                  },
                  {
                    "name": "Created",
                    "value": "Created",
                    "description": "The resource was created."
                  }
                ]
              }
            }
          },
          "discriminator": "inventoryType",
          "required": [
            "inventoryType"
          ]
        }
      ],
      "x-ms-discriminator-value": "VirtualMachineTemplate"
    },
    "VirtualMachineTemplateListResult": {
      "type": "object",
      "description": "The response of a VirtualMachineTemplate list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The VirtualMachineTemplate items on this page",
          "items": {
            "type": "object",
            "description": "The VirtualMachineTemplates resource definition.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "inventoryItemId": {
                    "type": "string",
                    "description": "Gets or sets the inventory Item ID for the resource."
                  },
                  "uuid": {
                    "type": "string",
                    "description": "Unique ID of the virtual machine template.",
                    "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
                  },
                  "vmmServerId": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "ARM Id of the vmmServer resource in which this resource resides.",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.ScVmm/vmmServers"
                        }
                      ]
                    }
                  },
                  "osType": {
                    "description": "Gets the type of the os.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Windows",
                      "Linux",
                      "Other"
                    ],
                    "x-ms-enum": {
                      "name": "OsType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Windows",
                          "value": "Windows",
                          "description": "Windows operating system."
                        },
                        {
                          "name": "Linux",
                          "value": "Linux",
                          "description": "Linux operating system."
                        },
                        {
                          "name": "Other",
                          "value": "Other",
                          "description": "Other operating system."
                        }
                      ]
                    }
                  },
                  "osName": {
                    "type": "string",
                    "description": "Gets os name.",
                    "readOnly": true
                  },
                  "computerName": {
                    "type": "string",
                    "description": "Gets computer name.",
                    "readOnly": true
                  },
                  "memoryMB": {
                    "type": "integer",
                    "format": "int32",
                    "description": "MemoryMB is the desired size of a virtual machine's memory, in MB.",
                    "readOnly": true
                  },
                  "cpuCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Gets the desired number of vCPUs for the vm.",
                    "readOnly": true
                  },
                  "limitCpuForMigration": {
                    "description": "Gets a value indicating whether to enable processor compatibility mode for live migration of VMs.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "true",
                      "false"
                    ],
                    "x-ms-enum": {
                      "name": "LimitCpuForMigration",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "true",
                          "value": "true",
                          "description": "Enable limit CPU for migration."
                        },
                        {
                          "name": "false",
                          "value": "false",
                          "description": "Disable limit CPU for migration."
                        }
                      ]
                    }
                  },
                  "dynamicMemoryEnabled": {
                    "description": "Gets a value indicating whether to enable dynamic memory or not.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "true",
                      "false"
                    ],
                    "x-ms-enum": {
                      "name": "DynamicMemoryEnabled",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "true",
                          "value": "true",
                          "description": "Enable dynamic memory."
                        },
                        {
                          "name": "false",
                          "value": "false",
                          "description": "Disable dynamic memory."
                        }
                      ]
                    }
                  },
                  "isCustomizable": {
                    "description": "Gets a value indicating whether the vm template is customizable or not.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "true",
                      "false"
                    ],
                    "x-ms-enum": {
                      "name": "IsCustomizable",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "true",
                          "value": "true",
                          "description": "Enable customizable."
                        },
                        {
                          "name": "false",
                          "value": "false",
                          "description": "Disable customizable."
                        }
                      ]
                    }
                  },
                  "dynamicMemoryMaxMB": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Gets the max dynamic memory for the vm.",
                    "readOnly": true
                  },
                  "dynamicMemoryMinMB": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Gets the min dynamic memory for the vm.",
                    "readOnly": true
                  },
                  "isHighlyAvailable": {
                    "description": "Gets highly available property.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "true",
                      "false"
                    ],
                    "x-ms-enum": {
                      "name": "IsHighlyAvailable",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "true",
                          "value": "true",
                          "description": "Enable highly available."
                        },
                        {
                          "name": "false",
                          "value": "false",
                          "description": "Disable highly available."
                        }
                      ]
                    }
                  },
                  "generation": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Gets the generation for the vm.",
                    "readOnly": true
                  },
                  "networkInterfaces": {
                    "type": "array",
                    "description": "Gets the network interfaces of the template.",
                    "items": {
                      "type": "object",
                      "description": "Network Interface model",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Gets or sets the name of the network interface."
                        },
                        "displayName": {
                          "type": "string",
                          "description": "Gets the display name of the network interface as shown in the vmmServer. This is the fallback label for a NIC when the name is not set.",
                          "readOnly": true
                        },
                        "ipv4Addresses": {
                          "type": "array",
                          "description": "Gets the nic ipv4 addresses.",
                          "items": {
                            "type": "string"
                          },
                          "readOnly": true
                        },
                        "ipv6Addresses": {
                          "type": "array",
                          "description": "Gets the nic ipv6 addresses.",
                          "items": {
                            "type": "string"
                          },
                          "readOnly": true
                        },
                        "macAddress": {
                          "type": "string",
                          "description": "Gets or sets the nic MAC address."
                        },
                        "virtualNetworkId": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.ScVmm/virtualNetwork"
                              }
                            ]
                          }
                        },
                        "networkName": {
                          "type": "string",
                          "description": "Gets the name of the virtual network in vmmServer that the nic is connected to.",
                          "readOnly": true
                        },
                        "ipv4AddressType": {
                          "description": "Gets or sets the ipv4 address type.",
                          "type": "string",
                          "enum": [
                            "Dynamic",
                            "Static"
                          ],
                          "x-ms-enum": {
                            "name": "AllocationMethod",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Dynamic",
                                "value": "Dynamic",
                                "description": "Dynamically allocated address."
                              },
                              {
                                "name": "Static",
                                "value": "Static",
                                "description": "Statically allocated address."
                              }
                            ]
                          }
                        },
                        "ipv6AddressType": {
                          "description": "Gets or sets the ipv6 address type.",
                          "type": "string",
                          "enum": [
                            "Dynamic",
                            "Static"
                          ],
                          "x-ms-enum": {
                            "name": "AllocationMethod",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Dynamic",
                                "value": "Dynamic",
                                "description": "Dynamically allocated address."
                              },
                              {
                                "name": "Static",
                                "value": "Static",
                                "description": "Statically allocated address."
                              }
                            ]
                          }
                        },
                        "macAddressType": {
                          "description": "Gets or sets the mac address type.",
                          "type": "string",
                          "enum": [
                            "Dynamic",
                            "Static"
                          ],
                          "x-ms-enum": {
                            "name": "AllocationMethod",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Dynamic",
                                "value": "Dynamic",
                                "description": "Dynamically allocated address."
                              },
                              {
                                "name": "Static",
                                "value": "Static",
                                "description": "Statically allocated address."
                              }
                            ]
                          }
                        },
                        "nicId": {
                          "type": "string",
                          "description": "Gets or sets the nic id."
                        }
                      }
                    },
                    "readOnly": true,
                    "x-ms-identifiers": [
                      "name",
                      "nicId"
                    ]
                  },
                  "disks": {
                    "type": "array",
                    "description": "Gets the disks of the template.",
                    "items": {
                      "type": "object",
                      "description": "Virtual disk model",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Gets or sets the name of the disk."
                        },
                        "displayName": {
                          "type": "string",
                          "description": "Gets the display name of the virtual disk as shown in the vmmServer. This is the fallback label for a disk when the name is not set.",
                          "readOnly": true
                        },
                        "diskId": {
                          "type": "string",
                          "description": "Gets or sets the disk id."
                        },
                        "diskSizeGB": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Gets or sets the disk total size."
                        },
                        "maxDiskSizeGB": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Gets the max disk size.",
                          "readOnly": true
                        },
                        "bus": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Gets or sets the disk bus."
                        },
                        "lun": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Gets or sets the disk lun."
                        },
                        "busType": {
                          "type": "string",
                          "description": "Gets or sets the disk bus type."
                        },
                        "vhdType": {
                          "type": "string",
                          "description": "Gets or sets the disk vhd type."
                        },
                        "volumeType": {
                          "type": "string",
                          "description": "Gets the disk volume type.",
                          "readOnly": true
                        },
                        "vhdFormatType": {
                          "type": "string",
                          "description": "Gets the disk vhd format type.",
                          "readOnly": true
                        },
                        "templateDiskId": {
                          "type": "string",
                          "description": "Gets or sets the disk id in the template.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "storageQoSPolicy": {
                          "description": "The QoS policy for the disk.",
                          "x-ms-client-name": "storageQosPolicy",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the policy."
                            },
                            "id": {
                              "type": "string",
                              "description": "The ID of the QoS policy."
                            }
                          }
                        },
                        "createDiffDisk": {
                          "description": "Gets or sets a value indicating diff disk.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "x-ms-enum": {
                            "name": "CreateDiffDisk",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "true",
                                "value": "true",
                                "description": "Enable create diff disk."
                              },
                              {
                                "name": "false",
                                "value": "false",
                                "description": "Disable create diff disk."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "readOnly": true,
                    "x-ms-identifiers": [
                      "diskId",
                      "name"
                    ]
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the resource.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted",
                      "Created"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "The resource is provisioning."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "The resource is updating."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "The resource is being deleted."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "The resource has been accepted."
                        },
                        {
                          "name": "Created",
                          "value": "Created",
                          "description": "The resource was created."
                        }
                      ]
                    }
                  }
                }
              },
              "extendedLocation": {
                "description": "The extended location.",
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The extended location type."
                  },
                  "name": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "The extended location name.",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.ExtendedLocation/customLocations"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "required": [
              "extendedLocation"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "VirtualMachineTemplateProperties": {
      "type": "object",
      "description": "Defines the resource properties.",
      "properties": {
        "inventoryItemId": {
          "type": "string",
          "description": "Gets or sets the inventory Item ID for the resource."
        },
        "uuid": {
          "type": "string",
          "description": "Unique ID of the virtual machine template.",
          "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
        },
        "vmmServerId": {
          "type": "string",
          "format": "arm-id",
          "description": "ARM Id of the vmmServer resource in which this resource resides.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ScVmm/vmmServers"
              }
            ]
          }
        },
        "osType": {
          "description": "Gets the type of the os.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Windows",
            "Linux",
            "Other"
          ],
          "x-ms-enum": {
            "name": "OsType",
            "modelAsString": true,
            "values": [
              {
                "name": "Windows",
                "value": "Windows",
                "description": "Windows operating system."
              },
              {
                "name": "Linux",
                "value": "Linux",
                "description": "Linux operating system."
              },
              {
                "name": "Other",
                "value": "Other",
                "description": "Other operating system."
              }
            ]
          }
        },
        "osName": {
          "type": "string",
          "description": "Gets os name.",
          "readOnly": true
        },
        "computerName": {
          "type": "string",
          "description": "Gets computer name.",
          "readOnly": true
        },
        "memoryMB": {
          "type": "integer",
          "format": "int32",
          "description": "MemoryMB is the desired size of a virtual machine's memory, in MB.",
          "readOnly": true
        },
        "cpuCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets the desired number of vCPUs for the vm.",
          "readOnly": true
        },
        "limitCpuForMigration": {
          "description": "Gets a value indicating whether to enable processor compatibility mode for live migration of VMs.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "true",
            "false"
          ],
          "x-ms-enum": {
            "name": "LimitCpuForMigration",
            "modelAsString": true,
            "values": [
              {
                "name": "true",
                "value": "true",
                "description": "Enable limit CPU for migration."
              },
              {
                "name": "false",
                "value": "false",
                "description": "Disable limit CPU for migration."
              }
            ]
          }
        },
        "dynamicMemoryEnabled": {
          "description": "Gets a value indicating whether to enable dynamic memory or not.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "true",
            "false"
          ],
          "x-ms-enum": {
            "name": "DynamicMemoryEnabled",
            "modelAsString": true,
            "values": [
              {
                "name": "true",
                "value": "true",
                "description": "Enable dynamic memory."
              },
              {
                "name": "false",
                "value": "false",
                "description": "Disable dynamic memory."
              }
            ]
          }
        },
        "isCustomizable": {
          "description": "Gets a value indicating whether the vm template is customizable or not.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "true",
            "false"
          ],
          "x-ms-enum": {
            "name": "IsCustomizable",
            "modelAsString": true,
            "values": [
              {
                "name": "true",
                "value": "true",
                "description": "Enable customizable."
              },
              {
                "name": "false",
                "value": "false",
                "description": "Disable customizable."
              }
            ]
          }
        },
        "dynamicMemoryMaxMB": {
          "type": "integer",
          "format": "int32",
          "description": "Gets the max dynamic memory for the vm.",
          "readOnly": true
        },
        "dynamicMemoryMinMB": {
          "type": "integer",
          "format": "int32",
          "description": "Gets the min dynamic memory for the vm.",
          "readOnly": true
        },
        "isHighlyAvailable": {
          "description": "Gets highly available property.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "true",
            "false"
          ],
          "x-ms-enum": {
            "name": "IsHighlyAvailable",
            "modelAsString": true,
            "values": [
              {
                "name": "true",
                "value": "true",
                "description": "Enable highly available."
              },
              {
                "name": "false",
                "value": "false",
                "description": "Disable highly available."
              }
            ]
          }
        },
        "generation": {
          "type": "integer",
          "format": "int32",
          "description": "Gets the generation for the vm.",
          "readOnly": true
        },
        "networkInterfaces": {
          "type": "array",
          "description": "Gets the network interfaces of the template.",
          "items": {
            "type": "object",
            "description": "Network Interface model",
            "properties": {
              "name": {
                "type": "string",
                "description": "Gets or sets the name of the network interface."
              },
              "displayName": {
                "type": "string",
                "description": "Gets the display name of the network interface as shown in the vmmServer. This is the fallback label for a NIC when the name is not set.",
                "readOnly": true
              },
              "ipv4Addresses": {
                "type": "array",
                "description": "Gets the nic ipv4 addresses.",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              },
              "ipv6Addresses": {
                "type": "array",
                "description": "Gets the nic ipv6 addresses.",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              },
              "macAddress": {
                "type": "string",
                "description": "Gets or sets the nic MAC address."
              },
              "virtualNetworkId": {
                "type": "string",
                "format": "arm-id",
                "description": "Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.",
                "x-ms-arm-id-details": {
                  "allowedResources": [
                    {
                      "type": "Microsoft.ScVmm/virtualNetwork"
                    }
                  ]
                }
              },
              "networkName": {
                "type": "string",
                "description": "Gets the name of the virtual network in vmmServer that the nic is connected to.",
                "readOnly": true
              },
              "ipv4AddressType": {
                "description": "Gets or sets the ipv4 address type.",
                "type": "string",
                "enum": [
                  "Dynamic",
                  "Static"
                ],
                "x-ms-enum": {
                  "name": "AllocationMethod",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Dynamic",
                      "value": "Dynamic",
                      "description": "Dynamically allocated address."
                    },
                    {
                      "name": "Static",
                      "value": "Static",
                      "description": "Statically allocated address."
                    }
                  ]
                }
              },
              "ipv6AddressType": {
                "description": "Gets or sets the ipv6 address type.",
                "type": "string",
                "enum": [
                  "Dynamic",
                  "Static"
                ],
                "x-ms-enum": {
                  "name": "AllocationMethod",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Dynamic",
                      "value": "Dynamic",
                      "description": "Dynamically allocated address."
                    },
                    {
                      "name": "Static",
                      "value": "Static",
                      "description": "Statically allocated address."
                    }
                  ]
                }
              },
              "macAddressType": {
                "description": "Gets or sets the mac address type.",
                "type": "string",
                "enum": [
                  "Dynamic",
                  "Static"
                ],
                "x-ms-enum": {
                  "name": "AllocationMethod",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Dynamic",
                      "value": "Dynamic",
                      "description": "Dynamically allocated address."
                    },
                    {
                      "name": "Static",
                      "value": "Static",
                      "description": "Statically allocated address."
                    }
                  ]
                }
              },
              "nicId": {
                "type": "string",
                "description": "Gets or sets the nic id."
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name",
            "nicId"
          ]
        },
        "disks": {
          "type": "array",
          "description": "Gets the disks of the template.",
          "items": {
            "type": "object",
            "description": "Virtual disk model",
            "properties": {
              "name": {
                "type": "string",
                "description": "Gets or sets the name of the disk."
              },
              "displayName": {
                "type": "string",
                "description": "Gets the display name of the virtual disk as shown in the vmmServer. This is the fallback label for a disk when the name is not set.",
                "readOnly": true
              },
              "diskId": {
                "type": "string",
                "description": "Gets or sets the disk id."
              },
              "diskSizeGB": {
                "type": "integer",
                "format": "int32",
                "description": "Gets or sets the disk total size."
              },
              "maxDiskSizeGB": {
                "type": "integer",
                "format": "int32",
                "description": "Gets the max disk size.",
                "readOnly": true
              },
              "bus": {
                "type": "integer",
                "format": "int32",
                "description": "Gets or sets the disk bus."
              },
              "lun": {
                "type": "integer",
                "format": "int32",
                "description": "Gets or sets the disk lun."
              },
              "busType": {
                "type": "string",
                "description": "Gets or sets the disk bus type."
              },
              "vhdType": {
                "type": "string",
                "description": "Gets or sets the disk vhd type."
              },
              "volumeType": {
                "type": "string",
                "description": "Gets the disk volume type.",
                "readOnly": true
              },
              "vhdFormatType": {
                "type": "string",
                "description": "Gets the disk vhd format type.",
                "readOnly": true
              },
              "templateDiskId": {
                "type": "string",
                "description": "Gets or sets the disk id in the template.",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "storageQoSPolicy": {
                "description": "The QoS policy for the disk.",
                "x-ms-client-name": "storageQosPolicy",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the policy."
                  },
                  "id": {
                    "type": "string",
                    "description": "The ID of the QoS policy."
                  }
                }
              },
              "createDiffDisk": {
                "description": "Gets or sets a value indicating diff disk.",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "type": "string",
                "enum": [
                  "true",
                  "false"
                ],
                "x-ms-enum": {
                  "name": "CreateDiffDisk",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "true",
                      "value": "true",
                      "description": "Enable create diff disk."
                    },
                    {
                      "name": "false",
                      "value": "false",
                      "description": "Disable create diff disk."
                    }
                  ]
                }
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "diskId",
            "name"
          ]
        },
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted",
            "Created"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "The resource is provisioning."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "The resource is updating."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "The resource is being deleted."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "The resource has been accepted."
              },
              {
                "name": "Created",
                "value": "Created",
                "description": "The resource was created."
              }
            ]
          }
        }
      }
    },
    "VirtualMachineTemplateTagsUpdate": {
      "type": "object",
      "description": "The type used for updating tags in VirtualMachineTemplate resources.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "VirtualNetwork": {
      "type": "object",
      "description": "The VirtualNetworks resource definition.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "inventoryItemId": {
              "type": "string",
              "description": "Gets or sets the inventory Item ID for the resource."
            },
            "uuid": {
              "type": "string",
              "description": "Unique ID of the virtual network.",
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
            },
            "vmmServerId": {
              "type": "string",
              "format": "arm-id",
              "description": "ARM Id of the vmmServer resource in which this resource resides.",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.ScVmm/vmmServers"
                  }
                ]
              }
            },
            "networkName": {
              "type": "string",
              "description": "Name of the virtual network in vmmServer.",
              "readOnly": true
            },
            "provisioningState": {
              "description": "Provisioning state of the resource.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted",
                "Created"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "The resource is provisioning."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "The resource is updating."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "The resource is being deleted."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "The resource has been accepted."
                  },
                  {
                    "name": "Created",
                    "value": "Created",
                    "description": "The resource was created."
                  }
                ]
              }
            }
          }
        },
        "extendedLocation": {
          "description": "The extended location.",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "The extended location type."
            },
            "name": {
              "type": "string",
              "format": "arm-id",
              "description": "The extended location name.",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.ExtendedLocation/customLocations"
                  }
                ]
              }
            }
          }
        }
      },
      "required": [
        "extendedLocation"
      ]
    },
    "VirtualNetworkInventoryItem": {
      "type": "object",
      "description": "The Virtual network inventory item.",
      "allOf": [
        {
          "type": "object",
          "description": "Defines the resource properties.",
          "properties": {
            "inventoryType": {
              "description": "They inventory type.",
              "type": "string",
              "enum": [
                "Cloud",
                "VirtualNetwork",
                "VirtualMachine",
                "VirtualMachineTemplate"
              ],
              "x-ms-enum": {
                "name": "InventoryType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Cloud",
                    "value": "Cloud",
                    "description": "Cloud inventory type"
                  },
                  {
                    "name": "VirtualNetwork",
                    "value": "VirtualNetwork",
                    "description": "VirtualNetwork inventory type"
                  },
                  {
                    "name": "VirtualMachine",
                    "value": "VirtualMachine",
                    "description": "VirtualMachine inventory type"
                  },
                  {
                    "name": "VirtualMachineTemplate",
                    "value": "VirtualMachineTemplate",
                    "description": "VirtualMachineTemplate inventory type"
                  }
                ]
              }
            },
            "managedResourceId": {
              "type": "string",
              "description": "Gets the tracked resource id corresponding to the inventory resource.",
              "readOnly": true
            },
            "uuid": {
              "type": "string",
              "description": "Gets the UUID (which is assigned by Vmm) for the inventory item.",
              "readOnly": true
            },
            "inventoryItemName": {
              "type": "string",
              "description": "Gets the Managed Object name in Vmm for the inventory item.",
              "readOnly": true
            },
            "provisioningState": {
              "description": "Provisioning state of the resource.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted",
                "Created"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "The resource is provisioning."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "The resource is updating."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "The resource is being deleted."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "The resource has been accepted."
                  },
                  {
                    "name": "Created",
                    "value": "Created",
                    "description": "The resource was created."
                  }
                ]
              }
            }
          },
          "discriminator": "inventoryType",
          "required": [
            "inventoryType"
          ]
        }
      ],
      "x-ms-discriminator-value": "VirtualNetwork"
    },
    "VirtualNetworkListResult": {
      "type": "object",
      "description": "The response of a VirtualNetwork list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The VirtualNetwork items on this page",
          "items": {
            "type": "object",
            "description": "The VirtualNetworks resource definition.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "inventoryItemId": {
                    "type": "string",
                    "description": "Gets or sets the inventory Item ID for the resource."
                  },
                  "uuid": {
                    "type": "string",
                    "description": "Unique ID of the virtual network.",
                    "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
                  },
                  "vmmServerId": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "ARM Id of the vmmServer resource in which this resource resides.",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.ScVmm/vmmServers"
                        }
                      ]
                    }
                  },
                  "networkName": {
                    "type": "string",
                    "description": "Name of the virtual network in vmmServer.",
                    "readOnly": true
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the resource.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted",
                      "Created"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "The resource is provisioning."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "The resource is updating."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "The resource is being deleted."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "The resource has been accepted."
                        },
                        {
                          "name": "Created",
                          "value": "Created",
                          "description": "The resource was created."
                        }
                      ]
                    }
                  }
                }
              },
              "extendedLocation": {
                "description": "The extended location.",
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The extended location type."
                  },
                  "name": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "The extended location name.",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.ExtendedLocation/customLocations"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "required": [
              "extendedLocation"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "VirtualNetworkProperties": {
      "type": "object",
      "description": "Defines the resource properties.",
      "properties": {
        "inventoryItemId": {
          "type": "string",
          "description": "Gets or sets the inventory Item ID for the resource."
        },
        "uuid": {
          "type": "string",
          "description": "Unique ID of the virtual network.",
          "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
        },
        "vmmServerId": {
          "type": "string",
          "format": "arm-id",
          "description": "ARM Id of the vmmServer resource in which this resource resides.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ScVmm/vmmServers"
              }
            ]
          }
        },
        "networkName": {
          "type": "string",
          "description": "Name of the virtual network in vmmServer.",
          "readOnly": true
        },
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted",
            "Created"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "The resource is provisioning."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "The resource is updating."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "The resource is being deleted."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "The resource has been accepted."
              },
              {
                "name": "Created",
                "value": "Created",
                "description": "The resource was created."
              }
            ]
          }
        }
      }
    },
    "VirtualNetworkTagsUpdate": {
      "type": "object",
      "description": "The type used for updating tags in VirtualNetwork resources.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "VmInstanceHybridIdentityMetadata": {
      "type": "object",
      "description": "Defines the HybridIdentityMetadata.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "resourceUid": {
              "type": "string",
              "description": "The unique identifier for the resource."
            },
            "publicKey": {
              "type": "string",
              "description": "Gets or sets the Public Key."
            },
            "provisioningState": {
              "description": "Provisioning state of the resource.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted",
                "Created"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "The resource is provisioning."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "The resource is updating."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "The resource is being deleted."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "The resource has been accepted."
                  },
                  {
                    "name": "Created",
                    "value": "Created",
                    "description": "The resource was created."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "VmInstanceHybridIdentityMetadataListResult": {
      "type": "object",
      "description": "The response of a VmInstanceHybridIdentityMetadata list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The VmInstanceHybridIdentityMetadata items on this page",
          "items": {
            "type": "object",
            "description": "Defines the HybridIdentityMetadata.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "resourceUid": {
                    "type": "string",
                    "description": "The unique identifier for the resource."
                  },
                  "publicKey": {
                    "type": "string",
                    "description": "Gets or sets the Public Key."
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the resource.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted",
                      "Created"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "The resource is provisioning."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "The resource is updating."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "The resource is being deleted."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "The resource has been accepted."
                        },
                        {
                          "name": "Created",
                          "value": "Created",
                          "description": "The resource was created."
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "VmInstanceHybridIdentityMetadataProperties": {
      "type": "object",
      "description": "Describes the properties of Hybrid Identity Metadata for a Virtual Machine.",
      "properties": {
        "resourceUid": {
          "type": "string",
          "description": "The unique identifier for the resource."
        },
        "publicKey": {
          "type": "string",
          "description": "Gets or sets the Public Key."
        },
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted",
            "Created"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "The resource is provisioning."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "The resource is updating."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "The resource is being deleted."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "The resource has been accepted."
              },
              {
                "name": "Created",
                "value": "Created",
                "description": "The resource was created."
              }
            ]
          }
        }
      }
    },
    "VmmCredential": {
      "type": "object",
      "description": "Credentials to connect to VmmServer.",
      "properties": {
        "username": {
          "type": "string",
          "description": "Username to use to connect to VmmServer."
        },
        "password": {
          "type": "string",
          "format": "password",
          "description": "Password to use to connect to VmmServer.",
          "x-ms-mutability": [
            "update",
            "create"
          ],
          "x-ms-secret": true
        }
      }
    },
    "VmmServer": {
      "type": "object",
      "description": "The VmmServers resource definition.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "credentials": {
              "description": "Credentials to connect to VmmServer.",
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "description": "Username to use to connect to VmmServer."
                },
                "password": {
                  "type": "string",
                  "format": "password",
                  "description": "Password to use to connect to VmmServer.",
                  "x-ms-mutability": [
                    "update",
                    "create"
                  ],
                  "x-ms-secret": true
                }
              }
            },
            "fqdn": {
              "type": "string",
              "description": "Fqdn is the hostname/ip of the vmmServer.",
              "minLength": 1
            },
            "port": {
              "type": "integer",
              "format": "int32",
              "description": "Port is the port on which the vmmServer is listening.",
              "minimum": 1,
              "maximum": 65535
            },
            "connectionStatus": {
              "type": "string",
              "description": "Gets the connection status to the vmmServer.",
              "readOnly": true
            },
            "errorMessage": {
              "type": "string",
              "description": "Gets any error message if connection to vmmServer is having any issue.",
              "readOnly": true
            },
            "uuid": {
              "type": "string",
              "description": "Unique ID of vmmServer.",
              "readOnly": true
            },
            "version": {
              "type": "string",
              "description": "Version is the version of the vmmSever.",
              "readOnly": true
            },
            "provisioningState": {
              "description": "Provisioning state of the resource.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted",
                "Created"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "The resource is provisioning."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "The resource is updating."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "The resource is being deleted."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "The resource has been accepted."
                  },
                  {
                    "name": "Created",
                    "value": "Created",
                    "description": "The resource was created."
                  }
                ]
              }
            }
          },
          "required": [
            "fqdn"
          ]
        },
        "extendedLocation": {
          "description": "The extended location.",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "The extended location type."
            },
            "name": {
              "type": "string",
              "format": "arm-id",
              "description": "The extended location name.",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.ExtendedLocation/customLocations"
                  }
                ]
              }
            }
          }
        }
      },
      "required": [
        "extendedLocation"
      ]
    },
    "VmmServerListResult": {
      "type": "object",
      "description": "The response of a VmmServer list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The VmmServer items on this page",
          "items": {
            "type": "object",
            "description": "The VmmServers resource definition.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "credentials": {
                    "description": "Credentials to connect to VmmServer.",
                    "type": "object",
                    "properties": {
                      "username": {
                        "type": "string",
                        "description": "Username to use to connect to VmmServer."
                      },
                      "password": {
                        "type": "string",
                        "format": "password",
                        "description": "Password to use to connect to VmmServer.",
                        "x-ms-mutability": [
                          "update",
                          "create"
                        ],
                        "x-ms-secret": true
                      }
                    }
                  },
                  "fqdn": {
                    "type": "string",
                    "description": "Fqdn is the hostname/ip of the vmmServer.",
                    "minLength": 1
                  },
                  "port": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Port is the port on which the vmmServer is listening.",
                    "minimum": 1,
                    "maximum": 65535
                  },
                  "connectionStatus": {
                    "type": "string",
                    "description": "Gets the connection status to the vmmServer.",
                    "readOnly": true
                  },
                  "errorMessage": {
                    "type": "string",
                    "description": "Gets any error message if connection to vmmServer is having any issue.",
                    "readOnly": true
                  },
                  "uuid": {
                    "type": "string",
                    "description": "Unique ID of vmmServer.",
                    "readOnly": true
                  },
                  "version": {
                    "type": "string",
                    "description": "Version is the version of the vmmSever.",
                    "readOnly": true
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the resource.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted",
                      "Created"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "The resource is provisioning."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "The resource is updating."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "The resource is being deleted."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "The resource has been accepted."
                        },
                        {
                          "name": "Created",
                          "value": "Created",
                          "description": "The resource was created."
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "fqdn"
                ]
              },
              "extendedLocation": {
                "description": "The extended location.",
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The extended location type."
                  },
                  "name": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "The extended location name.",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.ExtendedLocation/customLocations"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "required": [
              "extendedLocation"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "VmmServerProperties": {
      "type": "object",
      "description": "Defines the resource properties.",
      "properties": {
        "credentials": {
          "description": "Credentials to connect to VmmServer.",
          "type": "object",
          "properties": {
            "username": {
              "type": "string",
              "description": "Username to use to connect to VmmServer."
            },
            "password": {
              "type": "string",
              "format": "password",
              "description": "Password to use to connect to VmmServer.",
              "x-ms-mutability": [
                "update",
                "create"
              ],
              "x-ms-secret": true
            }
          }
        },
        "fqdn": {
          "type": "string",
          "description": "Fqdn is the hostname/ip of the vmmServer.",
          "minLength": 1
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Port is the port on which the vmmServer is listening.",
          "minimum": 1,
          "maximum": 65535
        },
        "connectionStatus": {
          "type": "string",
          "description": "Gets the connection status to the vmmServer.",
          "readOnly": true
        },
        "errorMessage": {
          "type": "string",
          "description": "Gets any error message if connection to vmmServer is having any issue.",
          "readOnly": true
        },
        "uuid": {
          "type": "string",
          "description": "Unique ID of vmmServer.",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "Version is the version of the vmmSever.",
          "readOnly": true
        },
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted",
            "Created"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "The resource is provisioning."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "The resource is updating."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "The resource is being deleted."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "The resource has been accepted."
              },
              {
                "name": "Created",
                "value": "Created",
                "description": "The resource was created."
              }
            ]
          }
        }
      },
      "required": [
        "fqdn"
      ]
    },
    "VmmServerTagsUpdate": {
      "type": "object",
      "description": "The type used for updating tags in VmmServer resources.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    }
  },
  "parameters": {
    "Azure.ResourceManager.ResourceUriParameter": {
      "name": "resourceUri",
      "in": "path",
      "description": "The fully qualified Azure Resource manager identifier of the resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "QueryForceDelete": {
      "name": "force",
      "in": "query",
      "description": "Forces the resource to be deleted.",
      "required": false,
      "type": "string",
      "enum": [
        "true",
        "false"
      ],
      "x-ms-enum": {
        "name": "ForceDelete",
        "modelAsString": true,
        "values": [
          {
            "name": "true",
            "value": "true",
            "description": "Enable force delete."
          },
          {
            "name": "false",
            "value": "false",
            "description": "Disable force delete."
          }
        ]
      },
      "x-ms-parameter-location": "method"
    }
  }
}