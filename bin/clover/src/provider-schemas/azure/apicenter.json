{
  "swagger": "2.0",
  "info": {
    "title": "Azure apicenter",
    "version": "2024-03-01",
    "description": "Azure apicenter service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/providers/Microsoft.ApiCenter/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of operations supported by the resource provider",
                  "items": {
                    "type": "object",
                    "title": "REST API Operation",
                    "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
                        "readOnly": true
                      },
                      "isDataAction": {
                        "type": "boolean",
                        "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
                        "readOnly": true
                      },
                      "display": {
                        "type": "object",
                        "description": "Localized display information for this particular operation.",
                        "properties": {
                          "provider": {
                            "type": "string",
                            "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
                            "readOnly": true
                          },
                          "resource": {
                            "type": "string",
                            "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
                            "readOnly": true
                          },
                          "operation": {
                            "type": "string",
                            "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
                            "readOnly": true
                          },
                          "description": {
                            "type": "string",
                            "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
                            "readOnly": true
                          }
                        }
                      },
                      "origin": {
                        "type": "string",
                        "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
                        "enum": [
                          "user",
                          "system",
                          "user,system"
                        ],
                        "x-ms-enum": {
                          "name": "Origin",
                          "modelAsString": true
                        },
                        "readOnly": true
                      },
                      "actionType": {
                        "type": "string",
                        "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
                        "enum": [
                          "Internal"
                        ],
                        "x-ms-enum": {
                          "name": "ActionType",
                          "modelAsString": true
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "URL to get the next set of operation list results (if there are any).",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ApiCenter/services": {
      "get": {
        "operationId": "Services_ListBySubscription",
        "tags": [
          "Services"
        ],
        "description": "Lists services within an Azure subscription.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Service list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Service items on this page",
                  "items": {
                    "type": "object",
                    "description": "The service entity.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning state of the service.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                }
                              ]
                            }
                          }
                        }
                      },
                      "identity": {
                        "description": "The managed service identities assigned to this resource.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "title": "User-Assigned Identities",
                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                            "additionalProperties": {
                              "x-nullable": true,
                              "type": "object",
                              "description": "User assigned identity properties",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID of the assigned identity.",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID of the assigned identity.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items",
                  "readOnly": true
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services": {
      "get": {
        "operationId": "Services_ListByResourceGroup",
        "tags": [
          "Services"
        ],
        "description": "Returns a collection of services within the resource group.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Service list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Service items on this page",
                  "items": {
                    "type": "object",
                    "description": "The service entity.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning state of the service.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                }
                              ]
                            }
                          }
                        }
                      },
                      "identity": {
                        "description": "The managed service identities assigned to this resource.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "title": "User-Assigned Identities",
                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                            "additionalProperties": {
                              "x-nullable": true,
                              "type": "object",
                              "description": "User assigned identity properties",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID of the assigned identity.",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID of the assigned identity.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items",
                  "readOnly": true
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}": {
      "get": {
        "operationId": "Services_Get",
        "tags": [
          "Services"
        ],
        "description": "Returns details of the service.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The service entity.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the service.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          }
                        ]
                      }
                    }
                  }
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Services_CreateOrUpdate",
        "tags": [
          "Services"
        ],
        "description": "Creates new or updates existing API.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The service entity.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the service.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          }
                        ]
                      }
                    }
                  }
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Service' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "The service entity.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the service.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          }
                        ]
                      }
                    }
                  }
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'Service' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "The service entity.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the service.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          }
                        ]
                      }
                    }
                  }
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Services_Update",
        "tags": [
          "Services"
        ],
        "description": "Updates existing service.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "payload",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The type used for update operations of the Service.",
              "properties": {
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "x-ms-client-name": "properties"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The service entity.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the service.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          }
                        ]
                      }
                    }
                  }
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Services_Delete",
        "tags": [
          "Services"
        ],
        "description": "Deletes specified service.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/exportMetadataSchema": {
      "post": {
        "operationId": "Services_ExportMetadataSchema",
        "tags": [
          "Services"
        ],
        "description": "Exports the effective metadata schema.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "payload",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The metadata schema export request.",
              "properties": {
                "assignedTo": {
                  "description": "An entity the metadata schema is requested for.",
                  "type": "string",
                  "enum": [
                    "api",
                    "environment",
                    "deployment"
                  ],
                  "x-ms-enum": {
                    "name": "MetadataAssignmentEntity",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "api",
                        "value": "api",
                        "description": "Assigned to API"
                      },
                      {
                        "name": "environment",
                        "value": "environment",
                        "description": "Assigned to Environment"
                      },
                      {
                        "name": "deployment",
                        "value": "deployment",
                        "description": "Assigned to Deployment"
                      }
                    ]
                  }
                }
              }
            },
            "x-ms-client-name": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The metadata schema export result.",
              "properties": {
                "format": {
                  "description": "The export format for the schema",
                  "type": "string",
                  "enum": [
                    "inline",
                    "link"
                  ],
                  "x-ms-enum": {
                    "name": "MetadataSchemaExportFormat",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "inline",
                        "value": "inline",
                        "description": "The inlined content of a schema document."
                      },
                      {
                        "name": "link",
                        "value": "link",
                        "description": "The link to a schema document. The URL is valid for 5 minutes."
                      }
                    ]
                  }
                },
                "value": {
                  "type": "string",
                  "description": "The result of the export operation."
                }
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/metadataSchemas": {
      "get": {
        "operationId": "MetadataSchemas_List",
        "tags": [
          "MetadataSchemas"
        ],
        "description": "Returns a collection of metadata schemas.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter parameter.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a MetadataSchema list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The MetadataSchema items on this page",
                  "items": {
                    "type": "object",
                    "description": "Metadata schema entity. Used to define metadata for the entities in API catalog.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "schema": {
                            "type": "string",
                            "description": "The schema defining the type."
                          },
                          "assignedTo": {
                            "type": "array",
                            "description": "The assignees",
                            "items": {
                              "type": "object",
                              "description": "Assignment metadata",
                              "properties": {
                                "entity": {
                                  "description": "The entities this metadata schema component gets applied to.",
                                  "type": "string",
                                  "enum": [
                                    "api",
                                    "environment",
                                    "deployment"
                                  ],
                                  "x-ms-enum": {
                                    "name": "MetadataAssignmentEntity",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "api",
                                        "value": "api",
                                        "description": "Assigned to API"
                                      },
                                      {
                                        "name": "environment",
                                        "value": "environment",
                                        "description": "Assigned to Environment"
                                      },
                                      {
                                        "name": "deployment",
                                        "value": "deployment",
                                        "description": "Assigned to Deployment"
                                      }
                                    ]
                                  }
                                },
                                "required": {
                                  "type": "boolean",
                                  "description": "Required assignment"
                                },
                                "deprecated": {
                                  "type": "boolean",
                                  "description": "Deprecated assignment"
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          }
                        },
                        "required": [
                          "schema"
                        ]
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items",
                  "readOnly": true
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/metadataSchemas/{metadataSchemaName}": {
      "get": {
        "operationId": "MetadataSchemas_Get",
        "tags": [
          "MetadataSchemas"
        ],
        "description": "Returns details of the metadata schema.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "metadataSchemaName",
            "in": "path",
            "description": "The name of the metadata schema.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Metadata schema entity. Used to define metadata for the entities in API catalog.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "schema": {
                      "type": "string",
                      "description": "The schema defining the type."
                    },
                    "assignedTo": {
                      "type": "array",
                      "description": "The assignees",
                      "items": {
                        "type": "object",
                        "description": "Assignment metadata",
                        "properties": {
                          "entity": {
                            "description": "The entities this metadata schema component gets applied to.",
                            "type": "string",
                            "enum": [
                              "api",
                              "environment",
                              "deployment"
                            ],
                            "x-ms-enum": {
                              "name": "MetadataAssignmentEntity",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "api",
                                  "value": "api",
                                  "description": "Assigned to API"
                                },
                                {
                                  "name": "environment",
                                  "value": "environment",
                                  "description": "Assigned to Environment"
                                },
                                {
                                  "name": "deployment",
                                  "value": "deployment",
                                  "description": "Assigned to Deployment"
                                }
                              ]
                            }
                          },
                          "required": {
                            "type": "boolean",
                            "description": "Required assignment"
                          },
                          "deprecated": {
                            "type": "boolean",
                            "description": "Deprecated assignment"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    }
                  },
                  "required": [
                    "schema"
                  ]
                }
              }
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The entity tag for the response."
              }
            }
          }
        }
      },
      "put": {
        "operationId": "MetadataSchemas_CreateOrUpdate",
        "tags": [
          "MetadataSchemas"
        ],
        "description": "Creates new or updates existing metadata schema.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "metadataSchemaName",
            "in": "path",
            "description": "The name of the metadata schema.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "payload",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Metadata schema entity. Used to define metadata for the entities in API catalog.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "schema": {
                      "type": "string",
                      "description": "The schema defining the type."
                    },
                    "assignedTo": {
                      "type": "array",
                      "description": "The assignees",
                      "items": {
                        "type": "object",
                        "description": "Assignment metadata",
                        "properties": {
                          "entity": {
                            "description": "The entities this metadata schema component gets applied to.",
                            "type": "string",
                            "enum": [
                              "api",
                              "environment",
                              "deployment"
                            ],
                            "x-ms-enum": {
                              "name": "MetadataAssignmentEntity",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "api",
                                  "value": "api",
                                  "description": "Assigned to API"
                                },
                                {
                                  "name": "environment",
                                  "value": "environment",
                                  "description": "Assigned to Environment"
                                },
                                {
                                  "name": "deployment",
                                  "value": "deployment",
                                  "description": "Assigned to Deployment"
                                }
                              ]
                            }
                          },
                          "required": {
                            "type": "boolean",
                            "description": "Required assignment"
                          },
                          "deprecated": {
                            "type": "boolean",
                            "description": "Deprecated assignment"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    }
                  },
                  "required": [
                    "schema"
                  ]
                }
              }
            },
            "x-ms-client-name": "resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'MetadataSchema' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Metadata schema entity. Used to define metadata for the entities in API catalog.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "schema": {
                      "type": "string",
                      "description": "The schema defining the type."
                    },
                    "assignedTo": {
                      "type": "array",
                      "description": "The assignees",
                      "items": {
                        "type": "object",
                        "description": "Assignment metadata",
                        "properties": {
                          "entity": {
                            "description": "The entities this metadata schema component gets applied to.",
                            "type": "string",
                            "enum": [
                              "api",
                              "environment",
                              "deployment"
                            ],
                            "x-ms-enum": {
                              "name": "MetadataAssignmentEntity",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "api",
                                  "value": "api",
                                  "description": "Assigned to API"
                                },
                                {
                                  "name": "environment",
                                  "value": "environment",
                                  "description": "Assigned to Environment"
                                },
                                {
                                  "name": "deployment",
                                  "value": "deployment",
                                  "description": "Assigned to Deployment"
                                }
                              ]
                            }
                          },
                          "required": {
                            "type": "boolean",
                            "description": "Required assignment"
                          },
                          "deprecated": {
                            "type": "boolean",
                            "description": "Deprecated assignment"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    }
                  },
                  "required": [
                    "schema"
                  ]
                }
              }
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The entity tag for the response."
              }
            }
          },
          "201": {
            "description": "Resource 'MetadataSchema' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Metadata schema entity. Used to define metadata for the entities in API catalog.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "schema": {
                      "type": "string",
                      "description": "The schema defining the type."
                    },
                    "assignedTo": {
                      "type": "array",
                      "description": "The assignees",
                      "items": {
                        "type": "object",
                        "description": "Assignment metadata",
                        "properties": {
                          "entity": {
                            "description": "The entities this metadata schema component gets applied to.",
                            "type": "string",
                            "enum": [
                              "api",
                              "environment",
                              "deployment"
                            ],
                            "x-ms-enum": {
                              "name": "MetadataAssignmentEntity",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "api",
                                  "value": "api",
                                  "description": "Assigned to API"
                                },
                                {
                                  "name": "environment",
                                  "value": "environment",
                                  "description": "Assigned to Environment"
                                },
                                {
                                  "name": "deployment",
                                  "value": "deployment",
                                  "description": "Assigned to Deployment"
                                }
                              ]
                            }
                          },
                          "required": {
                            "type": "boolean",
                            "description": "Required assignment"
                          },
                          "deprecated": {
                            "type": "boolean",
                            "description": "Deprecated assignment"
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    }
                  },
                  "required": [
                    "schema"
                  ]
                }
              }
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The entity tag for the response."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "MetadataSchemas_Delete",
        "tags": [
          "MetadataSchemas"
        ],
        "description": "Deletes specified metadata schema.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "metadataSchemaName",
            "in": "path",
            "description": "The name of the metadata schema.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      },
      "head": {
        "operationId": "MetadataSchemas_Head",
        "tags": [
          "MetadataSchemas"
        ],
        "description": "Checks if specified metadata schema exists.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "metadataSchemaName",
            "in": "path",
            "description": "The name of the metadata schema.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "MetadataSchemas_Head": {
            "operationId": "MetadataSchemas_Head",
            "title": "MetadataSchemas_Head",
            "parameters": {
              "resourceGroupName": "contoso-resources",
              "subscriptionId": "00000000-0000-0000-0000-000000000000",
              "serviceName": "contoso",
              "metadataSchemaName": "author",
              "api-version": "2024-03-01"
            },
            "responses": {
              "200": {
                "headers": {
                  "Etag": "AAAAAAAACCI="
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces": {
      "get": {
        "operationId": "Workspaces_List",
        "tags": [
          "Workspaces"
        ],
        "description": "Returns a collection of workspaces.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter parameter.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Workspace list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Workspace items on this page",
                  "items": {
                    "type": "object",
                    "description": "Workspace entity.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Workspace title.",
                            "minLength": 1,
                            "maxLength": 50
                          },
                          "description": {
                            "type": "string",
                            "description": "Workspace description."
                          }
                        },
                        "required": [
                          "title"
                        ]
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items",
                  "readOnly": true
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}": {
      "get": {
        "operationId": "Workspaces_Get",
        "tags": [
          "Workspaces"
        ],
        "description": "Returns details of the workspace.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Workspace entity.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Workspace title.",
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "description": {
                      "type": "string",
                      "description": "Workspace description."
                    }
                  },
                  "required": [
                    "title"
                  ]
                }
              }
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The entity tag for the response."
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Workspaces_CreateOrUpdate",
        "tags": [
          "Workspaces"
        ],
        "description": "Creates new or updates existing workspace.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "payload",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Workspace entity.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Workspace title.",
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "description": {
                      "type": "string",
                      "description": "Workspace description."
                    }
                  },
                  "required": [
                    "title"
                  ]
                }
              }
            },
            "x-ms-client-name": "resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Workspace' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Workspace entity.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Workspace title.",
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "description": {
                      "type": "string",
                      "description": "Workspace description."
                    }
                  },
                  "required": [
                    "title"
                  ]
                }
              }
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The entity tag for the response."
              }
            }
          },
          "201": {
            "description": "Resource 'Workspace' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Workspace entity.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Workspace title.",
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "description": {
                      "type": "string",
                      "description": "Workspace description."
                    }
                  },
                  "required": [
                    "title"
                  ]
                }
              }
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The entity tag for the response."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Workspaces_Delete",
        "tags": [
          "Workspaces"
        ],
        "description": "Deletes specified workspace.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      },
      "head": {
        "operationId": "Workspaces_Head",
        "tags": [
          "Workspaces"
        ],
        "description": "Checks if specified workspace exists.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Workspaces_Head": {
            "operationId": "Workspaces_Head",
            "title": "Workspaces_Head",
            "parameters": {
              "resourceGroupName": "contoso-resources",
              "subscriptionId": "00000000-0000-0000-0000-000000000000",
              "serviceName": "contoso",
              "workspaceName": "default",
              "api-version": "2024-03-01"
            },
            "responses": {
              "200": {
                "headers": {
                  "Etag": "AAAAAAAACCI="
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis": {
      "get": {
        "operationId": "Apis_List",
        "tags": [
          "Apis"
        ],
        "description": "Returns a collection of APIs.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter parameter.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Api list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Api items on this page",
                  "items": {
                    "type": "object",
                    "description": "API entity.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "API title.",
                            "minLength": 1,
                            "maxLength": 50
                          },
                          "kind": {
                            "description": "Kind of API. For example, REST or GraphQL.",
                            "type": "string",
                            "enum": [
                              "rest",
                              "graphql",
                              "grpc",
                              "soap",
                              "webhook",
                              "websocket"
                            ],
                            "x-ms-enum": {
                              "name": "ApiKind",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "rest",
                                  "value": "rest",
                                  "description": "A Representational State Transfer Api"
                                },
                                {
                                  "name": "graphql",
                                  "value": "graphql",
                                  "description": "A Graph query language Api"
                                },
                                {
                                  "name": "grpc",
                                  "value": "grpc",
                                  "description": "A gRPC Api"
                                },
                                {
                                  "name": "soap",
                                  "value": "soap",
                                  "description": "A SOAP Api"
                                },
                                {
                                  "name": "webhook",
                                  "value": "webhook",
                                  "description": "Web Hook"
                                },
                                {
                                  "name": "websocket",
                                  "value": "websocket",
                                  "description": "Web Socket"
                                }
                              ]
                            }
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the API.",
                            "maxLength": 1000
                          },
                          "summary": {
                            "type": "string",
                            "description": "Short description of the API.",
                            "maxLength": 200
                          },
                          "lifecycleStage": {
                            "description": "Current lifecycle stage of the API.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "design",
                              "development",
                              "testing",
                              "preview",
                              "production",
                              "deprecated",
                              "retired"
                            ],
                            "x-ms-enum": {
                              "name": "LifecycleStage",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "design",
                                  "value": "design",
                                  "description": "design stage"
                                },
                                {
                                  "name": "development",
                                  "value": "development",
                                  "description": "development stage"
                                },
                                {
                                  "name": "testing",
                                  "value": "testing",
                                  "description": "testing stage"
                                },
                                {
                                  "name": "preview",
                                  "value": "preview",
                                  "description": "In preview"
                                },
                                {
                                  "name": "production",
                                  "value": "production",
                                  "description": "In production"
                                },
                                {
                                  "name": "deprecated",
                                  "value": "deprecated",
                                  "description": "deprecated stage"
                                },
                                {
                                  "name": "retired",
                                  "value": "retired",
                                  "description": "Retired stage"
                                }
                              ]
                            }
                          },
                          "termsOfService": {
                            "description": "Terms of service for the API.",
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": "string",
                                "format": "uri",
                                "description": "URL pointing to the terms of service.",
                                "maxLength": 200
                              }
                            },
                            "required": [
                              "url"
                            ]
                          },
                          "externalDocumentation": {
                            "type": "array",
                            "description": "The set of external documentation",
                            "maxItems": 20,
                            "items": {
                              "type": "object",
                              "description": "Additional, external documentation for the API.",
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "description": "Title of the documentation.",
                                  "maxLength": 50
                                },
                                "description": {
                                  "type": "string",
                                  "description": "Description of the documentation.",
                                  "maxLength": 500
                                },
                                "url": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "URL pointing to the documentation.",
                                  "maxLength": 200
                                }
                              },
                              "required": [
                                "url"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "contacts": {
                            "type": "array",
                            "description": "The set of contacts",
                            "items": {
                              "type": "object",
                              "description": "Contact information",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the contact.",
                                  "maxLength": 100
                                },
                                "url": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "URL for the contact.",
                                  "maxLength": 200
                                },
                                "email": {
                                  "type": "string",
                                  "description": "Email address of the contact.",
                                  "maxLength": 100
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "license": {
                            "description": "The license information for the API.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the license.",
                                "maxLength": 100
                              },
                              "url": {
                                "type": "string",
                                "format": "uri",
                                "description": "URL pointing to the license details. The URL field is mutually exclusive of the\nidentifier field.",
                                "maxLength": 200
                              },
                              "identifier": {
                                "type": "string",
                                "format": "uri",
                                "description": "SPDX license information for the API. The identifier field is mutually\nexclusive of the URL field.",
                                "maxLength": 50
                              }
                            }
                          },
                          "customProperties": {
                            "description": "The custom metadata defined for API catalog entities.",
                            "type": "object",
                            "title": "Custom Properties"
                          }
                        },
                        "required": [
                          "title",
                          "kind"
                        ]
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items",
                  "readOnly": true
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis/{apiName}": {
      "get": {
        "operationId": "Apis_Get",
        "tags": [
          "Apis"
        ],
        "description": "Returns details of the API.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "API entity.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "API title.",
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "kind": {
                      "description": "Kind of API. For example, REST or GraphQL.",
                      "type": "string",
                      "enum": [
                        "rest",
                        "graphql",
                        "grpc",
                        "soap",
                        "webhook",
                        "websocket"
                      ],
                      "x-ms-enum": {
                        "name": "ApiKind",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "rest",
                            "value": "rest",
                            "description": "A Representational State Transfer Api"
                          },
                          {
                            "name": "graphql",
                            "value": "graphql",
                            "description": "A Graph query language Api"
                          },
                          {
                            "name": "grpc",
                            "value": "grpc",
                            "description": "A gRPC Api"
                          },
                          {
                            "name": "soap",
                            "value": "soap",
                            "description": "A SOAP Api"
                          },
                          {
                            "name": "webhook",
                            "value": "webhook",
                            "description": "Web Hook"
                          },
                          {
                            "name": "websocket",
                            "value": "websocket",
                            "description": "Web Socket"
                          }
                        ]
                      }
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the API.",
                      "maxLength": 1000
                    },
                    "summary": {
                      "type": "string",
                      "description": "Short description of the API.",
                      "maxLength": 200
                    },
                    "lifecycleStage": {
                      "description": "Current lifecycle stage of the API.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "design",
                        "development",
                        "testing",
                        "preview",
                        "production",
                        "deprecated",
                        "retired"
                      ],
                      "x-ms-enum": {
                        "name": "LifecycleStage",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "design",
                            "value": "design",
                            "description": "design stage"
                          },
                          {
                            "name": "development",
                            "value": "development",
                            "description": "development stage"
                          },
                          {
                            "name": "testing",
                            "value": "testing",
                            "description": "testing stage"
                          },
                          {
                            "name": "preview",
                            "value": "preview",
                            "description": "In preview"
                          },
                          {
                            "name": "production",
                            "value": "production",
                            "description": "In production"
                          },
                          {
                            "name": "deprecated",
                            "value": "deprecated",
                            "description": "deprecated stage"
                          },
                          {
                            "name": "retired",
                            "value": "retired",
                            "description": "Retired stage"
                          }
                        ]
                      }
                    },
                    "termsOfService": {
                      "description": "Terms of service for the API.",
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "uri",
                          "description": "URL pointing to the terms of service.",
                          "maxLength": 200
                        }
                      },
                      "required": [
                        "url"
                      ]
                    },
                    "externalDocumentation": {
                      "type": "array",
                      "description": "The set of external documentation",
                      "maxItems": 20,
                      "items": {
                        "type": "object",
                        "description": "Additional, external documentation for the API.",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Title of the documentation.",
                            "maxLength": 50
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the documentation.",
                            "maxLength": 500
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "URL pointing to the documentation.",
                            "maxLength": 200
                          }
                        },
                        "required": [
                          "url"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "contacts": {
                      "type": "array",
                      "description": "The set of contacts",
                      "items": {
                        "type": "object",
                        "description": "Contact information",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the contact.",
                            "maxLength": 100
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "URL for the contact.",
                            "maxLength": 200
                          },
                          "email": {
                            "type": "string",
                            "description": "Email address of the contact.",
                            "maxLength": 100
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "license": {
                      "description": "The license information for the API.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the license.",
                          "maxLength": 100
                        },
                        "url": {
                          "type": "string",
                          "format": "uri",
                          "description": "URL pointing to the license details. The URL field is mutually exclusive of the\nidentifier field.",
                          "maxLength": 200
                        },
                        "identifier": {
                          "type": "string",
                          "format": "uri",
                          "description": "SPDX license information for the API. The identifier field is mutually\nexclusive of the URL field.",
                          "maxLength": 50
                        }
                      }
                    },
                    "customProperties": {
                      "description": "The custom metadata defined for API catalog entities.",
                      "type": "object",
                      "title": "Custom Properties"
                    }
                  },
                  "required": [
                    "title",
                    "kind"
                  ]
                }
              }
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The entity tag for the response."
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Apis_CreateOrUpdate",
        "tags": [
          "Apis"
        ],
        "description": "Creates new or updates existing API.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "payload",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "API entity.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "API title.",
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "kind": {
                      "description": "Kind of API. For example, REST or GraphQL.",
                      "type": "string",
                      "enum": [
                        "rest",
                        "graphql",
                        "grpc",
                        "soap",
                        "webhook",
                        "websocket"
                      ],
                      "x-ms-enum": {
                        "name": "ApiKind",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "rest",
                            "value": "rest",
                            "description": "A Representational State Transfer Api"
                          },
                          {
                            "name": "graphql",
                            "value": "graphql",
                            "description": "A Graph query language Api"
                          },
                          {
                            "name": "grpc",
                            "value": "grpc",
                            "description": "A gRPC Api"
                          },
                          {
                            "name": "soap",
                            "value": "soap",
                            "description": "A SOAP Api"
                          },
                          {
                            "name": "webhook",
                            "value": "webhook",
                            "description": "Web Hook"
                          },
                          {
                            "name": "websocket",
                            "value": "websocket",
                            "description": "Web Socket"
                          }
                        ]
                      }
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the API.",
                      "maxLength": 1000
                    },
                    "summary": {
                      "type": "string",
                      "description": "Short description of the API.",
                      "maxLength": 200
                    },
                    "lifecycleStage": {
                      "description": "Current lifecycle stage of the API.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "design",
                        "development",
                        "testing",
                        "preview",
                        "production",
                        "deprecated",
                        "retired"
                      ],
                      "x-ms-enum": {
                        "name": "LifecycleStage",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "design",
                            "value": "design",
                            "description": "design stage"
                          },
                          {
                            "name": "development",
                            "value": "development",
                            "description": "development stage"
                          },
                          {
                            "name": "testing",
                            "value": "testing",
                            "description": "testing stage"
                          },
                          {
                            "name": "preview",
                            "value": "preview",
                            "description": "In preview"
                          },
                          {
                            "name": "production",
                            "value": "production",
                            "description": "In production"
                          },
                          {
                            "name": "deprecated",
                            "value": "deprecated",
                            "description": "deprecated stage"
                          },
                          {
                            "name": "retired",
                            "value": "retired",
                            "description": "Retired stage"
                          }
                        ]
                      }
                    },
                    "termsOfService": {
                      "description": "Terms of service for the API.",
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "uri",
                          "description": "URL pointing to the terms of service.",
                          "maxLength": 200
                        }
                      },
                      "required": [
                        "url"
                      ]
                    },
                    "externalDocumentation": {
                      "type": "array",
                      "description": "The set of external documentation",
                      "maxItems": 20,
                      "items": {
                        "type": "object",
                        "description": "Additional, external documentation for the API.",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Title of the documentation.",
                            "maxLength": 50
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the documentation.",
                            "maxLength": 500
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "URL pointing to the documentation.",
                            "maxLength": 200
                          }
                        },
                        "required": [
                          "url"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "contacts": {
                      "type": "array",
                      "description": "The set of contacts",
                      "items": {
                        "type": "object",
                        "description": "Contact information",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the contact.",
                            "maxLength": 100
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "URL for the contact.",
                            "maxLength": 200
                          },
                          "email": {
                            "type": "string",
                            "description": "Email address of the contact.",
                            "maxLength": 100
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "license": {
                      "description": "The license information for the API.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the license.",
                          "maxLength": 100
                        },
                        "url": {
                          "type": "string",
                          "format": "uri",
                          "description": "URL pointing to the license details. The URL field is mutually exclusive of the\nidentifier field.",
                          "maxLength": 200
                        },
                        "identifier": {
                          "type": "string",
                          "format": "uri",
                          "description": "SPDX license information for the API. The identifier field is mutually\nexclusive of the URL field.",
                          "maxLength": 50
                        }
                      }
                    },
                    "customProperties": {
                      "description": "The custom metadata defined for API catalog entities.",
                      "type": "object",
                      "title": "Custom Properties"
                    }
                  },
                  "required": [
                    "title",
                    "kind"
                  ]
                }
              }
            },
            "x-ms-client-name": "resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Api' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "API entity.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "API title.",
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "kind": {
                      "description": "Kind of API. For example, REST or GraphQL.",
                      "type": "string",
                      "enum": [
                        "rest",
                        "graphql",
                        "grpc",
                        "soap",
                        "webhook",
                        "websocket"
                      ],
                      "x-ms-enum": {
                        "name": "ApiKind",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "rest",
                            "value": "rest",
                            "description": "A Representational State Transfer Api"
                          },
                          {
                            "name": "graphql",
                            "value": "graphql",
                            "description": "A Graph query language Api"
                          },
                          {
                            "name": "grpc",
                            "value": "grpc",
                            "description": "A gRPC Api"
                          },
                          {
                            "name": "soap",
                            "value": "soap",
                            "description": "A SOAP Api"
                          },
                          {
                            "name": "webhook",
                            "value": "webhook",
                            "description": "Web Hook"
                          },
                          {
                            "name": "websocket",
                            "value": "websocket",
                            "description": "Web Socket"
                          }
                        ]
                      }
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the API.",
                      "maxLength": 1000
                    },
                    "summary": {
                      "type": "string",
                      "description": "Short description of the API.",
                      "maxLength": 200
                    },
                    "lifecycleStage": {
                      "description": "Current lifecycle stage of the API.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "design",
                        "development",
                        "testing",
                        "preview",
                        "production",
                        "deprecated",
                        "retired"
                      ],
                      "x-ms-enum": {
                        "name": "LifecycleStage",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "design",
                            "value": "design",
                            "description": "design stage"
                          },
                          {
                            "name": "development",
                            "value": "development",
                            "description": "development stage"
                          },
                          {
                            "name": "testing",
                            "value": "testing",
                            "description": "testing stage"
                          },
                          {
                            "name": "preview",
                            "value": "preview",
                            "description": "In preview"
                          },
                          {
                            "name": "production",
                            "value": "production",
                            "description": "In production"
                          },
                          {
                            "name": "deprecated",
                            "value": "deprecated",
                            "description": "deprecated stage"
                          },
                          {
                            "name": "retired",
                            "value": "retired",
                            "description": "Retired stage"
                          }
                        ]
                      }
                    },
                    "termsOfService": {
                      "description": "Terms of service for the API.",
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "uri",
                          "description": "URL pointing to the terms of service.",
                          "maxLength": 200
                        }
                      },
                      "required": [
                        "url"
                      ]
                    },
                    "externalDocumentation": {
                      "type": "array",
                      "description": "The set of external documentation",
                      "maxItems": 20,
                      "items": {
                        "type": "object",
                        "description": "Additional, external documentation for the API.",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Title of the documentation.",
                            "maxLength": 50
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the documentation.",
                            "maxLength": 500
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "URL pointing to the documentation.",
                            "maxLength": 200
                          }
                        },
                        "required": [
                          "url"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "contacts": {
                      "type": "array",
                      "description": "The set of contacts",
                      "items": {
                        "type": "object",
                        "description": "Contact information",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the contact.",
                            "maxLength": 100
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "URL for the contact.",
                            "maxLength": 200
                          },
                          "email": {
                            "type": "string",
                            "description": "Email address of the contact.",
                            "maxLength": 100
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "license": {
                      "description": "The license information for the API.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the license.",
                          "maxLength": 100
                        },
                        "url": {
                          "type": "string",
                          "format": "uri",
                          "description": "URL pointing to the license details. The URL field is mutually exclusive of the\nidentifier field.",
                          "maxLength": 200
                        },
                        "identifier": {
                          "type": "string",
                          "format": "uri",
                          "description": "SPDX license information for the API. The identifier field is mutually\nexclusive of the URL field.",
                          "maxLength": 50
                        }
                      }
                    },
                    "customProperties": {
                      "description": "The custom metadata defined for API catalog entities.",
                      "type": "object",
                      "title": "Custom Properties"
                    }
                  },
                  "required": [
                    "title",
                    "kind"
                  ]
                }
              }
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The entity tag for the response."
              }
            }
          },
          "201": {
            "description": "Resource 'Api' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "API entity.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "API title.",
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "kind": {
                      "description": "Kind of API. For example, REST or GraphQL.",
                      "type": "string",
                      "enum": [
                        "rest",
                        "graphql",
                        "grpc",
                        "soap",
                        "webhook",
                        "websocket"
                      ],
                      "x-ms-enum": {
                        "name": "ApiKind",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "rest",
                            "value": "rest",
                            "description": "A Representational State Transfer Api"
                          },
                          {
                            "name": "graphql",
                            "value": "graphql",
                            "description": "A Graph query language Api"
                          },
                          {
                            "name": "grpc",
                            "value": "grpc",
                            "description": "A gRPC Api"
                          },
                          {
                            "name": "soap",
                            "value": "soap",
                            "description": "A SOAP Api"
                          },
                          {
                            "name": "webhook",
                            "value": "webhook",
                            "description": "Web Hook"
                          },
                          {
                            "name": "websocket",
                            "value": "websocket",
                            "description": "Web Socket"
                          }
                        ]
                      }
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the API.",
                      "maxLength": 1000
                    },
                    "summary": {
                      "type": "string",
                      "description": "Short description of the API.",
                      "maxLength": 200
                    },
                    "lifecycleStage": {
                      "description": "Current lifecycle stage of the API.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "design",
                        "development",
                        "testing",
                        "preview",
                        "production",
                        "deprecated",
                        "retired"
                      ],
                      "x-ms-enum": {
                        "name": "LifecycleStage",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "design",
                            "value": "design",
                            "description": "design stage"
                          },
                          {
                            "name": "development",
                            "value": "development",
                            "description": "development stage"
                          },
                          {
                            "name": "testing",
                            "value": "testing",
                            "description": "testing stage"
                          },
                          {
                            "name": "preview",
                            "value": "preview",
                            "description": "In preview"
                          },
                          {
                            "name": "production",
                            "value": "production",
                            "description": "In production"
                          },
                          {
                            "name": "deprecated",
                            "value": "deprecated",
                            "description": "deprecated stage"
                          },
                          {
                            "name": "retired",
                            "value": "retired",
                            "description": "Retired stage"
                          }
                        ]
                      }
                    },
                    "termsOfService": {
                      "description": "Terms of service for the API.",
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "uri",
                          "description": "URL pointing to the terms of service.",
                          "maxLength": 200
                        }
                      },
                      "required": [
                        "url"
                      ]
                    },
                    "externalDocumentation": {
                      "type": "array",
                      "description": "The set of external documentation",
                      "maxItems": 20,
                      "items": {
                        "type": "object",
                        "description": "Additional, external documentation for the API.",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Title of the documentation.",
                            "maxLength": 50
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the documentation.",
                            "maxLength": 500
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "URL pointing to the documentation.",
                            "maxLength": 200
                          }
                        },
                        "required": [
                          "url"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "contacts": {
                      "type": "array",
                      "description": "The set of contacts",
                      "items": {
                        "type": "object",
                        "description": "Contact information",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the contact.",
                            "maxLength": 100
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "URL for the contact.",
                            "maxLength": 200
                          },
                          "email": {
                            "type": "string",
                            "description": "Email address of the contact.",
                            "maxLength": 100
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "license": {
                      "description": "The license information for the API.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the license.",
                          "maxLength": 100
                        },
                        "url": {
                          "type": "string",
                          "format": "uri",
                          "description": "URL pointing to the license details. The URL field is mutually exclusive of the\nidentifier field.",
                          "maxLength": 200
                        },
                        "identifier": {
                          "type": "string",
                          "format": "uri",
                          "description": "SPDX license information for the API. The identifier field is mutually\nexclusive of the URL field.",
                          "maxLength": 50
                        }
                      }
                    },
                    "customProperties": {
                      "description": "The custom metadata defined for API catalog entities.",
                      "type": "object",
                      "title": "Custom Properties"
                    }
                  },
                  "required": [
                    "title",
                    "kind"
                  ]
                }
              }
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The entity tag for the response."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Apis_Delete",
        "tags": [
          "Apis"
        ],
        "description": "Deletes specified API.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      },
      "head": {
        "operationId": "Apis_Head",
        "tags": [
          "Apis"
        ],
        "description": "Checks if specified API exists.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Apis_Head": {
            "operationId": "Apis_Head",
            "title": "Apis_Head",
            "parameters": {
              "resourceGroupName": "contoso-resources",
              "subscriptionId": "00000000-0000-0000-0000-000000000000",
              "serviceName": "contoso",
              "workspaceName": "default",
              "apiName": "echo-api",
              "api-version": "2024-03-01"
            },
            "responses": {
              "200": {
                "headers": {
                  "Etag": "AAAAAAAACCI="
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis/{apiName}/deployments": {
      "get": {
        "operationId": "Deployments_List",
        "tags": [
          "Deployments"
        ],
        "description": "Returns a collection of API deployments.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter parameter.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Deployment list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Deployment items on this page",
                  "items": {
                    "type": "object",
                    "description": "API deployment entity.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "API deployment title",
                            "minLength": 1,
                            "maxLength": 50
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the deployment.",
                            "maxLength": 500
                          },
                          "environmentId": {
                            "type": "string",
                            "description": "API center-scoped environment resource ID."
                          },
                          "definitionId": {
                            "type": "string",
                            "description": "API center-scoped definition resource ID."
                          },
                          "state": {
                            "description": "State of API deployment.",
                            "type": "string",
                            "enum": [
                              "active",
                              "inactive"
                            ],
                            "x-ms-enum": {
                              "name": "DeploymentState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "active",
                                  "value": "active",
                                  "description": "Active State"
                                },
                                {
                                  "name": "inactive",
                                  "value": "inactive",
                                  "description": "Inactive State"
                                }
                              ]
                            }
                          },
                          "server": {
                            "description": "The deployment server",
                            "type": "object",
                            "properties": {
                              "runtimeUri": {
                                "type": "array",
                                "description": "Base runtime URLs for this deployment.",
                                "items": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "Used for restricted length uris",
                                  "maxLength": 200
                                }
                              }
                            }
                          },
                          "customProperties": {
                            "description": "The custom metadata defined for API catalog entities.",
                            "type": "object",
                            "title": "Custom Properties"
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items",
                  "readOnly": true
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis/{apiName}/deployments/{deploymentName}": {
      "get": {
        "operationId": "Deployments_Get",
        "tags": [
          "Deployments"
        ],
        "description": "Returns details of the API deployment.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of the API deployment.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "API deployment entity.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "API deployment title",
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the deployment.",
                      "maxLength": 500
                    },
                    "environmentId": {
                      "type": "string",
                      "description": "API center-scoped environment resource ID."
                    },
                    "definitionId": {
                      "type": "string",
                      "description": "API center-scoped definition resource ID."
                    },
                    "state": {
                      "description": "State of API deployment.",
                      "type": "string",
                      "enum": [
                        "active",
                        "inactive"
                      ],
                      "x-ms-enum": {
                        "name": "DeploymentState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "active",
                            "value": "active",
                            "description": "Active State"
                          },
                          {
                            "name": "inactive",
                            "value": "inactive",
                            "description": "Inactive State"
                          }
                        ]
                      }
                    },
                    "server": {
                      "description": "The deployment server",
                      "type": "object",
                      "properties": {
                        "runtimeUri": {
                          "type": "array",
                          "description": "Base runtime URLs for this deployment.",
                          "items": {
                            "type": "string",
                            "format": "uri",
                            "description": "Used for restricted length uris",
                            "maxLength": 200
                          }
                        }
                      }
                    },
                    "customProperties": {
                      "description": "The custom metadata defined for API catalog entities.",
                      "type": "object",
                      "title": "Custom Properties"
                    }
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The entity tag for the response."
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Deployments_CreateOrUpdate",
        "tags": [
          "Deployments"
        ],
        "description": "Creates new or updates existing API deployment.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of the API deployment.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "payload",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "API deployment entity.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "API deployment title",
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the deployment.",
                      "maxLength": 500
                    },
                    "environmentId": {
                      "type": "string",
                      "description": "API center-scoped environment resource ID."
                    },
                    "definitionId": {
                      "type": "string",
                      "description": "API center-scoped definition resource ID."
                    },
                    "state": {
                      "description": "State of API deployment.",
                      "type": "string",
                      "enum": [
                        "active",
                        "inactive"
                      ],
                      "x-ms-enum": {
                        "name": "DeploymentState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "active",
                            "value": "active",
                            "description": "Active State"
                          },
                          {
                            "name": "inactive",
                            "value": "inactive",
                            "description": "Inactive State"
                          }
                        ]
                      }
                    },
                    "server": {
                      "description": "The deployment server",
                      "type": "object",
                      "properties": {
                        "runtimeUri": {
                          "type": "array",
                          "description": "Base runtime URLs for this deployment.",
                          "items": {
                            "type": "string",
                            "format": "uri",
                            "description": "Used for restricted length uris",
                            "maxLength": 200
                          }
                        }
                      }
                    },
                    "customProperties": {
                      "description": "The custom metadata defined for API catalog entities.",
                      "type": "object",
                      "title": "Custom Properties"
                    }
                  }
                }
              }
            },
            "x-ms-client-name": "resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Deployment' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "API deployment entity.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "API deployment title",
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the deployment.",
                      "maxLength": 500
                    },
                    "environmentId": {
                      "type": "string",
                      "description": "API center-scoped environment resource ID."
                    },
                    "definitionId": {
                      "type": "string",
                      "description": "API center-scoped definition resource ID."
                    },
                    "state": {
                      "description": "State of API deployment.",
                      "type": "string",
                      "enum": [
                        "active",
                        "inactive"
                      ],
                      "x-ms-enum": {
                        "name": "DeploymentState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "active",
                            "value": "active",
                            "description": "Active State"
                          },
                          {
                            "name": "inactive",
                            "value": "inactive",
                            "description": "Inactive State"
                          }
                        ]
                      }
                    },
                    "server": {
                      "description": "The deployment server",
                      "type": "object",
                      "properties": {
                        "runtimeUri": {
                          "type": "array",
                          "description": "Base runtime URLs for this deployment.",
                          "items": {
                            "type": "string",
                            "format": "uri",
                            "description": "Used for restricted length uris",
                            "maxLength": 200
                          }
                        }
                      }
                    },
                    "customProperties": {
                      "description": "The custom metadata defined for API catalog entities.",
                      "type": "object",
                      "title": "Custom Properties"
                    }
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The entity tag for the response."
              }
            }
          },
          "201": {
            "description": "Resource 'Deployment' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "API deployment entity.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "API deployment title",
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the deployment.",
                      "maxLength": 500
                    },
                    "environmentId": {
                      "type": "string",
                      "description": "API center-scoped environment resource ID."
                    },
                    "definitionId": {
                      "type": "string",
                      "description": "API center-scoped definition resource ID."
                    },
                    "state": {
                      "description": "State of API deployment.",
                      "type": "string",
                      "enum": [
                        "active",
                        "inactive"
                      ],
                      "x-ms-enum": {
                        "name": "DeploymentState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "active",
                            "value": "active",
                            "description": "Active State"
                          },
                          {
                            "name": "inactive",
                            "value": "inactive",
                            "description": "Inactive State"
                          }
                        ]
                      }
                    },
                    "server": {
                      "description": "The deployment server",
                      "type": "object",
                      "properties": {
                        "runtimeUri": {
                          "type": "array",
                          "description": "Base runtime URLs for this deployment.",
                          "items": {
                            "type": "string",
                            "format": "uri",
                            "description": "Used for restricted length uris",
                            "maxLength": 200
                          }
                        }
                      }
                    },
                    "customProperties": {
                      "description": "The custom metadata defined for API catalog entities.",
                      "type": "object",
                      "title": "Custom Properties"
                    }
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The entity tag for the response."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Deployments_Delete",
        "tags": [
          "Deployments"
        ],
        "description": "Deletes API deployment.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of the API deployment.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      },
      "head": {
        "operationId": "Deployments_Head",
        "tags": [
          "Deployments"
        ],
        "description": "Checks if specified API deployment exists.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of the API deployment.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deployments_Head": {
            "operationId": "Deployments_Head",
            "title": "Deployments_Head",
            "parameters": {
              "resourceGroupName": "contoso-resources",
              "subscriptionId": "00000000-0000-0000-0000-000000000000",
              "serviceName": "contoso",
              "workspaceName": "default",
              "apiName": "echo-api",
              "deploymentName": "production",
              "api-version": "2024-03-01"
            },
            "responses": {
              "200": {
                "headers": {
                  "Etag": "AAAAAAAACCI="
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis/{apiName}/versions": {
      "get": {
        "operationId": "ApiVersions_List",
        "tags": [
          "ApiVersions"
        ],
        "description": "Returns a collection of API versions.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter parameter.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a ApiVersion list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The ApiVersion items on this page",
                  "items": {
                    "type": "object",
                    "description": "API version entity.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "API version title.",
                            "minLength": 1,
                            "maxLength": 50
                          },
                          "lifecycleStage": {
                            "description": "Current lifecycle stage of the API.",
                            "type": "string",
                            "enum": [
                              "design",
                              "development",
                              "testing",
                              "preview",
                              "production",
                              "deprecated",
                              "retired"
                            ],
                            "x-ms-enum": {
                              "name": "LifecycleStage",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "design",
                                  "value": "design",
                                  "description": "design stage"
                                },
                                {
                                  "name": "development",
                                  "value": "development",
                                  "description": "development stage"
                                },
                                {
                                  "name": "testing",
                                  "value": "testing",
                                  "description": "testing stage"
                                },
                                {
                                  "name": "preview",
                                  "value": "preview",
                                  "description": "In preview"
                                },
                                {
                                  "name": "production",
                                  "value": "production",
                                  "description": "In production"
                                },
                                {
                                  "name": "deprecated",
                                  "value": "deprecated",
                                  "description": "deprecated stage"
                                },
                                {
                                  "name": "retired",
                                  "value": "retired",
                                  "description": "Retired stage"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "title",
                          "lifecycleStage"
                        ]
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items",
                  "readOnly": true
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis/{apiName}/versions/{versionName}": {
      "get": {
        "operationId": "ApiVersions_Get",
        "tags": [
          "ApiVersions"
        ],
        "description": "Returns details of the API version.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the API version.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "API version entity.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "API version title.",
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "lifecycleStage": {
                      "description": "Current lifecycle stage of the API.",
                      "type": "string",
                      "enum": [
                        "design",
                        "development",
                        "testing",
                        "preview",
                        "production",
                        "deprecated",
                        "retired"
                      ],
                      "x-ms-enum": {
                        "name": "LifecycleStage",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "design",
                            "value": "design",
                            "description": "design stage"
                          },
                          {
                            "name": "development",
                            "value": "development",
                            "description": "development stage"
                          },
                          {
                            "name": "testing",
                            "value": "testing",
                            "description": "testing stage"
                          },
                          {
                            "name": "preview",
                            "value": "preview",
                            "description": "In preview"
                          },
                          {
                            "name": "production",
                            "value": "production",
                            "description": "In production"
                          },
                          {
                            "name": "deprecated",
                            "value": "deprecated",
                            "description": "deprecated stage"
                          },
                          {
                            "name": "retired",
                            "value": "retired",
                            "description": "Retired stage"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "title",
                    "lifecycleStage"
                  ]
                }
              }
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The entity tag for the response."
              }
            }
          }
        }
      },
      "put": {
        "operationId": "ApiVersions_CreateOrUpdate",
        "tags": [
          "ApiVersions"
        ],
        "description": "Creates new or updates existing API version.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the API version.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "payload",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "API version entity.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "API version title.",
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "lifecycleStage": {
                      "description": "Current lifecycle stage of the API.",
                      "type": "string",
                      "enum": [
                        "design",
                        "development",
                        "testing",
                        "preview",
                        "production",
                        "deprecated",
                        "retired"
                      ],
                      "x-ms-enum": {
                        "name": "LifecycleStage",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "design",
                            "value": "design",
                            "description": "design stage"
                          },
                          {
                            "name": "development",
                            "value": "development",
                            "description": "development stage"
                          },
                          {
                            "name": "testing",
                            "value": "testing",
                            "description": "testing stage"
                          },
                          {
                            "name": "preview",
                            "value": "preview",
                            "description": "In preview"
                          },
                          {
                            "name": "production",
                            "value": "production",
                            "description": "In production"
                          },
                          {
                            "name": "deprecated",
                            "value": "deprecated",
                            "description": "deprecated stage"
                          },
                          {
                            "name": "retired",
                            "value": "retired",
                            "description": "Retired stage"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "title",
                    "lifecycleStage"
                  ]
                }
              }
            },
            "x-ms-client-name": "resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ApiVersion' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "API version entity.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "API version title.",
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "lifecycleStage": {
                      "description": "Current lifecycle stage of the API.",
                      "type": "string",
                      "enum": [
                        "design",
                        "development",
                        "testing",
                        "preview",
                        "production",
                        "deprecated",
                        "retired"
                      ],
                      "x-ms-enum": {
                        "name": "LifecycleStage",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "design",
                            "value": "design",
                            "description": "design stage"
                          },
                          {
                            "name": "development",
                            "value": "development",
                            "description": "development stage"
                          },
                          {
                            "name": "testing",
                            "value": "testing",
                            "description": "testing stage"
                          },
                          {
                            "name": "preview",
                            "value": "preview",
                            "description": "In preview"
                          },
                          {
                            "name": "production",
                            "value": "production",
                            "description": "In production"
                          },
                          {
                            "name": "deprecated",
                            "value": "deprecated",
                            "description": "deprecated stage"
                          },
                          {
                            "name": "retired",
                            "value": "retired",
                            "description": "Retired stage"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "title",
                    "lifecycleStage"
                  ]
                }
              }
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The entity tag for the response."
              }
            }
          },
          "201": {
            "description": "Resource 'ApiVersion' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "API version entity.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "API version title.",
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "lifecycleStage": {
                      "description": "Current lifecycle stage of the API.",
                      "type": "string",
                      "enum": [
                        "design",
                        "development",
                        "testing",
                        "preview",
                        "production",
                        "deprecated",
                        "retired"
                      ],
                      "x-ms-enum": {
                        "name": "LifecycleStage",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "design",
                            "value": "design",
                            "description": "design stage"
                          },
                          {
                            "name": "development",
                            "value": "development",
                            "description": "development stage"
                          },
                          {
                            "name": "testing",
                            "value": "testing",
                            "description": "testing stage"
                          },
                          {
                            "name": "preview",
                            "value": "preview",
                            "description": "In preview"
                          },
                          {
                            "name": "production",
                            "value": "production",
                            "description": "In production"
                          },
                          {
                            "name": "deprecated",
                            "value": "deprecated",
                            "description": "deprecated stage"
                          },
                          {
                            "name": "retired",
                            "value": "retired",
                            "description": "Retired stage"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "title",
                    "lifecycleStage"
                  ]
                }
              }
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The entity tag for the response."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "ApiVersions_Delete",
        "tags": [
          "ApiVersions"
        ],
        "description": "Deletes specified API version",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the API version.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      },
      "head": {
        "operationId": "ApiVersions_Head",
        "tags": [
          "ApiVersions"
        ],
        "description": "Checks if specified API version exists.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the API version.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiVersions_Head": {
            "operationId": "ApiVersions_Head",
            "title": "ApiVersions_Head",
            "parameters": {
              "resourceGroupName": "contoso-resources",
              "subscriptionId": "00000000-0000-0000-0000-000000000000",
              "serviceName": "contoso",
              "workspaceName": "default",
              "apiName": "echo-api",
              "versionName": "2023-01-01",
              "api-version": "2024-03-01"
            },
            "responses": {
              "200": {
                "headers": {
                  "Etag": "AAAAAAAACCI="
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis/{apiName}/versions/{versionName}/definitions": {
      "get": {
        "operationId": "ApiDefinitions_List",
        "tags": [
          "ApiDefinitions"
        ],
        "description": "Returns a collection of API definitions.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the API version.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter parameter.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a ApiDefinition list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The ApiDefinition items on this page",
                  "items": {
                    "type": "object",
                    "description": "API definition entity.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "API definition title.",
                            "minLength": 1,
                            "maxLength": 50
                          },
                          "description": {
                            "type": "string",
                            "description": "API definition description."
                          },
                          "specification": {
                            "description": "API specification details.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Specification name."
                              },
                              "version": {
                                "type": "string",
                                "description": "Specification version."
                              }
                            }
                          }
                        },
                        "required": [
                          "title"
                        ]
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items",
                  "readOnly": true
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis/{apiName}/versions/{versionName}/definitions/{definitionName}": {
      "get": {
        "operationId": "ApiDefinitions_Get",
        "tags": [
          "ApiDefinitions"
        ],
        "description": "Returns details of the API definition.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the API version.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "definitionName",
            "in": "path",
            "description": "The name of the API definition.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "API definition entity.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "API definition title.",
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "description": {
                      "type": "string",
                      "description": "API definition description."
                    },
                    "specification": {
                      "description": "API specification details.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Specification name."
                        },
                        "version": {
                          "type": "string",
                          "description": "Specification version."
                        }
                      }
                    }
                  },
                  "required": [
                    "title"
                  ]
                }
              }
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The entity tag for the response."
              }
            }
          }
        }
      },
      "put": {
        "operationId": "ApiDefinitions_CreateOrUpdate",
        "tags": [
          "ApiDefinitions"
        ],
        "description": "Creates new or updates existing API definition.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the API version.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "definitionName",
            "in": "path",
            "description": "The name of the API definition.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "payload",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "API definition entity.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "API definition title.",
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "description": {
                      "type": "string",
                      "description": "API definition description."
                    },
                    "specification": {
                      "description": "API specification details.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Specification name."
                        },
                        "version": {
                          "type": "string",
                          "description": "Specification version."
                        }
                      }
                    }
                  },
                  "required": [
                    "title"
                  ]
                }
              }
            },
            "x-ms-client-name": "resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ApiDefinition' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "API definition entity.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "API definition title.",
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "description": {
                      "type": "string",
                      "description": "API definition description."
                    },
                    "specification": {
                      "description": "API specification details.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Specification name."
                        },
                        "version": {
                          "type": "string",
                          "description": "Specification version."
                        }
                      }
                    }
                  },
                  "required": [
                    "title"
                  ]
                }
              }
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The entity tag for the response."
              }
            }
          },
          "201": {
            "description": "Resource 'ApiDefinition' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "API definition entity.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "API definition title.",
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "description": {
                      "type": "string",
                      "description": "API definition description."
                    },
                    "specification": {
                      "description": "API specification details.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Specification name."
                        },
                        "version": {
                          "type": "string",
                          "description": "Specification version."
                        }
                      }
                    }
                  },
                  "required": [
                    "title"
                  ]
                }
              }
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The entity tag for the response."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "ApiDefinitions_Delete",
        "tags": [
          "ApiDefinitions"
        ],
        "description": "Deletes specified API definition.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the API version.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "definitionName",
            "in": "path",
            "description": "The name of the API definition.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      },
      "head": {
        "operationId": "ApiDefinitions_Head",
        "tags": [
          "ApiDefinitions"
        ],
        "description": "Checks if specified API definition exists.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the API version.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "definitionName",
            "in": "path",
            "description": "The name of the API definition.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiDefinitions_Head": {
            "operationId": "ApiDefinitions_Head",
            "title": "ApiDefinitions_Head",
            "parameters": {
              "resourceGroupName": "contoso-resources",
              "subscriptionId": "00000000-0000-0000-0000-000000000000",
              "serviceName": "contoso",
              "workspaceName": "default",
              "apiName": "echo-api",
              "versionName": "2023-01-01",
              "definitionName": "openapi",
              "api-version": "2024-03-01"
            },
            "responses": {
              "200": {
                "headers": {
                  "Etag": "AAAAAAAACCI="
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis/{apiName}/versions/{versionName}/definitions/{definitionName}/exportSpecification": {
      "post": {
        "operationId": "ApiDefinitions_ExportSpecification",
        "tags": [
          "ApiDefinitions"
        ],
        "description": "Exports the API specification.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the API version.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "definitionName",
            "in": "path",
            "description": "The name of the API definition.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The API specification export result.",
              "properties": {
                "format": {
                  "description": "The format of exported result",
                  "type": "string",
                  "enum": [
                    "inline",
                    "link"
                  ],
                  "x-ms-enum": {
                    "name": "ApiSpecExportResultFormat",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "inline",
                        "value": "inline",
                        "description": "The inlined content of a specification document."
                      },
                      {
                        "name": "link",
                        "value": "link",
                        "description": "The link to the result of the export operation. The URL is valid for 5 minutes."
                      }
                    ]
                  }
                },
                "value": {
                  "type": "string",
                  "description": "The result of the export operation."
                }
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis/{apiName}/versions/{versionName}/definitions/{definitionName}/importSpecification": {
      "post": {
        "operationId": "ApiDefinitions_ImportSpecification",
        "tags": [
          "ApiDefinitions"
        ],
        "description": "Imports the API specification.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The name of the API.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of the API version.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "definitionName",
            "in": "path",
            "description": "The name of the API definition.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "payload",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The API specification source entity properties.",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "Value of the API specification source."
                },
                "format": {
                  "description": "Format of the API specification source.",
                  "type": "string",
                  "enum": [
                    "inline",
                    "link"
                  ],
                  "x-ms-enum": {
                    "name": "ApiSpecImportSourceFormat",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "inline",
                        "value": "inline",
                        "description": "The inlined content of a specification document."
                      },
                      {
                        "name": "link",
                        "value": "link",
                        "description": "The link to a specification document hosted on a publicly accessible internet\naddress."
                      }
                    ]
                  }
                },
                "specification": {
                  "description": "API specification details.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Specification name."
                    },
                    "version": {
                      "type": "string",
                      "description": "Specification version."
                    }
                  }
                }
              }
            },
            "x-ms-client-name": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "The API specification was successfully imported."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/environments": {
      "get": {
        "operationId": "Environments_List",
        "tags": [
          "Environments"
        ],
        "description": "Returns a collection of environments.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter parameter.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-client-name": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Environment list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Environment items on this page",
                  "items": {
                    "type": "object",
                    "description": "Environment entity.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Environment title.",
                            "minLength": 1,
                            "maxLength": 50
                          },
                          "description": {
                            "type": "string",
                            "description": "The environment description."
                          },
                          "kind": {
                            "description": "Environment kind.",
                            "type": "string",
                            "enum": [
                              "development",
                              "testing",
                              "staging",
                              "production"
                            ],
                            "x-ms-enum": {
                              "name": "EnvironmentKind",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "development",
                                  "value": "development",
                                  "description": "Development environment"
                                },
                                {
                                  "name": "testing",
                                  "value": "testing",
                                  "description": "Testing environment"
                                },
                                {
                                  "name": "staging",
                                  "value": "staging",
                                  "description": "Staging environment"
                                },
                                {
                                  "name": "production",
                                  "value": "production",
                                  "description": "Production environment"
                                }
                              ]
                            }
                          },
                          "server": {
                            "description": "Server information of the environment.",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Type of the server that represents the environment.",
                                "type": "string",
                                "enum": [
                                  "Azure API Management",
                                  "Azure compute service",
                                  "Apigee API Management",
                                  "AWS API Gateway",
                                  "Kong API Gateway",
                                  "Kubernetes",
                                  "MuleSoft API Management"
                                ],
                                "x-ms-enum": {
                                  "name": "EnvironmentServerType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Azure API Management",
                                      "value": "Azure API Management",
                                      "description": "Api Management Server"
                                    },
                                    {
                                      "name": "Azure compute service",
                                      "value": "Azure compute service",
                                      "description": "Compute server"
                                    },
                                    {
                                      "name": "Apigee API Management",
                                      "value": "Apigee API Management",
                                      "description": "Apigee server"
                                    },
                                    {
                                      "name": "AWS API Gateway",
                                      "value": "AWS API Gateway",
                                      "description": "AWS Api Gateway server"
                                    },
                                    {
                                      "name": "Kong API Gateway",
                                      "value": "Kong API Gateway",
                                      "description": "Kong API Gateway server"
                                    },
                                    {
                                      "name": "Kubernetes",
                                      "value": "Kubernetes",
                                      "description": "Kubernetes server"
                                    },
                                    {
                                      "name": "MuleSoft API Management",
                                      "value": "MuleSoft API Management",
                                      "description": "Mulesoft Api Management server"
                                    }
                                  ]
                                }
                              },
                              "managementPortalUri": {
                                "type": "array",
                                "description": "The location of the management portal",
                                "maxItems": 1,
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "onboarding": {
                            "description": "Environment onboarding information",
                            "type": "object",
                            "properties": {
                              "instructions": {
                                "type": "string",
                                "description": "Onboarding guide."
                              },
                              "developerPortalUri": {
                                "type": "array",
                                "description": "The location of the development portal",
                                "maxItems": 1,
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "customProperties": {
                            "description": "The custom metadata defined for API catalog entities.",
                            "type": "object",
                            "title": "Custom Properties"
                          }
                        },
                        "required": [
                          "title",
                          "kind"
                        ]
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items",
                  "readOnly": true
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/environments/{environmentName}": {
      "get": {
        "operationId": "Environments_Get",
        "tags": [
          "Environments"
        ],
        "description": "Returns details of the environment.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "The name of the environment.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Environment entity.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Environment title.",
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "description": {
                      "type": "string",
                      "description": "The environment description."
                    },
                    "kind": {
                      "description": "Environment kind.",
                      "type": "string",
                      "enum": [
                        "development",
                        "testing",
                        "staging",
                        "production"
                      ],
                      "x-ms-enum": {
                        "name": "EnvironmentKind",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "development",
                            "value": "development",
                            "description": "Development environment"
                          },
                          {
                            "name": "testing",
                            "value": "testing",
                            "description": "Testing environment"
                          },
                          {
                            "name": "staging",
                            "value": "staging",
                            "description": "Staging environment"
                          },
                          {
                            "name": "production",
                            "value": "production",
                            "description": "Production environment"
                          }
                        ]
                      }
                    },
                    "server": {
                      "description": "Server information of the environment.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "Type of the server that represents the environment.",
                          "type": "string",
                          "enum": [
                            "Azure API Management",
                            "Azure compute service",
                            "Apigee API Management",
                            "AWS API Gateway",
                            "Kong API Gateway",
                            "Kubernetes",
                            "MuleSoft API Management"
                          ],
                          "x-ms-enum": {
                            "name": "EnvironmentServerType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Azure API Management",
                                "value": "Azure API Management",
                                "description": "Api Management Server"
                              },
                              {
                                "name": "Azure compute service",
                                "value": "Azure compute service",
                                "description": "Compute server"
                              },
                              {
                                "name": "Apigee API Management",
                                "value": "Apigee API Management",
                                "description": "Apigee server"
                              },
                              {
                                "name": "AWS API Gateway",
                                "value": "AWS API Gateway",
                                "description": "AWS Api Gateway server"
                              },
                              {
                                "name": "Kong API Gateway",
                                "value": "Kong API Gateway",
                                "description": "Kong API Gateway server"
                              },
                              {
                                "name": "Kubernetes",
                                "value": "Kubernetes",
                                "description": "Kubernetes server"
                              },
                              {
                                "name": "MuleSoft API Management",
                                "value": "MuleSoft API Management",
                                "description": "Mulesoft Api Management server"
                              }
                            ]
                          }
                        },
                        "managementPortalUri": {
                          "type": "array",
                          "description": "The location of the management portal",
                          "maxItems": 1,
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "onboarding": {
                      "description": "Environment onboarding information",
                      "type": "object",
                      "properties": {
                        "instructions": {
                          "type": "string",
                          "description": "Onboarding guide."
                        },
                        "developerPortalUri": {
                          "type": "array",
                          "description": "The location of the development portal",
                          "maxItems": 1,
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "customProperties": {
                      "description": "The custom metadata defined for API catalog entities.",
                      "type": "object",
                      "title": "Custom Properties"
                    }
                  },
                  "required": [
                    "title",
                    "kind"
                  ]
                }
              }
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The entity tag for the response."
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Environments_CreateOrUpdate",
        "tags": [
          "Environments"
        ],
        "description": "Creates new or updates existing environment.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "The name of the environment.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "payload",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Environment entity.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Environment title.",
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "description": {
                      "type": "string",
                      "description": "The environment description."
                    },
                    "kind": {
                      "description": "Environment kind.",
                      "type": "string",
                      "enum": [
                        "development",
                        "testing",
                        "staging",
                        "production"
                      ],
                      "x-ms-enum": {
                        "name": "EnvironmentKind",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "development",
                            "value": "development",
                            "description": "Development environment"
                          },
                          {
                            "name": "testing",
                            "value": "testing",
                            "description": "Testing environment"
                          },
                          {
                            "name": "staging",
                            "value": "staging",
                            "description": "Staging environment"
                          },
                          {
                            "name": "production",
                            "value": "production",
                            "description": "Production environment"
                          }
                        ]
                      }
                    },
                    "server": {
                      "description": "Server information of the environment.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "Type of the server that represents the environment.",
                          "type": "string",
                          "enum": [
                            "Azure API Management",
                            "Azure compute service",
                            "Apigee API Management",
                            "AWS API Gateway",
                            "Kong API Gateway",
                            "Kubernetes",
                            "MuleSoft API Management"
                          ],
                          "x-ms-enum": {
                            "name": "EnvironmentServerType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Azure API Management",
                                "value": "Azure API Management",
                                "description": "Api Management Server"
                              },
                              {
                                "name": "Azure compute service",
                                "value": "Azure compute service",
                                "description": "Compute server"
                              },
                              {
                                "name": "Apigee API Management",
                                "value": "Apigee API Management",
                                "description": "Apigee server"
                              },
                              {
                                "name": "AWS API Gateway",
                                "value": "AWS API Gateway",
                                "description": "AWS Api Gateway server"
                              },
                              {
                                "name": "Kong API Gateway",
                                "value": "Kong API Gateway",
                                "description": "Kong API Gateway server"
                              },
                              {
                                "name": "Kubernetes",
                                "value": "Kubernetes",
                                "description": "Kubernetes server"
                              },
                              {
                                "name": "MuleSoft API Management",
                                "value": "MuleSoft API Management",
                                "description": "Mulesoft Api Management server"
                              }
                            ]
                          }
                        },
                        "managementPortalUri": {
                          "type": "array",
                          "description": "The location of the management portal",
                          "maxItems": 1,
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "onboarding": {
                      "description": "Environment onboarding information",
                      "type": "object",
                      "properties": {
                        "instructions": {
                          "type": "string",
                          "description": "Onboarding guide."
                        },
                        "developerPortalUri": {
                          "type": "array",
                          "description": "The location of the development portal",
                          "maxItems": 1,
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "customProperties": {
                      "description": "The custom metadata defined for API catalog entities.",
                      "type": "object",
                      "title": "Custom Properties"
                    }
                  },
                  "required": [
                    "title",
                    "kind"
                  ]
                }
              }
            },
            "x-ms-client-name": "resource"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Environment' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Environment entity.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Environment title.",
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "description": {
                      "type": "string",
                      "description": "The environment description."
                    },
                    "kind": {
                      "description": "Environment kind.",
                      "type": "string",
                      "enum": [
                        "development",
                        "testing",
                        "staging",
                        "production"
                      ],
                      "x-ms-enum": {
                        "name": "EnvironmentKind",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "development",
                            "value": "development",
                            "description": "Development environment"
                          },
                          {
                            "name": "testing",
                            "value": "testing",
                            "description": "Testing environment"
                          },
                          {
                            "name": "staging",
                            "value": "staging",
                            "description": "Staging environment"
                          },
                          {
                            "name": "production",
                            "value": "production",
                            "description": "Production environment"
                          }
                        ]
                      }
                    },
                    "server": {
                      "description": "Server information of the environment.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "Type of the server that represents the environment.",
                          "type": "string",
                          "enum": [
                            "Azure API Management",
                            "Azure compute service",
                            "Apigee API Management",
                            "AWS API Gateway",
                            "Kong API Gateway",
                            "Kubernetes",
                            "MuleSoft API Management"
                          ],
                          "x-ms-enum": {
                            "name": "EnvironmentServerType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Azure API Management",
                                "value": "Azure API Management",
                                "description": "Api Management Server"
                              },
                              {
                                "name": "Azure compute service",
                                "value": "Azure compute service",
                                "description": "Compute server"
                              },
                              {
                                "name": "Apigee API Management",
                                "value": "Apigee API Management",
                                "description": "Apigee server"
                              },
                              {
                                "name": "AWS API Gateway",
                                "value": "AWS API Gateway",
                                "description": "AWS Api Gateway server"
                              },
                              {
                                "name": "Kong API Gateway",
                                "value": "Kong API Gateway",
                                "description": "Kong API Gateway server"
                              },
                              {
                                "name": "Kubernetes",
                                "value": "Kubernetes",
                                "description": "Kubernetes server"
                              },
                              {
                                "name": "MuleSoft API Management",
                                "value": "MuleSoft API Management",
                                "description": "Mulesoft Api Management server"
                              }
                            ]
                          }
                        },
                        "managementPortalUri": {
                          "type": "array",
                          "description": "The location of the management portal",
                          "maxItems": 1,
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "onboarding": {
                      "description": "Environment onboarding information",
                      "type": "object",
                      "properties": {
                        "instructions": {
                          "type": "string",
                          "description": "Onboarding guide."
                        },
                        "developerPortalUri": {
                          "type": "array",
                          "description": "The location of the development portal",
                          "maxItems": 1,
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "customProperties": {
                      "description": "The custom metadata defined for API catalog entities.",
                      "type": "object",
                      "title": "Custom Properties"
                    }
                  },
                  "required": [
                    "title",
                    "kind"
                  ]
                }
              }
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The entity tag for the response."
              }
            }
          },
          "201": {
            "description": "Resource 'Environment' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Environment entity.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Environment title.",
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "description": {
                      "type": "string",
                      "description": "The environment description."
                    },
                    "kind": {
                      "description": "Environment kind.",
                      "type": "string",
                      "enum": [
                        "development",
                        "testing",
                        "staging",
                        "production"
                      ],
                      "x-ms-enum": {
                        "name": "EnvironmentKind",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "development",
                            "value": "development",
                            "description": "Development environment"
                          },
                          {
                            "name": "testing",
                            "value": "testing",
                            "description": "Testing environment"
                          },
                          {
                            "name": "staging",
                            "value": "staging",
                            "description": "Staging environment"
                          },
                          {
                            "name": "production",
                            "value": "production",
                            "description": "Production environment"
                          }
                        ]
                      }
                    },
                    "server": {
                      "description": "Server information of the environment.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "Type of the server that represents the environment.",
                          "type": "string",
                          "enum": [
                            "Azure API Management",
                            "Azure compute service",
                            "Apigee API Management",
                            "AWS API Gateway",
                            "Kong API Gateway",
                            "Kubernetes",
                            "MuleSoft API Management"
                          ],
                          "x-ms-enum": {
                            "name": "EnvironmentServerType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Azure API Management",
                                "value": "Azure API Management",
                                "description": "Api Management Server"
                              },
                              {
                                "name": "Azure compute service",
                                "value": "Azure compute service",
                                "description": "Compute server"
                              },
                              {
                                "name": "Apigee API Management",
                                "value": "Apigee API Management",
                                "description": "Apigee server"
                              },
                              {
                                "name": "AWS API Gateway",
                                "value": "AWS API Gateway",
                                "description": "AWS Api Gateway server"
                              },
                              {
                                "name": "Kong API Gateway",
                                "value": "Kong API Gateway",
                                "description": "Kong API Gateway server"
                              },
                              {
                                "name": "Kubernetes",
                                "value": "Kubernetes",
                                "description": "Kubernetes server"
                              },
                              {
                                "name": "MuleSoft API Management",
                                "value": "MuleSoft API Management",
                                "description": "Mulesoft Api Management server"
                              }
                            ]
                          }
                        },
                        "managementPortalUri": {
                          "type": "array",
                          "description": "The location of the management portal",
                          "maxItems": 1,
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "onboarding": {
                      "description": "Environment onboarding information",
                      "type": "object",
                      "properties": {
                        "instructions": {
                          "type": "string",
                          "description": "Onboarding guide."
                        },
                        "developerPortalUri": {
                          "type": "array",
                          "description": "The location of the development portal",
                          "maxItems": 1,
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "customProperties": {
                      "description": "The custom metadata defined for API catalog entities.",
                      "type": "object",
                      "title": "Custom Properties"
                    }
                  },
                  "required": [
                    "title",
                    "kind"
                  ]
                }
              }
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The entity tag for the response."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Environments_Delete",
        "tags": [
          "Environments"
        ],
        "description": "Deletes the environment.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "The name of the environment.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      },
      "head": {
        "operationId": "Environments_Head",
        "tags": [
          "Environments"
        ],
        "description": "Checks if specified environment exists.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "The name of the environment.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Environments_Head": {
            "operationId": "Environments_Head",
            "title": "Environments_Head",
            "parameters": {
              "resourceGroupName": "contoso-resources",
              "subscriptionId": "00000000-0000-0000-0000-000000000000",
              "serviceName": "contoso",
              "workspaceName": "default",
              "environmentName": "public",
              "api-version": "2024-03-01"
            },
            "responses": {
              "200": {
                "headers": {
                  "Etag": "AAAAAAAACCI="
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ActionType": {
      "type": "string",
      "description": "The type of action",
      "enum": [
        "Internal"
      ],
      "x-ms-enum": {
        "name": "ActionType",
        "modelAsString": true,
        "values": [
          {
            "name": "Internal",
            "value": "Internal",
            "description": "an internal action"
          }
        ]
      }
    },
    "Api": {
      "type": "object",
      "description": "API entity.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "API title.",
              "minLength": 1,
              "maxLength": 50
            },
            "kind": {
              "description": "Kind of API. For example, REST or GraphQL.",
              "type": "string",
              "enum": [
                "rest",
                "graphql",
                "grpc",
                "soap",
                "webhook",
                "websocket"
              ],
              "x-ms-enum": {
                "name": "ApiKind",
                "modelAsString": true,
                "values": [
                  {
                    "name": "rest",
                    "value": "rest",
                    "description": "A Representational State Transfer Api"
                  },
                  {
                    "name": "graphql",
                    "value": "graphql",
                    "description": "A Graph query language Api"
                  },
                  {
                    "name": "grpc",
                    "value": "grpc",
                    "description": "A gRPC Api"
                  },
                  {
                    "name": "soap",
                    "value": "soap",
                    "description": "A SOAP Api"
                  },
                  {
                    "name": "webhook",
                    "value": "webhook",
                    "description": "Web Hook"
                  },
                  {
                    "name": "websocket",
                    "value": "websocket",
                    "description": "Web Socket"
                  }
                ]
              }
            },
            "description": {
              "type": "string",
              "description": "Description of the API.",
              "maxLength": 1000
            },
            "summary": {
              "type": "string",
              "description": "Short description of the API.",
              "maxLength": 200
            },
            "lifecycleStage": {
              "description": "Current lifecycle stage of the API.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "design",
                "development",
                "testing",
                "preview",
                "production",
                "deprecated",
                "retired"
              ],
              "x-ms-enum": {
                "name": "LifecycleStage",
                "modelAsString": true,
                "values": [
                  {
                    "name": "design",
                    "value": "design",
                    "description": "design stage"
                  },
                  {
                    "name": "development",
                    "value": "development",
                    "description": "development stage"
                  },
                  {
                    "name": "testing",
                    "value": "testing",
                    "description": "testing stage"
                  },
                  {
                    "name": "preview",
                    "value": "preview",
                    "description": "In preview"
                  },
                  {
                    "name": "production",
                    "value": "production",
                    "description": "In production"
                  },
                  {
                    "name": "deprecated",
                    "value": "deprecated",
                    "description": "deprecated stage"
                  },
                  {
                    "name": "retired",
                    "value": "retired",
                    "description": "Retired stage"
                  }
                ]
              }
            },
            "termsOfService": {
              "description": "Terms of service for the API.",
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "format": "uri",
                  "description": "URL pointing to the terms of service.",
                  "maxLength": 200
                }
              },
              "required": [
                "url"
              ]
            },
            "externalDocumentation": {
              "type": "array",
              "description": "The set of external documentation",
              "maxItems": 20,
              "items": {
                "type": "object",
                "description": "Additional, external documentation for the API.",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Title of the documentation.",
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the documentation.",
                    "maxLength": 500
                  },
                  "url": {
                    "type": "string",
                    "format": "uri",
                    "description": "URL pointing to the documentation.",
                    "maxLength": 200
                  }
                },
                "required": [
                  "url"
                ]
              },
              "x-ms-identifiers": []
            },
            "contacts": {
              "type": "array",
              "description": "The set of contacts",
              "items": {
                "type": "object",
                "description": "Contact information",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the contact.",
                    "maxLength": 100
                  },
                  "url": {
                    "type": "string",
                    "format": "uri",
                    "description": "URL for the contact.",
                    "maxLength": 200
                  },
                  "email": {
                    "type": "string",
                    "description": "Email address of the contact.",
                    "maxLength": 100
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "license": {
              "description": "The license information for the API.",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the license.",
                  "maxLength": 100
                },
                "url": {
                  "type": "string",
                  "format": "uri",
                  "description": "URL pointing to the license details. The URL field is mutually exclusive of the\nidentifier field.",
                  "maxLength": 200
                },
                "identifier": {
                  "type": "string",
                  "format": "uri",
                  "description": "SPDX license information for the API. The identifier field is mutually\nexclusive of the URL field.",
                  "maxLength": 50
                }
              }
            },
            "customProperties": {
              "description": "The custom metadata defined for API catalog entities.",
              "type": "object",
              "title": "Custom Properties"
            }
          },
          "required": [
            "title",
            "kind"
          ]
        }
      }
    },
    "ApiDefinition": {
      "type": "object",
      "description": "API definition entity.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "API definition title.",
              "minLength": 1,
              "maxLength": 50
            },
            "description": {
              "type": "string",
              "description": "API definition description."
            },
            "specification": {
              "description": "API specification details.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Specification name."
                },
                "version": {
                  "type": "string",
                  "description": "Specification version."
                }
              }
            }
          },
          "required": [
            "title"
          ]
        }
      }
    },
    "ApiDefinitionListResult": {
      "type": "object",
      "description": "The response of a ApiDefinition list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ApiDefinition items on this page",
          "items": {
            "type": "object",
            "description": "API definition entity.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "API definition title.",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "description": "API definition description."
                  },
                  "specification": {
                    "description": "API specification details.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Specification name."
                      },
                      "version": {
                        "type": "string",
                        "description": "Specification version."
                      }
                    }
                  }
                },
                "required": [
                  "title"
                ]
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "ApiDefinitionProperties": {
      "type": "object",
      "description": "API definition properties entity.",
      "properties": {
        "title": {
          "type": "string",
          "description": "API definition title.",
          "minLength": 1,
          "maxLength": 50
        },
        "description": {
          "type": "string",
          "description": "API definition description."
        },
        "specification": {
          "description": "API specification details.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Specification name."
            },
            "version": {
              "type": "string",
              "description": "Specification version."
            }
          }
        }
      },
      "required": [
        "title"
      ]
    },
    "ApiDefinitionPropertiesSpecification": {
      "type": "object",
      "description": "API specification details.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Specification name."
        },
        "version": {
          "type": "string",
          "description": "Specification version."
        }
      }
    },
    "ApiImportSuccess": {
      "type": "object",
      "description": "The API specification was successfully imported."
    },
    "ApiKind": {
      "type": "string",
      "description": "The kind of the API",
      "enum": [
        "rest",
        "graphql",
        "grpc",
        "soap",
        "webhook",
        "websocket"
      ],
      "x-ms-enum": {
        "name": "ApiKind",
        "modelAsString": true,
        "values": [
          {
            "name": "rest",
            "value": "rest",
            "description": "A Representational State Transfer Api"
          },
          {
            "name": "graphql",
            "value": "graphql",
            "description": "A Graph query language Api"
          },
          {
            "name": "grpc",
            "value": "grpc",
            "description": "A gRPC Api"
          },
          {
            "name": "soap",
            "value": "soap",
            "description": "A SOAP Api"
          },
          {
            "name": "webhook",
            "value": "webhook",
            "description": "Web Hook"
          },
          {
            "name": "websocket",
            "value": "websocket",
            "description": "Web Socket"
          }
        ]
      }
    },
    "ApiListResult": {
      "type": "object",
      "description": "The response of a Api list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Api items on this page",
          "items": {
            "type": "object",
            "description": "API entity.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "API title.",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "kind": {
                    "description": "Kind of API. For example, REST or GraphQL.",
                    "type": "string",
                    "enum": [
                      "rest",
                      "graphql",
                      "grpc",
                      "soap",
                      "webhook",
                      "websocket"
                    ],
                    "x-ms-enum": {
                      "name": "ApiKind",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "rest",
                          "value": "rest",
                          "description": "A Representational State Transfer Api"
                        },
                        {
                          "name": "graphql",
                          "value": "graphql",
                          "description": "A Graph query language Api"
                        },
                        {
                          "name": "grpc",
                          "value": "grpc",
                          "description": "A gRPC Api"
                        },
                        {
                          "name": "soap",
                          "value": "soap",
                          "description": "A SOAP Api"
                        },
                        {
                          "name": "webhook",
                          "value": "webhook",
                          "description": "Web Hook"
                        },
                        {
                          "name": "websocket",
                          "value": "websocket",
                          "description": "Web Socket"
                        }
                      ]
                    }
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the API.",
                    "maxLength": 1000
                  },
                  "summary": {
                    "type": "string",
                    "description": "Short description of the API.",
                    "maxLength": 200
                  },
                  "lifecycleStage": {
                    "description": "Current lifecycle stage of the API.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "design",
                      "development",
                      "testing",
                      "preview",
                      "production",
                      "deprecated",
                      "retired"
                    ],
                    "x-ms-enum": {
                      "name": "LifecycleStage",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "design",
                          "value": "design",
                          "description": "design stage"
                        },
                        {
                          "name": "development",
                          "value": "development",
                          "description": "development stage"
                        },
                        {
                          "name": "testing",
                          "value": "testing",
                          "description": "testing stage"
                        },
                        {
                          "name": "preview",
                          "value": "preview",
                          "description": "In preview"
                        },
                        {
                          "name": "production",
                          "value": "production",
                          "description": "In production"
                        },
                        {
                          "name": "deprecated",
                          "value": "deprecated",
                          "description": "deprecated stage"
                        },
                        {
                          "name": "retired",
                          "value": "retired",
                          "description": "Retired stage"
                        }
                      ]
                    }
                  },
                  "termsOfService": {
                    "description": "Terms of service for the API.",
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "description": "URL pointing to the terms of service.",
                        "maxLength": 200
                      }
                    },
                    "required": [
                      "url"
                    ]
                  },
                  "externalDocumentation": {
                    "type": "array",
                    "description": "The set of external documentation",
                    "maxItems": 20,
                    "items": {
                      "type": "object",
                      "description": "Additional, external documentation for the API.",
                      "properties": {
                        "title": {
                          "type": "string",
                          "description": "Title of the documentation.",
                          "maxLength": 50
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the documentation.",
                          "maxLength": 500
                        },
                        "url": {
                          "type": "string",
                          "format": "uri",
                          "description": "URL pointing to the documentation.",
                          "maxLength": 200
                        }
                      },
                      "required": [
                        "url"
                      ]
                    },
                    "x-ms-identifiers": []
                  },
                  "contacts": {
                    "type": "array",
                    "description": "The set of contacts",
                    "items": {
                      "type": "object",
                      "description": "Contact information",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the contact.",
                          "maxLength": 100
                        },
                        "url": {
                          "type": "string",
                          "format": "uri",
                          "description": "URL for the contact.",
                          "maxLength": 200
                        },
                        "email": {
                          "type": "string",
                          "description": "Email address of the contact.",
                          "maxLength": 100
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "license": {
                    "description": "The license information for the API.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the license.",
                        "maxLength": 100
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "description": "URL pointing to the license details. The URL field is mutually exclusive of the\nidentifier field.",
                        "maxLength": 200
                      },
                      "identifier": {
                        "type": "string",
                        "format": "uri",
                        "description": "SPDX license information for the API. The identifier field is mutually\nexclusive of the URL field.",
                        "maxLength": 50
                      }
                    }
                  },
                  "customProperties": {
                    "description": "The custom metadata defined for API catalog entities.",
                    "type": "object",
                    "title": "Custom Properties"
                  }
                },
                "required": [
                  "title",
                  "kind"
                ]
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "ApiProperties": {
      "type": "object",
      "description": "API properties.",
      "properties": {
        "title": {
          "type": "string",
          "description": "API title.",
          "minLength": 1,
          "maxLength": 50
        },
        "kind": {
          "description": "Kind of API. For example, REST or GraphQL.",
          "type": "string",
          "enum": [
            "rest",
            "graphql",
            "grpc",
            "soap",
            "webhook",
            "websocket"
          ],
          "x-ms-enum": {
            "name": "ApiKind",
            "modelAsString": true,
            "values": [
              {
                "name": "rest",
                "value": "rest",
                "description": "A Representational State Transfer Api"
              },
              {
                "name": "graphql",
                "value": "graphql",
                "description": "A Graph query language Api"
              },
              {
                "name": "grpc",
                "value": "grpc",
                "description": "A gRPC Api"
              },
              {
                "name": "soap",
                "value": "soap",
                "description": "A SOAP Api"
              },
              {
                "name": "webhook",
                "value": "webhook",
                "description": "Web Hook"
              },
              {
                "name": "websocket",
                "value": "websocket",
                "description": "Web Socket"
              }
            ]
          }
        },
        "description": {
          "type": "string",
          "description": "Description of the API.",
          "maxLength": 1000
        },
        "summary": {
          "type": "string",
          "description": "Short description of the API.",
          "maxLength": 200
        },
        "lifecycleStage": {
          "description": "Current lifecycle stage of the API.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "design",
            "development",
            "testing",
            "preview",
            "production",
            "deprecated",
            "retired"
          ],
          "x-ms-enum": {
            "name": "LifecycleStage",
            "modelAsString": true,
            "values": [
              {
                "name": "design",
                "value": "design",
                "description": "design stage"
              },
              {
                "name": "development",
                "value": "development",
                "description": "development stage"
              },
              {
                "name": "testing",
                "value": "testing",
                "description": "testing stage"
              },
              {
                "name": "preview",
                "value": "preview",
                "description": "In preview"
              },
              {
                "name": "production",
                "value": "production",
                "description": "In production"
              },
              {
                "name": "deprecated",
                "value": "deprecated",
                "description": "deprecated stage"
              },
              {
                "name": "retired",
                "value": "retired",
                "description": "Retired stage"
              }
            ]
          }
        },
        "termsOfService": {
          "description": "Terms of service for the API.",
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "format": "uri",
              "description": "URL pointing to the terms of service.",
              "maxLength": 200
            }
          },
          "required": [
            "url"
          ]
        },
        "externalDocumentation": {
          "type": "array",
          "description": "The set of external documentation",
          "maxItems": 20,
          "items": {
            "type": "object",
            "description": "Additional, external documentation for the API.",
            "properties": {
              "title": {
                "type": "string",
                "description": "Title of the documentation.",
                "maxLength": 50
              },
              "description": {
                "type": "string",
                "description": "Description of the documentation.",
                "maxLength": 500
              },
              "url": {
                "type": "string",
                "format": "uri",
                "description": "URL pointing to the documentation.",
                "maxLength": 200
              }
            },
            "required": [
              "url"
            ]
          },
          "x-ms-identifiers": []
        },
        "contacts": {
          "type": "array",
          "description": "The set of contacts",
          "items": {
            "type": "object",
            "description": "Contact information",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the contact.",
                "maxLength": 100
              },
              "url": {
                "type": "string",
                "format": "uri",
                "description": "URL for the contact.",
                "maxLength": 200
              },
              "email": {
                "type": "string",
                "description": "Email address of the contact.",
                "maxLength": 100
              }
            }
          },
          "x-ms-identifiers": []
        },
        "license": {
          "description": "The license information for the API.",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the license.",
              "maxLength": 100
            },
            "url": {
              "type": "string",
              "format": "uri",
              "description": "URL pointing to the license details. The URL field is mutually exclusive of the\nidentifier field.",
              "maxLength": 200
            },
            "identifier": {
              "type": "string",
              "format": "uri",
              "description": "SPDX license information for the API. The identifier field is mutually\nexclusive of the URL field.",
              "maxLength": 50
            }
          }
        },
        "customProperties": {
          "description": "The custom metadata defined for API catalog entities.",
          "type": "object",
          "title": "Custom Properties"
        }
      },
      "required": [
        "title",
        "kind"
      ]
    },
    "ApiSpecExportResult": {
      "type": "object",
      "description": "The API specification export result.",
      "properties": {
        "format": {
          "description": "The format of exported result",
          "type": "string",
          "enum": [
            "inline",
            "link"
          ],
          "x-ms-enum": {
            "name": "ApiSpecExportResultFormat",
            "modelAsString": true,
            "values": [
              {
                "name": "inline",
                "value": "inline",
                "description": "The inlined content of a specification document."
              },
              {
                "name": "link",
                "value": "link",
                "description": "The link to the result of the export operation. The URL is valid for 5 minutes."
              }
            ]
          }
        },
        "value": {
          "type": "string",
          "description": "The result of the export operation."
        }
      }
    },
    "ApiSpecExportResultFormat": {
      "type": "string",
      "description": "Result format for exported Api spec",
      "enum": [
        "inline",
        "link"
      ],
      "x-ms-enum": {
        "name": "ApiSpecExportResultFormat",
        "modelAsString": true,
        "values": [
          {
            "name": "inline",
            "value": "inline",
            "description": "The inlined content of a specification document."
          },
          {
            "name": "link",
            "value": "link",
            "description": "The link to the result of the export operation. The URL is valid for 5 minutes."
          }
        ]
      }
    },
    "ApiSpecImportRequest": {
      "type": "object",
      "description": "The API specification source entity properties.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Value of the API specification source."
        },
        "format": {
          "description": "Format of the API specification source.",
          "type": "string",
          "enum": [
            "inline",
            "link"
          ],
          "x-ms-enum": {
            "name": "ApiSpecImportSourceFormat",
            "modelAsString": true,
            "values": [
              {
                "name": "inline",
                "value": "inline",
                "description": "The inlined content of a specification document."
              },
              {
                "name": "link",
                "value": "link",
                "description": "The link to a specification document hosted on a publicly accessible internet\naddress."
              }
            ]
          }
        },
        "specification": {
          "description": "API specification details.",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Specification name."
            },
            "version": {
              "type": "string",
              "description": "Specification version."
            }
          }
        }
      }
    },
    "ApiSpecImportRequestSpecification": {
      "type": "object",
      "description": "API specification details.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Specification name."
        },
        "version": {
          "type": "string",
          "description": "Specification version."
        }
      }
    },
    "ApiSpecImportSourceFormat": {
      "type": "string",
      "description": "Source format for imported Api spec",
      "enum": [
        "inline",
        "link"
      ],
      "x-ms-enum": {
        "name": "ApiSpecImportSourceFormat",
        "modelAsString": true,
        "values": [
          {
            "name": "inline",
            "value": "inline",
            "description": "The inlined content of a specification document."
          },
          {
            "name": "link",
            "value": "link",
            "description": "The link to a specification document hosted on a publicly accessible internet\naddress."
          }
        ]
      }
    },
    "ApiVersion": {
      "type": "object",
      "description": "API version entity.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "API version title.",
              "minLength": 1,
              "maxLength": 50
            },
            "lifecycleStage": {
              "description": "Current lifecycle stage of the API.",
              "type": "string",
              "enum": [
                "design",
                "development",
                "testing",
                "preview",
                "production",
                "deprecated",
                "retired"
              ],
              "x-ms-enum": {
                "name": "LifecycleStage",
                "modelAsString": true,
                "values": [
                  {
                    "name": "design",
                    "value": "design",
                    "description": "design stage"
                  },
                  {
                    "name": "development",
                    "value": "development",
                    "description": "development stage"
                  },
                  {
                    "name": "testing",
                    "value": "testing",
                    "description": "testing stage"
                  },
                  {
                    "name": "preview",
                    "value": "preview",
                    "description": "In preview"
                  },
                  {
                    "name": "production",
                    "value": "production",
                    "description": "In production"
                  },
                  {
                    "name": "deprecated",
                    "value": "deprecated",
                    "description": "deprecated stage"
                  },
                  {
                    "name": "retired",
                    "value": "retired",
                    "description": "Retired stage"
                  }
                ]
              }
            }
          },
          "required": [
            "title",
            "lifecycleStage"
          ]
        }
      }
    },
    "ApiVersionListResult": {
      "type": "object",
      "description": "The response of a ApiVersion list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ApiVersion items on this page",
          "items": {
            "type": "object",
            "description": "API version entity.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "API version title.",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "lifecycleStage": {
                    "description": "Current lifecycle stage of the API.",
                    "type": "string",
                    "enum": [
                      "design",
                      "development",
                      "testing",
                      "preview",
                      "production",
                      "deprecated",
                      "retired"
                    ],
                    "x-ms-enum": {
                      "name": "LifecycleStage",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "design",
                          "value": "design",
                          "description": "design stage"
                        },
                        {
                          "name": "development",
                          "value": "development",
                          "description": "development stage"
                        },
                        {
                          "name": "testing",
                          "value": "testing",
                          "description": "testing stage"
                        },
                        {
                          "name": "preview",
                          "value": "preview",
                          "description": "In preview"
                        },
                        {
                          "name": "production",
                          "value": "production",
                          "description": "In production"
                        },
                        {
                          "name": "deprecated",
                          "value": "deprecated",
                          "description": "deprecated stage"
                        },
                        {
                          "name": "retired",
                          "value": "retired",
                          "description": "Retired stage"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "title",
                  "lifecycleStage"
                ]
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "ApiVersionProperties": {
      "type": "object",
      "description": "API version properties entity.",
      "properties": {
        "title": {
          "type": "string",
          "description": "API version title.",
          "minLength": 1,
          "maxLength": 50
        },
        "lifecycleStage": {
          "description": "Current lifecycle stage of the API.",
          "type": "string",
          "enum": [
            "design",
            "development",
            "testing",
            "preview",
            "production",
            "deprecated",
            "retired"
          ],
          "x-ms-enum": {
            "name": "LifecycleStage",
            "modelAsString": true,
            "values": [
              {
                "name": "design",
                "value": "design",
                "description": "design stage"
              },
              {
                "name": "development",
                "value": "development",
                "description": "development stage"
              },
              {
                "name": "testing",
                "value": "testing",
                "description": "testing stage"
              },
              {
                "name": "preview",
                "value": "preview",
                "description": "In preview"
              },
              {
                "name": "production",
                "value": "production",
                "description": "In production"
              },
              {
                "name": "deprecated",
                "value": "deprecated",
                "description": "deprecated stage"
              },
              {
                "name": "retired",
                "value": "retired",
                "description": "Retired stage"
              }
            ]
          }
        }
      },
      "required": [
        "title",
        "lifecycleStage"
      ]
    },
    "Contact": {
      "type": "object",
      "description": "Contact information",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the contact.",
          "maxLength": 100
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "URL for the contact.",
          "maxLength": 200
        },
        "email": {
          "type": "string",
          "description": "Email address of the contact.",
          "maxLength": 100
        }
      }
    },
    "CreatedByType": {
      "type": "string",
      "description": "How the resource was created",
      "enum": [
        "User",
        "Application",
        "ManagedIdentity",
        "Key"
      ],
      "x-ms-enum": {
        "name": "CreatedByType",
        "modelAsString": true,
        "values": [
          {
            "name": "User",
            "value": "User",
            "description": "Created by user"
          },
          {
            "name": "Application",
            "value": "Application",
            "description": "Created by Application"
          },
          {
            "name": "ManagedIdentity",
            "value": "ManagedIdentity",
            "description": "Created by Managed Identity"
          },
          {
            "name": "Key",
            "value": "Key",
            "description": "Created By Key"
          }
        ]
      }
    },
    "CustomProperties": {
      "type": "object",
      "title": "Custom Properties",
      "description": "The custom metadata defined for API catalog entities."
    },
    "Deployment": {
      "type": "object",
      "description": "API deployment entity.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "API deployment title",
              "minLength": 1,
              "maxLength": 50
            },
            "description": {
              "type": "string",
              "description": "Description of the deployment.",
              "maxLength": 500
            },
            "environmentId": {
              "type": "string",
              "description": "API center-scoped environment resource ID."
            },
            "definitionId": {
              "type": "string",
              "description": "API center-scoped definition resource ID."
            },
            "state": {
              "description": "State of API deployment.",
              "type": "string",
              "enum": [
                "active",
                "inactive"
              ],
              "x-ms-enum": {
                "name": "DeploymentState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "active",
                    "value": "active",
                    "description": "Active State"
                  },
                  {
                    "name": "inactive",
                    "value": "inactive",
                    "description": "Inactive State"
                  }
                ]
              }
            },
            "server": {
              "description": "The deployment server",
              "type": "object",
              "properties": {
                "runtimeUri": {
                  "type": "array",
                  "description": "Base runtime URLs for this deployment.",
                  "items": {
                    "type": "string",
                    "format": "uri",
                    "description": "Used for restricted length uris",
                    "maxLength": 200
                  }
                }
              }
            },
            "customProperties": {
              "description": "The custom metadata defined for API catalog entities.",
              "type": "object",
              "title": "Custom Properties"
            }
          }
        }
      }
    },
    "DeploymentListResult": {
      "type": "object",
      "description": "The response of a Deployment list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Deployment items on this page",
          "items": {
            "type": "object",
            "description": "API deployment entity.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "API deployment title",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the deployment.",
                    "maxLength": 500
                  },
                  "environmentId": {
                    "type": "string",
                    "description": "API center-scoped environment resource ID."
                  },
                  "definitionId": {
                    "type": "string",
                    "description": "API center-scoped definition resource ID."
                  },
                  "state": {
                    "description": "State of API deployment.",
                    "type": "string",
                    "enum": [
                      "active",
                      "inactive"
                    ],
                    "x-ms-enum": {
                      "name": "DeploymentState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "active",
                          "value": "active",
                          "description": "Active State"
                        },
                        {
                          "name": "inactive",
                          "value": "inactive",
                          "description": "Inactive State"
                        }
                      ]
                    }
                  },
                  "server": {
                    "description": "The deployment server",
                    "type": "object",
                    "properties": {
                      "runtimeUri": {
                        "type": "array",
                        "description": "Base runtime URLs for this deployment.",
                        "items": {
                          "type": "string",
                          "format": "uri",
                          "description": "Used for restricted length uris",
                          "maxLength": 200
                        }
                      }
                    }
                  },
                  "customProperties": {
                    "description": "The custom metadata defined for API catalog entities.",
                    "type": "object",
                    "title": "Custom Properties"
                  }
                }
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "DeploymentProperties": {
      "type": "object",
      "description": "API deployment entity properties.",
      "properties": {
        "title": {
          "type": "string",
          "description": "API deployment title",
          "minLength": 1,
          "maxLength": 50
        },
        "description": {
          "type": "string",
          "description": "Description of the deployment.",
          "maxLength": 500
        },
        "environmentId": {
          "type": "string",
          "description": "API center-scoped environment resource ID."
        },
        "definitionId": {
          "type": "string",
          "description": "API center-scoped definition resource ID."
        },
        "state": {
          "description": "State of API deployment.",
          "type": "string",
          "enum": [
            "active",
            "inactive"
          ],
          "x-ms-enum": {
            "name": "DeploymentState",
            "modelAsString": true,
            "values": [
              {
                "name": "active",
                "value": "active",
                "description": "Active State"
              },
              {
                "name": "inactive",
                "value": "inactive",
                "description": "Inactive State"
              }
            ]
          }
        },
        "server": {
          "description": "The deployment server",
          "type": "object",
          "properties": {
            "runtimeUri": {
              "type": "array",
              "description": "Base runtime URLs for this deployment.",
              "items": {
                "type": "string",
                "format": "uri",
                "description": "Used for restricted length uris",
                "maxLength": 200
              }
            }
          }
        },
        "customProperties": {
          "description": "The custom metadata defined for API catalog entities.",
          "type": "object",
          "title": "Custom Properties"
        }
      }
    },
    "DeploymentServer": {
      "type": "object",
      "description": "Server",
      "properties": {
        "runtimeUri": {
          "type": "array",
          "description": "Base runtime URLs for this deployment.",
          "items": {
            "type": "string",
            "format": "uri",
            "description": "Used for restricted length uris",
            "maxLength": 200
          }
        }
      }
    },
    "DeploymentState": {
      "type": "string",
      "description": "State of the Deployment",
      "enum": [
        "active",
        "inactive"
      ],
      "x-ms-enum": {
        "name": "DeploymentState",
        "modelAsString": true,
        "values": [
          {
            "name": "active",
            "value": "active",
            "description": "Active State"
          },
          {
            "name": "inactive",
            "value": "inactive",
            "description": "Inactive State"
          }
        ]
      }
    },
    "Environment": {
      "type": "object",
      "description": "Environment entity.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Environment title.",
              "minLength": 1,
              "maxLength": 50
            },
            "description": {
              "type": "string",
              "description": "The environment description."
            },
            "kind": {
              "description": "Environment kind.",
              "type": "string",
              "enum": [
                "development",
                "testing",
                "staging",
                "production"
              ],
              "x-ms-enum": {
                "name": "EnvironmentKind",
                "modelAsString": true,
                "values": [
                  {
                    "name": "development",
                    "value": "development",
                    "description": "Development environment"
                  },
                  {
                    "name": "testing",
                    "value": "testing",
                    "description": "Testing environment"
                  },
                  {
                    "name": "staging",
                    "value": "staging",
                    "description": "Staging environment"
                  },
                  {
                    "name": "production",
                    "value": "production",
                    "description": "Production environment"
                  }
                ]
              }
            },
            "server": {
              "description": "Server information of the environment.",
              "type": "object",
              "properties": {
                "type": {
                  "description": "Type of the server that represents the environment.",
                  "type": "string",
                  "enum": [
                    "Azure API Management",
                    "Azure compute service",
                    "Apigee API Management",
                    "AWS API Gateway",
                    "Kong API Gateway",
                    "Kubernetes",
                    "MuleSoft API Management"
                  ],
                  "x-ms-enum": {
                    "name": "EnvironmentServerType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Azure API Management",
                        "value": "Azure API Management",
                        "description": "Api Management Server"
                      },
                      {
                        "name": "Azure compute service",
                        "value": "Azure compute service",
                        "description": "Compute server"
                      },
                      {
                        "name": "Apigee API Management",
                        "value": "Apigee API Management",
                        "description": "Apigee server"
                      },
                      {
                        "name": "AWS API Gateway",
                        "value": "AWS API Gateway",
                        "description": "AWS Api Gateway server"
                      },
                      {
                        "name": "Kong API Gateway",
                        "value": "Kong API Gateway",
                        "description": "Kong API Gateway server"
                      },
                      {
                        "name": "Kubernetes",
                        "value": "Kubernetes",
                        "description": "Kubernetes server"
                      },
                      {
                        "name": "MuleSoft API Management",
                        "value": "MuleSoft API Management",
                        "description": "Mulesoft Api Management server"
                      }
                    ]
                  }
                },
                "managementPortalUri": {
                  "type": "array",
                  "description": "The location of the management portal",
                  "maxItems": 1,
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "onboarding": {
              "description": "Environment onboarding information",
              "type": "object",
              "properties": {
                "instructions": {
                  "type": "string",
                  "description": "Onboarding guide."
                },
                "developerPortalUri": {
                  "type": "array",
                  "description": "The location of the development portal",
                  "maxItems": 1,
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "customProperties": {
              "description": "The custom metadata defined for API catalog entities.",
              "type": "object",
              "title": "Custom Properties"
            }
          },
          "required": [
            "title",
            "kind"
          ]
        }
      }
    },
    "EnvironmentKind": {
      "type": "string",
      "description": "The kind of environment",
      "enum": [
        "development",
        "testing",
        "staging",
        "production"
      ],
      "x-ms-enum": {
        "name": "EnvironmentKind",
        "modelAsString": true,
        "values": [
          {
            "name": "development",
            "value": "development",
            "description": "Development environment"
          },
          {
            "name": "testing",
            "value": "testing",
            "description": "Testing environment"
          },
          {
            "name": "staging",
            "value": "staging",
            "description": "Staging environment"
          },
          {
            "name": "production",
            "value": "production",
            "description": "Production environment"
          }
        ]
      }
    },
    "EnvironmentListResult": {
      "type": "object",
      "description": "The response of a Environment list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Environment items on this page",
          "items": {
            "type": "object",
            "description": "Environment entity.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Environment title.",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "description": "The environment description."
                  },
                  "kind": {
                    "description": "Environment kind.",
                    "type": "string",
                    "enum": [
                      "development",
                      "testing",
                      "staging",
                      "production"
                    ],
                    "x-ms-enum": {
                      "name": "EnvironmentKind",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "development",
                          "value": "development",
                          "description": "Development environment"
                        },
                        {
                          "name": "testing",
                          "value": "testing",
                          "description": "Testing environment"
                        },
                        {
                          "name": "staging",
                          "value": "staging",
                          "description": "Staging environment"
                        },
                        {
                          "name": "production",
                          "value": "production",
                          "description": "Production environment"
                        }
                      ]
                    }
                  },
                  "server": {
                    "description": "Server information of the environment.",
                    "type": "object",
                    "properties": {
                      "type": {
                        "description": "Type of the server that represents the environment.",
                        "type": "string",
                        "enum": [
                          "Azure API Management",
                          "Azure compute service",
                          "Apigee API Management",
                          "AWS API Gateway",
                          "Kong API Gateway",
                          "Kubernetes",
                          "MuleSoft API Management"
                        ],
                        "x-ms-enum": {
                          "name": "EnvironmentServerType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Azure API Management",
                              "value": "Azure API Management",
                              "description": "Api Management Server"
                            },
                            {
                              "name": "Azure compute service",
                              "value": "Azure compute service",
                              "description": "Compute server"
                            },
                            {
                              "name": "Apigee API Management",
                              "value": "Apigee API Management",
                              "description": "Apigee server"
                            },
                            {
                              "name": "AWS API Gateway",
                              "value": "AWS API Gateway",
                              "description": "AWS Api Gateway server"
                            },
                            {
                              "name": "Kong API Gateway",
                              "value": "Kong API Gateway",
                              "description": "Kong API Gateway server"
                            },
                            {
                              "name": "Kubernetes",
                              "value": "Kubernetes",
                              "description": "Kubernetes server"
                            },
                            {
                              "name": "MuleSoft API Management",
                              "value": "MuleSoft API Management",
                              "description": "Mulesoft Api Management server"
                            }
                          ]
                        }
                      },
                      "managementPortalUri": {
                        "type": "array",
                        "description": "The location of the management portal",
                        "maxItems": 1,
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "onboarding": {
                    "description": "Environment onboarding information",
                    "type": "object",
                    "properties": {
                      "instructions": {
                        "type": "string",
                        "description": "Onboarding guide."
                      },
                      "developerPortalUri": {
                        "type": "array",
                        "description": "The location of the development portal",
                        "maxItems": 1,
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "customProperties": {
                    "description": "The custom metadata defined for API catalog entities.",
                    "type": "object",
                    "title": "Custom Properties"
                  }
                },
                "required": [
                  "title",
                  "kind"
                ]
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "EnvironmentProperties": {
      "type": "object",
      "description": "Environment properties entity.",
      "properties": {
        "title": {
          "type": "string",
          "description": "Environment title.",
          "minLength": 1,
          "maxLength": 50
        },
        "description": {
          "type": "string",
          "description": "The environment description."
        },
        "kind": {
          "description": "Environment kind.",
          "type": "string",
          "enum": [
            "development",
            "testing",
            "staging",
            "production"
          ],
          "x-ms-enum": {
            "name": "EnvironmentKind",
            "modelAsString": true,
            "values": [
              {
                "name": "development",
                "value": "development",
                "description": "Development environment"
              },
              {
                "name": "testing",
                "value": "testing",
                "description": "Testing environment"
              },
              {
                "name": "staging",
                "value": "staging",
                "description": "Staging environment"
              },
              {
                "name": "production",
                "value": "production",
                "description": "Production environment"
              }
            ]
          }
        },
        "server": {
          "description": "Server information of the environment.",
          "type": "object",
          "properties": {
            "type": {
              "description": "Type of the server that represents the environment.",
              "type": "string",
              "enum": [
                "Azure API Management",
                "Azure compute service",
                "Apigee API Management",
                "AWS API Gateway",
                "Kong API Gateway",
                "Kubernetes",
                "MuleSoft API Management"
              ],
              "x-ms-enum": {
                "name": "EnvironmentServerType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Azure API Management",
                    "value": "Azure API Management",
                    "description": "Api Management Server"
                  },
                  {
                    "name": "Azure compute service",
                    "value": "Azure compute service",
                    "description": "Compute server"
                  },
                  {
                    "name": "Apigee API Management",
                    "value": "Apigee API Management",
                    "description": "Apigee server"
                  },
                  {
                    "name": "AWS API Gateway",
                    "value": "AWS API Gateway",
                    "description": "AWS Api Gateway server"
                  },
                  {
                    "name": "Kong API Gateway",
                    "value": "Kong API Gateway",
                    "description": "Kong API Gateway server"
                  },
                  {
                    "name": "Kubernetes",
                    "value": "Kubernetes",
                    "description": "Kubernetes server"
                  },
                  {
                    "name": "MuleSoft API Management",
                    "value": "MuleSoft API Management",
                    "description": "Mulesoft Api Management server"
                  }
                ]
              }
            },
            "managementPortalUri": {
              "type": "array",
              "description": "The location of the management portal",
              "maxItems": 1,
              "items": {
                "type": "string"
              }
            }
          }
        },
        "onboarding": {
          "description": "Environment onboarding information",
          "type": "object",
          "properties": {
            "instructions": {
              "type": "string",
              "description": "Onboarding guide."
            },
            "developerPortalUri": {
              "type": "array",
              "description": "The location of the development portal",
              "maxItems": 1,
              "items": {
                "type": "string"
              }
            }
          }
        },
        "customProperties": {
          "description": "The custom metadata defined for API catalog entities.",
          "type": "object",
          "title": "Custom Properties"
        }
      },
      "required": [
        "title",
        "kind"
      ]
    },
    "EnvironmentServer": {
      "type": "object",
      "description": "Server information of the environment.",
      "properties": {
        "type": {
          "description": "Type of the server that represents the environment.",
          "type": "string",
          "enum": [
            "Azure API Management",
            "Azure compute service",
            "Apigee API Management",
            "AWS API Gateway",
            "Kong API Gateway",
            "Kubernetes",
            "MuleSoft API Management"
          ],
          "x-ms-enum": {
            "name": "EnvironmentServerType",
            "modelAsString": true,
            "values": [
              {
                "name": "Azure API Management",
                "value": "Azure API Management",
                "description": "Api Management Server"
              },
              {
                "name": "Azure compute service",
                "value": "Azure compute service",
                "description": "Compute server"
              },
              {
                "name": "Apigee API Management",
                "value": "Apigee API Management",
                "description": "Apigee server"
              },
              {
                "name": "AWS API Gateway",
                "value": "AWS API Gateway",
                "description": "AWS Api Gateway server"
              },
              {
                "name": "Kong API Gateway",
                "value": "Kong API Gateway",
                "description": "Kong API Gateway server"
              },
              {
                "name": "Kubernetes",
                "value": "Kubernetes",
                "description": "Kubernetes server"
              },
              {
                "name": "MuleSoft API Management",
                "value": "MuleSoft API Management",
                "description": "Mulesoft Api Management server"
              }
            ]
          }
        },
        "managementPortalUri": {
          "type": "array",
          "description": "The location of the management portal",
          "maxItems": 1,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "EnvironmentServerType": {
      "type": "string",
      "description": "The type of environment server",
      "enum": [
        "Azure API Management",
        "Azure compute service",
        "Apigee API Management",
        "AWS API Gateway",
        "Kong API Gateway",
        "Kubernetes",
        "MuleSoft API Management"
      ],
      "x-ms-enum": {
        "name": "EnvironmentServerType",
        "modelAsString": true,
        "values": [
          {
            "name": "Azure API Management",
            "value": "Azure API Management",
            "description": "Api Management Server"
          },
          {
            "name": "Azure compute service",
            "value": "Azure compute service",
            "description": "Compute server"
          },
          {
            "name": "Apigee API Management",
            "value": "Apigee API Management",
            "description": "Apigee server"
          },
          {
            "name": "AWS API Gateway",
            "value": "AWS API Gateway",
            "description": "AWS Api Gateway server"
          },
          {
            "name": "Kong API Gateway",
            "value": "Kong API Gateway",
            "description": "Kong API Gateway server"
          },
          {
            "name": "Kubernetes",
            "value": "Kubernetes",
            "description": "Kubernetes server"
          },
          {
            "name": "MuleSoft API Management",
            "value": "MuleSoft API Management",
            "description": "Mulesoft Api Management server"
          }
        ]
      }
    },
    "ExternalDocumentation": {
      "type": "object",
      "description": "Additional, external documentation for the API.",
      "properties": {
        "title": {
          "type": "string",
          "description": "Title of the documentation.",
          "maxLength": 50
        },
        "description": {
          "type": "string",
          "description": "Description of the documentation.",
          "maxLength": 500
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "URL pointing to the documentation.",
          "maxLength": 200
        }
      },
      "required": [
        "url"
      ]
    },
    "License": {
      "type": "object",
      "description": "The license information for the API.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the license.",
          "maxLength": 100
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "URL pointing to the license details. The URL field is mutually exclusive of the\nidentifier field.",
          "maxLength": 200
        },
        "identifier": {
          "type": "string",
          "format": "uri",
          "description": "SPDX license information for the API. The identifier field is mutually\nexclusive of the URL field.",
          "maxLength": 50
        }
      }
    },
    "LifecycleStage": {
      "type": "string",
      "description": "The stage of the Api development lifecycle",
      "enum": [
        "design",
        "development",
        "testing",
        "preview",
        "production",
        "deprecated",
        "retired"
      ],
      "x-ms-enum": {
        "name": "LifecycleStage",
        "modelAsString": true,
        "values": [
          {
            "name": "design",
            "value": "design",
            "description": "design stage"
          },
          {
            "name": "development",
            "value": "development",
            "description": "development stage"
          },
          {
            "name": "testing",
            "value": "testing",
            "description": "testing stage"
          },
          {
            "name": "preview",
            "value": "preview",
            "description": "In preview"
          },
          {
            "name": "production",
            "value": "production",
            "description": "In production"
          },
          {
            "name": "deprecated",
            "value": "deprecated",
            "description": "deprecated stage"
          },
          {
            "name": "retired",
            "value": "retired",
            "description": "Retired stage"
          }
        ]
      }
    },
    "ManagedServiceIdentityType": {
      "type": "string",
      "description": "The type of managed service identity",
      "enum": [
        "None",
        "SystemAssigned",
        "UserAssigned",
        "SystemAssigned,UserAssigned"
      ],
      "x-ms-enum": {
        "name": "ManagedServiceIdentityType",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "No identity"
          },
          {
            "name": "SystemAssigned",
            "value": "SystemAssigned",
            "description": "Assigned by the system"
          },
          {
            "name": "UserAssigned",
            "value": "UserAssigned",
            "description": "assigned by the user"
          },
          {
            "name": "SystemAssigned,UserAssigned",
            "value": "SystemAssigned,UserAssigned",
            "description": "Both system-assigned and user-assigned identities"
          }
        ]
      }
    },
    "MetadataAssignment": {
      "type": "object",
      "description": "Assignment metadata",
      "properties": {
        "entity": {
          "description": "The entities this metadata schema component gets applied to.",
          "type": "string",
          "enum": [
            "api",
            "environment",
            "deployment"
          ],
          "x-ms-enum": {
            "name": "MetadataAssignmentEntity",
            "modelAsString": true,
            "values": [
              {
                "name": "api",
                "value": "api",
                "description": "Assigned to API"
              },
              {
                "name": "environment",
                "value": "environment",
                "description": "Assigned to Environment"
              },
              {
                "name": "deployment",
                "value": "deployment",
                "description": "Assigned to Deployment"
              }
            ]
          }
        },
        "required": {
          "type": "boolean",
          "description": "Required assignment"
        },
        "deprecated": {
          "type": "boolean",
          "description": "Deprecated assignment"
        }
      }
    },
    "MetadataAssignmentEntity": {
      "type": "string",
      "description": "Assignment entity for Metadata",
      "enum": [
        "api",
        "environment",
        "deployment"
      ],
      "x-ms-enum": {
        "name": "MetadataAssignmentEntity",
        "modelAsString": true,
        "values": [
          {
            "name": "api",
            "value": "api",
            "description": "Assigned to API"
          },
          {
            "name": "environment",
            "value": "environment",
            "description": "Assigned to Environment"
          },
          {
            "name": "deployment",
            "value": "deployment",
            "description": "Assigned to Deployment"
          }
        ]
      }
    },
    "MetadataSchema": {
      "type": "object",
      "description": "Metadata schema entity. Used to define metadata for the entities in API catalog.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "schema": {
              "type": "string",
              "description": "The schema defining the type."
            },
            "assignedTo": {
              "type": "array",
              "description": "The assignees",
              "items": {
                "type": "object",
                "description": "Assignment metadata",
                "properties": {
                  "entity": {
                    "description": "The entities this metadata schema component gets applied to.",
                    "type": "string",
                    "enum": [
                      "api",
                      "environment",
                      "deployment"
                    ],
                    "x-ms-enum": {
                      "name": "MetadataAssignmentEntity",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "api",
                          "value": "api",
                          "description": "Assigned to API"
                        },
                        {
                          "name": "environment",
                          "value": "environment",
                          "description": "Assigned to Environment"
                        },
                        {
                          "name": "deployment",
                          "value": "deployment",
                          "description": "Assigned to Deployment"
                        }
                      ]
                    }
                  },
                  "required": {
                    "type": "boolean",
                    "description": "Required assignment"
                  },
                  "deprecated": {
                    "type": "boolean",
                    "description": "Deprecated assignment"
                  }
                }
              },
              "x-ms-identifiers": []
            }
          },
          "required": [
            "schema"
          ]
        }
      }
    },
    "MetadataSchemaExportFormat": {
      "type": "string",
      "description": "The format for schema export",
      "enum": [
        "inline",
        "link"
      ],
      "x-ms-enum": {
        "name": "MetadataSchemaExportFormat",
        "modelAsString": true,
        "values": [
          {
            "name": "inline",
            "value": "inline",
            "description": "The inlined content of a schema document."
          },
          {
            "name": "link",
            "value": "link",
            "description": "The link to a schema document. The URL is valid for 5 minutes."
          }
        ]
      }
    },
    "MetadataSchemaExportRequest": {
      "type": "object",
      "description": "The metadata schema export request.",
      "properties": {
        "assignedTo": {
          "description": "An entity the metadata schema is requested for.",
          "type": "string",
          "enum": [
            "api",
            "environment",
            "deployment"
          ],
          "x-ms-enum": {
            "name": "MetadataAssignmentEntity",
            "modelAsString": true,
            "values": [
              {
                "name": "api",
                "value": "api",
                "description": "Assigned to API"
              },
              {
                "name": "environment",
                "value": "environment",
                "description": "Assigned to Environment"
              },
              {
                "name": "deployment",
                "value": "deployment",
                "description": "Assigned to Deployment"
              }
            ]
          }
        }
      }
    },
    "MetadataSchemaExportResult": {
      "type": "object",
      "description": "The metadata schema export result.",
      "properties": {
        "format": {
          "description": "The export format for the schema",
          "type": "string",
          "enum": [
            "inline",
            "link"
          ],
          "x-ms-enum": {
            "name": "MetadataSchemaExportFormat",
            "modelAsString": true,
            "values": [
              {
                "name": "inline",
                "value": "inline",
                "description": "The inlined content of a schema document."
              },
              {
                "name": "link",
                "value": "link",
                "description": "The link to a schema document. The URL is valid for 5 minutes."
              }
            ]
          }
        },
        "value": {
          "type": "string",
          "description": "The result of the export operation."
        }
      }
    },
    "MetadataSchemaListResult": {
      "type": "object",
      "description": "The response of a MetadataSchema list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The MetadataSchema items on this page",
          "items": {
            "type": "object",
            "description": "Metadata schema entity. Used to define metadata for the entities in API catalog.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "schema": {
                    "type": "string",
                    "description": "The schema defining the type."
                  },
                  "assignedTo": {
                    "type": "array",
                    "description": "The assignees",
                    "items": {
                      "type": "object",
                      "description": "Assignment metadata",
                      "properties": {
                        "entity": {
                          "description": "The entities this metadata schema component gets applied to.",
                          "type": "string",
                          "enum": [
                            "api",
                            "environment",
                            "deployment"
                          ],
                          "x-ms-enum": {
                            "name": "MetadataAssignmentEntity",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "api",
                                "value": "api",
                                "description": "Assigned to API"
                              },
                              {
                                "name": "environment",
                                "value": "environment",
                                "description": "Assigned to Environment"
                              },
                              {
                                "name": "deployment",
                                "value": "deployment",
                                "description": "Assigned to Deployment"
                              }
                            ]
                          }
                        },
                        "required": {
                          "type": "boolean",
                          "description": "Required assignment"
                        },
                        "deprecated": {
                          "type": "boolean",
                          "description": "Deprecated assignment"
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  }
                },
                "required": [
                  "schema"
                ]
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "MetadataSchemaProperties": {
      "type": "object",
      "description": "Metadata schema properties.",
      "properties": {
        "schema": {
          "type": "string",
          "description": "The schema defining the type."
        },
        "assignedTo": {
          "type": "array",
          "description": "The assignees",
          "items": {
            "type": "object",
            "description": "Assignment metadata",
            "properties": {
              "entity": {
                "description": "The entities this metadata schema component gets applied to.",
                "type": "string",
                "enum": [
                  "api",
                  "environment",
                  "deployment"
                ],
                "x-ms-enum": {
                  "name": "MetadataAssignmentEntity",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "api",
                      "value": "api",
                      "description": "Assigned to API"
                    },
                    {
                      "name": "environment",
                      "value": "environment",
                      "description": "Assigned to Environment"
                    },
                    {
                      "name": "deployment",
                      "value": "deployment",
                      "description": "Assigned to Deployment"
                    }
                  ]
                }
              },
              "required": {
                "type": "boolean",
                "description": "Required assignment"
              },
              "deprecated": {
                "type": "boolean",
                "description": "Deprecated assignment"
              }
            }
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "schema"
      ]
    },
    "Onboarding": {
      "type": "object",
      "description": "Onboarding information",
      "properties": {
        "instructions": {
          "type": "string",
          "description": "Onboarding guide."
        },
        "developerPortalUri": {
          "type": "array",
          "description": "The location of the development portal",
          "maxItems": 1,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Origin": {
      "type": "string",
      "description": "The expected types of origin",
      "enum": [
        "user",
        "system",
        "user,system"
      ],
      "x-ms-enum": {
        "name": "Origin",
        "modelAsString": true,
        "values": [
          {
            "name": "user",
            "value": "user",
            "description": "Origin with User"
          },
          {
            "name": "system",
            "value": "system",
            "description": "Origin with System"
          },
          {
            "name": "user,system",
            "value": "user,system",
            "description": "Origin with user and system"
          }
        ]
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The provisioning state of the resource",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          }
        ]
      },
      "readOnly": true
    },
    "Service": {
      "type": "object",
      "description": "The service entity.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Provisioning state of the service.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  }
                ]
              }
            }
          }
        },
        "identity": {
          "description": "The managed service identities assigned to this resource.",
          "type": "object",
          "properties": {
            "principalId": {
              "type": "string",
              "format": "uuid",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "format": "uuid",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "title": "User-Assigned Identities",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "additionalProperties": {
                "x-nullable": true,
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        }
      }
    },
    "ServiceListResult": {
      "type": "object",
      "description": "The response of a Service list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Service items on this page",
          "items": {
            "type": "object",
            "description": "The service entity.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "Provisioning state of the service.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        }
                      ]
                    }
                  }
                }
              },
              "identity": {
                "description": "The managed service identities assigned to this resource.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "tenantId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                    "enum": [
                      "None",
                      "SystemAssigned",
                      "UserAssigned",
                      "SystemAssigned,UserAssigned"
                    ],
                    "x-ms-enum": {
                      "name": "ManagedServiceIdentityType",
                      "modelAsString": true
                    }
                  },
                  "userAssignedIdentities": {
                    "type": "object",
                    "title": "User-Assigned Identities",
                    "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                    "additionalProperties": {
                      "x-nullable": true,
                      "type": "object",
                      "description": "User assigned identity properties",
                      "properties": {
                        "principalId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The principal ID of the assigned identity.",
                          "readOnly": true
                        },
                        "clientId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The client ID of the assigned identity.",
                          "readOnly": true
                        }
                      }
                    }
                  }
                },
                "required": [
                  "type"
                ]
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "ServiceProperties": {
      "type": "object",
      "description": "The properties of the service.",
      "properties": {
        "provisioningState": {
          "description": "Provisioning state of the service.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              }
            ]
          }
        }
      }
    },
    "ServiceUpdate": {
      "type": "object",
      "description": "The type used for update operations of the Service.",
      "properties": {
        "identity": {
          "description": "The managed service identities assigned to this resource.",
          "type": "object",
          "properties": {
            "principalId": {
              "type": "string",
              "format": "uuid",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "format": "uuid",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "title": "User-Assigned Identities",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "additionalProperties": {
                "x-nullable": true,
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SmallString": {
      "type": "string",
      "format": "uri",
      "description": "Used for restricted length uris",
      "maxLength": 200
    },
    "TermsOfService": {
      "type": "object",
      "description": "Terms of service for the API.",
      "properties": {
        "url": {
          "type": "string",
          "format": "uri",
          "description": "URL pointing to the terms of service.",
          "maxLength": 200
        }
      },
      "required": [
        "url"
      ]
    },
    "Workspace": {
      "type": "object",
      "description": "Workspace entity.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Workspace title.",
              "minLength": 1,
              "maxLength": 50
            },
            "description": {
              "type": "string",
              "description": "Workspace description."
            }
          },
          "required": [
            "title"
          ]
        }
      }
    },
    "WorkspaceListResult": {
      "type": "object",
      "description": "The response of a Workspace list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Workspace items on this page",
          "items": {
            "type": "object",
            "description": "Workspace entity.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Workspace title.",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "description": {
                    "type": "string",
                    "description": "Workspace description."
                  }
                },
                "required": [
                  "title"
                ]
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkspaceProperties": {
      "type": "object",
      "description": "Workspace properties.",
      "properties": {
        "title": {
          "type": "string",
          "description": "Workspace title.",
          "minLength": 1,
          "maxLength": 50
        },
        "description": {
          "type": "string",
          "description": "Workspace description."
        }
      },
      "required": [
        "title"
      ]
    }
  },
  "parameters": {
    "OdataFilterParameter": {
      "name": "$filter",
      "in": "query",
      "description": "OData filter parameter.",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "filter"
    }
  }
}