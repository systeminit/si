{
  "swagger": "2.0",
  "info": {
    "title": "Azure mixedreality",
    "version": "2025-01-01",
    "description": "Azure mixedreality service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/providers/Microsoft.MixedReality/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Proxy"
        ],
        "description": "Exposing Available Operations",
        "parameters": [
          {
            "name": "api-version",
            "description": "The API version to be used with the HTTP request.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the request to list Resource Provider operations. It contains a list of operations and a URL link to get the next set of results.",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "REST API operation",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Operation name: {provider}/{resource}/{operation}",
                        "type": "string"
                      },
                      "display": {
                        "description": "The object that represents the operation.",
                        "type": "object",
                        "required": [
                          "provider",
                          "resource",
                          "operation",
                          "description"
                        ],
                        "properties": {
                          "provider": {
                            "description": "Service provider: Microsoft.ResourceProvider",
                            "type": "string"
                          },
                          "resource": {
                            "description": "Resource on which the operation is performed: Profile, endpoint, etc.",
                            "type": "string"
                          },
                          "operation": {
                            "description": "Operation type: Read, write, delete, etc.",
                            "type": "string"
                          },
                          "description": {
                            "description": "Description of operation",
                            "type": "string"
                          }
                        }
                      },
                      "isDataAction": {
                        "description": "Whether or not this is a data plane operation",
                        "type": "boolean"
                      },
                      "origin": {
                        "description": "The origin",
                        "type": "string"
                      },
                      "properties": {
                        "description": "Properties of the operation",
                        "type": "object",
                        "properties": {
                          "serviceSpecification": {
                            "description": "Service specification.",
                            "type": "object",
                            "properties": {
                              "logSpecifications": {
                                "description": "Specifications of the Log for Azure Monitoring",
                                "uniqueItems": false,
                                "type": "array",
                                "items": {
                                  "description": "Specifications of the Log for Azure Monitoring",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Name of the log",
                                      "type": "string"
                                    },
                                    "displayName": {
                                      "description": "Localized friendly display name of the log",
                                      "type": "string"
                                    },
                                    "blobDuration": {
                                      "description": "Blob duration of the log",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "metricSpecifications": {
                                "description": "Specifications of the Metrics for Azure Monitoring",
                                "uniqueItems": false,
                                "type": "array",
                                "items": {
                                  "description": "Specifications of the Metrics for Azure Monitoring",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Name of the metric",
                                      "type": "string"
                                    },
                                    "displayName": {
                                      "description": "Localized friendly display name of the metric",
                                      "type": "string"
                                    },
                                    "displayDescription": {
                                      "description": "Localized friendly description of the metric",
                                      "type": "string"
                                    },
                                    "unit": {
                                      "description": "Unit that makes sense for the metric",
                                      "type": "string"
                                    },
                                    "aggregationType": {
                                      "description": "Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count.",
                                      "type": "string"
                                    },
                                    "supportedAggregationTypes": {
                                      "description": "Supported aggregation types. Valid values: Average, Minimum, Maximum, Total, Count.",
                                      "type": "array",
                                      "items": {
                                        "description": "Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count.",
                                        "type": "string"
                                      }
                                    },
                                    "supportedTimeGrainTypes": {
                                      "description": "Supported time grains. Valid values: PT1M, PT5M, PT15M, PT30M, PT1H, PT6H, PT12H, P1D",
                                      "type": "array",
                                      "items": {
                                        "description": "The time grain of the metric",
                                        "type": "string"
                                      }
                                    },
                                    "enableRegionalMdmAccount": {
                                      "description": "Flag to indicate use of regional Mdm accounts",
                                      "type": "boolean"
                                    },
                                    "sourceMdmAccount": {
                                      "description": "Source mdm account",
                                      "type": "string"
                                    },
                                    "sourceMdmNamespace": {
                                      "description": "Source mdm namespace",
                                      "type": "string"
                                    },
                                    "metricFilterPattern": {
                                      "description": "Metric filter regex pattern",
                                      "type": "string"
                                    },
                                    "fillGapWithZero": {
                                      "description": "Flag to determine is Zero is returned for time duration where no metric is emitted",
                                      "type": "boolean"
                                    },
                                    "category": {
                                      "description": "Metric category",
                                      "type": "string"
                                    },
                                    "internalMetricName": {
                                      "description": "Internal metric name.",
                                      "type": "string"
                                    },
                                    "dimensions": {
                                      "description": "Dimensions of the metric",
                                      "uniqueItems": false,
                                      "type": "array",
                                      "items": {
                                        "description": "Specifications of the Dimension of metrics",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "Name of the dimension",
                                            "type": "string"
                                          },
                                          "displayName": {
                                            "description": "Localized friendly display name of the dimension",
                                            "type": "string"
                                          },
                                          "internalName": {
                                            "description": "Internal name of the dimension.",
                                            "type": "string"
                                          },
                                          "toBeExportedForShoebox": {
                                            "description": "Whether the dimension should be included for the shoebox export scenario.",
                                            "type": "boolean"
                                          }
                                        }
                                      }
                                    },
                                    "lockedAggregationType": {
                                      "description": "Locked aggregation type of the metric",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "List of operations supported by the Resource Provider."
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to get the next set of operation list results if there are any."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.MixedReality/locations/{location}/checkNameAvailability": {
      "post": {
        "operationId": "CheckNameAvailabilityLocal",
        "tags": [
          "Proxy"
        ],
        "description": "Check Name Availability for local uniqueness",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "The location in which uniqueness will be verified."
          },
          {
            "name": "checkNameAvailability",
            "description": "Check Name Availability Request.",
            "in": "body",
            "schema": {
              "description": "Check Name Availability Request",
              "type": "object",
              "required": [
                "name",
                "type"
              ],
              "properties": {
                "name": {
                  "description": "Resource Name To Verify",
                  "type": "string"
                },
                "type": {
                  "description": "Fully qualified resource type which includes provider namespace",
                  "type": "string"
                }
              }
            },
            "required": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version to be used with the HTTP request.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Check Name Availability Response",
              "type": "object",
              "required": [
                "nameAvailable"
              ],
              "properties": {
                "nameAvailable": {
                  "description": "if name Available",
                  "type": "boolean"
                },
                "reason": {
                  "description": "Resource Name To Verify",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "AlreadyExists"
                  ],
                  "x-ms-enum": {
                    "name": "NameUnavailableReason",
                    "modelAsString": true
                  }
                },
                "message": {
                  "description": "detail message",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.MixedReality/remoteRenderingAccounts": {
      "get": {
        "operationId": "RemoteRenderingAccounts_ListBySubscription",
        "tags": [
          "Resource",
          "Proxy"
        ],
        "description": "\n\n> [!NOTE]\n>\n> **Mixed Reality retirement**\n>\n> The Mixed Reality service is now deprecated and will be retired. \n\n List Remote Rendering Accounts by Subscription",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "description": "The API version to be used with the HTTP request.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the request to get resource collection. It contains a list of resources and a URL link to get the next set of results.",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "RemoteRenderingAccount Response.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ],
                        "description": "Resource tags."
                      },
                      "location": {
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "description": "The geo-location where the resource lives"
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Property bag.",
                        "type": "object",
                        "properties": {
                          "storageAccountName": {
                            "description": "The name of the storage account associated with this accountId",
                            "type": "string"
                          },
                          "accountId": {
                            "description": "unique id of certain account.",
                            "readOnly": true,
                            "type": "string"
                          },
                          "accountDomain": {
                            "description": "Correspond domain name of certain account",
                            "readOnly": true,
                            "type": "string"
                          }
                        }
                      },
                      "identity": {
                        "description": "The identity associated with this account",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The principal ID of resource identity."
                          },
                          "tenantId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The tenant ID of resource."
                          },
                          "type": {
                            "type": "string",
                            "description": "The identity type.",
                            "enum": [
                              "SystemAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceIdentityType",
                              "modelAsString": false
                            }
                          }
                        }
                      },
                      "plan": {
                        "description": "The plan associated with this account",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The principal ID of resource identity."
                          },
                          "tenantId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The tenant ID of resource."
                          },
                          "type": {
                            "type": "string",
                            "description": "The identity type.",
                            "enum": [
                              "SystemAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceIdentityType",
                              "modelAsString": false
                            }
                          }
                        }
                      },
                      "sku": {
                        "description": "The sku associated with this account",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
                          },
                          "tier": {
                            "type": "string",
                            "enum": [
                              "Free",
                              "Basic",
                              "Standard",
                              "Premium"
                            ],
                            "x-ms-enum": {
                              "name": "SkuTier",
                              "modelAsString": false
                            },
                            "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."
                          },
                          "size": {
                            "type": "string",
                            "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                          },
                          "family": {
                            "type": "string",
                            "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                          },
                          "capacity": {
                            "type": "integer",
                            "format": "int32",
                            "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "kind": {
                        "description": "The kind of account, if supported",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
                          },
                          "tier": {
                            "type": "string",
                            "enum": [
                              "Free",
                              "Basic",
                              "Standard",
                              "Premium"
                            ],
                            "x-ms-enum": {
                              "name": "SkuTier",
                              "modelAsString": false
                            },
                            "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."
                          },
                          "size": {
                            "type": "string",
                            "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                          },
                          "family": {
                            "type": "string",
                            "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                          },
                          "capacity": {
                            "type": "integer",
                            "format": "int32",
                            "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "systemData": {
                        "description": "System metadata for this account",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  },
                  "description": "List of resources supported by the Resource Provider."
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to get the next set of resource list results if there are any."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MixedReality/remoteRenderingAccounts": {
      "get": {
        "operationId": "RemoteRenderingAccounts_ListByResourceGroup",
        "tags": [
          "Resource"
        ],
        "description": "\n\n> [!NOTE]\n>\n> **Mixed Reality retirement**\n>\n> The Mixed Reality service is now deprecated and will be retired. \n\n List Resources by Resource Group",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of an Azure resource group."
          },
          {
            "name": "api-version",
            "description": "The API version to be used with the HTTP request.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the request to get resource collection. It contains a list of resources and a URL link to get the next set of results.",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "RemoteRenderingAccount Response.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ],
                        "description": "Resource tags."
                      },
                      "location": {
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "description": "The geo-location where the resource lives"
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Property bag.",
                        "type": "object",
                        "properties": {
                          "storageAccountName": {
                            "description": "The name of the storage account associated with this accountId",
                            "type": "string"
                          },
                          "accountId": {
                            "description": "unique id of certain account.",
                            "readOnly": true,
                            "type": "string"
                          },
                          "accountDomain": {
                            "description": "Correspond domain name of certain account",
                            "readOnly": true,
                            "type": "string"
                          }
                        }
                      },
                      "identity": {
                        "description": "The identity associated with this account",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The principal ID of resource identity."
                          },
                          "tenantId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The tenant ID of resource."
                          },
                          "type": {
                            "type": "string",
                            "description": "The identity type.",
                            "enum": [
                              "SystemAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceIdentityType",
                              "modelAsString": false
                            }
                          }
                        }
                      },
                      "plan": {
                        "description": "The plan associated with this account",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The principal ID of resource identity."
                          },
                          "tenantId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The tenant ID of resource."
                          },
                          "type": {
                            "type": "string",
                            "description": "The identity type.",
                            "enum": [
                              "SystemAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceIdentityType",
                              "modelAsString": false
                            }
                          }
                        }
                      },
                      "sku": {
                        "description": "The sku associated with this account",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
                          },
                          "tier": {
                            "type": "string",
                            "enum": [
                              "Free",
                              "Basic",
                              "Standard",
                              "Premium"
                            ],
                            "x-ms-enum": {
                              "name": "SkuTier",
                              "modelAsString": false
                            },
                            "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."
                          },
                          "size": {
                            "type": "string",
                            "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                          },
                          "family": {
                            "type": "string",
                            "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                          },
                          "capacity": {
                            "type": "integer",
                            "format": "int32",
                            "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "kind": {
                        "description": "The kind of account, if supported",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
                          },
                          "tier": {
                            "type": "string",
                            "enum": [
                              "Free",
                              "Basic",
                              "Standard",
                              "Premium"
                            ],
                            "x-ms-enum": {
                              "name": "SkuTier",
                              "modelAsString": false
                            },
                            "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."
                          },
                          "size": {
                            "type": "string",
                            "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                          },
                          "family": {
                            "type": "string",
                            "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                          },
                          "capacity": {
                            "type": "integer",
                            "format": "int32",
                            "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "systemData": {
                        "description": "System metadata for this account",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  },
                  "description": "List of resources supported by the Resource Provider."
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to get the next set of resource list results if there are any."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MixedReality/remoteRenderingAccounts/{accountName}": {
      "delete": {
        "operationId": "RemoteRenderingAccounts_Delete",
        "tags": [
          "Resource"
        ],
        "description": "\n\n> [!NOTE]\n>\n> **Mixed Reality retirement**\n>\n> The Mixed Reality service is now deprecated and will be retired. \n\n Delete a Remote Rendering Account.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of an Azure resource group."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of an Mixed Reality Account."
          },
          {
            "name": "api-version",
            "description": "The API version to be used with the HTTP request.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "NoContent"
          }
        }
      },
      "get": {
        "operationId": "RemoteRenderingAccounts_Get",
        "tags": [
          "Resource"
        ],
        "description": "\n\n> [!NOTE]\n>\n> **Mixed Reality retirement**\n>\n> The Mixed Reality service is now deprecated and will be retired. \n\n Retrieve a Remote Rendering Account.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of an Azure resource group."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of an Mixed Reality Account."
          },
          {
            "name": "api-version",
            "description": "The API version to be used with the HTTP request.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "RemoteRenderingAccount Response.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Property bag.",
                  "type": "object",
                  "properties": {
                    "storageAccountName": {
                      "description": "The name of the storage account associated with this accountId",
                      "type": "string"
                    },
                    "accountId": {
                      "description": "unique id of certain account.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "accountDomain": {
                      "description": "Correspond domain name of certain account",
                      "readOnly": true,
                      "type": "string"
                    }
                  }
                },
                "identity": {
                  "description": "The identity associated with this account",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal ID of resource identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant ID of resource."
                    },
                    "type": {
                      "type": "string",
                      "description": "The identity type.",
                      "enum": [
                        "SystemAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": false
                      }
                    }
                  }
                },
                "plan": {
                  "description": "The plan associated with this account",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal ID of resource identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant ID of resource."
                    },
                    "type": {
                      "type": "string",
                      "description": "The identity type.",
                      "enum": [
                        "SystemAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": false
                      }
                    }
                  }
                },
                "sku": {
                  "description": "The sku associated with this account",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      },
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "kind": {
                  "description": "The kind of account, if supported",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      },
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "systemData": {
                  "description": "System metadata for this account",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "RemoteRenderingAccounts_Update",
        "tags": [
          "Resource"
        ],
        "description": "\n\n> [!NOTE]\n>\n> **Mixed Reality retirement**\n>\n> The Mixed Reality service is now deprecated and will be retired. \n\n Updating a Remote Rendering Account",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of an Azure resource group."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of an Mixed Reality Account."
          },
          {
            "name": "remoteRenderingAccount",
            "description": "Remote Rendering Account parameter.",
            "in": "body",
            "schema": {
              "description": "RemoteRenderingAccount Response.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Property bag.",
                  "type": "object",
                  "properties": {
                    "storageAccountName": {
                      "description": "The name of the storage account associated with this accountId",
                      "type": "string"
                    },
                    "accountId": {
                      "description": "unique id of certain account.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "accountDomain": {
                      "description": "Correspond domain name of certain account",
                      "readOnly": true,
                      "type": "string"
                    }
                  }
                },
                "identity": {
                  "description": "The identity associated with this account",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal ID of resource identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant ID of resource."
                    },
                    "type": {
                      "type": "string",
                      "description": "The identity type.",
                      "enum": [
                        "SystemAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": false
                      }
                    }
                  }
                },
                "plan": {
                  "description": "The plan associated with this account",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal ID of resource identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant ID of resource."
                    },
                    "type": {
                      "type": "string",
                      "description": "The identity type.",
                      "enum": [
                        "SystemAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": false
                      }
                    }
                  }
                },
                "sku": {
                  "description": "The sku associated with this account",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      },
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "kind": {
                  "description": "The kind of account, if supported",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      },
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "systemData": {
                  "description": "System metadata for this account",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            },
            "required": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version to be used with the HTTP request.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "RemoteRenderingAccount Response.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Property bag.",
                  "type": "object",
                  "properties": {
                    "storageAccountName": {
                      "description": "The name of the storage account associated with this accountId",
                      "type": "string"
                    },
                    "accountId": {
                      "description": "unique id of certain account.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "accountDomain": {
                      "description": "Correspond domain name of certain account",
                      "readOnly": true,
                      "type": "string"
                    }
                  }
                },
                "identity": {
                  "description": "The identity associated with this account",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal ID of resource identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant ID of resource."
                    },
                    "type": {
                      "type": "string",
                      "description": "The identity type.",
                      "enum": [
                        "SystemAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": false
                      }
                    }
                  }
                },
                "plan": {
                  "description": "The plan associated with this account",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal ID of resource identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant ID of resource."
                    },
                    "type": {
                      "type": "string",
                      "description": "The identity type.",
                      "enum": [
                        "SystemAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": false
                      }
                    }
                  }
                },
                "sku": {
                  "description": "The sku associated with this account",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      },
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "kind": {
                  "description": "The kind of account, if supported",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      },
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "systemData": {
                  "description": "System metadata for this account",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "RemoteRenderingAccounts_Create",
        "tags": [
          "Resource"
        ],
        "description": "\n\n> [!NOTE]\n>\n> **Mixed Reality retirement**\n>\n> The Mixed Reality service is now deprecated and will be retired. \n\n Creating or Updating a Remote Rendering Account.",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of an Azure resource group."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of an Mixed Reality Account."
          },
          {
            "name": "remoteRenderingAccount",
            "description": "Remote Rendering Account parameter.",
            "in": "body",
            "schema": {
              "description": "RemoteRenderingAccount Response.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Property bag.",
                  "type": "object",
                  "properties": {
                    "storageAccountName": {
                      "description": "The name of the storage account associated with this accountId",
                      "type": "string"
                    },
                    "accountId": {
                      "description": "unique id of certain account.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "accountDomain": {
                      "description": "Correspond domain name of certain account",
                      "readOnly": true,
                      "type": "string"
                    }
                  }
                },
                "identity": {
                  "description": "The identity associated with this account",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal ID of resource identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant ID of resource."
                    },
                    "type": {
                      "type": "string",
                      "description": "The identity type.",
                      "enum": [
                        "SystemAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": false
                      }
                    }
                  }
                },
                "plan": {
                  "description": "The plan associated with this account",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal ID of resource identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant ID of resource."
                    },
                    "type": {
                      "type": "string",
                      "description": "The identity type.",
                      "enum": [
                        "SystemAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": false
                      }
                    }
                  }
                },
                "sku": {
                  "description": "The sku associated with this account",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      },
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "kind": {
                  "description": "The kind of account, if supported",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      },
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "systemData": {
                  "description": "System metadata for this account",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            },
            "required": true,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "The API version to be used with the HTTP request.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "RemoteRenderingAccount Response.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Property bag.",
                  "type": "object",
                  "properties": {
                    "storageAccountName": {
                      "description": "The name of the storage account associated with this accountId",
                      "type": "string"
                    },
                    "accountId": {
                      "description": "unique id of certain account.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "accountDomain": {
                      "description": "Correspond domain name of certain account",
                      "readOnly": true,
                      "type": "string"
                    }
                  }
                },
                "identity": {
                  "description": "The identity associated with this account",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal ID of resource identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant ID of resource."
                    },
                    "type": {
                      "type": "string",
                      "description": "The identity type.",
                      "enum": [
                        "SystemAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": false
                      }
                    }
                  }
                },
                "plan": {
                  "description": "The plan associated with this account",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal ID of resource identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant ID of resource."
                    },
                    "type": {
                      "type": "string",
                      "description": "The identity type.",
                      "enum": [
                        "SystemAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": false
                      }
                    }
                  }
                },
                "sku": {
                  "description": "The sku associated with this account",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      },
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "kind": {
                  "description": "The kind of account, if supported",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      },
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "systemData": {
                  "description": "System metadata for this account",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "description": "RemoteRenderingAccount Response.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Property bag.",
                  "type": "object",
                  "properties": {
                    "storageAccountName": {
                      "description": "The name of the storage account associated with this accountId",
                      "type": "string"
                    },
                    "accountId": {
                      "description": "unique id of certain account.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "accountDomain": {
                      "description": "Correspond domain name of certain account",
                      "readOnly": true,
                      "type": "string"
                    }
                  }
                },
                "identity": {
                  "description": "The identity associated with this account",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal ID of resource identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant ID of resource."
                    },
                    "type": {
                      "type": "string",
                      "description": "The identity type.",
                      "enum": [
                        "SystemAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": false
                      }
                    }
                  }
                },
                "plan": {
                  "description": "The plan associated with this account",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal ID of resource identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant ID of resource."
                    },
                    "type": {
                      "type": "string",
                      "description": "The identity type.",
                      "enum": [
                        "SystemAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": false
                      }
                    }
                  }
                },
                "sku": {
                  "description": "The sku associated with this account",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      },
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "kind": {
                  "description": "The kind of account, if supported",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      },
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "systemData": {
                  "description": "System metadata for this account",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MixedReality/remoteRenderingAccounts/{accountName}/listKeys": {
      "post": {
        "operationId": "RemoteRenderingAccounts_ListKeys",
        "tags": [
          "Key"
        ],
        "description": "\n\n> [!NOTE]\n>\n> **Mixed Reality retirement**\n>\n> The Mixed Reality service is now deprecated and will be retired. \n\n List Both of the 2 Keys of a Remote Rendering Account",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of an Azure resource group."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of an Mixed Reality Account."
          },
          {
            "name": "api-version",
            "description": "The API version to be used with the HTTP request.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Developer Keys of account",
              "type": "object",
              "properties": {
                "primaryKey": {
                  "x-ms-secret": true,
                  "description": "value of primary key.",
                  "readOnly": true,
                  "type": "string"
                },
                "secondaryKey": {
                  "x-ms-secret": true,
                  "description": "value of secondary key.",
                  "readOnly": true,
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MixedReality/remoteRenderingAccounts/{accountName}/regenerateKeys": {
      "post": {
        "operationId": "RemoteRenderingAccounts_RegenerateKeys",
        "tags": [
          "Key"
        ],
        "description": "\n\n> [!NOTE]\n>\n> **Mixed Reality retirement**\n>\n> The Mixed Reality service is now deprecated and will be retired. \n\n Regenerate specified Key of a Remote Rendering Account",
        "parameters": [
          {
            "name": "subscriptionId",
            "description": "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of an Azure resource group."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of an Mixed Reality Account."
          },
          {
            "name": "regenerate",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Request for account key regeneration",
              "type": "object",
              "properties": {
                "serial": {
                  "type": "integer",
                  "enum": [
                    1,
                    2
                  ],
                  "default": 1,
                  "x-ms-enum": {
                    "name": "Serial",
                    "values": [
                      {
                        "value": 1,
                        "description": "The Primary Key",
                        "name": "Primary"
                      },
                      {
                        "value": 2,
                        "description": "The Secondary Key",
                        "name": "Secondary"
                      }
                    ]
                  },
                  "description": "serial of key to be regenerated"
                }
              }
            },
            "x-ms-parameter-location": "method",
            "description": "Required information for key regeneration."
          },
          {
            "name": "api-version",
            "description": "The API version to be used with the HTTP request.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Developer Keys of account",
              "type": "object",
              "properties": {
                "primaryKey": {
                  "x-ms-secret": true,
                  "description": "value of primary key.",
                  "readOnly": true,
                  "type": "string"
                },
                "secondaryKey": {
                  "x-ms-secret": true,
                  "description": "value of secondary key.",
                  "readOnly": true,
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CheckNameAvailabilityRequest": {
      "description": "Check Name Availability Request",
      "type": "object",
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {
          "description": "Resource Name To Verify",
          "type": "string"
        },
        "type": {
          "description": "Fully qualified resource type which includes provider namespace",
          "type": "string"
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "description": "Check Name Availability Response",
      "type": "object",
      "required": [
        "nameAvailable"
      ],
      "properties": {
        "nameAvailable": {
          "description": "if name Available",
          "type": "boolean"
        },
        "reason": {
          "description": "Resource Name To Verify",
          "type": "string",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "NameUnavailableReason",
            "modelAsString": true
          }
        },
        "message": {
          "description": "detail message",
          "type": "string"
        }
      }
    },
    "Operation": {
      "description": "REST API operation",
      "type": "object",
      "properties": {
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}",
          "type": "string"
        },
        "display": {
          "description": "The object that represents the operation.",
          "type": "object",
          "required": [
            "provider",
            "resource",
            "operation",
            "description"
          ],
          "properties": {
            "provider": {
              "description": "Service provider: Microsoft.ResourceProvider",
              "type": "string"
            },
            "resource": {
              "description": "Resource on which the operation is performed: Profile, endpoint, etc.",
              "type": "string"
            },
            "operation": {
              "description": "Operation type: Read, write, delete, etc.",
              "type": "string"
            },
            "description": {
              "description": "Description of operation",
              "type": "string"
            }
          }
        },
        "isDataAction": {
          "description": "Whether or not this is a data plane operation",
          "type": "boolean"
        },
        "origin": {
          "description": "The origin",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the operation",
          "type": "object",
          "properties": {
            "serviceSpecification": {
              "description": "Service specification.",
              "type": "object",
              "properties": {
                "logSpecifications": {
                  "description": "Specifications of the Log for Azure Monitoring",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "Specifications of the Log for Azure Monitoring",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the log",
                        "type": "string"
                      },
                      "displayName": {
                        "description": "Localized friendly display name of the log",
                        "type": "string"
                      },
                      "blobDuration": {
                        "description": "Blob duration of the log",
                        "type": "string"
                      }
                    }
                  }
                },
                "metricSpecifications": {
                  "description": "Specifications of the Metrics for Azure Monitoring",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "Specifications of the Metrics for Azure Monitoring",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the metric",
                        "type": "string"
                      },
                      "displayName": {
                        "description": "Localized friendly display name of the metric",
                        "type": "string"
                      },
                      "displayDescription": {
                        "description": "Localized friendly description of the metric",
                        "type": "string"
                      },
                      "unit": {
                        "description": "Unit that makes sense for the metric",
                        "type": "string"
                      },
                      "aggregationType": {
                        "description": "Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count.",
                        "type": "string"
                      },
                      "supportedAggregationTypes": {
                        "description": "Supported aggregation types. Valid values: Average, Minimum, Maximum, Total, Count.",
                        "type": "array",
                        "items": {
                          "description": "Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count.",
                          "type": "string"
                        }
                      },
                      "supportedTimeGrainTypes": {
                        "description": "Supported time grains. Valid values: PT1M, PT5M, PT15M, PT30M, PT1H, PT6H, PT12H, P1D",
                        "type": "array",
                        "items": {
                          "description": "The time grain of the metric",
                          "type": "string"
                        }
                      },
                      "enableRegionalMdmAccount": {
                        "description": "Flag to indicate use of regional Mdm accounts",
                        "type": "boolean"
                      },
                      "sourceMdmAccount": {
                        "description": "Source mdm account",
                        "type": "string"
                      },
                      "sourceMdmNamespace": {
                        "description": "Source mdm namespace",
                        "type": "string"
                      },
                      "metricFilterPattern": {
                        "description": "Metric filter regex pattern",
                        "type": "string"
                      },
                      "fillGapWithZero": {
                        "description": "Flag to determine is Zero is returned for time duration where no metric is emitted",
                        "type": "boolean"
                      },
                      "category": {
                        "description": "Metric category",
                        "type": "string"
                      },
                      "internalMetricName": {
                        "description": "Internal metric name.",
                        "type": "string"
                      },
                      "dimensions": {
                        "description": "Dimensions of the metric",
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "description": "Specifications of the Dimension of metrics",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Name of the dimension",
                              "type": "string"
                            },
                            "displayName": {
                              "description": "Localized friendly display name of the dimension",
                              "type": "string"
                            },
                            "internalName": {
                              "description": "Internal name of the dimension.",
                              "type": "string"
                            },
                            "toBeExportedForShoebox": {
                              "description": "Whether the dimension should be included for the shoebox export scenario.",
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "lockedAggregationType": {
                        "description": "Locked aggregation type of the metric",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "OperationProperties": {
      "description": "Operation properties.",
      "type": "object",
      "properties": {
        "serviceSpecification": {
          "description": "Service specification.",
          "type": "object",
          "properties": {
            "logSpecifications": {
              "description": "Specifications of the Log for Azure Monitoring",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "description": "Specifications of the Log for Azure Monitoring",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the log",
                    "type": "string"
                  },
                  "displayName": {
                    "description": "Localized friendly display name of the log",
                    "type": "string"
                  },
                  "blobDuration": {
                    "description": "Blob duration of the log",
                    "type": "string"
                  }
                }
              }
            },
            "metricSpecifications": {
              "description": "Specifications of the Metrics for Azure Monitoring",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "description": "Specifications of the Metrics for Azure Monitoring",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the metric",
                    "type": "string"
                  },
                  "displayName": {
                    "description": "Localized friendly display name of the metric",
                    "type": "string"
                  },
                  "displayDescription": {
                    "description": "Localized friendly description of the metric",
                    "type": "string"
                  },
                  "unit": {
                    "description": "Unit that makes sense for the metric",
                    "type": "string"
                  },
                  "aggregationType": {
                    "description": "Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count.",
                    "type": "string"
                  },
                  "supportedAggregationTypes": {
                    "description": "Supported aggregation types. Valid values: Average, Minimum, Maximum, Total, Count.",
                    "type": "array",
                    "items": {
                      "description": "Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count.",
                      "type": "string"
                    }
                  },
                  "supportedTimeGrainTypes": {
                    "description": "Supported time grains. Valid values: PT1M, PT5M, PT15M, PT30M, PT1H, PT6H, PT12H, P1D",
                    "type": "array",
                    "items": {
                      "description": "The time grain of the metric",
                      "type": "string"
                    }
                  },
                  "enableRegionalMdmAccount": {
                    "description": "Flag to indicate use of regional Mdm accounts",
                    "type": "boolean"
                  },
                  "sourceMdmAccount": {
                    "description": "Source mdm account",
                    "type": "string"
                  },
                  "sourceMdmNamespace": {
                    "description": "Source mdm namespace",
                    "type": "string"
                  },
                  "metricFilterPattern": {
                    "description": "Metric filter regex pattern",
                    "type": "string"
                  },
                  "fillGapWithZero": {
                    "description": "Flag to determine is Zero is returned for time duration where no metric is emitted",
                    "type": "boolean"
                  },
                  "category": {
                    "description": "Metric category",
                    "type": "string"
                  },
                  "internalMetricName": {
                    "description": "Internal metric name.",
                    "type": "string"
                  },
                  "dimensions": {
                    "description": "Dimensions of the metric",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "description": "Specifications of the Dimension of metrics",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the dimension",
                          "type": "string"
                        },
                        "displayName": {
                          "description": "Localized friendly display name of the dimension",
                          "type": "string"
                        },
                        "internalName": {
                          "description": "Internal name of the dimension.",
                          "type": "string"
                        },
                        "toBeExportedForShoebox": {
                          "description": "Whether the dimension should be included for the shoebox export scenario.",
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  "lockedAggregationType": {
                    "description": "Locked aggregation type of the metric",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "ServiceSpecification": {
      "description": "Service specification payload",
      "type": "object",
      "properties": {
        "logSpecifications": {
          "description": "Specifications of the Log for Azure Monitoring",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Specifications of the Log for Azure Monitoring",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the log",
                "type": "string"
              },
              "displayName": {
                "description": "Localized friendly display name of the log",
                "type": "string"
              },
              "blobDuration": {
                "description": "Blob duration of the log",
                "type": "string"
              }
            }
          }
        },
        "metricSpecifications": {
          "description": "Specifications of the Metrics for Azure Monitoring",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Specifications of the Metrics for Azure Monitoring",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the metric",
                "type": "string"
              },
              "displayName": {
                "description": "Localized friendly display name of the metric",
                "type": "string"
              },
              "displayDescription": {
                "description": "Localized friendly description of the metric",
                "type": "string"
              },
              "unit": {
                "description": "Unit that makes sense for the metric",
                "type": "string"
              },
              "aggregationType": {
                "description": "Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count.",
                "type": "string"
              },
              "supportedAggregationTypes": {
                "description": "Supported aggregation types. Valid values: Average, Minimum, Maximum, Total, Count.",
                "type": "array",
                "items": {
                  "description": "Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count.",
                  "type": "string"
                }
              },
              "supportedTimeGrainTypes": {
                "description": "Supported time grains. Valid values: PT1M, PT5M, PT15M, PT30M, PT1H, PT6H, PT12H, P1D",
                "type": "array",
                "items": {
                  "description": "The time grain of the metric",
                  "type": "string"
                }
              },
              "enableRegionalMdmAccount": {
                "description": "Flag to indicate use of regional Mdm accounts",
                "type": "boolean"
              },
              "sourceMdmAccount": {
                "description": "Source mdm account",
                "type": "string"
              },
              "sourceMdmNamespace": {
                "description": "Source mdm namespace",
                "type": "string"
              },
              "metricFilterPattern": {
                "description": "Metric filter regex pattern",
                "type": "string"
              },
              "fillGapWithZero": {
                "description": "Flag to determine is Zero is returned for time duration where no metric is emitted",
                "type": "boolean"
              },
              "category": {
                "description": "Metric category",
                "type": "string"
              },
              "internalMetricName": {
                "description": "Internal metric name.",
                "type": "string"
              },
              "dimensions": {
                "description": "Dimensions of the metric",
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "description": "Specifications of the Dimension of metrics",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the dimension",
                      "type": "string"
                    },
                    "displayName": {
                      "description": "Localized friendly display name of the dimension",
                      "type": "string"
                    },
                    "internalName": {
                      "description": "Internal name of the dimension.",
                      "type": "string"
                    },
                    "toBeExportedForShoebox": {
                      "description": "Whether the dimension should be included for the shoebox export scenario.",
                      "type": "boolean"
                    }
                  }
                }
              },
              "lockedAggregationType": {
                "description": "Locked aggregation type of the metric",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "LogSpecification": {
      "description": "Specifications of the Log for Azure Monitoring",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the log",
          "type": "string"
        },
        "displayName": {
          "description": "Localized friendly display name of the log",
          "type": "string"
        },
        "blobDuration": {
          "description": "Blob duration of the log",
          "type": "string"
        }
      }
    },
    "MetricSpecification": {
      "description": "Specifications of the Metrics for Azure Monitoring",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the metric",
          "type": "string"
        },
        "displayName": {
          "description": "Localized friendly display name of the metric",
          "type": "string"
        },
        "displayDescription": {
          "description": "Localized friendly description of the metric",
          "type": "string"
        },
        "unit": {
          "description": "Unit that makes sense for the metric",
          "type": "string"
        },
        "aggregationType": {
          "description": "Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count.",
          "type": "string"
        },
        "supportedAggregationTypes": {
          "description": "Supported aggregation types. Valid values: Average, Minimum, Maximum, Total, Count.",
          "type": "array",
          "items": {
            "description": "Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count.",
            "type": "string"
          }
        },
        "supportedTimeGrainTypes": {
          "description": "Supported time grains. Valid values: PT1M, PT5M, PT15M, PT30M, PT1H, PT6H, PT12H, P1D",
          "type": "array",
          "items": {
            "description": "The time grain of the metric",
            "type": "string"
          }
        },
        "enableRegionalMdmAccount": {
          "description": "Flag to indicate use of regional Mdm accounts",
          "type": "boolean"
        },
        "sourceMdmAccount": {
          "description": "Source mdm account",
          "type": "string"
        },
        "sourceMdmNamespace": {
          "description": "Source mdm namespace",
          "type": "string"
        },
        "metricFilterPattern": {
          "description": "Metric filter regex pattern",
          "type": "string"
        },
        "fillGapWithZero": {
          "description": "Flag to determine is Zero is returned for time duration where no metric is emitted",
          "type": "boolean"
        },
        "category": {
          "description": "Metric category",
          "type": "string"
        },
        "internalMetricName": {
          "description": "Internal metric name.",
          "type": "string"
        },
        "dimensions": {
          "description": "Dimensions of the metric",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Specifications of the Dimension of metrics",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the dimension",
                "type": "string"
              },
              "displayName": {
                "description": "Localized friendly display name of the dimension",
                "type": "string"
              },
              "internalName": {
                "description": "Internal name of the dimension.",
                "type": "string"
              },
              "toBeExportedForShoebox": {
                "description": "Whether the dimension should be included for the shoebox export scenario.",
                "type": "boolean"
              }
            }
          }
        },
        "lockedAggregationType": {
          "description": "Locked aggregation type of the metric",
          "type": "string"
        }
      }
    },
    "AggregationType": {
      "description": "Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count.",
      "type": "string"
    },
    "TimeGrainType": {
      "description": "The time grain of the metric",
      "type": "string"
    },
    "MetricDimension": {
      "description": "Specifications of the Dimension of metrics",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the dimension",
          "type": "string"
        },
        "displayName": {
          "description": "Localized friendly display name of the dimension",
          "type": "string"
        },
        "internalName": {
          "description": "Internal name of the dimension.",
          "type": "string"
        },
        "toBeExportedForShoebox": {
          "description": "Whether the dimension should be included for the shoebox export scenario.",
          "type": "boolean"
        }
      }
    },
    "OperationDisplay": {
      "description": "The object that represents the operation.",
      "type": "object",
      "required": [
        "provider",
        "resource",
        "operation",
        "description"
      ],
      "properties": {
        "provider": {
          "description": "Service provider: Microsoft.ResourceProvider",
          "type": "string"
        },
        "resource": {
          "description": "Resource on which the operation is performed: Profile, endpoint, etc.",
          "type": "string"
        },
        "operation": {
          "description": "Operation type: Read, write, delete, etc.",
          "type": "string"
        },
        "description": {
          "description": "Description of operation",
          "type": "string"
        }
      }
    },
    "NameUnavailableReason": {
      "description": "reason of name unavailable.",
      "type": "string",
      "enum": [
        "Invalid",
        "AlreadyExists"
      ],
      "x-ms-enum": {
        "name": "NameUnavailableReason",
        "modelAsString": true
      }
    },
    "OperationPage": {
      "description": "Result of the request to list Resource Provider operations. It contains a list of operations and a URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "description": "REST API operation",
            "type": "object",
            "properties": {
              "name": {
                "description": "Operation name: {provider}/{resource}/{operation}",
                "type": "string"
              },
              "display": {
                "description": "The object that represents the operation.",
                "type": "object",
                "required": [
                  "provider",
                  "resource",
                  "operation",
                  "description"
                ],
                "properties": {
                  "provider": {
                    "description": "Service provider: Microsoft.ResourceProvider",
                    "type": "string"
                  },
                  "resource": {
                    "description": "Resource on which the operation is performed: Profile, endpoint, etc.",
                    "type": "string"
                  },
                  "operation": {
                    "description": "Operation type: Read, write, delete, etc.",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description of operation",
                    "type": "string"
                  }
                }
              },
              "isDataAction": {
                "description": "Whether or not this is a data plane operation",
                "type": "boolean"
              },
              "origin": {
                "description": "The origin",
                "type": "string"
              },
              "properties": {
                "description": "Properties of the operation",
                "type": "object",
                "properties": {
                  "serviceSpecification": {
                    "description": "Service specification.",
                    "type": "object",
                    "properties": {
                      "logSpecifications": {
                        "description": "Specifications of the Log for Azure Monitoring",
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "description": "Specifications of the Log for Azure Monitoring",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Name of the log",
                              "type": "string"
                            },
                            "displayName": {
                              "description": "Localized friendly display name of the log",
                              "type": "string"
                            },
                            "blobDuration": {
                              "description": "Blob duration of the log",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "metricSpecifications": {
                        "description": "Specifications of the Metrics for Azure Monitoring",
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "description": "Specifications of the Metrics for Azure Monitoring",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Name of the metric",
                              "type": "string"
                            },
                            "displayName": {
                              "description": "Localized friendly display name of the metric",
                              "type": "string"
                            },
                            "displayDescription": {
                              "description": "Localized friendly description of the metric",
                              "type": "string"
                            },
                            "unit": {
                              "description": "Unit that makes sense for the metric",
                              "type": "string"
                            },
                            "aggregationType": {
                              "description": "Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count.",
                              "type": "string"
                            },
                            "supportedAggregationTypes": {
                              "description": "Supported aggregation types. Valid values: Average, Minimum, Maximum, Total, Count.",
                              "type": "array",
                              "items": {
                                "description": "Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count.",
                                "type": "string"
                              }
                            },
                            "supportedTimeGrainTypes": {
                              "description": "Supported time grains. Valid values: PT1M, PT5M, PT15M, PT30M, PT1H, PT6H, PT12H, P1D",
                              "type": "array",
                              "items": {
                                "description": "The time grain of the metric",
                                "type": "string"
                              }
                            },
                            "enableRegionalMdmAccount": {
                              "description": "Flag to indicate use of regional Mdm accounts",
                              "type": "boolean"
                            },
                            "sourceMdmAccount": {
                              "description": "Source mdm account",
                              "type": "string"
                            },
                            "sourceMdmNamespace": {
                              "description": "Source mdm namespace",
                              "type": "string"
                            },
                            "metricFilterPattern": {
                              "description": "Metric filter regex pattern",
                              "type": "string"
                            },
                            "fillGapWithZero": {
                              "description": "Flag to determine is Zero is returned for time duration where no metric is emitted",
                              "type": "boolean"
                            },
                            "category": {
                              "description": "Metric category",
                              "type": "string"
                            },
                            "internalMetricName": {
                              "description": "Internal metric name.",
                              "type": "string"
                            },
                            "dimensions": {
                              "description": "Dimensions of the metric",
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "description": "Specifications of the Dimension of metrics",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Name of the dimension",
                                    "type": "string"
                                  },
                                  "displayName": {
                                    "description": "Localized friendly display name of the dimension",
                                    "type": "string"
                                  },
                                  "internalName": {
                                    "description": "Internal name of the dimension.",
                                    "type": "string"
                                  },
                                  "toBeExportedForShoebox": {
                                    "description": "Whether the dimension should be included for the shoebox export scenario.",
                                    "type": "boolean"
                                  }
                                }
                              }
                            },
                            "lockedAggregationType": {
                              "description": "Locked aggregation type of the metric",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "List of operations supported by the Resource Provider."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "RemoteRenderingAccount": {
      "description": "RemoteRenderingAccount Response.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Property bag.",
          "type": "object",
          "properties": {
            "storageAccountName": {
              "description": "The name of the storage account associated with this accountId",
              "type": "string"
            },
            "accountId": {
              "description": "unique id of certain account.",
              "readOnly": true,
              "type": "string"
            },
            "accountDomain": {
              "description": "Correspond domain name of certain account",
              "readOnly": true,
              "type": "string"
            }
          }
        },
        "identity": {
          "description": "The identity associated with this account",
          "type": "object",
          "properties": {
            "principalId": {
              "readOnly": true,
              "type": "string",
              "description": "The principal ID of resource identity."
            },
            "tenantId": {
              "readOnly": true,
              "type": "string",
              "description": "The tenant ID of resource."
            },
            "type": {
              "type": "string",
              "description": "The identity type.",
              "enum": [
                "SystemAssigned"
              ],
              "x-ms-enum": {
                "name": "ResourceIdentityType",
                "modelAsString": false
              }
            }
          }
        },
        "plan": {
          "description": "The plan associated with this account",
          "type": "object",
          "properties": {
            "principalId": {
              "readOnly": true,
              "type": "string",
              "description": "The principal ID of resource identity."
            },
            "tenantId": {
              "readOnly": true,
              "type": "string",
              "description": "The tenant ID of resource."
            },
            "type": {
              "type": "string",
              "description": "The identity type.",
              "enum": [
                "SystemAssigned"
              ],
              "x-ms-enum": {
                "name": "ResourceIdentityType",
                "modelAsString": false
              }
            }
          }
        },
        "sku": {
          "description": "The sku associated with this account",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
            },
            "tier": {
              "type": "string",
              "enum": [
                "Free",
                "Basic",
                "Standard",
                "Premium"
              ],
              "x-ms-enum": {
                "name": "SkuTier",
                "modelAsString": false
              },
              "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."
            },
            "size": {
              "type": "string",
              "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
            },
            "family": {
              "type": "string",
              "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
            },
            "capacity": {
              "type": "integer",
              "format": "int32",
              "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
            }
          },
          "required": [
            "name"
          ]
        },
        "kind": {
          "description": "The kind of account, if supported",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
            },
            "tier": {
              "type": "string",
              "enum": [
                "Free",
                "Basic",
                "Standard",
                "Premium"
              ],
              "x-ms-enum": {
                "name": "SkuTier",
                "modelAsString": false
              },
              "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."
            },
            "size": {
              "type": "string",
              "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
            },
            "family": {
              "type": "string",
              "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
            },
            "capacity": {
              "type": "integer",
              "format": "int32",
              "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
            }
          },
          "required": [
            "name"
          ]
        },
        "systemData": {
          "description": "System metadata for this account",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      }
    },
    "RemoteRenderingAccountPage": {
      "description": "Result of the request to get resource collection. It contains a list of resources and a URL link to get the next set of results.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "description": "RemoteRenderingAccount Response.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ],
                "description": "Resource tags."
              },
              "location": {
                "type": "string",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "description": "The geo-location where the resource lives"
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Property bag.",
                "type": "object",
                "properties": {
                  "storageAccountName": {
                    "description": "The name of the storage account associated with this accountId",
                    "type": "string"
                  },
                  "accountId": {
                    "description": "unique id of certain account.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "accountDomain": {
                    "description": "Correspond domain name of certain account",
                    "readOnly": true,
                    "type": "string"
                  }
                }
              },
              "identity": {
                "description": "The identity associated with this account",
                "type": "object",
                "properties": {
                  "principalId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The principal ID of resource identity."
                  },
                  "tenantId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The tenant ID of resource."
                  },
                  "type": {
                    "type": "string",
                    "description": "The identity type.",
                    "enum": [
                      "SystemAssigned"
                    ],
                    "x-ms-enum": {
                      "name": "ResourceIdentityType",
                      "modelAsString": false
                    }
                  }
                }
              },
              "plan": {
                "description": "The plan associated with this account",
                "type": "object",
                "properties": {
                  "principalId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The principal ID of resource identity."
                  },
                  "tenantId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The tenant ID of resource."
                  },
                  "type": {
                    "type": "string",
                    "description": "The identity type.",
                    "enum": [
                      "SystemAssigned"
                    ],
                    "x-ms-enum": {
                      "name": "ResourceIdentityType",
                      "modelAsString": false
                    }
                  }
                }
              },
              "sku": {
                "description": "The sku associated with this account",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
                  },
                  "tier": {
                    "type": "string",
                    "enum": [
                      "Free",
                      "Basic",
                      "Standard",
                      "Premium"
                    ],
                    "x-ms-enum": {
                      "name": "SkuTier",
                      "modelAsString": false
                    },
                    "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."
                  },
                  "size": {
                    "type": "string",
                    "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                  },
                  "family": {
                    "type": "string",
                    "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                  },
                  "capacity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                  }
                },
                "required": [
                  "name"
                ]
              },
              "kind": {
                "description": "The kind of account, if supported",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
                  },
                  "tier": {
                    "type": "string",
                    "enum": [
                      "Free",
                      "Basic",
                      "Standard",
                      "Premium"
                    ],
                    "x-ms-enum": {
                      "name": "SkuTier",
                      "modelAsString": false
                    },
                    "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."
                  },
                  "size": {
                    "type": "string",
                    "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                  },
                  "family": {
                    "type": "string",
                    "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                  },
                  "capacity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                  }
                },
                "required": [
                  "name"
                ]
              },
              "systemData": {
                "description": "System metadata for this account",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            }
          },
          "description": "List of resources supported by the Resource Provider."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of resource list results if there are any."
        }
      }
    }
  },
  "parameters": {
    "checkNameAvailabilityParameter": {
      "name": "checkNameAvailability",
      "description": "Check Name Availability Request.",
      "in": "body",
      "schema": {
        "description": "Check Name Availability Request",
        "type": "object",
        "required": [
          "name",
          "type"
        ],
        "properties": {
          "name": {
            "description": "Resource Name To Verify",
            "type": "string"
          },
          "type": {
            "description": "Fully qualified resource type which includes provider namespace",
            "type": "string"
          }
        }
      },
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "remoteRenderingAccountParameter": {
      "name": "remoteRenderingAccount",
      "description": "Remote Rendering Account parameter.",
      "in": "body",
      "schema": {
        "description": "RemoteRenderingAccount Response.",
        "type": "object",
        "properties": {
          "id": {
            "readOnly": true,
            "type": "string",
            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
          },
          "name": {
            "readOnly": true,
            "type": "string",
            "description": "The name of the resource"
          },
          "type": {
            "readOnly": true,
            "type": "string",
            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "x-ms-mutability": [
              "read",
              "create",
              "update"
            ],
            "description": "Resource tags."
          },
          "location": {
            "type": "string",
            "x-ms-mutability": [
              "read",
              "create"
            ],
            "description": "The geo-location where the resource lives"
          },
          "properties": {
            "x-ms-client-flatten": true,
            "description": "Property bag.",
            "type": "object",
            "properties": {
              "storageAccountName": {
                "description": "The name of the storage account associated with this accountId",
                "type": "string"
              },
              "accountId": {
                "description": "unique id of certain account.",
                "readOnly": true,
                "type": "string"
              },
              "accountDomain": {
                "description": "Correspond domain name of certain account",
                "readOnly": true,
                "type": "string"
              }
            }
          },
          "identity": {
            "description": "The identity associated with this account",
            "type": "object",
            "properties": {
              "principalId": {
                "readOnly": true,
                "type": "string",
                "description": "The principal ID of resource identity."
              },
              "tenantId": {
                "readOnly": true,
                "type": "string",
                "description": "The tenant ID of resource."
              },
              "type": {
                "type": "string",
                "description": "The identity type.",
                "enum": [
                  "SystemAssigned"
                ],
                "x-ms-enum": {
                  "name": "ResourceIdentityType",
                  "modelAsString": false
                }
              }
            }
          },
          "plan": {
            "description": "The plan associated with this account",
            "type": "object",
            "properties": {
              "principalId": {
                "readOnly": true,
                "type": "string",
                "description": "The principal ID of resource identity."
              },
              "tenantId": {
                "readOnly": true,
                "type": "string",
                "description": "The tenant ID of resource."
              },
              "type": {
                "type": "string",
                "description": "The identity type.",
                "enum": [
                  "SystemAssigned"
                ],
                "x-ms-enum": {
                  "name": "ResourceIdentityType",
                  "modelAsString": false
                }
              }
            }
          },
          "sku": {
            "description": "The sku associated with this account",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
              },
              "tier": {
                "type": "string",
                "enum": [
                  "Free",
                  "Basic",
                  "Standard",
                  "Premium"
                ],
                "x-ms-enum": {
                  "name": "SkuTier",
                  "modelAsString": false
                },
                "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."
              },
              "size": {
                "type": "string",
                "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
              },
              "family": {
                "type": "string",
                "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
              },
              "capacity": {
                "type": "integer",
                "format": "int32",
                "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
              }
            },
            "required": [
              "name"
            ]
          },
          "kind": {
            "description": "The kind of account, if supported",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
              },
              "tier": {
                "type": "string",
                "enum": [
                  "Free",
                  "Basic",
                  "Standard",
                  "Premium"
                ],
                "x-ms-enum": {
                  "name": "SkuTier",
                  "modelAsString": false
                },
                "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."
              },
              "size": {
                "type": "string",
                "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
              },
              "family": {
                "type": "string",
                "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
              },
              "capacity": {
                "type": "integer",
                "format": "int32",
                "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
              }
            },
            "required": [
              "name"
            ]
          },
          "systemData": {
            "description": "System metadata for this account",
            "type": "object",
            "readOnly": true,
            "properties": {
              "createdBy": {
                "type": "string",
                "description": "The identity that created the resource."
              },
              "createdByType": {
                "type": "string",
                "description": "The type of identity that created the resource.",
                "enum": [
                  "User",
                  "Application",
                  "ManagedIdentity",
                  "Key"
                ],
                "x-ms-enum": {
                  "name": "createdByType",
                  "modelAsString": true
                }
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "The timestamp of resource creation (UTC)."
              },
              "lastModifiedBy": {
                "type": "string",
                "description": "The identity that last modified the resource."
              },
              "lastModifiedByType": {
                "type": "string",
                "description": "The type of identity that last modified the resource.",
                "enum": [
                  "User",
                  "Application",
                  "ManagedIdentity",
                  "Key"
                ],
                "x-ms-enum": {
                  "name": "createdByType",
                  "modelAsString": true
                }
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time",
                "description": "The timestamp of resource last modification (UTC)"
              }
            }
          }
        }
      },
      "required": true,
      "x-ms-parameter-location": "method"
    }
  }
}